##########################################################################
# Copyright (C) 2006 DFKI GmbH.
# All rights reserved. Use is subject to license terms.
#
# Permission is hereby granted, free of charge, to use and distribute
# this software and its documentation without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of this work, and to
# permit persons to whom this work is furnished to do so, subject to
# the following conditions:
# 
#  1. The code must retain the above copyright notice, this list of
#     conditions and the following disclaimer.
#  2. Any modifications must be clearly marked as such.
#  3. Original authors' names are not deleted.
#  4. The authors' names are not used to endorse or promote products
#     derived from this software without specific prior written
#     permission.
# 
# DFKI GMBH AND THE CONTRIBUTORS TO THIS WORK DISCLAIM ALL WARRANTIES WITH 
# REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF 
# MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL DFKI GMBH NOR THE 
# CONTRIBUTORS BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL 
# DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR 
# PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS 
# ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF 
# THIS SOFTWARE.
##########################################################################
# MARY TTS configuration file.
##########################################################################

name = en_US
en_US.version = 4.0.0

# Declare "group names" as component that other components can require.
# These correspond to abstract "groups" of which this component is an instance.
provides = a-language

# List the dependencies, as a whitespace-separated list.
# We can require a component by name or by an abstract "group name" 
# as listed under the "provides" element.
requires = \
    marybase \
    
    en_US-voice
    
# For each required component, an optional minimum version and an optional
# download url can be given.
requires.marybase.version = 4.0.0
requires.en_US-voice.version = 4.0.0
requires.en_US-voice.download = http://mary.dfki.de/download/mary-install-4.x.x.jar
requires.en_US-voice.download.package-name = en_US-hmm-slt


###########################################################################
############################## The Modules  ###############################
###########################################################################
# For keys ending in ".list", values will be appended across config files,
# so that .list keys can occur in several config files.
# For all other keys, values will be copied to the global config, so
# keys should be unique across config files.


# Java classes to use as the modules, as a whitespace-separated list.
# These have to implement de.dfki.lt.mary.modules.MaryModule.
# For each input type + output type, only one Module may be listed
# across all components, or an Exception will be thrown.
# No particular order is required -- a processing pipeline from input data type
# to output data type will be computed on-line.

modules.classes.list = \
        marytts.language.en.JTokeniser \
        marytts.language.en.FreeTTSTokenToWords \
        marytts.modules.JPhonemiser(en_US.) \
        marytts.language.en.Prosody \
        marytts.language.en_US.SimplePhoneme2AP \
        marytts.language.en.Utt2XMLTokensEn \
        marytts.language.en.Utt2XMLWordsEn \
        marytts.language.en.Utt2XMLPosEn \
        marytts.language.en.Utt2XMLSegmentsEn \
        marytts.language.en.XML2UttTokensEn \
        marytts.language.en.XML2UttWordsEn \
        marytts.language.en.XML2UttPosEn \
        marytts.language.en.PronunciationModel \
        marytts.modules.OpenNLPPosTagger(en,en.pos) \


####################################################################
####################### Module settings  ###########################
####################################################################

en_US.allophoneset = MARY_BASE/lib/modules/en/us/lexicon/allophones.en_US.xml

en_US.userdict = MARY_BASE/lib/modules/en/us/lexicon/userdict.txt
en_US.lexicon = MARY_BASE/lib/modules/en/us/lexicon/cmudict.fst
en_US.lettertosound = MARY_BASE/lib/modules/en/us/lexicon/cmudict.lts

en.pos.model = MARY_BASE/lib/modules/en/tagger/tag.bin.gz
en.pos.tagdict = MARY_BASE/lib/modules/en/tagger/tagdict
en.pos.tagdict.isCaseSensitive = true
#en.pos.posMap = MARY_BASE/lib/modules/en/tagger/posMap.txt


en.prosody.paragraphdeclination = true
# rules for prediction of ToBI tones
en.prosody.tobipredparams = MARY_BASE/lib/modules/en/prosody/tobipredparams_english.xml
# rules for accent priorities of pos
en.prosody.accentPriorities = MARY_BASE/lib/modules/en/prosody/POSAccentPriorities.en.properties
# copy the word accents to the first accented syllable
en.prosody.syllableaccents = true

# Defines how many units should be selected in cart on backtrace
# The higher the number, the closer synthesis comes to pure unit selection 
en_US.cart.backtrace = 500 

# An FST containing word frequencies, in bins from 1 (rare) to 9 (frequent)
en_US.wordFrequency.fst = MARY_BASE/lib/modules/en/prosody/wordFrequencies-en.fst
en_US.wordFrequency.encoding = ISO-8859-1


# en_US feature processor manager
featuremanager.classes.list = \
	marytts.features.FeatureProcessorManager(en_US)
