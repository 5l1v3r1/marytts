diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/configure HTS-demo_CMU-ARCTIC-SLT-mary/configure
--- HTS-demo_CMU-ARCTIC-SLT/configure	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/configure	2009-03-12 16:47:58.000000000 +0100
@@ -1,10 +1,11 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.59 for HTS-demo_CMU-ARCTIC-SLT 2.1.
+# Generated by GNU Autoconf 2.61 for HTS-demo_CMU-ARCTIC-SLT 2.1.
 #
 # Report bugs to <hts-users@sp.nitech.ac.jp>.
 #
-# Copyright (C) 2003 Free Software Foundation, Inc.
+# Copyright (C) 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,
+# 2002, 2003, 2004, 2005, 2006 Free Software Foundation, Inc.
 # This configure script is free software; the Free Software Foundation
 # gives unlimited permission to copy, distribute and modify it.
 #
@@ -15,17 +16,45 @@
 ## M4sh Initialization.  ##
 ## --------------------- ##
 
-# Be Bourne compatible
+# Be more Bourne compatible
+DUALCASE=1; export DUALCASE # for MKS sh
 if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
   emulate sh
   NULLCMD=:
   # Zsh 3.x and 4.x performs word splitting on ${1+"$@"}, which
   # is contrary to our usage.  Disable this feature.
   alias -g '${1+"$@"}'='"$@"'
-elif test -n "${BASH_VERSION+set}" && (set -o posix) >/dev/null 2>&1; then
-  set -o posix
+  setopt NO_GLOB_SUBST
+else
+  case `(set -o) 2>/dev/null` in
+  *posix*) set -o posix ;;
+esac
+
+fi
+
+
+
+
+# PATH needs CR
+# Avoid depending upon Character Ranges.
+as_cr_letters='abcdefghijklmnopqrstuvwxyz'
+as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
+as_cr_Letters=$as_cr_letters$as_cr_LETTERS
+as_cr_digits='0123456789'
+as_cr_alnum=$as_cr_Letters$as_cr_digits
+
+# The user is always right.
+if test "${PATH_SEPARATOR+set}" != set; then
+  echo "#! /bin/sh" >conf$$.sh
+  echo  "exit 0"   >>conf$$.sh
+  chmod +x conf$$.sh
+  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
+    PATH_SEPARATOR=';'
+  else
+    PATH_SEPARATOR=:
+  fi
+  rm -f conf$$.sh
 fi
-DUALCASE=1; export DUALCASE # for MKS sh
 
 # Support unset when possible.
 if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then
@@ -35,8 +64,43 @@ else
 fi
 
 
+# IFS
+# We need space, tab and new line, in precisely that order.  Quoting is
+# there to prevent editors from complaining about space-tab.
+# (If _AS_PATH_WALK were called with IFS unset, it would disable word
+# splitting by setting IFS to empty value.)
+as_nl='
+'
+IFS=" ""	$as_nl"
+
+# Find who we are.  Look in the path if we contain no directory separator.
+case $0 in
+  *[\\/]* ) as_myself=$0 ;;
+  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
+done
+IFS=$as_save_IFS
+
+     ;;
+esac
+# We did not find ourselves, most probably we were run as `sh COMMAND'
+# in which case we are not to be found in the path.
+if test "x$as_myself" = x; then
+  as_myself=$0
+fi
+if test ! -f "$as_myself"; then
+  echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
+  { (exit 1); exit 1; }
+fi
+
 # Work around bugs in pre-3.0 UWIN ksh.
-$as_unset ENV MAIL MAILPATH
+for as_var in ENV MAIL MAILPATH
+do ($as_unset $as_var) >/dev/null 2>&1 && $as_unset $as_var
+done
 PS1='$ '
 PS2='> '
 PS4='+ '
@@ -50,18 +114,19 @@ do
   if (set +x; test -z "`(eval $as_var=C; export $as_var) 2>&1`"); then
     eval $as_var=C; export $as_var
   else
-    $as_unset $as_var
+    ($as_unset $as_var) >/dev/null 2>&1 && $as_unset $as_var
   fi
 done
 
 # Required to use basename.
-if expr a : '\(a\)' >/dev/null 2>&1; then
+if expr a : '\(a\)' >/dev/null 2>&1 &&
+   test "X`expr 00001 : '.*\(...\)'`" = X001; then
   as_expr=expr
 else
   as_expr=false
 fi
 
-if (basename /) >/dev/null 2>&1 && test "X`basename / 2>&1`" = "X/"; then
+if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
   as_basename=basename
 else
   as_basename=false
@@ -69,157 +134,388 @@ fi
 
 
 # Name of the executable.
-as_me=`$as_basename "$0" ||
+as_me=`$as_basename -- "$0" ||
 $as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
 	 X"$0" : 'X\(//\)$' \| \
-	 X"$0" : 'X\(/\)$' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
 echo X/"$0" |
-    sed '/^.*\/\([^/][^/]*\)\/*$/{ s//\1/; q; }
-  	  /^X\/\(\/\/\)$/{ s//\1/; q; }
-  	  /^X\/\(\/\).*/{ s//\1/; q; }
+    sed '/^.*\/\([^/][^/]*\)\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\/\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\/\(\/\).*/{
+	    s//\1/
+	    q
+	  }
   	  s/.*/./; q'`
 
+# CDPATH.
+$as_unset CDPATH
 
-# PATH needs CR, and LINENO needs CR and PATH.
-# Avoid depending upon Character Ranges.
-as_cr_letters='abcdefghijklmnopqrstuvwxyz'
-as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
-as_cr_Letters=$as_cr_letters$as_cr_LETTERS
-as_cr_digits='0123456789'
-as_cr_alnum=$as_cr_Letters$as_cr_digits
 
-# The user is always right.
-if test "${PATH_SEPARATOR+set}" != set; then
-  echo "#! /bin/sh" >conf$$.sh
-  echo  "exit 0"   >>conf$$.sh
-  chmod +x conf$$.sh
-  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
-    PATH_SEPARATOR=';'
+if test "x$CONFIG_SHELL" = x; then
+  if (eval ":") 2>/dev/null; then
+  as_have_required=yes
   else
-    PATH_SEPARATOR=:
+  as_have_required=no
   fi
-  rm -f conf$$.sh
+
+  if test $as_have_required = yes && 	 (eval ":
+(as_func_return () {
+  (exit \$1)
+}
+as_func_success () {
+  as_func_return 0
+}
+as_func_failure () {
+  as_func_return 1
+}
+as_func_ret_success () {
+  return 0
+}
+as_func_ret_failure () {
+  return 1
+}
+
+exitcode=0
+if as_func_success; then
+  :
+else
+  exitcode=1
+  echo as_func_success failed.
 fi
 
+if as_func_failure; then
+  exitcode=1
+  echo as_func_failure succeeded.
+fi
 
-  as_lineno_1=$LINENO
-  as_lineno_2=$LINENO
-  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
-  test "x$as_lineno_1" != "x$as_lineno_2" &&
-  test "x$as_lineno_3"  = "x$as_lineno_2"  || {
-  # Find who we are.  Look in the path if we contain no path at all
-  # relative or not.
-  case $0 in
-    *[\\/]* ) as_myself=$0 ;;
-    *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
-for as_dir in $PATH
-do
-  IFS=$as_save_IFS
-  test -z "$as_dir" && as_dir=.
-  test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
-done
+if as_func_ret_success; then
+  :
+else
+  exitcode=1
+  echo as_func_ret_success failed.
+fi
 
-       ;;
-  esac
-  # We did not find ourselves, most probably we were run as `sh COMMAND'
-  # in which case we are not to be found in the path.
-  if test "x$as_myself" = x; then
-    as_myself=$0
+if as_func_ret_failure; then
+  exitcode=1
+  echo as_func_ret_failure succeeded.
   fi
-  if test ! -f "$as_myself"; then
-    { echo "$as_me: error: cannot find myself; rerun with an absolute path" >&2
-   { (exit 1); exit 1; }; }
+
+if ( set x; as_func_ret_success y && test x = \"\$1\" ); then
+  :
+else
+  exitcode=1
+  echo positional parameters were not saved.
   fi
-  case $CONFIG_SHELL in
-  '')
+
+test \$exitcode = 0) || { (exit 1); exit 1; }
+
+(
+  as_lineno_1=\$LINENO
+  as_lineno_2=\$LINENO
+  test \"x\$as_lineno_1\" != \"x\$as_lineno_2\" &&
+  test \"x\`expr \$as_lineno_1 + 1\`\" = \"x\$as_lineno_2\") || { (exit 1); exit 1; }
+") 2> /dev/null; then
+  :
+else
+  as_candidate_shells=
     as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
 for as_dir in /bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH
 do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
-  for as_base in sh bash ksh sh5; do
 	 case $as_dir in
 	 /*)
-	   if ("$as_dir/$as_base" -c '
+	   for as_base in sh bash ksh sh5; do
+	     as_candidate_shells="$as_candidate_shells $as_dir/$as_base"
+	   done;;
+       esac
+done
+IFS=$as_save_IFS
+
+
+      for as_shell in $as_candidate_shells $SHELL; do
+	 # Try only shells that exist, to save several forks.
+	 if { test -f "$as_shell" || test -f "$as_shell.exe"; } &&
+		{ ("$as_shell") 2> /dev/null <<\_ASEOF
+if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
+  emulate sh
+  NULLCMD=:
+  # Zsh 3.x and 4.x performs word splitting on ${1+"$@"}, which
+  # is contrary to our usage.  Disable this feature.
+  alias -g '${1+"$@"}'='"$@"'
+  setopt NO_GLOB_SUBST
+else
+  case `(set -o) 2>/dev/null` in
+  *posix*) set -o posix ;;
+esac
+
+fi
+
+
+:
+_ASEOF
+}; then
+  CONFIG_SHELL=$as_shell
+	       as_have_required=yes
+	       if { "$as_shell" 2> /dev/null <<\_ASEOF
+if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
+  emulate sh
+  NULLCMD=:
+  # Zsh 3.x and 4.x performs word splitting on ${1+"$@"}, which
+  # is contrary to our usage.  Disable this feature.
+  alias -g '${1+"$@"}'='"$@"'
+  setopt NO_GLOB_SUBST
+else
+  case `(set -o) 2>/dev/null` in
+  *posix*) set -o posix ;;
+esac
+
+fi
+
+
+:
+(as_func_return () {
+  (exit $1)
+}
+as_func_success () {
+  as_func_return 0
+}
+as_func_failure () {
+  as_func_return 1
+}
+as_func_ret_success () {
+  return 0
+}
+as_func_ret_failure () {
+  return 1
+}
+
+exitcode=0
+if as_func_success; then
+  :
+else
+  exitcode=1
+  echo as_func_success failed.
+fi
+
+if as_func_failure; then
+  exitcode=1
+  echo as_func_failure succeeded.
+fi
+
+if as_func_ret_success; then
+  :
+else
+  exitcode=1
+  echo as_func_ret_success failed.
+fi
+
+if as_func_ret_failure; then
+  exitcode=1
+  echo as_func_ret_failure succeeded.
+fi
+
+if ( set x; as_func_ret_success y && test x = "$1" ); then
+  :
+else
+  exitcode=1
+  echo positional parameters were not saved.
+fi
+
+test $exitcode = 0) || { (exit 1); exit 1; }
+
+(
   as_lineno_1=$LINENO
   as_lineno_2=$LINENO
-  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
   test "x$as_lineno_1" != "x$as_lineno_2" &&
-  test "x$as_lineno_3"  = "x$as_lineno_2" ') 2>/dev/null; then
-	     $as_unset BASH_ENV || test "${BASH_ENV+set}" != set || { BASH_ENV=; export BASH_ENV; }
-	     $as_unset ENV || test "${ENV+set}" != set || { ENV=; export ENV; }
-	     CONFIG_SHELL=$as_dir/$as_base
-	     export CONFIG_SHELL
-	     exec "$CONFIG_SHELL" "$0" ${1+"$@"}
-	   fi;;
-	 esac
+  test "x`expr $as_lineno_1 + 1`" = "x$as_lineno_2") || { (exit 1); exit 1; }
+
+_ASEOF
+}; then
+  break
+fi
+
+fi
+
        done
+
+      if test "x$CONFIG_SHELL" != x; then
+  for as_var in BASH_ENV ENV
+        do ($as_unset $as_var) >/dev/null 2>&1 && $as_unset $as_var
 done
-;;
-  esac
+        export CONFIG_SHELL
+        exec "$CONFIG_SHELL" "$as_myself" ${1+"$@"}
+fi
+
+
+    if test $as_have_required = no; then
+  echo This script requires a shell more modern than all the
+      echo shells that I found on your system.  Please install a
+      echo modern shell, or manually run the script under such a
+      echo shell if you do have one.
+      { (exit 1); exit 1; }
+fi
+
+
+fi
+
+fi
+
+
+
+(eval "as_func_return () {
+  (exit \$1)
+}
+as_func_success () {
+  as_func_return 0
+}
+as_func_failure () {
+  as_func_return 1
+}
+as_func_ret_success () {
+  return 0
+}
+as_func_ret_failure () {
+  return 1
+}
+
+exitcode=0
+if as_func_success; then
+  :
+else
+  exitcode=1
+  echo as_func_success failed.
+fi
+
+if as_func_failure; then
+  exitcode=1
+  echo as_func_failure succeeded.
+fi
+
+if as_func_ret_success; then
+  :
+else
+  exitcode=1
+  echo as_func_ret_success failed.
+fi
+
+if as_func_ret_failure; then
+  exitcode=1
+  echo as_func_ret_failure succeeded.
+fi
+
+if ( set x; as_func_ret_success y && test x = \"\$1\" ); then
+  :
+else
+  exitcode=1
+  echo positional parameters were not saved.
+fi
+
+test \$exitcode = 0") || {
+  echo No shell found that supports shell functions.
+  echo Please tell autoconf@gnu.org about your system,
+  echo including any error possibly output before this
+  echo message
+}
+
+
+
+  as_lineno_1=$LINENO
+  as_lineno_2=$LINENO
+  test "x$as_lineno_1" != "x$as_lineno_2" &&
+  test "x`expr $as_lineno_1 + 1`" = "x$as_lineno_2" || {
 
   # Create $as_me.lineno as a copy of $as_myself, but with $LINENO
   # uniformly replaced by the line number.  The first 'sed' inserts a
-  # line-number line before each line; the second 'sed' does the real
-  # work.  The second script uses 'N' to pair each line-number line
-  # with the numbered line, and appends trailing '-' during
-  # substitution so that $LINENO is not a special case at line end.
+  # line-number line after each line using $LINENO; the second 'sed'
+  # does the real work.  The second script uses 'N' to pair each
+  # line-number line with the line containing $LINENO, and appends
+  # trailing '-' during substitution so that $LINENO is not a special
+  # case at line end.
   # (Raja R Harinath suggested sed '=', and Paul Eggert wrote the
-  # second 'sed' script.  Blame Lee E. McMahon for sed's syntax.  :-)
-  sed '=' <$as_myself |
+  # scripts with optimization help from Paolo Bonzini.  Blame Lee
+  # E. McMahon (1931-1989) for sed's syntax.  :-)
+  sed -n '
+    p
+    /[$]LINENO/=
+  ' <$as_myself |
     sed '
+      s/[$]LINENO.*/&-/
+      t lineno
+      b
+      :lineno
       N
-      s,$,-,
       : loop
-      s,^\(['$as_cr_digits']*\)\(.*\)[$]LINENO\([^'$as_cr_alnum'_]\),\1\2\1\3,
+      s/[$]LINENO\([^'$as_cr_alnum'_].*\n\)\(.*\)/\2\1\2/
       t loop
-      s,-$,,
-      s,^['$as_cr_digits']*\n,,
+      s/-\n.*//
     ' >$as_me.lineno &&
-  chmod +x $as_me.lineno ||
+  chmod +x "$as_me.lineno" ||
     { echo "$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&2
    { (exit 1); exit 1; }; }
 
   # Don't try to exec as it changes $[0], causing all sort of problems
   # (the dirname of $[0] is not the place where we might find the
-  # original and so on.  Autoconf is especially sensible to this).
-  . ./$as_me.lineno
+  # original and so on.  Autoconf is especially sensitive to this).
+  . "./$as_me.lineno"
   # Exit status is that of the last command.
   exit
 }
 
 
-case `echo "testing\c"; echo 1,2,3`,`echo -n testing; echo 1,2,3` in
-  *c*,-n*) ECHO_N= ECHO_C='
-' ECHO_T='	' ;;
-  *c*,*  ) ECHO_N=-n ECHO_C= ECHO_T= ;;
-  *)       ECHO_N= ECHO_C='\c' ECHO_T= ;;
+if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
+  as_dirname=dirname
+else
+  as_dirname=false
+fi
+
+ECHO_C= ECHO_N= ECHO_T=
+case `echo -n x` in
+-n*)
+  case `echo 'x\c'` in
+  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
+  *)   ECHO_C='\c';;
+  esac;;
+*)
+  ECHO_N='-n';;
 esac
 
-if expr a : '\(a\)' >/dev/null 2>&1; then
+if expr a : '\(a\)' >/dev/null 2>&1 &&
+   test "X`expr 00001 : '.*\(...\)'`" = X001; then
   as_expr=expr
 else
   as_expr=false
 fi
 
 rm -f conf$$ conf$$.exe conf$$.file
+if test -d conf$$.dir; then
+  rm -f conf$$.dir/conf$$.file
+else
+  rm -f conf$$.dir
+  mkdir conf$$.dir
+fi
 echo >conf$$.file
 if ln -s conf$$.file conf$$ 2>/dev/null; then
-  # We could just check for DJGPP; but this test a) works b) is more generic
-  # and c) will remain valid once DJGPP supports symlinks (DJGPP 2.04).
-  if test -f conf$$.exe; then
-    # Don't use ln at all; we don't have any links
-    as_ln_s='cp -p'
-  else
     as_ln_s='ln -s'
-  fi
+  # ... but there are two gotchas:
+  # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
+  # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
+  # In both cases, we have to default to `cp -p'.
+  ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
+    as_ln_s='cp -p'
 elif ln conf$$.file conf$$ 2>/dev/null; then
   as_ln_s=ln
 else
   as_ln_s='cp -p'
 fi
-rm -f conf$$ conf$$.exe conf$$.file
+rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
+rmdir conf$$.dir 2>/dev/null
 
 if mkdir -p . 2>/dev/null; then
   as_mkdir_p=:
@@ -228,7 +524,28 @@ else
   as_mkdir_p=false
 fi
 
-as_executable_p="test -f"
+if test -x / >/dev/null 2>&1; then
+  as_test_x='test -x'
+else
+  if ls -dL / >/dev/null 2>&1; then
+    as_ls_L_option=L
+  else
+    as_ls_L_option=
+  fi
+  as_test_x='
+    eval sh -c '\''
+      if test -d "$1"; then
+        test -d "$1/.";
+      else
+	case $1 in
+        -*)set "./$1";;
+	esac;
+	case `ls -ld'$as_ls_L_option' "$1" 2>/dev/null` in
+	???[sx]*):;;*)false;;esac;fi
+    '\'' sh
+  '
+fi
+as_executable_p=$as_test_x
 
 # Sed expression to map a string onto a valid CPP name.
 as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"
@@ -237,39 +554,27 @@ as_tr_cpp="eval sed 'y%*$as_cr_letters%P
 as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"
 
 
-# IFS
-# We need space, tab and new line, in precisely that order.
-as_nl='
-'
-IFS=" 	$as_nl"
-
-# CDPATH.
-$as_unset CDPATH
 
+exec 7<&0 </dev/null 6>&1
 
 # Name of the host.
 # hostname on some systems (SVR3.2, Linux) returns a bogus exit status,
 # so uname gets run too.
 ac_hostname=`(hostname || uname -n) 2>/dev/null | sed 1q`
 
-exec 6>&1
-
 #
 # Initializations.
 #
 ac_default_prefix=/usr/local
+ac_clean_files=
 ac_config_libobj_dir=.
+LIBOBJS=
 cross_compiling=no
 subdirs=
 MFLAGS=
 MAKEFLAGS=
 SHELL=${CONFIG_SHELL-/bin/sh}
 
-# Maximum number of lines to put in a shell here document.
-# This variable seems obsolete.  It should probably be removed, and
-# only ac_max_sed_lines should be used.
-: ${ac_max_here_lines=38}
-
 # Identity of this package.
 PACKAGE_NAME='HTS-demo_CMU-ARCTIC-SLT'
 PACKAGE_TARNAME='hts-demo_cmu-arctic-slt'
@@ -277,8 +582,252 @@ PACKAGE_VERSION='2.1'
 PACKAGE_STRING='HTS-demo_CMU-ARCTIC-SLT 2.1'
 PACKAGE_BUGREPORT='hts-users@sp.nitech.ac.jp'
 
-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS AWK PERL TCLSH BC WC DUMPFEATS SWAB X2X FRAME WINDOW MGCEP LPC2LSP NAN NRAND VSTAT STEP SOPR VOPR FREQT C2ACR MC2B B2MC MERGE BCP EXCITE LSP2LPC LSPCHECK MGC2MGC MGLSADF SOX HMGENS HCOMPV HINIT HREST HEREST HHED ENGINE CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT BYTESWAP SPEAKER DATASET VER QNUM PWD FRAMELEN FRAMESHIFT WINDOWTYPE NORMALIZE FFTLEN FREQWARP GAMMA MGCLSP MGCORDER LNGAIN LOWERF0 UPPERF0 NOISEMASK PSTFILTER IMPLEN SAMPFREQ MGCVSIZE NMGCWIN NLF0WIN F0STREN NSTATE NITER WFLOOR MAXDEV MINDUR NMGCTRANSBLK NLF0TRANSBLK MGCBANDWIDTH LF0BANDWIDTH MAXEMITER EMEPSILON USEGV MAXGVITER GVEPSILON MINEUCNORM STEPINIT STEPINC STEPDEC HMMWEIGHT GVWEIGHT OPTKIND LIBOBJS LTLIBOBJS'
+# Factoring default headers for most tests.
+ac_includes_default="\
+#include <stdio.h>
+#ifdef HAVE_SYS_TYPES_H
+# include <sys/types.h>
+#endif
+#ifdef HAVE_SYS_STAT_H
+# include <sys/stat.h>
+#endif
+#ifdef STDC_HEADERS
+# include <stdlib.h>
+# include <stddef.h>
+#else
+# ifdef HAVE_STDLIB_H
+#  include <stdlib.h>
+# endif
+#endif
+#ifdef HAVE_STRING_H
+# if !defined STDC_HEADERS && defined HAVE_MEMORY_H
+#  include <memory.h>
+# endif
+# include <string.h>
+#endif
+#ifdef HAVE_STRINGS_H
+# include <strings.h>
+#endif
+#ifdef HAVE_INTTYPES_H
+# include <inttypes.h>
+#endif
+#ifdef HAVE_STDINT_H
+# include <stdint.h>
+#endif
+#ifdef HAVE_UNISTD_H
+# include <unistd.h>
+#endif"
+
+ac_subst_vars='SHELL
+PATH_SEPARATOR
+PACKAGE_NAME
+PACKAGE_TARNAME
+PACKAGE_VERSION
+PACKAGE_STRING
+PACKAGE_BUGREPORT
+exec_prefix
+prefix
+program_transform_name
+bindir
+sbindir
+libexecdir
+datarootdir
+datadir
+sysconfdir
+sharedstatedir
+localstatedir
+includedir
+oldincludedir
+docdir
+infodir
+htmldir
+dvidir
+pdfdir
+psdir
+libdir
+localedir
+mandir
+DEFS
+ECHO_C
+ECHO_N
+ECHO_T
+LIBS
+build_alias
+host_alias
+target_alias
+AWK
+PERL
+TCLSH
+BC
+WC
+FEATURELIST
+VOICELANG
+SWAB
+X2X
+FRAME
+WINDOW
+MGCEP
+GCEP
+IGLSADF
+LPC2LSP
+NAN
+NRAND
+VSTAT
+STEP
+SOPR
+VOPR
+FREQT
+C2ACR
+MC2B
+B2MC
+MERGE
+BCP
+EXCITE
+LSP2LPC
+LSPCHECK
+MGC2MGC
+MGLSADF
+SOX
+HMGENS
+HCOMPV
+HINIT
+HREST
+HEREST
+HHED
+ENGINE
+CC
+CFLAGS
+LDFLAGS
+CPPFLAGS
+ac_ct_CC
+EXEEXT
+OBJEXT
+CPP
+GREP
+EGREP
+BYTESWAP
+SPEAKER
+DATASET
+VER
+QNUM
+PWD
+FRAMELEN
+FRAMESHIFT
+WINDOWTYPE
+NORMALIZE
+FFTLEN
+FREQWARP
+GAMMA
+MGCLSP
+MGCORDER
+STRORDER
+MAGORDER
+LNGAIN
+LOWERF0
+UPPERF0
+NOISEMASK
+PSTFILTER
+IMPLEN
+SAMPFREQ
+MGCVSIZE
+STRVSIZE
+MAGVSIZE
+NMGCWIN
+NSTRWIN
+NMAGWIN
+NLF0WIN
+F0STREN
+NSTATE
+NITER
+WFLOOR
+MAXDEV
+MINDUR
+NMGCTRANSBLK
+NSTRTRANSBLK
+NMAGTRANSBLK
+NLF0TRANSBLK
+MGCBANDWIDTH
+STRBANDWIDTH
+MAGBANDWIDTH
+LF0BANDWIDTH
+MAXEMITER
+EMEPSILON
+USEGV
+MAXGVITER
+GVEPSILON
+MINEUCNORM
+STEPINIT
+STEPINC
+STEPDEC
+HMMWEIGHT
+GVWEIGHT
+OPTKIND
+LIBOBJS
+LTLIBOBJS'
 ac_subst_files=''
+      ac_precious_vars='build_alias
+host_alias
+target_alias
+FEATURELIST
+VOICELANG
+CC
+CFLAGS
+LDFLAGS
+LIBS
+CPPFLAGS
+CPP
+SPEAKER
+DATASET
+VER
+QNUM
+FRAMELEN
+FRAMESHIFT
+WINDOWTYPE
+NORMALIZE
+FFTLEN
+FREQWARP
+GAMMA
+MGCLSP
+MGCORDER
+STRORDER
+MAGORDER
+LNGAIN
+LOWERF0
+UPPERF0
+NOISEMASK
+PSTFILTER
+IMPLEN
+SAMPFREQ
+NMGCWIN
+NSTRWIN
+NMAGWIN
+NLF0WIN
+NSTATE
+NITER
+WFLOOR
+MAXDEV
+MINDUR
+NMGCTRANSBLK
+NSTRTRANSBLK
+NMAGTRANSBLK
+NLF0TRANSBLK
+MGCBANDWIDTH
+STRBANDWIDTH
+MAGBANDWIDTH
+LF0BANDWIDTH
+MAXEMITER
+EMEPSILON
+USEGV
+MAXGVITER
+GVEPSILON
+MINEUCNORM
+STEPINIT
+STEPINC
+STEPDEC
+HMMWEIGHT
+GVWEIGHT
+OPTKIND'
+
 
 # Initialize some variables set by options.
 ac_init_help=
@@ -305,34 +854,48 @@ x_libraries=NONE
 # and all the variables that are supposed to be based on exec_prefix
 # by default will actually change.
 # Use braces instead of parens because sh, perl, etc. also accept them.
+# (The list follows the same order as the GNU Coding Standards.)
 bindir='${exec_prefix}/bin'
 sbindir='${exec_prefix}/sbin'
 libexecdir='${exec_prefix}/libexec'
-datadir='${prefix}/share'
+datarootdir='${prefix}/share'
+datadir='${datarootdir}'
 sysconfdir='${prefix}/etc'
 sharedstatedir='${prefix}/com'
 localstatedir='${prefix}/var'
-libdir='${exec_prefix}/lib'
 includedir='${prefix}/include'
 oldincludedir='/usr/include'
-infodir='${prefix}/info'
-mandir='${prefix}/man'
+docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'
+infodir='${datarootdir}/info'
+htmldir='${docdir}'
+dvidir='${docdir}'
+pdfdir='${docdir}'
+psdir='${docdir}'
+libdir='${exec_prefix}/lib'
+localedir='${datarootdir}/locale'
+mandir='${datarootdir}/man'
 
 ac_prev=
+ac_dashdash=
 for ac_option
 do
   # If the previous option needs an argument, assign it.
   if test -n "$ac_prev"; then
-    eval "$ac_prev=\$ac_option"
+    eval $ac_prev=\$ac_option
     ac_prev=
     continue
   fi
 
-  ac_optarg=`expr "x$ac_option" : 'x[^=]*=\(.*\)'`
+  case $ac_option in
+  *=*)	ac_optarg=`expr "X$ac_option" : '[^=]*=\(.*\)'` ;;
+  *)	ac_optarg=yes ;;
+  esac
 
   # Accept the important Cygnus configure options, so we can diagnose typos.
 
-  case $ac_option in
+  case $ac_dashdash$ac_option in
+  --)
+    ac_dashdash=yes ;;
 
   -bindir | --bindir | --bindi | --bind | --bin | --bi)
     ac_prev=bindir ;;
@@ -354,33 +917,45 @@ do
   --config-cache | -C)
     cache_file=config.cache ;;
 
-  -datadir | --datadir | --datadi | --datad | --data | --dat | --da)
+  -datadir | --datadir | --datadi | --datad)
     ac_prev=datadir ;;
-  -datadir=* | --datadir=* | --datadi=* | --datad=* | --data=* | --dat=* \
-  | --da=*)
+  -datadir=* | --datadir=* | --datadi=* | --datad=*)
     datadir=$ac_optarg ;;
 
+  -datarootdir | --datarootdir | --datarootdi | --datarootd | --dataroot \
+  | --dataroo | --dataro | --datar)
+    ac_prev=datarootdir ;;
+  -datarootdir=* | --datarootdir=* | --datarootdi=* | --datarootd=* \
+  | --dataroot=* | --dataroo=* | --dataro=* | --datar=*)
+    datarootdir=$ac_optarg ;;
+
   -disable-* | --disable-*)
     ac_feature=`expr "x$ac_option" : 'x-*disable-\(.*\)'`
     # Reject names that are not valid shell variable names.
-    expr "x$ac_feature" : ".*[^-_$as_cr_alnum]" >/dev/null &&
+    expr "x$ac_feature" : ".*[^-._$as_cr_alnum]" >/dev/null &&
       { echo "$as_me: error: invalid feature name: $ac_feature" >&2
    { (exit 1); exit 1; }; }
-    ac_feature=`echo $ac_feature | sed 's/-/_/g'`
-    eval "enable_$ac_feature=no" ;;
+    ac_feature=`echo $ac_feature | sed 's/[-.]/_/g'`
+    eval enable_$ac_feature=no ;;
+
+  -docdir | --docdir | --docdi | --doc | --do)
+    ac_prev=docdir ;;
+  -docdir=* | --docdir=* | --docdi=* | --doc=* | --do=*)
+    docdir=$ac_optarg ;;
+
+  -dvidir | --dvidir | --dvidi | --dvid | --dvi | --dv)
+    ac_prev=dvidir ;;
+  -dvidir=* | --dvidir=* | --dvidi=* | --dvid=* | --dvi=* | --dv=*)
+    dvidir=$ac_optarg ;;
 
   -enable-* | --enable-*)
     ac_feature=`expr "x$ac_option" : 'x-*enable-\([^=]*\)'`
     # Reject names that are not valid shell variable names.
-    expr "x$ac_feature" : ".*[^-_$as_cr_alnum]" >/dev/null &&
+    expr "x$ac_feature" : ".*[^-._$as_cr_alnum]" >/dev/null &&
       { echo "$as_me: error: invalid feature name: $ac_feature" >&2
    { (exit 1); exit 1; }; }
-    ac_feature=`echo $ac_feature | sed 's/-/_/g'`
-    case $ac_option in
-      *=*) ac_optarg=`echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"`;;
-      *) ac_optarg=yes ;;
-    esac
-    eval "enable_$ac_feature='$ac_optarg'" ;;
+    ac_feature=`echo $ac_feature | sed 's/[-.]/_/g'`
+    eval enable_$ac_feature=\$ac_optarg ;;
 
   -exec-prefix | --exec_prefix | --exec-prefix | --exec-prefi \
   | --exec-pref | --exec-pre | --exec-pr | --exec-p | --exec- \
@@ -407,6 +982,12 @@ do
   -host=* | --host=* | --hos=* | --ho=*)
     host_alias=$ac_optarg ;;
 
+  -htmldir | --htmldir | --htmldi | --htmld | --html | --htm | --ht)
+    ac_prev=htmldir ;;
+  -htmldir=* | --htmldir=* | --htmldi=* | --htmld=* | --html=* | --htm=* \
+  | --ht=*)
+    htmldir=$ac_optarg ;;
+
   -includedir | --includedir | --includedi | --included | --include \
   | --includ | --inclu | --incl | --inc)
     ac_prev=includedir ;;
@@ -431,13 +1012,16 @@ do
   | --libexe=* | --libex=* | --libe=*)
     libexecdir=$ac_optarg ;;
 
+  -localedir | --localedir | --localedi | --localed | --locale)
+    ac_prev=localedir ;;
+  -localedir=* | --localedir=* | --localedi=* | --localed=* | --locale=*)
+    localedir=$ac_optarg ;;
+
   -localstatedir | --localstatedir | --localstatedi | --localstated \
-  | --localstate | --localstat | --localsta | --localst \
-  | --locals | --local | --loca | --loc | --lo)
+  | --localstate | --localstat | --localsta | --localst | --locals)
     ac_prev=localstatedir ;;
   -localstatedir=* | --localstatedir=* | --localstatedi=* | --localstated=* \
-  | --localstate=* | --localstat=* | --localsta=* | --localst=* \
-  | --locals=* | --local=* | --loca=* | --loc=* | --lo=*)
+  | --localstate=* | --localstat=* | --localsta=* | --localst=* | --locals=*)
     localstatedir=$ac_optarg ;;
 
   -mandir | --mandir | --mandi | --mand | --man | --ma | --m)
@@ -502,6 +1086,16 @@ do
   | --progr-tra=* | --program-tr=* | --program-t=*)
     program_transform_name=$ac_optarg ;;
 
+  -pdfdir | --pdfdir | --pdfdi | --pdfd | --pdf | --pd)
+    ac_prev=pdfdir ;;
+  -pdfdir=* | --pdfdir=* | --pdfdi=* | --pdfd=* | --pdf=* | --pd=*)
+    pdfdir=$ac_optarg ;;
+
+  -psdir | --psdir | --psdi | --psd | --ps)
+    ac_prev=psdir ;;
+  -psdir=* | --psdir=* | --psdi=* | --psd=* | --ps=*)
+    psdir=$ac_optarg ;;
+
   -q | -quiet | --quiet | --quie | --qui | --qu | --q \
   | -silent | --silent | --silen | --sile | --sil)
     silent=yes ;;
@@ -554,24 +1148,20 @@ do
   -with-* | --with-*)
     ac_package=`expr "x$ac_option" : 'x-*with-\([^=]*\)'`
     # Reject names that are not valid shell variable names.
-    expr "x$ac_package" : ".*[^-_$as_cr_alnum]" >/dev/null &&
+    expr "x$ac_package" : ".*[^-._$as_cr_alnum]" >/dev/null &&
       { echo "$as_me: error: invalid package name: $ac_package" >&2
    { (exit 1); exit 1; }; }
-    ac_package=`echo $ac_package| sed 's/-/_/g'`
-    case $ac_option in
-      *=*) ac_optarg=`echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"`;;
-      *) ac_optarg=yes ;;
-    esac
-    eval "with_$ac_package='$ac_optarg'" ;;
+    ac_package=`echo $ac_package | sed 's/[-.]/_/g'`
+    eval with_$ac_package=\$ac_optarg ;;
 
   -without-* | --without-*)
     ac_package=`expr "x$ac_option" : 'x-*without-\(.*\)'`
     # Reject names that are not valid shell variable names.
-    expr "x$ac_package" : ".*[^-_$as_cr_alnum]" >/dev/null &&
+    expr "x$ac_package" : ".*[^-._$as_cr_alnum]" >/dev/null &&
       { echo "$as_me: error: invalid package name: $ac_package" >&2
    { (exit 1); exit 1; }; }
-    ac_package=`echo $ac_package | sed 's/-/_/g'`
-    eval "with_$ac_package=no" ;;
+    ac_package=`echo $ac_package | sed 's/[-.]/_/g'`
+    eval with_$ac_package=no ;;
 
   --x)
     # Obsolete; use --with-x.
@@ -602,8 +1192,7 @@ Try \`$0 --help' for more information." 
     expr "x$ac_envvar" : ".*[^_$as_cr_alnum]" >/dev/null &&
       { echo "$as_me: error: invalid variable name: $ac_envvar" >&2
    { (exit 1); exit 1; }; }
-    ac_optarg=`echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"`
-    eval "$ac_envvar='$ac_optarg'"
+    eval $ac_envvar=\$ac_optarg
     export $ac_envvar ;;
 
   *)
@@ -623,27 +1212,19 @@ if test -n "$ac_prev"; then
    { (exit 1); exit 1; }; }
 fi
 
-# Be sure to have absolute paths.
-for ac_var in exec_prefix prefix
+# Be sure to have absolute directory names.
+for ac_var in	exec_prefix prefix bindir sbindir libexecdir datarootdir \
+		datadir sysconfdir sharedstatedir localstatedir includedir \
+		oldincludedir docdir infodir htmldir dvidir pdfdir psdir \
+		libdir localedir mandir
 do
-  eval ac_val=$`echo $ac_var`
+  eval ac_val=\$$ac_var
   case $ac_val in
-    [\\/$]* | ?:[\\/]* | NONE | '' ) ;;
-    *)  { echo "$as_me: error: expected an absolute directory name for --$ac_var: $ac_val" >&2
-   { (exit 1); exit 1; }; };;
-  esac
-done
-
-# Be sure to have absolute paths.
-for ac_var in bindir sbindir libexecdir datadir sysconfdir sharedstatedir \
-	      localstatedir libdir includedir oldincludedir infodir mandir
-do
-  eval ac_val=$`echo $ac_var`
-  case $ac_val in
-    [\\/$]* | ?:[\\/]* ) ;;
-    *)  { echo "$as_me: error: expected an absolute directory name for --$ac_var: $ac_val" >&2
-   { (exit 1); exit 1; }; };;
+    [\\/$]* | ?:[\\/]* )  continue;;
+    NONE | '' ) case $ac_var in *prefix ) continue;; esac;;
   esac
+  { echo "$as_me: error: expected an absolute directory name for --$ac_var: $ac_val" >&2
+   { (exit 1); exit 1; }; }
 done
 
 # There might be people who depend on the old broken behavior: `$host'
@@ -670,242 +1251,76 @@ test -n "$host_alias" && ac_tool_prefix=
 test "$silent" = yes && exec 6>/dev/null
 
 
+ac_pwd=`pwd` && test -n "$ac_pwd" &&
+ac_ls_di=`ls -di .` &&
+ac_pwd_ls_di=`cd "$ac_pwd" && ls -di .` ||
+  { echo "$as_me: error: Working directory cannot be determined" >&2
+   { (exit 1); exit 1; }; }
+test "X$ac_ls_di" = "X$ac_pwd_ls_di" ||
+  { echo "$as_me: error: pwd does not report name of working directory" >&2
+   { (exit 1); exit 1; }; }
+
+
 # Find the source files, if location was not specified.
 if test -z "$srcdir"; then
   ac_srcdir_defaulted=yes
-  # Try the directory containing this script, then its parent.
-  ac_confdir=`(dirname "$0") 2>/dev/null ||
+  # Try the directory containing this script, then the parent directory.
+  ac_confdir=`$as_dirname -- "$0" ||
 $as_expr X"$0" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$0" : 'X\(//\)[^/]' \| \
 	 X"$0" : 'X\(//\)$' \| \
-	 X"$0" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
 echo X"$0" |
-    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
-  	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
-  	  /^X\(\/\/\)$/{ s//\1/; q; }
-  	  /^X\(\/\).*/{ s//\1/; q; }
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
   	  s/.*/./; q'`
   srcdir=$ac_confdir
-  if test ! -r $srcdir/$ac_unique_file; then
+  if test ! -r "$srcdir/$ac_unique_file"; then
     srcdir=..
   fi
 else
   ac_srcdir_defaulted=no
 fi
-if test ! -r $srcdir/$ac_unique_file; then
-  if test "$ac_srcdir_defaulted" = yes; then
-    { echo "$as_me: error: cannot find sources ($ac_unique_file) in $ac_confdir or .." >&2
-   { (exit 1); exit 1; }; }
-  else
+if test ! -r "$srcdir/$ac_unique_file"; then
+  test "$ac_srcdir_defaulted" = yes && srcdir="$ac_confdir or .."
     { echo "$as_me: error: cannot find sources ($ac_unique_file) in $srcdir" >&2
    { (exit 1); exit 1; }; }
   fi
-fi
-(cd $srcdir && test -r ./$ac_unique_file) 2>/dev/null ||
-  { echo "$as_me: error: sources are in $srcdir, but \`cd $srcdir' does not work" >&2
-   { (exit 1); exit 1; }; }
-srcdir=`echo "$srcdir" | sed 's%\([^\\/]\)[\\/]*$%\1%'`
-ac_env_build_alias_set=${build_alias+set}
-ac_env_build_alias_value=$build_alias
-ac_cv_env_build_alias_set=${build_alias+set}
-ac_cv_env_build_alias_value=$build_alias
-ac_env_host_alias_set=${host_alias+set}
-ac_env_host_alias_value=$host_alias
-ac_cv_env_host_alias_set=${host_alias+set}
-ac_cv_env_host_alias_value=$host_alias
-ac_env_target_alias_set=${target_alias+set}
-ac_env_target_alias_value=$target_alias
-ac_cv_env_target_alias_set=${target_alias+set}
-ac_cv_env_target_alias_value=$target_alias
-ac_env_CC_set=${CC+set}
-ac_env_CC_value=$CC
-ac_cv_env_CC_set=${CC+set}
-ac_cv_env_CC_value=$CC
-ac_env_CFLAGS_set=${CFLAGS+set}
-ac_env_CFLAGS_value=$CFLAGS
-ac_cv_env_CFLAGS_set=${CFLAGS+set}
-ac_cv_env_CFLAGS_value=$CFLAGS
-ac_env_LDFLAGS_set=${LDFLAGS+set}
-ac_env_LDFLAGS_value=$LDFLAGS
-ac_cv_env_LDFLAGS_set=${LDFLAGS+set}
-ac_cv_env_LDFLAGS_value=$LDFLAGS
-ac_env_CPPFLAGS_set=${CPPFLAGS+set}
-ac_env_CPPFLAGS_value=$CPPFLAGS
-ac_cv_env_CPPFLAGS_set=${CPPFLAGS+set}
-ac_cv_env_CPPFLAGS_value=$CPPFLAGS
-ac_env_SPEAKER_set=${SPEAKER+set}
-ac_env_SPEAKER_value=$SPEAKER
-ac_cv_env_SPEAKER_set=${SPEAKER+set}
-ac_cv_env_SPEAKER_value=$SPEAKER
-ac_env_DATASET_set=${DATASET+set}
-ac_env_DATASET_value=$DATASET
-ac_cv_env_DATASET_set=${DATASET+set}
-ac_cv_env_DATASET_value=$DATASET
-ac_env_VER_set=${VER+set}
-ac_env_VER_value=$VER
-ac_cv_env_VER_set=${VER+set}
-ac_cv_env_VER_value=$VER
-ac_env_QNUM_set=${QNUM+set}
-ac_env_QNUM_value=$QNUM
-ac_cv_env_QNUM_set=${QNUM+set}
-ac_cv_env_QNUM_value=$QNUM
-ac_env_FRAMELEN_set=${FRAMELEN+set}
-ac_env_FRAMELEN_value=$FRAMELEN
-ac_cv_env_FRAMELEN_set=${FRAMELEN+set}
-ac_cv_env_FRAMELEN_value=$FRAMELEN
-ac_env_FRAMESHIFT_set=${FRAMESHIFT+set}
-ac_env_FRAMESHIFT_value=$FRAMESHIFT
-ac_cv_env_FRAMESHIFT_set=${FRAMESHIFT+set}
-ac_cv_env_FRAMESHIFT_value=$FRAMESHIFT
-ac_env_WINDOWTYPE_set=${WINDOWTYPE+set}
-ac_env_WINDOWTYPE_value=$WINDOWTYPE
-ac_cv_env_WINDOWTYPE_set=${WINDOWTYPE+set}
-ac_cv_env_WINDOWTYPE_value=$WINDOWTYPE
-ac_env_NORMALIZE_set=${NORMALIZE+set}
-ac_env_NORMALIZE_value=$NORMALIZE
-ac_cv_env_NORMALIZE_set=${NORMALIZE+set}
-ac_cv_env_NORMALIZE_value=$NORMALIZE
-ac_env_FFTLEN_set=${FFTLEN+set}
-ac_env_FFTLEN_value=$FFTLEN
-ac_cv_env_FFTLEN_set=${FFTLEN+set}
-ac_cv_env_FFTLEN_value=$FFTLEN
-ac_env_FREQWARP_set=${FREQWARP+set}
-ac_env_FREQWARP_value=$FREQWARP
-ac_cv_env_FREQWARP_set=${FREQWARP+set}
-ac_cv_env_FREQWARP_value=$FREQWARP
-ac_env_GAMMA_set=${GAMMA+set}
-ac_env_GAMMA_value=$GAMMA
-ac_cv_env_GAMMA_set=${GAMMA+set}
-ac_cv_env_GAMMA_value=$GAMMA
-ac_env_MGCLSP_set=${MGCLSP+set}
-ac_env_MGCLSP_value=$MGCLSP
-ac_cv_env_MGCLSP_set=${MGCLSP+set}
-ac_cv_env_MGCLSP_value=$MGCLSP
-ac_env_MGCORDER_set=${MGCORDER+set}
-ac_env_MGCORDER_value=$MGCORDER
-ac_cv_env_MGCORDER_set=${MGCORDER+set}
-ac_cv_env_MGCORDER_value=$MGCORDER
-ac_env_LNGAIN_set=${LNGAIN+set}
-ac_env_LNGAIN_value=$LNGAIN
-ac_cv_env_LNGAIN_set=${LNGAIN+set}
-ac_cv_env_LNGAIN_value=$LNGAIN
-ac_env_LOWERF0_set=${LOWERF0+set}
-ac_env_LOWERF0_value=$LOWERF0
-ac_cv_env_LOWERF0_set=${LOWERF0+set}
-ac_cv_env_LOWERF0_value=$LOWERF0
-ac_env_UPPERF0_set=${UPPERF0+set}
-ac_env_UPPERF0_value=$UPPERF0
-ac_cv_env_UPPERF0_set=${UPPERF0+set}
-ac_cv_env_UPPERF0_value=$UPPERF0
-ac_env_NOISEMASK_set=${NOISEMASK+set}
-ac_env_NOISEMASK_value=$NOISEMASK
-ac_cv_env_NOISEMASK_set=${NOISEMASK+set}
-ac_cv_env_NOISEMASK_value=$NOISEMASK
-ac_env_PSTFILTER_set=${PSTFILTER+set}
-ac_env_PSTFILTER_value=$PSTFILTER
-ac_cv_env_PSTFILTER_set=${PSTFILTER+set}
-ac_cv_env_PSTFILTER_value=$PSTFILTER
-ac_env_IMPLEN_set=${IMPLEN+set}
-ac_env_IMPLEN_value=$IMPLEN
-ac_cv_env_IMPLEN_set=${IMPLEN+set}
-ac_cv_env_IMPLEN_value=$IMPLEN
-ac_env_SAMPFREQ_set=${SAMPFREQ+set}
-ac_env_SAMPFREQ_value=$SAMPFREQ
-ac_cv_env_SAMPFREQ_set=${SAMPFREQ+set}
-ac_cv_env_SAMPFREQ_value=$SAMPFREQ
-ac_env_NMGCWIN_set=${NMGCWIN+set}
-ac_env_NMGCWIN_value=$NMGCWIN
-ac_cv_env_NMGCWIN_set=${NMGCWIN+set}
-ac_cv_env_NMGCWIN_value=$NMGCWIN
-ac_env_NLF0WIN_set=${NLF0WIN+set}
-ac_env_NLF0WIN_value=$NLF0WIN
-ac_cv_env_NLF0WIN_set=${NLF0WIN+set}
-ac_cv_env_NLF0WIN_value=$NLF0WIN
-ac_env_NSTATE_set=${NSTATE+set}
-ac_env_NSTATE_value=$NSTATE
-ac_cv_env_NSTATE_set=${NSTATE+set}
-ac_cv_env_NSTATE_value=$NSTATE
-ac_env_NITER_set=${NITER+set}
-ac_env_NITER_value=$NITER
-ac_cv_env_NITER_set=${NITER+set}
-ac_cv_env_NITER_value=$NITER
-ac_env_WFLOOR_set=${WFLOOR+set}
-ac_env_WFLOOR_value=$WFLOOR
-ac_cv_env_WFLOOR_set=${WFLOOR+set}
-ac_cv_env_WFLOOR_value=$WFLOOR
-ac_env_MAXDEV_set=${MAXDEV+set}
-ac_env_MAXDEV_value=$MAXDEV
-ac_cv_env_MAXDEV_set=${MAXDEV+set}
-ac_cv_env_MAXDEV_value=$MAXDEV
-ac_env_MINDUR_set=${MINDUR+set}
-ac_env_MINDUR_value=$MINDUR
-ac_cv_env_MINDUR_set=${MINDUR+set}
-ac_cv_env_MINDUR_value=$MINDUR
-ac_env_NMGCTRANSBLK_set=${NMGCTRANSBLK+set}
-ac_env_NMGCTRANSBLK_value=$NMGCTRANSBLK
-ac_cv_env_NMGCTRANSBLK_set=${NMGCTRANSBLK+set}
-ac_cv_env_NMGCTRANSBLK_value=$NMGCTRANSBLK
-ac_env_NLF0TRANSBLK_set=${NLF0TRANSBLK+set}
-ac_env_NLF0TRANSBLK_value=$NLF0TRANSBLK
-ac_cv_env_NLF0TRANSBLK_set=${NLF0TRANSBLK+set}
-ac_cv_env_NLF0TRANSBLK_value=$NLF0TRANSBLK
-ac_env_MGCBANDWIDTH_set=${MGCBANDWIDTH+set}
-ac_env_MGCBANDWIDTH_value=$MGCBANDWIDTH
-ac_cv_env_MGCBANDWIDTH_set=${MGCBANDWIDTH+set}
-ac_cv_env_MGCBANDWIDTH_value=$MGCBANDWIDTH
-ac_env_LF0BANDWIDTH_set=${LF0BANDWIDTH+set}
-ac_env_LF0BANDWIDTH_value=$LF0BANDWIDTH
-ac_cv_env_LF0BANDWIDTH_set=${LF0BANDWIDTH+set}
-ac_cv_env_LF0BANDWIDTH_value=$LF0BANDWIDTH
-ac_env_MAXEMITER_set=${MAXEMITER+set}
-ac_env_MAXEMITER_value=$MAXEMITER
-ac_cv_env_MAXEMITER_set=${MAXEMITER+set}
-ac_cv_env_MAXEMITER_value=$MAXEMITER
-ac_env_EMEPSILON_set=${EMEPSILON+set}
-ac_env_EMEPSILON_value=$EMEPSILON
-ac_cv_env_EMEPSILON_set=${EMEPSILON+set}
-ac_cv_env_EMEPSILON_value=$EMEPSILON
-ac_env_USEGV_set=${USEGV+set}
-ac_env_USEGV_value=$USEGV
-ac_cv_env_USEGV_set=${USEGV+set}
-ac_cv_env_USEGV_value=$USEGV
-ac_env_MAXGVITER_set=${MAXGVITER+set}
-ac_env_MAXGVITER_value=$MAXGVITER
-ac_cv_env_MAXGVITER_set=${MAXGVITER+set}
-ac_cv_env_MAXGVITER_value=$MAXGVITER
-ac_env_GVEPSILON_set=${GVEPSILON+set}
-ac_env_GVEPSILON_value=$GVEPSILON
-ac_cv_env_GVEPSILON_set=${GVEPSILON+set}
-ac_cv_env_GVEPSILON_value=$GVEPSILON
-ac_env_MINEUCNORM_set=${MINEUCNORM+set}
-ac_env_MINEUCNORM_value=$MINEUCNORM
-ac_cv_env_MINEUCNORM_set=${MINEUCNORM+set}
-ac_cv_env_MINEUCNORM_value=$MINEUCNORM
-ac_env_STEPINIT_set=${STEPINIT+set}
-ac_env_STEPINIT_value=$STEPINIT
-ac_cv_env_STEPINIT_set=${STEPINIT+set}
-ac_cv_env_STEPINIT_value=$STEPINIT
-ac_env_STEPINC_set=${STEPINC+set}
-ac_env_STEPINC_value=$STEPINC
-ac_cv_env_STEPINC_set=${STEPINC+set}
-ac_cv_env_STEPINC_value=$STEPINC
-ac_env_STEPDEC_set=${STEPDEC+set}
-ac_env_STEPDEC_value=$STEPDEC
-ac_cv_env_STEPDEC_set=${STEPDEC+set}
-ac_cv_env_STEPDEC_value=$STEPDEC
-ac_env_HMMWEIGHT_set=${HMMWEIGHT+set}
-ac_env_HMMWEIGHT_value=$HMMWEIGHT
-ac_cv_env_HMMWEIGHT_set=${HMMWEIGHT+set}
-ac_cv_env_HMMWEIGHT_value=$HMMWEIGHT
-ac_env_GVWEIGHT_set=${GVWEIGHT+set}
-ac_env_GVWEIGHT_value=$GVWEIGHT
-ac_cv_env_GVWEIGHT_set=${GVWEIGHT+set}
-ac_cv_env_GVWEIGHT_value=$GVWEIGHT
-ac_env_OPTKIND_set=${OPTKIND+set}
-ac_env_OPTKIND_value=$OPTKIND
-ac_cv_env_OPTKIND_set=${OPTKIND+set}
-ac_cv_env_OPTKIND_value=$OPTKIND
+ac_msg="sources are in $srcdir, but \`cd $srcdir' does not work"
+ac_abs_confdir=`(
+	cd "$srcdir" && test -r "./$ac_unique_file" || { echo "$as_me: error: $ac_msg" >&2
+   { (exit 1); exit 1; }; }
+	pwd)`
+# When building in place, set srcdir=.
+if test "$ac_abs_confdir" = "$ac_pwd"; then
+  srcdir=.
+fi
+# Remove unnecessary trailing slashes from srcdir.
+# Double slashes in file names in object file debugging info
+# mess up M-x gdb in Emacs.
+case $srcdir in
+*/) srcdir=`expr "X$srcdir" : 'X\(.*[^/]\)' \| "X$srcdir" : 'X\(.*\)'`;;
+esac
+for ac_var in $ac_precious_vars; do
+  eval ac_env_${ac_var}_set=\${${ac_var}+set}
+  eval ac_env_${ac_var}_value=\$${ac_var}
+  eval ac_cv_env_${ac_var}_set=\${${ac_var}+set}
+  eval ac_cv_env_${ac_var}_value=\$${ac_var}
+done
 
 #
 # Report the --help message.
@@ -934,9 +1349,6 @@ Configuration:
   -n, --no-create         do not create output files
       --srcdir=DIR        find the sources in DIR [configure dir or \`..']
 
-_ACEOF
-
-  cat <<_ACEOF
 Installation directories:
   --prefix=PREFIX         install architecture-independent files in PREFIX
 			  [$ac_default_prefix]
@@ -954,15 +1366,22 @@ Fine tuning of the installation director
   --bindir=DIR           user executables [EPREFIX/bin]
   --sbindir=DIR          system admin executables [EPREFIX/sbin]
   --libexecdir=DIR       program executables [EPREFIX/libexec]
-  --datadir=DIR          read-only architecture-independent data [PREFIX/share]
   --sysconfdir=DIR       read-only single-machine data [PREFIX/etc]
   --sharedstatedir=DIR   modifiable architecture-independent data [PREFIX/com]
   --localstatedir=DIR    modifiable single-machine data [PREFIX/var]
   --libdir=DIR           object code libraries [EPREFIX/lib]
   --includedir=DIR       C header files [PREFIX/include]
   --oldincludedir=DIR    C header files for non-gcc [/usr/include]
-  --infodir=DIR          info documentation [PREFIX/info]
-  --mandir=DIR           man documentation [PREFIX/man]
+  --datarootdir=DIR      read-only arch.-independent data root [PREFIX/share]
+  --datadir=DIR          read-only architecture-independent data [DATAROOTDIR]
+  --infodir=DIR          info documentation [DATAROOTDIR/info]
+  --localedir=DIR        locale-dependent data [DATAROOTDIR/locale]
+  --mandir=DIR           man documentation [DATAROOTDIR/man]
+  --docdir=DIR           documentation root [DATAROOTDIR/doc/hts-demo_cmu-arctic-slt]
+  --htmldir=DIR          html documentation [DOCDIR]
+  --dvidir=DIR           dvi documentation [DOCDIR]
+  --pdfdir=DIR           pdf documentation [DOCDIR]
+  --psdir=DIR            ps documentation [DOCDIR]
 _ACEOF
 
   cat <<\_ACEOF
@@ -989,12 +1408,16 @@ Optional Packages:
                           specify the additional hts_engine binary search path
 
 Some influential environment variables:
+  FEATURELIST Mary context features file (default='data/feature_list.pl')
+  VOICELANG   voice language (default='en')
   CC          C compiler command
   CFLAGS      C compiler flags
   LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
               nonstandard directory <lib dir>
-  CPPFLAGS    C/C++ preprocessor flags, e.g. -I<include dir> if you have
-              headers in a nonstandard directory <include dir>
+  LIBS        libraries to pass to the linker, e.g. -l<library>
+  CPPFLAGS    C/C++/Objective C preprocessor flags, e.g. -I<include dir> if
+              you have headers in a nonstandard directory <include dir>
+  CPP         C preprocessor
   SPEAKER     speaker name (default=slt)
   DATASET     dataset (default=cmu_us_arctic)
   VER         version number of this setting (default=1)
@@ -1011,6 +1434,9 @@ Some influential environment variables:
   MGCLSP      Use MGC-LSPs instead of MGC coefficients (default=0)
   MGCORDER    Order of MGC analysis (default=24 for cepstral form, default=12
               for LSP form)
+  STRORDER    Order of strengths analysis (default=5 for 5 filter bands)
+  MAGORDER    Order of Fourier magnitudes analysis (default=10 for 10 pitch
+              harmonics)
   LNGAIN      Use logarithmic gain instead of linear gain (default=0)
   LOWERF0     Lower limit for F0 extraction in Hz (default=80)
   UPPERF0     Upper limit for F0 extraction in Hz (default=350)
@@ -1020,6 +1446,8 @@ Some influential environment variables:
   IMPLEN      Length of impulse response (default=4096)
   SAMPFREQ    Sampling frequency in Hz (default=16000)
   NMGCWIN     number of delta windows for MGC coefficients (default=3)
+  NSTRWIN     number of delta windows for STR coefficients (default=3)
+  NMAGWIN     number of delta windows for MAG coefficients (default=3)
   NLF0WIN     number of delta windows for log F0 values (default=3)
   NSTATE      number of HMM states (default=5)
   NITER       number of iterations of embedded training (default=5)
@@ -1028,11 +1456,19 @@ Some influential environment variables:
   MINDUR      minimum duration to be evaluated (default=5)
   NMGCTRANSBLK
               number of blocks for MGC transforms (default=3)
+  NSTRTRANSBLK
+              number of blocks for STR transforms (default=3)
+  NMAGTRANSBLK
+              number of blocks for MAG transforms (default=3)
   NLF0TRANSBLK
               number of blocks for log F0 transforms (default=1)
   MGCBANDWIDTH
               band width for MGC transforms (default=24 for cepstral form,
               derault=2 for LSP form)
+  STRBANDWIDTH
+              band width for STR transforms (default=5)
+  MAGBANDWIDTH
+              band width for MAG transforms (default=10)
   LF0BANDWIDTH
               band width for log F0 transforms (default=1)
   MAXEMITER   max EM iteration (default=20)
@@ -1056,104 +1492,70 @@ it to find libraries and programs with n
 
 Report bugs to <hts-users@sp.nitech.ac.jp>.
 _ACEOF
+ac_status=$?
 fi
 
 if test "$ac_init_help" = "recursive"; then
   # If there are subdirs, report their specific --help.
-  ac_popdir=`pwd`
   for ac_dir in : $ac_subdirs_all; do test "x$ac_dir" = x: && continue
-    test -d $ac_dir || continue
+    test -d "$ac_dir" || continue
     ac_builddir=.
 
-if test "$ac_dir" != .; then
-  ac_dir_suffix=/`echo "$ac_dir" | sed 's,^\.[\\/],,'`
-  # A "../" for each directory in $ac_dir_suffix.
-  ac_top_builddir=`echo "$ac_dir_suffix" | sed 's,/[^\\/]*,../,g'`
-else
-  ac_dir_suffix= ac_top_builddir=
-fi
-
-case $srcdir in
-  .)  # No --srcdir option.  We are building in place.
-    ac_srcdir=.
-    if test -z "$ac_top_builddir"; then
-       ac_top_srcdir=.
-    else
-       ac_top_srcdir=`echo $ac_top_builddir | sed 's,/$,,'`
-    fi ;;
-  [\\/]* | ?:[\\/]* )  # Absolute path.
-    ac_srcdir=$srcdir$ac_dir_suffix;
-    ac_top_srcdir=$srcdir ;;
-  *) # Relative path.
-    ac_srcdir=$ac_top_builddir$srcdir$ac_dir_suffix
-    ac_top_srcdir=$ac_top_builddir$srcdir ;;
-esac
-
-# Do not use `cd foo && pwd` to compute absolute paths, because
-# the directories may not exist.
-case `pwd` in
-.) ac_abs_builddir="$ac_dir";;
-*)
   case "$ac_dir" in
-  .) ac_abs_builddir=`pwd`;;
-  [\\/]* | ?:[\\/]* ) ac_abs_builddir="$ac_dir";;
-  *) ac_abs_builddir=`pwd`/"$ac_dir";;
-  esac;;
-esac
-case $ac_abs_builddir in
-.) ac_abs_top_builddir=${ac_top_builddir}.;;
-*)
-  case ${ac_top_builddir}. in
-  .) ac_abs_top_builddir=$ac_abs_builddir;;
-  [\\/]* | ?:[\\/]* ) ac_abs_top_builddir=${ac_top_builddir}.;;
-  *) ac_abs_top_builddir=$ac_abs_builddir/${ac_top_builddir}.;;
-  esac;;
-esac
-case $ac_abs_builddir in
-.) ac_abs_srcdir=$ac_srcdir;;
+.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
 *)
-  case $ac_srcdir in
-  .) ac_abs_srcdir=$ac_abs_builddir;;
-  [\\/]* | ?:[\\/]* ) ac_abs_srcdir=$ac_srcdir;;
-  *) ac_abs_srcdir=$ac_abs_builddir/$ac_srcdir;;
-  esac;;
-esac
-case $ac_abs_builddir in
-.) ac_abs_top_srcdir=$ac_top_srcdir;;
-*)
-  case $ac_top_srcdir in
-  .) ac_abs_top_srcdir=$ac_abs_builddir;;
-  [\\/]* | ?:[\\/]* ) ac_abs_top_srcdir=$ac_top_srcdir;;
-  *) ac_abs_top_srcdir=$ac_abs_builddir/$ac_top_srcdir;;
+  ac_dir_suffix=/`echo "$ac_dir" | sed 's,^\.[\\/],,'`
+  # A ".." for each directory in $ac_dir_suffix.
+  ac_top_builddir_sub=`echo "$ac_dir_suffix" | sed 's,/[^\\/]*,/..,g;s,/,,'`
+  case $ac_top_builddir_sub in
+  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
+  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
   esac;;
 esac
+ac_abs_top_builddir=$ac_pwd
+ac_abs_builddir=$ac_pwd$ac_dir_suffix
+# for backward compatibility:
+ac_top_builddir=$ac_top_build_prefix
 
-    cd $ac_dir
-    # Check for guested configure; otherwise get Cygnus style configure.
-    if test -f $ac_srcdir/configure.gnu; then
-      echo
-      $SHELL $ac_srcdir/configure.gnu  --help=recursive
-    elif test -f $ac_srcdir/configure; then
-      echo
-      $SHELL $ac_srcdir/configure  --help=recursive
-    elif test -f $ac_srcdir/configure.ac ||
-	   test -f $ac_srcdir/configure.in; then
-      echo
-      $ac_configure --help
+case $srcdir in
+  .)  # We are building in place.
+    ac_srcdir=.
+    ac_top_srcdir=$ac_top_builddir_sub
+    ac_abs_top_srcdir=$ac_pwd ;;
+  [\\/]* | ?:[\\/]* )  # Absolute name.
+    ac_srcdir=$srcdir$ac_dir_suffix;
+    ac_top_srcdir=$srcdir
+    ac_abs_top_srcdir=$srcdir ;;
+  *) # Relative name.
+    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
+    ac_top_srcdir=$ac_top_build_prefix$srcdir
+    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
+esac
+ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix
+
+    cd "$ac_dir" || { ac_status=$?; continue; }
+    # Check for guested configure.
+    if test -f "$ac_srcdir/configure.gnu"; then
+      echo &&
+      $SHELL "$ac_srcdir/configure.gnu" --help=recursive
+    elif test -f "$ac_srcdir/configure"; then
+      echo &&
+      $SHELL "$ac_srcdir/configure" --help=recursive
     else
       echo "$as_me: WARNING: no configuration information is in $ac_dir" >&2
-    fi
-    cd $ac_popdir
+    fi || ac_status=$?
+    cd "$ac_pwd" || { ac_status=$?; break; }
   done
 fi
 
-test -n "$ac_init_help" && exit 0
+test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
 HTS-demo_CMU-ARCTIC-SLT configure 2.1
-generated by GNU Autoconf 2.59
+generated by GNU Autoconf 2.61
 
-Copyright (C) 2003 Free Software Foundation, Inc.
+Copyright (C) 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,
+2002, 2003, 2004, 2005, 2006 Free Software Foundation, Inc.
 This configure script is free software; the Free Software Foundation
 gives unlimited permission to copy, distribute and modify it.
 
@@ -1161,19 +1563,19 @@ Copyright 2001-2008 Nagoya Institute of 
 
 Copyright 2001-2008 Tokyo Institute of Technology
 _ACEOF
-  exit 0
+  exit
 fi
-exec 5>config.log
-cat >&5 <<_ACEOF
+cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
 It was created by HTS-demo_CMU-ARCTIC-SLT $as_me 2.1, which was
-generated by GNU Autoconf 2.59.  Invocation command line was
+generated by GNU Autoconf 2.61.  Invocation command line was
 
   $ $0 $@
 
 _ACEOF
+exec 5>>config.log
 {
 cat <<_ASUNAME
 ## --------- ##
@@ -1192,7 +1594,7 @@ uname -v = `(uname -v) 2>/dev/null || ec
 /bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`
 /usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`
 /usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`
-hostinfo               = `(hostinfo) 2>/dev/null               || echo unknown`
+/usr/bin/hostinfo      = `(/usr/bin/hostinfo) 2>/dev/null      || echo unknown`
 /bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`
 /usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`
 /bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`
@@ -1206,6 +1608,7 @@ do
   test -z "$as_dir" && as_dir=.
   echo "PATH: $as_dir"
 done
+IFS=$as_save_IFS
 
 } >&5
 
@@ -1227,7 +1630,6 @@ _ACEOF
 ac_configure_args=
 ac_configure_args0=
 ac_configure_args1=
-ac_sep=
 ac_must_keep_next=false
 for ac_pass in 1 2
 do
@@ -1238,7 +1640,7 @@ do
     -q | -quiet | --quiet | --quie | --qui | --qu | --q \
     | -silent | --silent | --silen | --sile | --sil)
       continue ;;
-    *" "*|*"	"*|*[\[\]\~\#\$\^\&\*\(\)\{\}\\\|\;\<\>\?\"\']*)
+    *\'*)
       ac_arg=`echo "$ac_arg" | sed "s/'/'\\\\\\\\''/g"` ;;
     esac
     case $ac_pass in
@@ -1260,9 +1662,7 @@ do
 	  -* ) ac_must_keep_next=true ;;
 	esac
       fi
-      ac_configure_args="$ac_configure_args$ac_sep'$ac_arg'"
-      # Get rid of the leading space.
-      ac_sep=" "
+      ac_configure_args="$ac_configure_args '$ac_arg'"
       ;;
     esac
   done
@@ -1273,8 +1673,8 @@ $as_unset ac_configure_args1 || test "${
 # When interrupted or exit'd, cleanup temporary files, and complete
 # config.log.  We remove comments because anyway the quotes in there
 # would cause problems or look ugly.
-# WARNING: Be sure not to use single quotes in there, as some shells,
-# such as our DU 5.0 friend, will then `close' the trap.
+# WARNING: Use '\'' to represent an apostrophe within the trap.
+# WARNING: Do not start the trap code with a newline, due to a FreeBSD 4.0 bug.
 trap 'exit_status=$?
   # Save into config.log some information that might help in debugging.
   {
@@ -1287,20 +1687,34 @@ trap 'exit_status=$?
 _ASBOX
     echo
     # The following way of writing the cache mishandles newlines in values,
-{
+(
+  for ac_var in `(set) 2>&1 | sed -n '\''s/^\([a-zA-Z_][a-zA-Z0-9_]*\)=.*/\1/p'\''`; do
+    eval ac_val=\$$ac_var
+    case $ac_val in #(
+    *${as_nl}*)
+      case $ac_var in #(
+      *_cv_*) { echo "$as_me:$LINENO: WARNING: Cache variable $ac_var contains a newline." >&5
+echo "$as_me: WARNING: Cache variable $ac_var contains a newline." >&2;} ;;
+      esac
+      case $ac_var in #(
+      _ | IFS | as_nl) ;; #(
+      *) $as_unset $ac_var ;;
+      esac ;;
+    esac
+  done
   (set) 2>&1 |
-    case `(ac_space='"'"' '"'"'; set | grep ac_space) 2>&1` in
-    *ac_space=\ *)
-      sed -n \
-	"s/'"'"'/'"'"'\\\\'"'"''"'"'/g;
-	  s/^\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\)=\\(.*\\)/\\1='"'"'\\2'"'"'/p"
-      ;;
-    *)
+    case $as_nl`(ac_space='\'' '\''; set) 2>&1` in #(
+    *${as_nl}ac_space=\ *)
       sed -n \
-	"s/^\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\)=\\(.*\\)/\\1=\\2/p"
-      ;;
-    esac;
-}
+	"s/'\''/'\''\\\\'\'''\''/g;
+	  s/^\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\)=\\(.*\\)/\\1='\''\\2'\''/p"
+      ;; #(
+    *)
+      sed -n "/^[_$as_cr_alnum]*_cv_[_$as_cr_alnum]*=/p"
+      ;;
+    esac |
+    sort
+)
     echo
 
     cat <<\_ASBOX
@@ -1311,22 +1725,28 @@ _ASBOX
     echo
     for ac_var in $ac_subst_vars
     do
-      eval ac_val=$`echo $ac_var`
-      echo "$ac_var='"'"'$ac_val'"'"'"
+      eval ac_val=\$$ac_var
+      case $ac_val in
+      *\'\''*) ac_val=`echo "$ac_val" | sed "s/'\''/'\''\\\\\\\\'\'''\''/g"`;;
+      esac
+      echo "$ac_var='\''$ac_val'\''"
     done | sort
     echo
 
     if test -n "$ac_subst_files"; then
       cat <<\_ASBOX
-## ------------- ##
-## Output files. ##
-## ------------- ##
+## ------------------- ##
+## File substitutions. ##
+## ------------------- ##
 _ASBOX
       echo
       for ac_var in $ac_subst_files
       do
-	eval ac_val=$`echo $ac_var`
-	echo "$ac_var='"'"'$ac_val'"'"'"
+	eval ac_val=\$$ac_var
+	case $ac_val in
+	*\'\''*) ac_val=`echo "$ac_val" | sed "s/'\''/'\''\\\\\\\\'\'''\''/g"`;;
+	esac
+	echo "$ac_var='\''$ac_val'\''"
       done | sort
       echo
     fi
@@ -1338,15 +1758,15 @@ _ASBOX
 ## ----------- ##
 _ASBOX
       echo
-      sed "/^$/d" confdefs.h | sort
+      cat confdefs.h
       echo
     fi
     test "$ac_signal" != 0 &&
       echo "$as_me: caught signal $ac_signal"
     echo "$as_me: exit $exit_status"
   } >&5
-  rm -f core *.core &&
-  rm -rf conftest* confdefs* conf$$* $ac_clean_files &&
+  rm -f core *.core core.conftest.* &&
+    rm -f -r conftest* confdefs* conf$$* $ac_clean_files &&
     exit $exit_status
      ' 0
 for ac_signal in 1 2 13 15; do
@@ -1355,9 +1775,7 @@ done
 ac_signal=0
 
 # confdefs.h avoids OS command line length limits that DEFS can exceed.
-rm -rf conftest* confdefs.h
-# AIX cpp loses on an empty file, so make sure it contains at least a newline.
-echo >confdefs.h
+rm -f -r conftest* confdefs.h
 
 # Predefined preprocessor variables.
 
@@ -1388,14 +1806,17 @@ _ACEOF
 
 # Let the site file select an alternate cache file if it wants to.
 # Prefer explicitly selected file to automatically selected ones.
-if test -z "$CONFIG_SITE"; then
-  if test "x$prefix" != xNONE; then
-    CONFIG_SITE="$prefix/share/config.site $prefix/etc/config.site"
+if test -n "$CONFIG_SITE"; then
+  set x "$CONFIG_SITE"
+elif test "x$prefix" != xNONE; then
+  set x "$prefix/share/config.site" "$prefix/etc/config.site"
   else
-    CONFIG_SITE="$ac_default_prefix/share/config.site $ac_default_prefix/etc/config.site"
-  fi
+  set x "$ac_default_prefix/share/config.site" \
+	"$ac_default_prefix/etc/config.site"
 fi
-for ac_site_file in $CONFIG_SITE; do
+shift
+for ac_site_file
+do
   if test -r "$ac_site_file"; then
     { echo "$as_me:$LINENO: loading site script $ac_site_file" >&5
 echo "$as_me: loading site script $ac_site_file" >&6;}
@@ -1411,8 +1832,8 @@ if test -r "$cache_file"; then
     { echo "$as_me:$LINENO: loading cache $cache_file" >&5
 echo "$as_me: loading cache $cache_file" >&6;}
     case $cache_file in
-      [\\/]* | ?:[\\/]* ) . $cache_file;;
-      *)                      . ./$cache_file;;
+      [\\/]* | ?:[\\/]* ) . "$cache_file";;
+      *)                      . "./$cache_file";;
     esac
   fi
 else
@@ -1424,12 +1845,11 @@ fi
 # Check that the precious variables saved in the cache have kept the same
 # value.
 ac_cache_corrupted=false
-for ac_var in `(set) 2>&1 |
-	       sed -n 's/^ac_env_\([a-zA-Z_0-9]*\)_set=.*/\1/p'`; do
+for ac_var in $ac_precious_vars; do
   eval ac_old_set=\$ac_cv_env_${ac_var}_set
   eval ac_new_set=\$ac_env_${ac_var}_set
-  eval ac_old_val="\$ac_cv_env_${ac_var}_value"
-  eval ac_new_val="\$ac_env_${ac_var}_value"
+  eval ac_old_val=\$ac_cv_env_${ac_var}_value
+  eval ac_new_val=\$ac_env_${ac_var}_value
   case $ac_old_set,$ac_new_set in
     set,)
       { echo "$as_me:$LINENO: error: \`$ac_var' was set to \`$ac_old_val' in the previous run" >&5
@@ -1454,8 +1874,7 @@ echo "$as_me:   current value: $ac_new_v
   # Pass precious variables to config.status.
   if test "$ac_new_set" = set; then
     case $ac_new_val in
-    *" "*|*"	"*|*[\[\]\~\#\$\^\&\*\(\)\{\}\\\|\;\<\>\?\"\']*)
-      ac_arg=$ac_var=`echo "$ac_new_val" | sed "s/'/'\\\\\\\\''/g"` ;;
+    *\'*) ac_arg=$ac_var=`echo "$ac_new_val" | sed "s/'/'\\\\\\\\''/g"` ;;
     *) ac_arg=$ac_var=$ac_new_val ;;
     esac
     case " $ac_configure_args " in
@@ -1472,12 +1891,6 @@ echo "$as_me: error: run \`make distclea
    { (exit 1); exit 1; }; }
 fi
 
-ac_ext=c
-ac_cpp='$CPP $CPPFLAGS'
-ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
-ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
-ac_compiler_gnu=$ac_cv_c_compiler_gnu
-
 
 
 
@@ -1502,6 +1915,11 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu
 
 
 
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
 
 
 
@@ -1515,8 +1933,8 @@ for ac_prog in gawk mawk nawk awk
 do
   # Extract the first word of "$ac_prog", so it can be a program name with args.
 set dummy $ac_prog; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_prog_AWK+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -1529,25 +1947,27 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_prog_AWK="$ac_prog"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
 fi
 fi
 AWK=$ac_cv_prog_AWK
 if test -n "$AWK"; then
-  echo "$as_me:$LINENO: result: $AWK" >&5
-echo "${ECHO_T}$AWK" >&6
+  { echo "$as_me:$LINENO: result: $AWK" >&5
+echo "${ECHO_T}$AWK" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
   test -n "$AWK" && break
 done
 
@@ -1557,8 +1977,8 @@ done
 # perl
 # Extract the first word of "perl", so it can be a program name with args.
 set dummy perl; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_path_PERL+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -1574,13 +1994,14 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_path_PERL="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
   test -z "$ac_cv_path_PERL" && ac_cv_path_PERL="/usr/bin"
   ;;
@@ -1587,15 +2008,15 @@ done
 esac
 fi
 PERL=$ac_cv_path_PERL
-
 if test -n "$PERL"; then
-  echo "$as_me:$LINENO: result: $PERL" >&5
-echo "${ECHO_T}$PERL" >&6
+  { echo "$as_me:$LINENO: result: $PERL" >&5
+echo "${ECHO_T}$PERL" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
 if test ! -f "$PERL"; then
 	{ { echo "$as_me:$LINENO: error: Can't find perl" >&5
 echo "$as_me: error: Can't find perl" >&2;}
@@ -1607,16 +2028,16 @@ fi
 # tclsh
 # tclsh search path
 
-# Check whether --with-tcl-search-path or --without-tcl-search-path was given.
+# Check whether --with-tcl-search-path was given.
 if test "${with_tcl_search_path+set}" = set; then
-  withval="$with_tcl_search_path"
-  tcl_search_path=$withval
-fi;
+  withval=$with_tcl_search_path; tcl_search_path=$withval
+fi
+
 
 # Extract the first word of "tclsh", so it can be a program name with args.
 set dummy tclsh; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_path_TCLSH+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -1632,13 +2053,14 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_path_TCLSH="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
   test -z "$ac_cv_path_TCLSH" && ac_cv_path_TCLSH=":"
   ;;
@@ -1645,15 +2067,15 @@ done
 esac
 fi
 TCLSH=$ac_cv_path_TCLSH
-
 if test -n "$TCLSH"; then
-  echo "$as_me:$LINENO: result: $TCLSH" >&5
-echo "${ECHO_T}$TCLSH" >&6
+  { echo "$as_me:$LINENO: result: $TCLSH" >&5
+echo "${ECHO_T}$TCLSH" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
 if test ! -f "$TCLSH"; then
 	{ { echo "$as_me:$LINENO: error: Can't find tclsh" >&5
 echo "$as_me: error: Can't find tclsh" >&2;}
@@ -1673,8 +2095,8 @@ fi
 # bc
 # Extract the first word of "bc", so it can be a program name with args.
 set dummy bc; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_path_BC+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -1690,13 +2112,14 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_path_BC="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
   test -z "$ac_cv_path_BC" && ac_cv_path_BC="/usr/bin"
   ;;
@@ -1703,15 +2126,15 @@ done
 esac
 fi
 BC=$ac_cv_path_BC
-
 if test -n "$BC"; then
-  echo "$as_me:$LINENO: result: $BC" >&5
-echo "${ECHO_T}$BC" >&6
+  { echo "$as_me:$LINENO: result: $BC" >&5
+echo "${ECHO_T}$BC" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
 if test ! -f "$BC"; then
 	{ { echo "$as_me:$LINENO: error: Can't find bc" >&5
 echo "$as_me: error: Can't find bc" >&2;}
@@ -1721,8 +2144,8 @@ fi
 # wc
 # Extract the first word of "wc", so it can be a program name with args.
 set dummy wc; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_path_WC+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -1738,13 +2161,14 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_path_WC="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
   test -z "$ac_cv_path_WC" && ac_cv_path_WC="/usr/bin"
   ;;
@@ -1751,15 +2175,15 @@ done
 esac
 fi
 WC=$ac_cv_path_WC
-
 if test -n "$WC"; then
-  echo "$as_me:$LINENO: result: $WC" >&5
-echo "${ECHO_T}$WC" >&6
+  { echo "$as_me:$LINENO: result: $WC" >&5
+echo "${ECHO_T}$WC" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
 if test ! -f "$WC"; then
 	{ { echo "$as_me:$LINENO: error: Can't find wc" >&5
 echo "$as_me: error: Can't find wc" >&2;}
@@ -1770,58 +2194,29 @@ fi
 # festival
 # festival search path
 
-# Check whether --with-fest-search-path or --without-fest-search-path was given.
+# Check whether --with-fest-search-path was given.
 if test "${with_fest_search_path+set}" = set; then
-  withval="$with_fest_search_path"
-  fest_search_path=$withval
-fi;
+  withval=$with_fest_search_path; fest_search_path=$withval
+fi
 
+
+# comented because is not used in MARY HMM voices
 # dumpfeats (festival)
-# Extract the first word of "dumpfeats", so it can be a program name with args.
-set dummy dumpfeats; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
-if test "${ac_cv_path_DUMPFEATS+set}" = set; then
-  echo $ECHO_N "(cached) $ECHO_C" >&6
-else
-  case $DUMPFEATS in
-  [\\/]* | ?:[\\/]*)
-  ac_cv_path_DUMPFEATS="$DUMPFEATS" # Let the user override the test with a path.
-  ;;
-  *)
-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
-as_dummy="${fest_search_path}:$PATH"
-for as_dir in $as_dummy
-do
-  IFS=$as_save_IFS
-  test -z "$as_dir" && as_dir=.
-  for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
-    ac_cv_path_DUMPFEATS="$as_dir/$ac_word$ac_exec_ext"
-    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
-    break 2
-  fi
-done
-done
+#AC_PATH_PROG([DUMPFEATS], [dumpfeats], [:], [${fest_search_path}:$PATH])
+#if test ! -f "$DUMPFEATS"; then
+#	AC_MSG_ERROR(Can't find dumpfeats of festival)
+#fi
 
-  test -z "$ac_cv_path_DUMPFEATS" && ac_cv_path_DUMPFEATS=":"
-  ;;
-esac
-fi
-DUMPFEATS=$ac_cv_path_DUMPFEATS
+# Mary context features and language
 
-if test -n "$DUMPFEATS"; then
-  echo "$as_me:$LINENO: result: $DUMPFEATS" >&5
-echo "${ECHO_T}$DUMPFEATS" >&6
-else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+
+
+if test -z "$FEATURELIST"; then
+	FEATURELIST='data/feature_list.pl'
 fi
 
-if test ! -f "$DUMPFEATS"; then
-	{ { echo "$as_me:$LINENO: error: Can't find dumpfeats of festival" >&5
-echo "$as_me: error: Can't find dumpfeats of festival" >&2;}
-   { (exit 1); exit 1; }; }
+if test -z "$VOICELANG"; then
+	VOICELANG='en'
 fi
 
 
@@ -1829,17 +2226,17 @@ fi
 # SPTK commands
 # SPTK search path
 
-# Check whether --with-sptk-search-path or --without-sptk-search-path was given.
+# Check whether --with-sptk-search-path was given.
 if test "${with_sptk_search_path+set}" = set; then
-  withval="$with_sptk_search_path"
-  sptk_search_path=$withval
-fi;
+  withval=$with_sptk_search_path; sptk_search_path=$withval
+fi
+
 
 # swab
 # Extract the first word of "swab", so it can be a program name with args.
 set dummy swab; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_path_SWAB+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -1855,13 +2252,14 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_path_SWAB="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
   test -z "$ac_cv_path_SWAB" && ac_cv_path_SWAB=":"
   ;;
@@ -1868,15 +2266,15 @@ done
 esac
 fi
 SWAB=$ac_cv_path_SWAB
-
 if test -n "$SWAB"; then
-  echo "$as_me:$LINENO: result: $SWAB" >&5
-echo "${ECHO_T}$SWAB" >&6
+  { echo "$as_me:$LINENO: result: $SWAB" >&5
+echo "${ECHO_T}$SWAB" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
 if test ! -f "$SWAB"; then
 	{ { echo "$as_me:$LINENO: error: Can't find swab of SPTK" >&5
 echo "$as_me: error: Can't find swab of SPTK" >&2;}
@@ -1886,8 +2284,8 @@ fi
 # x2x
 # Extract the first word of "x2x", so it can be a program name with args.
 set dummy x2x; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_path_X2X+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -1903,13 +2301,14 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_path_X2X="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
   test -z "$ac_cv_path_X2X" && ac_cv_path_X2X=":"
   ;;
@@ -1916,15 +2315,15 @@ done
 esac
 fi
 X2X=$ac_cv_path_X2X
-
 if test -n "$X2X"; then
-  echo "$as_me:$LINENO: result: $X2X" >&5
-echo "${ECHO_T}$X2X" >&6
+  { echo "$as_me:$LINENO: result: $X2X" >&5
+echo "${ECHO_T}$X2X" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
 if test ! -f "$X2X"; then
 	{ { echo "$as_me:$LINENO: error: Can't find x2x of SPTK" >&5
 echo "$as_me: error: Can't find x2x of SPTK" >&2;}
@@ -1934,8 +2333,8 @@ fi
 # frame
 # Extract the first word of "frame", so it can be a program name with args.
 set dummy frame; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_path_FRAME+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -1951,13 +2350,14 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_path_FRAME="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
   test -z "$ac_cv_path_FRAME" && ac_cv_path_FRAME=":"
   ;;
@@ -1964,15 +2364,15 @@ done
 esac
 fi
 FRAME=$ac_cv_path_FRAME
-
 if test -n "$FRAME"; then
-  echo "$as_me:$LINENO: result: $FRAME" >&5
-echo "${ECHO_T}$FRAME" >&6
+  { echo "$as_me:$LINENO: result: $FRAME" >&5
+echo "${ECHO_T}$FRAME" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
 if test ! -f "$FRAME"; then
 	{ { echo "$as_me:$LINENO: error: Can't find frame of SPTK" >&5
 echo "$as_me: error: Can't find frame of SPTK" >&2;}
@@ -1982,8 +2382,8 @@ fi
 # window
 # Extract the first word of "window", so it can be a program name with args.
 set dummy window; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_path_WINDOW+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -1999,13 +2399,14 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_path_WINDOW="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
   test -z "$ac_cv_path_WINDOW" && ac_cv_path_WINDOW=":"
   ;;
@@ -2012,15 +2413,15 @@ done
 esac
 fi
 WINDOW=$ac_cv_path_WINDOW
-
 if test -n "$WINDOW"; then
-  echo "$as_me:$LINENO: result: $WINDOW" >&5
-echo "${ECHO_T}$WINDOW" >&6
+  { echo "$as_me:$LINENO: result: $WINDOW" >&5
+echo "${ECHO_T}$WINDOW" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
 if test ! -f "$WINDOW"; then
 	{ { echo "$as_me:$LINENO: error: Can't find window of SPTK" >&5
 echo "$as_me: error: Can't find window of SPTK" >&2;}
@@ -2031,8 +2432,8 @@ fi
 if test -z "$GAMMA"; then
 	# Extract the first word of "mcep", so it can be a program name with args.
 set dummy mcep; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_path_MGCEP+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -2048,13 +2449,14 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_path_MGCEP="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
   test -z "$ac_cv_path_MGCEP" && ac_cv_path_MGCEP=":"
   ;;
@@ -2061,15 +2463,15 @@ done
 esac
 fi
 MGCEP=$ac_cv_path_MGCEP
-
 if test -n "$MGCEP"; then
-  echo "$as_me:$LINENO: result: $MGCEP" >&5
-echo "${ECHO_T}$MGCEP" >&6
+  { echo "$as_me:$LINENO: result: $MGCEP" >&5
+echo "${ECHO_T}$MGCEP" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
 elif test $GAMMA -eq 0; then
 	# Extract the first word of "mcep", so it can be a program name with args.
 set dummy mcep; ac_word=$2
@@ -2073,8 +2475,8 @@ fi
 elif test $GAMMA -eq 0; then
 	# Extract the first word of "mcep", so it can be a program name with args.
 set dummy mcep; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_path_MGCEP+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -2090,13 +2492,14 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_path_MGCEP="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
   test -z "$ac_cv_path_MGCEP" && ac_cv_path_MGCEP=":"
   ;;
@@ -2103,15 +2506,15 @@ done
 esac
 fi
 MGCEP=$ac_cv_path_MGCEP
-
 if test -n "$MGCEP"; then
-  echo "$as_me:$LINENO: result: $MGCEP" >&5
-echo "${ECHO_T}$MGCEP" >&6
+  { echo "$as_me:$LINENO: result: $MGCEP" >&5
+echo "${ECHO_T}$MGCEP" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
 else
 	# Extract the first word of "mgcep", so it can be a program name with args.
 set dummy mgcep; ac_word=$2
@@ -2115,8 +2518,8 @@ fi
 else
 	# Extract the first word of "mgcep", so it can be a program name with args.
 set dummy mgcep; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_path_MGCEP+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -2132,13 +2535,14 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_path_MGCEP="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
   test -z "$ac_cv_path_MGCEP" && ac_cv_path_MGCEP=":"
   ;;
@@ -2145,15 +2549,15 @@ done
 esac
 fi
 MGCEP=$ac_cv_path_MGCEP
-
 if test -n "$MGCEP"; then
-  echo "$as_me:$LINENO: result: $MGCEP" >&5
-echo "${ECHO_T}$MGCEP" >&6
+  { echo "$as_me:$LINENO: result: $MGCEP" >&5
+echo "${ECHO_T}$MGCEP" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
 	if test ! -f "$MGCEP"; then
 		{ { echo "$as_me:$LINENO: error: Can't find mgcep of SPTK" >&5
 echo "$as_me: error: Can't find mgcep of SPTK" >&2;}
@@ -2171,11 +2575,110 @@ echo "$as_me: error: mgcep in SPTK versi
 	fi
 fi
 
+# gcep
+# Extract the first word of "gcep", so it can be a program name with args.
+set dummy gcep; ac_word=$2
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
+if test "${ac_cv_path_GCEP+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  case $GCEP in
+  [\\/]* | ?:[\\/]*)
+  ac_cv_path_GCEP="$GCEP" # Let the user override the test with a path.
+  ;;
+  *)
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+as_dummy="${sptk_search_path}:$PATH"
+for as_dir in $as_dummy
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_path_GCEP="$as_dir/$ac_word$ac_exec_ext"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+IFS=$as_save_IFS
+
+  test -z "$ac_cv_path_GCEP" && ac_cv_path_GCEP=":"
+  ;;
+esac
+fi
+GCEP=$ac_cv_path_GCEP
+if test -n "$GCEP"; then
+  { echo "$as_me:$LINENO: result: $GCEP" >&5
+echo "${ECHO_T}$GCEP" >&6; }
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+
+
+if test ! -f "$GCEP"; then
+	{ { echo "$as_me:$LINENO: error: Can't find gcep of SPTK" >&5
+echo "$as_me: error: Can't find gcep of SPTK" >&2;}
+   { (exit 1); exit 1; }; }
+fi
+
+# iglsadf
+# Extract the first word of "iglsadf", so it can be a program name with args.
+set dummy iglsadf; ac_word=$2
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
+if test "${ac_cv_path_IGLSADF+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  case $IGLSADF in
+  [\\/]* | ?:[\\/]*)
+  ac_cv_path_IGLSADF="$IGLSADF" # Let the user override the test with a path.
+  ;;
+  *)
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+as_dummy="${sptk_search_path}:$PATH"
+for as_dir in $as_dummy
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_path_IGLSADF="$as_dir/$ac_word$ac_exec_ext"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+IFS=$as_save_IFS
+
+  test -z "$ac_cv_path_IGLSADF" && ac_cv_path_IGLSADF=":"
+  ;;
+esac
+fi
+IGLSADF=$ac_cv_path_IGLSADF
+if test -n "$IGLSADF"; then
+  { echo "$as_me:$LINENO: result: $IGLSADF" >&5
+echo "${ECHO_T}$IGLSADF" >&6; }
+else
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
+fi
+
+
+if test ! -f "$IGLSADF"; then
+	{ { echo "$as_me:$LINENO: error: Can't find iglsadf of SPTK" >&5
+echo "$as_me: error: Can't find iglsadf of SPTK" >&2;}
+   { (exit 1); exit 1; }; }
+fi
+
+
 # lpc2lsp
 # Extract the first word of "lpc2lsp", so it can be a program name with args.
 set dummy lpc2lsp; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_path_LPC2LSP+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -2191,13 +2694,14 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_path_LPC2LSP="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
   test -z "$ac_cv_path_LPC2LSP" && ac_cv_path_LPC2LSP=":"
   ;;
@@ -2204,15 +2708,15 @@ done
 esac
 fi
 LPC2LSP=$ac_cv_path_LPC2LSP
-
 if test -n "$LPC2LSP"; then
-  echo "$as_me:$LINENO: result: $LPC2LSP" >&5
-echo "${ECHO_T}$LPC2LSP" >&6
+  { echo "$as_me:$LINENO: result: $LPC2LSP" >&5
+echo "${ECHO_T}$LPC2LSP" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
 if test ! -f "$LPC2LSP"; then
 	{ { echo "$as_me:$LINENO: error: Can't find lpc2lsp of SPTK" >&5
 echo "$as_me: error: Can't find lpc2lsp of SPTK" >&2;}
@@ -2232,8 +2736,8 @@ fi
 # nan
 # Extract the first word of "nan", so it can be a program name with args.
 set dummy nan; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_path_NAN+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -2249,13 +2753,14 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_path_NAN="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
   test -z "$ac_cv_path_NAN" && ac_cv_path_NAN=":"
   ;;
@@ -2262,15 +2767,15 @@ done
 esac
 fi
 NAN=$ac_cv_path_NAN
-
 if test -n "$NAN"; then
-  echo "$as_me:$LINENO: result: $NAN" >&5
-echo "${ECHO_T}$NAN" >&6
+  { echo "$as_me:$LINENO: result: $NAN" >&5
+echo "${ECHO_T}$NAN" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
 if test ! -f "$NAN"; then
 	{ { echo "$as_me:$LINENO: error: Can't find nan of SPTK" >&5
 echo "$as_me: error: Can't find nan of SPTK" >&2;}
@@ -2280,8 +2785,8 @@ fi
 # nrand
 # Extract the first word of "nrand", so it can be a program name with args.
 set dummy nrand; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_path_NRAND+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -2297,13 +2802,14 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_path_NRAND="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
   test -z "$ac_cv_path_NRAND" && ac_cv_path_NRAND=":"
   ;;
@@ -2310,15 +2816,15 @@ done
 esac
 fi
 NRAND=$ac_cv_path_NRAND
-
 if test -n "$NRAND"; then
-  echo "$as_me:$LINENO: result: $NRAND" >&5
-echo "${ECHO_T}$NRAND" >&6
+  { echo "$as_me:$LINENO: result: $NRAND" >&5
+echo "${ECHO_T}$NRAND" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
 	if test ! -f "$NRAND"; then
 { { echo "$as_me:$LINENO: error: Can't find nrand of SPTK" >&5
 echo "$as_me: error: Can't find nrand of SPTK" >&2;}
@@ -2338,8 +2844,8 @@ fi
 # vstat
 # Extract the first word of "vstat", so it can be a program name with args.
 set dummy vstat; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_path_VSTAT+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -2355,13 +2861,14 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_path_VSTAT="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
   test -z "$ac_cv_path_VSTAT" && ac_cv_path_VSTAT=":"
   ;;
@@ -2368,15 +2875,15 @@ done
 esac
 fi
 VSTAT=$ac_cv_path_VSTAT
-
 if test -n "$VSTAT"; then
-  echo "$as_me:$LINENO: result: $VSTAT" >&5
-echo "${ECHO_T}$VSTAT" >&6
+  { echo "$as_me:$LINENO: result: $VSTAT" >&5
+echo "${ECHO_T}$VSTAT" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
 if test ! -f "$VSTAT"; then
 	{ { echo "$as_me:$LINENO: error: Can't find vstat of SPTK" >&5
 echo "$as_me: error: Can't find vstat of SPTK" >&2;}
@@ -2386,8 +2893,8 @@ fi
 # step
 # Extract the first word of "step", so it can be a program name with args.
 set dummy step; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_path_STEP+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -2403,13 +2910,14 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_path_STEP="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
   test -z "$ac_cv_path_STEP" && ac_cv_path_STEP=":"
   ;;
@@ -2416,15 +2924,15 @@ done
 esac
 fi
 STEP=$ac_cv_path_STEP
-
 if test -n "$STEP"; then
-  echo "$as_me:$LINENO: result: $STEP" >&5
-echo "${ECHO_T}$STEP" >&6
+  { echo "$as_me:$LINENO: result: $STEP" >&5
+echo "${ECHO_T}$STEP" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
 if test ! -f "$STEP"; then
 	{ { echo "$as_me:$LINENO: error: Can't find step of SPTK" >&5
 echo "$as_me: error: Can't find step of SPTK" >&2;}
@@ -2444,8 +2952,8 @@ fi
 # sopr
 # Extract the first word of "sopr", so it can be a program name with args.
 set dummy sopr; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_path_SOPR+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -2461,13 +2969,14 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_path_SOPR="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
   test -z "$ac_cv_path_SOPR" && ac_cv_path_SOPR=":"
   ;;
@@ -2474,15 +2983,15 @@ done
 esac
 fi
 SOPR=$ac_cv_path_SOPR
-
 if test -n "$SOPR"; then
-  echo "$as_me:$LINENO: result: $SOPR" >&5
-echo "${ECHO_T}$SOPR" >&6
+  { echo "$as_me:$LINENO: result: $SOPR" >&5
+echo "${ECHO_T}$SOPR" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
 if test ! -f "$SOPR"; then
 	{ { echo "$as_me:$LINENO: error: Can't find sopr of SPTK" >&5
 echo "$as_me: error: Can't find sopr of SPTK" >&2;}
@@ -2492,8 +3001,8 @@ fi
 # vopr
 # Extract the first word of "vopr", so it can be a program name with args.
 set dummy vopr; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_path_VOPR+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -2509,13 +3018,14 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_path_VOPR="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
   test -z "$ac_cv_path_VOPR" && ac_cv_path_VOPR=":"
   ;;
@@ -2522,15 +3032,15 @@ done
 esac
 fi
 VOPR=$ac_cv_path_VOPR
-
 if test -n "$VOPR"; then
-  echo "$as_me:$LINENO: result: $VOPR" >&5
-echo "${ECHO_T}$VOPR" >&6
+  { echo "$as_me:$LINENO: result: $VOPR" >&5
+echo "${ECHO_T}$VOPR" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
 if test ! -f "$VOPR"; then
 	{ { echo "$as_me:$LINENO: error: Can't find vopr of SPTK" >&5
 echo "$as_me: error: Can't find vopr of SPTK" >&2;}
@@ -2540,8 +3050,8 @@ fi
 # freqt
 # Extract the first word of "freqt", so it can be a program name with args.
 set dummy freqt; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_path_FREQT+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -2557,13 +3067,14 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_path_FREQT="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
   test -z "$ac_cv_path_FREQT" && ac_cv_path_FREQT=":"
   ;;
@@ -2570,15 +3081,15 @@ done
 esac
 fi
 FREQT=$ac_cv_path_FREQT
-
 if test -n "$FREQT"; then
-  echo "$as_me:$LINENO: result: $FREQT" >&5
-echo "${ECHO_T}$FREQT" >&6
+  { echo "$as_me:$LINENO: result: $FREQT" >&5
+echo "${ECHO_T}$FREQT" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
 if test ! -f "$FREQT"; then
 	{ { echo "$as_me:$LINENO: error: Can't find freqt of SPTK" >&5
 echo "$as_me: error: Can't find freqt of SPTK" >&2;}
@@ -2588,8 +3099,8 @@ fi
 # c2acr
 # Extract the first word of "c2acr", so it can be a program name with args.
 set dummy c2acr; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_path_C2ACR+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -2605,13 +3116,14 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_path_C2ACR="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
   test -z "$ac_cv_path_C2ACR" && ac_cv_path_C2ACR=":"
   ;;
@@ -2618,15 +3130,15 @@ done
 esac
 fi
 C2ACR=$ac_cv_path_C2ACR
-
 if test -n "$C2ACR"; then
-  echo "$as_me:$LINENO: result: $C2ACR" >&5
-echo "${ECHO_T}$C2ACR" >&6
+  { echo "$as_me:$LINENO: result: $C2ACR" >&5
+echo "${ECHO_T}$C2ACR" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
 if test ! -f "$C2ACR"; then
 	{ { echo "$as_me:$LINENO: error: Can't find c2acr of SPTK" >&5
 echo "$as_me: error: Can't find c2acr of SPTK" >&2;}
@@ -2636,8 +3148,8 @@ fi
 # mc2b
 # Extract the first word of "mc2b", so it can be a program name with args.
 set dummy mc2b; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_path_MC2B+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -2653,13 +3165,14 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_path_MC2B="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
   test -z "$ac_cv_path_MC2B" && ac_cv_path_MC2B=":"
   ;;
@@ -2666,15 +3179,15 @@ done
 esac
 fi
 MC2B=$ac_cv_path_MC2B
-
 if test -n "$MC2B"; then
-  echo "$as_me:$LINENO: result: $MC2B" >&5
-echo "${ECHO_T}$MC2B" >&6
+  { echo "$as_me:$LINENO: result: $MC2B" >&5
+echo "${ECHO_T}$MC2B" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
 if test ! -f "$MC2B"; then
 	{ { echo "$as_me:$LINENO: error: Can't find mc2b of SPTK" >&5
 echo "$as_me: error: Can't find mc2b of SPTK" >&2;}
@@ -2684,8 +3197,8 @@ fi
 # b2mc
 # Extract the first word of "b2mc", so it can be a program name with args.
 set dummy b2mc; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_path_B2MC+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -2701,13 +3214,14 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_path_B2MC="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
   test -z "$ac_cv_path_B2MC" && ac_cv_path_B2MC=":"
   ;;
@@ -2714,15 +3228,15 @@ done
 esac
 fi
 B2MC=$ac_cv_path_B2MC
-
 if test -n "$B2MC"; then
-  echo "$as_me:$LINENO: result: $B2MC" >&5
-echo "${ECHO_T}$B2MC" >&6
+  { echo "$as_me:$LINENO: result: $B2MC" >&5
+echo "${ECHO_T}$B2MC" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
 if test ! -f "$B2MC"; then
 	{ { echo "$as_me:$LINENO: error: Can't find b2mc of SPTK" >&5
 echo "$as_me: error: Can't find b2mc of SPTK" >&2;}
@@ -2732,8 +3246,8 @@ fi
 # merge
 # Extract the first word of "merge", so it can be a program name with args.
 set dummy merge; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_path_MERGE+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -2749,13 +3263,14 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_path_MERGE="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
   test -z "$ac_cv_path_MERGE" && ac_cv_path_MERGE=":"
   ;;
@@ -2762,15 +3277,15 @@ done
 esac
 fi
 MERGE=$ac_cv_path_MERGE
-
 if test -n "$MERGE"; then
-  echo "$as_me:$LINENO: result: $MERGE" >&5
-echo "${ECHO_T}$MERGE" >&6
+  { echo "$as_me:$LINENO: result: $MERGE" >&5
+echo "${ECHO_T}$MERGE" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
 if test ! -f "$MERGE"; then
 	{ { echo "$as_me:$LINENO: error: Can't find merge of SPTK" >&5
 echo "$as_me: error: Can't find merge of SPTK" >&2;}
@@ -2790,8 +3305,8 @@ fi
 # bcp
 # Extract the first word of "bcp", so it can be a program name with args.
 set dummy bcp; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_path_BCP+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -2807,13 +3322,14 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_path_BCP="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
   test -z "$ac_cv_path_BCP" && ac_cv_path_BCP=":"
   ;;
@@ -2820,15 +3336,15 @@ done
 esac
 fi
 BCP=$ac_cv_path_BCP
-
 if test -n "$BCP"; then
-  echo "$as_me:$LINENO: result: $BCP" >&5
-echo "${ECHO_T}$BCP" >&6
+  { echo "$as_me:$LINENO: result: $BCP" >&5
+echo "${ECHO_T}$BCP" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
 if test ! -f "$BCP"; then
 	{ { echo "$as_me:$LINENO: error: Can't find bcp of SPTK" >&5
 echo "$as_me: error: Can't find bcp of SPTK" >&2;}
@@ -2838,8 +3354,8 @@ fi
 # excite
 # Extract the first word of "excite", so it can be a program name with args.
 set dummy excite; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_path_EXCITE+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -2855,13 +3371,14 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_path_EXCITE="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
   test -z "$ac_cv_path_EXCITE" && ac_cv_path_EXCITE=":"
   ;;
@@ -2868,15 +3385,15 @@ done
 esac
 fi
 EXCITE=$ac_cv_path_EXCITE
-
 if test -n "$EXCITE"; then
-  echo "$as_me:$LINENO: result: $EXCITE" >&5
-echo "${ECHO_T}$EXCITE" >&6
+  { echo "$as_me:$LINENO: result: $EXCITE" >&5
+echo "${ECHO_T}$EXCITE" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
 if test ! -f "$EXCITE"; then
 	{ { echo "$as_me:$LINENO: error: Can't find excite of SPTK" >&5
 echo "$as_me: error: Can't find excite of SPTK" >&2;}
@@ -2886,8 +3403,8 @@ fi
 # lsp2lpc
 # Extract the first word of "lsp2lpc", so it can be a program name with args.
 set dummy lsp2lpc; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_path_LSP2LPC+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -2903,13 +3420,14 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_path_LSP2LPC="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
   test -z "$ac_cv_path_LSP2LPC" && ac_cv_path_LSP2LPC=":"
   ;;
@@ -2916,15 +3434,15 @@ done
 esac
 fi
 LSP2LPC=$ac_cv_path_LSP2LPC
-
 if test -n "$LSP2LPC"; then
-  echo "$as_me:$LINENO: result: $LSP2LPC" >&5
-echo "${ECHO_T}$LSP2LPC" >&6
+  { echo "$as_me:$LINENO: result: $LSP2LPC" >&5
+echo "${ECHO_T}$LSP2LPC" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
 if test ! -f "$LSP2LPC"; then
 	{ { echo "$as_me:$LINENO: error: Can't find lsp2lpc of SPTK" >&5
 echo "$as_me: error: Can't find lsp2lpc of SPTK" >&2;}
@@ -2944,8 +3462,8 @@ fi
 # lspcheck
 # Extract the first word of "lspcheck", so it can be a program name with args.
 set dummy lspcheck; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_path_LSPCHECK+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -2961,13 +3479,14 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_path_LSPCHECK="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
   test -z "$ac_cv_path_LSPCHECK" && ac_cv_path_LSPCHECK=":"
   ;;
@@ -2974,15 +3493,15 @@ done
 esac
 fi
 LSPCHECK=$ac_cv_path_LSPCHECK
-
 if test -n "$LSPCHECK"; then
-  echo "$as_me:$LINENO: result: $LSPCHECK" >&5
-echo "${ECHO_T}$LSPCHECK" >&6
+  { echo "$as_me:$LINENO: result: $LSPCHECK" >&5
+echo "${ECHO_T}$LSPCHECK" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
 if test ! -f "$LSPCHECK"; then
 	{ { echo "$as_me:$LINENO: error: Can't find lspcheck of SPTK" >&5
 echo "$as_me: error: Can't find lspcheck of SPTK" >&2;}
@@ -2992,8 +3511,8 @@ fi
 # mgc2mgc
 # Extract the first word of "mgc2mgc", so it can be a program name with args.
 set dummy mgc2mgc; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_path_MGC2MGC+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -3009,13 +3528,14 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_path_MGC2MGC="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
   test -z "$ac_cv_path_MGC2MGC" && ac_cv_path_MGC2MGC=":"
   ;;
@@ -3022,15 +3542,15 @@ done
 esac
 fi
 MGC2MGC=$ac_cv_path_MGC2MGC
-
 if test -n "$MGC2MGC"; then
-  echo "$as_me:$LINENO: result: $MGC2MGC" >&5
-echo "${ECHO_T}$MGC2MGC" >&6
+  { echo "$as_me:$LINENO: result: $MGC2MGC" >&5
+echo "${ECHO_T}$MGC2MGC" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
 if test ! -f "$MGC2MGC"; then
 	{ { echo "$as_me:$LINENO: error: Can't find mgc2mgc of SPTK" >&5
 echo "$as_me: error: Can't find mgc2mgc of SPTK" >&2;}
@@ -3040,8 +3560,8 @@ fi
 # mglsadf
 # Extract the first word of "mglsadf", so it can be a program name with args.
 set dummy mglsadf; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_path_MGLSADF+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -3057,13 +3577,14 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_path_MGLSADF="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
   test -z "$ac_cv_path_MGLSADF" && ac_cv_path_MGLSADF=":"
   ;;
@@ -3070,15 +3591,15 @@ done
 esac
 fi
 MGLSADF=$ac_cv_path_MGLSADF
-
 if test -n "$MGLSADF"; then
-  echo "$as_me:$LINENO: result: $MGLSADF" >&5
-echo "${ECHO_T}$MGLSADF" >&6
+  { echo "$as_me:$LINENO: result: $MGLSADF" >&5
+echo "${ECHO_T}$MGLSADF" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
 if test ! -f "$MGLSADF"; then
 	{ { echo "$as_me:$LINENO: error: Can't find mglsadf of SPTK" >&5
 echo "$as_me: error: Can't find mglsadf of SPTK" >&2;}
@@ -3100,17 +3621,17 @@ fi
 # sox (Sound eXchange)
 # sox search path
 
-# Check whether --with-sox-search-path or --without-sox-search-path was given.
+# Check whether --with-sox-search-path was given.
 if test "${with_sox_search_path+set}" = set; then
-  withval="$with_sox_search_path"
-  sox_search_path=$withval
-fi;
+  withval=$with_sox_search_path; sox_search_path=$withval
+fi
+
 
 # sox
 # Extract the first word of "sox", so it can be a program name with args.
 set dummy sox; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_path_SOX+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -3126,13 +3647,14 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_path_SOX="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
   test -z "$ac_cv_path_SOX" && ac_cv_path_SOX=":"
   ;;
@@ -3139,15 +3661,15 @@ done
 esac
 fi
 SOX=$ac_cv_path_SOX
-
 if test -n "$SOX"; then
-  echo "$as_me:$LINENO: result: $SOX" >&5
-echo "${ECHO_T}$SOX" >&6
+  { echo "$as_me:$LINENO: result: $SOX" >&5
+echo "${ECHO_T}$SOX" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
 if test ! -f "$SOX"; then
 	{ { echo "$as_me:$LINENO: error: Can't find sox" >&5
 echo "$as_me: error: Can't find sox" >&2;}
@@ -3159,17 +3681,17 @@ fi
 # HTS commands
 # HTS search path
 
-# Check whether --with-hts-search-path or --without-hts-search-path was given.
+# Check whether --with-hts-search-path was given.
 if test "${with_hts_search_path+set}" = set; then
-  withval="$with_hts_search_path"
-  hts_search_path=$withval
-fi;
+  withval=$with_hts_search_path; hts_search_path=$withval
+fi
+
 
 # HMGenS
 # Extract the first word of "HMGenS", so it can be a program name with args.
 set dummy HMGenS; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_path_HMGENS+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -3185,13 +3707,14 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_path_HMGENS="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
   test -z "$ac_cv_path_HMGENS" && ac_cv_path_HMGENS=":"
   ;;
@@ -3198,15 +3721,15 @@ done
 esac
 fi
 HMGENS=$ac_cv_path_HMGENS
-
 if test -n "$HMGENS"; then
-  echo "$as_me:$LINENO: result: $HMGENS" >&5
-echo "${ECHO_T}$HMGENS" >&6
+  { echo "$as_me:$LINENO: result: $HMGENS" >&5
+echo "${ECHO_T}$HMGENS" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
 if test ! -f "$HMGENS"; then
 	{ { echo "$as_me:$LINENO: error: Can't find HMGenS of HTS" >&5
 echo "$as_me: error: Can't find HMGenS of HTS" >&2;}
@@ -3216,8 +3739,8 @@ fi
 # HCompV
 # Extract the first word of "HCompV", so it can be a program name with args.
 set dummy HCompV; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_path_HCOMPV+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -3233,13 +3756,14 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_path_HCOMPV="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
   test -z "$ac_cv_path_HCOMPV" && ac_cv_path_HCOMPV=":"
   ;;
@@ -3246,15 +3770,15 @@ done
 esac
 fi
 HCOMPV=$ac_cv_path_HCOMPV
-
 if test -n "$HCOMPV"; then
-  echo "$as_me:$LINENO: result: $HCOMPV" >&5
-echo "${ECHO_T}$HCOMPV" >&6
+  { echo "$as_me:$LINENO: result: $HCOMPV" >&5
+echo "${ECHO_T}$HCOMPV" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
 if test ! -f "$HCOMPV"; then
 	{ { echo "$as_me:$LINENO: error: Can't find HCompV of HTS" >&5
 echo "$as_me: error: Can't find HCompV of HTS" >&2;}
@@ -3264,8 +3788,8 @@ fi
 # HInit
 # Extract the first word of "HInit", so it can be a program name with args.
 set dummy HInit; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_path_HINIT+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -3281,13 +3805,14 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_path_HINIT="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
   test -z "$ac_cv_path_HINIT" && ac_cv_path_HINIT=":"
   ;;
@@ -3294,15 +3819,15 @@ done
 esac
 fi
 HINIT=$ac_cv_path_HINIT
-
 if test -n "$HINIT"; then
-  echo "$as_me:$LINENO: result: $HINIT" >&5
-echo "${ECHO_T}$HINIT" >&6
+  { echo "$as_me:$LINENO: result: $HINIT" >&5
+echo "${ECHO_T}$HINIT" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
 if test ! -f "$HINIT"; then
 	{ { echo "$as_me:$LINENO: error: Can't find HInit of HTS" >&5
 echo "$as_me: error: Can't find HInit of HTS" >&2;}
@@ -3312,8 +3837,8 @@ fi
 # HRest
 # Extract the first word of "HRest", so it can be a program name with args.
 set dummy HRest; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_path_HREST+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -3329,13 +3854,14 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_path_HREST="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
   test -z "$ac_cv_path_HREST" && ac_cv_path_HREST=":"
   ;;
@@ -3342,15 +3868,15 @@ done
 esac
 fi
 HREST=$ac_cv_path_HREST
-
 if test -n "$HREST"; then
-  echo "$as_me:$LINENO: result: $HREST" >&5
-echo "${ECHO_T}$HREST" >&6
+  { echo "$as_me:$LINENO: result: $HREST" >&5
+echo "${ECHO_T}$HREST" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
 if test ! -f "$HREST"; then
 	{ { echo "$as_me:$LINENO: error: Can't find HRest of HTS" >&5
 echo "$as_me: error: Can't find HRest of HTS" >&2;}
@@ -3360,8 +3886,8 @@ fi
 # HERest
 # Extract the first word of "HERest", so it can be a program name with args.
 set dummy HERest; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_path_HEREST+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -3377,13 +3903,14 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_path_HEREST="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
   test -z "$ac_cv_path_HEREST" && ac_cv_path_HEREST=":"
   ;;
@@ -3390,15 +3917,15 @@ done
 esac
 fi
 HEREST=$ac_cv_path_HEREST
-
 if test -n "$HEREST"; then
-  echo "$as_me:$LINENO: result: $HEREST" >&5
-echo "${ECHO_T}$HEREST" >&6
+  { echo "$as_me:$LINENO: result: $HEREST" >&5
+echo "${ECHO_T}$HEREST" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
 if test ! -f "$HEREST"; then
 	{ { echo "$as_me:$LINENO: error: Can't find HERest of HTS" >&5
 echo "$as_me: error: Can't find HERest of HTS" >&2;}
@@ -3408,8 +3935,8 @@ fi
 # HHEd
 # Extract the first word of "HHEd", so it can be a program name with args.
 set dummy HHEd; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_path_HHED+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -3425,13 +3952,14 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_path_HHED="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
   test -z "$ac_cv_path_HHED" && ac_cv_path_HHED=":"
   ;;
@@ -3438,15 +3966,15 @@ done
 esac
 fi
 HHED=$ac_cv_path_HHED
-
 if test -n "$HHED"; then
-  echo "$as_me:$LINENO: result: $HHED" >&5
-echo "${ECHO_T}$HHED" >&6
+  { echo "$as_me:$LINENO: result: $HHED" >&5
+echo "${ECHO_T}$HHED" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
 if test ! -f "$HHED"; then
 	{ { echo "$as_me:$LINENO: error: Can't find HHEd of HTS" >&5
 echo "$as_me: error: Can't find HHEd of HTS" >&2;}
@@ -3458,17 +3986,17 @@ fi
 # hts_engine API
 # hts_engine search path
 
-# Check whether --with-hts-engine-search-path or --without-hts-engine-search-path was given.
+# Check whether --with-hts-engine-search-path was given.
 if test "${with_hts_engine_search_path+set}" = set; then
-  withval="$with_hts_engine_search_path"
-  hts_engine_search_path=$withval
-fi;
+  withval=$with_hts_engine_search_path; hts_engine_search_path=$withval
+fi
+
 
 # hts_engine
 # Extract the first word of "hts_engine", so it can be a program name with args.
 set dummy hts_engine; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_path_ENGINE+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -3484,13 +4012,14 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_path_ENGINE="$as_dir/$ac_word$ac_exec_ext"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
   test -z "$ac_cv_path_ENGINE" && ac_cv_path_ENGINE=":"
   ;;
@@ -3497,15 +4026,15 @@ done
 esac
 fi
 ENGINE=$ac_cv_path_ENGINE
-
 if test -n "$ENGINE"; then
-  echo "$as_me:$LINENO: result: $ENGINE" >&5
-echo "${ECHO_T}$ENGINE" >&6
+  { echo "$as_me:$LINENO: result: $ENGINE" >&5
+echo "${ECHO_T}$ENGINE" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
 if test ! -f "$ENGINE"; then
 	{ { echo "$as_me:$LINENO: error: Can't find hts_engine" >&5
 echo "$as_me: error: Can't find hts_engine" >&2;}
@@ -3533,8 +4062,8 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu
 if test -n "$ac_tool_prefix"; then
   # Extract the first word of "${ac_tool_prefix}gcc", so it can be a program name with args.
 set dummy ${ac_tool_prefix}gcc; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_prog_CC+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -3547,25 +4076,27 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_prog_CC="${ac_tool_prefix}gcc"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
 fi
 fi
 CC=$ac_cv_prog_CC
 if test -n "$CC"; then
-  echo "$as_me:$LINENO: result: $CC" >&5
-echo "${ECHO_T}$CC" >&6
+  { echo "$as_me:$LINENO: result: $CC" >&5
+echo "${ECHO_T}$CC" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
 fi
 if test -z "$ac_cv_prog_CC"; then
   ac_ct_CC=$CC
@@ -3571,8 +4102,8 @@ if test -z "$ac_cv_prog_CC"; then
   ac_ct_CC=$CC
   # Extract the first word of "gcc", so it can be a program name with args.
 set dummy gcc; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_prog_ac_ct_CC+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -3585,26 +4116,41 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_prog_ac_ct_CC="gcc"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
 fi
 fi
 ac_ct_CC=$ac_cv_prog_ac_ct_CC
 if test -n "$ac_ct_CC"; then
-  echo "$as_me:$LINENO: result: $ac_ct_CC" >&5
-echo "${ECHO_T}$ac_ct_CC" >&6
+  { echo "$as_me:$LINENO: result: $ac_ct_CC" >&5
+echo "${ECHO_T}$ac_ct_CC" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+  if test "x$ac_ct_CC" = x; then
+    CC=""
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ echo "$as_me:$LINENO: WARNING: In the future, Autoconf will not detect cross-tools
+whose name does not start with the host triplet.  If you think this
+configuration is useful to you, please write to autoconf@gnu.org." >&5
+echo "$as_me: WARNING: In the future, Autoconf will not detect cross-tools
+whose name does not start with the host triplet.  If you think this
+configuration is useful to you, please write to autoconf@gnu.org." >&2;}
+ac_tool_warned=yes ;;
+esac
   CC=$ac_ct_CC
+  fi
 else
   CC="$ac_cv_prog_CC"
 fi
@@ -3613,8 +4159,8 @@ if test -z "$CC"; then
   if test -n "$ac_tool_prefix"; then
   # Extract the first word of "${ac_tool_prefix}cc", so it can be a program name with args.
 set dummy ${ac_tool_prefix}cc; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_prog_CC+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -3627,68 +4173,28 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_prog_CC="${ac_tool_prefix}cc"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
 fi
 fi
 CC=$ac_cv_prog_CC
 if test -n "$CC"; then
-  echo "$as_me:$LINENO: result: $CC" >&5
-echo "${ECHO_T}$CC" >&6
+  { echo "$as_me:$LINENO: result: $CC" >&5
+echo "${ECHO_T}$CC" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
-fi
-if test -z "$ac_cv_prog_CC"; then
-  ac_ct_CC=$CC
-  # Extract the first word of "cc", so it can be a program name with args.
-set dummy cc; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
-if test "${ac_cv_prog_ac_ct_CC+set}" = set; then
-  echo $ECHO_N "(cached) $ECHO_C" >&6
-else
-  if test -n "$ac_ct_CC"; then
-  ac_cv_prog_ac_ct_CC="$ac_ct_CC" # Let the user override the test.
-else
-as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
-for as_dir in $PATH
-do
-  IFS=$as_save_IFS
-  test -z "$as_dir" && as_dir=.
-  for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
-    ac_cv_prog_ac_ct_CC="cc"
-    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
-    break 2
-  fi
-done
-done
-
-fi
-fi
-ac_ct_CC=$ac_cv_prog_ac_ct_CC
-if test -n "$ac_ct_CC"; then
-  echo "$as_me:$LINENO: result: $ac_ct_CC" >&5
-echo "${ECHO_T}$ac_ct_CC" >&6
-else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
-fi
 
-  CC=$ac_ct_CC
-else
-  CC="$ac_cv_prog_CC"
 fi
-
 fi
 if test -z "$CC"; then
   # Extract the first word of "cc", so it can be a program name with args.
@@ -3693,8 +4199,8 @@ fi
 if test -z "$CC"; then
   # Extract the first word of "cc", so it can be a program name with args.
 set dummy cc; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_prog_CC+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -3708,7 +4214,7 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     if test "$as_dir/$ac_word$ac_exec_ext" = "/usr/ucb/cc"; then
        ac_prog_rejected=yes
        continue
@@ -3719,6 +4225,7 @@ do
   fi
 done
 done
+IFS=$as_save_IFS
 
 if test $ac_prog_rejected = yes; then
   # We found a bogon in the path, so make sure we never use it.
@@ -3736,13 +4243,14 @@ fi
 fi
 CC=$ac_cv_prog_CC
 if test -n "$CC"; then
-  echo "$as_me:$LINENO: result: $CC" >&5
-echo "${ECHO_T}$CC" >&6
+  { echo "$as_me:$LINENO: result: $CC" >&5
+echo "${ECHO_T}$CC" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
 fi
 if test -z "$CC"; then
   if test -n "$ac_tool_prefix"; then
@@ -3746,12 +4254,12 @@ fi
 fi
 if test -z "$CC"; then
   if test -n "$ac_tool_prefix"; then
-  for ac_prog in cl
+  for ac_prog in cl.exe
   do
     # Extract the first word of "$ac_tool_prefix$ac_prog", so it can be a program name with args.
 set dummy $ac_tool_prefix$ac_prog; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_prog_CC+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -3764,25 +4272,27 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_prog_CC="$ac_tool_prefix$ac_prog"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
 fi
 fi
 CC=$ac_cv_prog_CC
 if test -n "$CC"; then
-  echo "$as_me:$LINENO: result: $CC" >&5
-echo "${ECHO_T}$CC" >&6
+  { echo "$as_me:$LINENO: result: $CC" >&5
+echo "${ECHO_T}$CC" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
     test -n "$CC" && break
   done
 fi
@@ -3788,12 +4298,12 @@ fi
 fi
 if test -z "$CC"; then
   ac_ct_CC=$CC
-  for ac_prog in cl
+  for ac_prog in cl.exe
 do
   # Extract the first word of "$ac_prog", so it can be a program name with args.
 set dummy $ac_prog; ac_word=$2
-echo "$as_me:$LINENO: checking for $ac_word" >&5
-echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6; }
 if test "${ac_cv_prog_ac_ct_CC+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -3806,25 +4316,27 @@ do
   IFS=$as_save_IFS
   test -z "$as_dir" && as_dir=.
   for ac_exec_ext in '' $ac_executable_extensions; do
-  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
     ac_cv_prog_ac_ct_CC="$ac_prog"
     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
     break 2
   fi
 done
 done
+IFS=$as_save_IFS
 
 fi
 fi
 ac_ct_CC=$ac_cv_prog_ac_ct_CC
 if test -n "$ac_ct_CC"; then
-  echo "$as_me:$LINENO: result: $ac_ct_CC" >&5
-echo "${ECHO_T}$ac_ct_CC" >&6
+  { echo "$as_me:$LINENO: result: $ac_ct_CC" >&5
+echo "${ECHO_T}$ac_ct_CC" >&6; }
 else
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
+  { echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6; }
 fi
 
+
   test -n "$ac_ct_CC" && break
 done
 
@@ -3828,8 +4340,22 @@ fi
   test -n "$ac_ct_CC" && break
 done
 
+  if test "x$ac_ct_CC" = x; then
+    CC=""
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ echo "$as_me:$LINENO: WARNING: In the future, Autoconf will not detect cross-tools
+whose name does not start with the host triplet.  If you think this
+configuration is useful to you, please write to autoconf@gnu.org." >&5
+echo "$as_me: WARNING: In the future, Autoconf will not detect cross-tools
+whose name does not start with the host triplet.  If you think this
+configuration is useful to you, please write to autoconf@gnu.org." >&2;}
+ac_tool_warned=yes ;;
+esac
   CC=$ac_ct_CC
 fi
+fi
 
 fi
 
@@ -3841,21 +4367,35 @@ See \`config.log' for more details." >&2
    { (exit 1); exit 1; }; }
 
 # Provide some information about the compiler.
-echo "$as_me:$LINENO:" \
-     "checking for C compiler version" >&5
+echo "$as_me:$LINENO: checking for C compiler version" >&5
 ac_compiler=`set X $ac_compile; echo $2`
-{ (eval echo "$as_me:$LINENO: \"$ac_compiler --version </dev/null >&5\"") >&5
-  (eval $ac_compiler --version </dev/null >&5) 2>&5
+{ (ac_try="$ac_compiler --version >&5"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_compiler --version >&5") 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }
-{ (eval echo "$as_me:$LINENO: \"$ac_compiler -v </dev/null >&5\"") >&5
-  (eval $ac_compiler -v </dev/null >&5) 2>&5
+{ (ac_try="$ac_compiler -v >&5"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_compiler -v >&5") 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }
-{ (eval echo "$as_me:$LINENO: \"$ac_compiler -V </dev/null >&5\"") >&5
-  (eval $ac_compiler -V </dev/null >&5) 2>&5
+{ (ac_try="$ac_compiler -V >&5"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_compiler -V >&5") 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }
@@ -3880,47 +4420,77 @@ ac_clean_files="$ac_clean_files a.out a.
 # Try to create an executable without -o first, disregard a.out.
 # It will help us diagnose broken compilers, and finding out an intuition
 # of exeext.
-echo "$as_me:$LINENO: checking for C compiler default output file name" >&5
-echo $ECHO_N "checking for C compiler default output file name... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for C compiler default output file name" >&5
+echo $ECHO_N "checking for C compiler default output file name... $ECHO_C" >&6; }
 ac_link_default=`echo "$ac_link" | sed 's/ -o *conftest[^ ]*//'`
-if { (eval echo "$as_me:$LINENO: \"$ac_link_default\"") >&5
-  (eval $ac_link_default) 2>&5
+#
+# List of possible output files, starting from the most likely.
+# The algorithm is not robust to junk in `.', hence go to wildcards (a.*)
+# only as a last resort.  b.out is created by i960 compilers.
+ac_files='a_out.exe a.exe conftest.exe a.out conftest a.* conftest.* b.out'
+#
+# The IRIX 6 linker writes into existing files which may not be
+# executable, retaining their permissions.  Remove them first so a
+# subsequent execution test works.
+ac_rmfiles=
+for ac_file in $ac_files
+do
+  case $ac_file in
+    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.o | *.obj ) ;;
+    * ) ac_rmfiles="$ac_rmfiles $ac_file";;
+  esac
+done
+rm -f $ac_rmfiles
+
+if { (ac_try="$ac_link_default"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link_default") 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }; then
-  # Find the output, starting from the most likely.  This scheme is
-# not robust to junk in `.', hence go to wildcards (a.*) only as a last
-# resort.
-
-# Be careful to initialize this variable, since it used to be cached.
-# Otherwise an old cache value of `no' led to `EXEEXT = no' in a Makefile.
-ac_cv_exeext=
-# b.out is created by i960 compilers.
-for ac_file in a_out.exe a.exe conftest.exe a.out conftest a.* conftest.* b.out
+  # Autoconf-2.13 could set the ac_cv_exeext variable to `no'.
+# So ignore a value of `no', otherwise this would lead to `EXEEXT = no'
+# in a Makefile.  We should not override ac_cv_exeext if it was cached,
+# so that the user can short-circuit this test for compilers unknown to
+# Autoconf.
+for ac_file in $ac_files ''
 do
   test -f "$ac_file" || continue
   case $ac_file in
-    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.o | *.obj )
-	;;
-    conftest.$ac_ext )
-	# This is the source file.
+    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.o | *.obj )
 	;;
     [ab].out )
 	# We found the default executable, but exeext='' is most
 	# certainly right.
 	break;;
     *.* )
+        if test "${ac_cv_exeext+set}" = set && test "$ac_cv_exeext" != no;
+	then :; else
 	ac_cv_exeext=`expr "$ac_file" : '[^.]*\(\..*\)'`
-	# FIXME: I believe we export ac_cv_exeext for Libtool,
-	# but it would be cool to find out if it's true.  Does anybody
-	# maintain Libtool? --akim.
-	export ac_cv_exeext
+	fi
+	# We set ac_cv_exeext here because the later test for it is not
+	# safe: cross compilers may not add the suffix if given an `-o'
+	# argument, so we may need to know it at that point already.
+	# Even if this section looks crufty: it has the advantage of
+	# actually working.
 	break;;
     * )
 	break;;
   esac
 done
+test "$ac_cv_exeext" = no && ac_cv_exeext=
+
 else
+  ac_file=''
+fi
+
+{ echo "$as_me:$LINENO: result: $ac_file" >&5
+echo "${ECHO_T}$ac_file" >&6; }
+if test -z "$ac_file"; then
   echo "$as_me: failed program was:" >&5
 sed 's/^/| /' conftest.$ac_ext >&5
 
@@ -3932,19 +4502,21 @@ See \`config.log' for more details." >&2
 fi
 
 ac_exeext=$ac_cv_exeext
-echo "$as_me:$LINENO: result: $ac_file" >&5
-echo "${ECHO_T}$ac_file" >&6
 
-# Check the compiler produces executables we can run.  If not, either
+# Check that the compiler produces executables we can run.  If not, either
 # the compiler is broken, or we cross compile.
-echo "$as_me:$LINENO: checking whether the C compiler works" >&5
-echo $ECHO_N "checking whether the C compiler works... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking whether the C compiler works" >&5
+echo $ECHO_N "checking whether the C compiler works... $ECHO_C" >&6; }
 # FIXME: These cross compiler hacks should be removed for Autoconf 3.0
 # If not cross compiling, check that we can run a simple program.
 if test "$cross_compiling" != yes; then
   if { ac_try='./$ac_file'
-  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
-  (eval $ac_try) 2>&5
+  { (case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_try") 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }; }; then
@@ -3963,22 +4535,27 @@ See \`config.log' for more details." >&2
     fi
   fi
 fi
-echo "$as_me:$LINENO: result: yes" >&5
-echo "${ECHO_T}yes" >&6
+{ echo "$as_me:$LINENO: result: yes" >&5
+echo "${ECHO_T}yes" >&6; }
 
 rm -f a.out a.exe conftest$ac_cv_exeext b.out
 ac_clean_files=$ac_clean_files_save
-# Check the compiler produces executables we can run.  If not, either
+# Check that the compiler produces executables we can run.  If not, either
 # the compiler is broken, or we cross compile.
-echo "$as_me:$LINENO: checking whether we are cross compiling" >&5
-echo $ECHO_N "checking whether we are cross compiling... $ECHO_C" >&6
-echo "$as_me:$LINENO: result: $cross_compiling" >&5
-echo "${ECHO_T}$cross_compiling" >&6
-
-echo "$as_me:$LINENO: checking for suffix of executables" >&5
-echo $ECHO_N "checking for suffix of executables... $ECHO_C" >&6
-if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
-  (eval $ac_link) 2>&5
+{ echo "$as_me:$LINENO: checking whether we are cross compiling" >&5
+echo $ECHO_N "checking whether we are cross compiling... $ECHO_C" >&6; }
+{ echo "$as_me:$LINENO: result: $cross_compiling" >&5
+echo "${ECHO_T}$cross_compiling" >&6; }
+
+{ echo "$as_me:$LINENO: checking for suffix of executables" >&5
+echo $ECHO_N "checking for suffix of executables... $ECHO_C" >&6; }
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }; then
@@ -3989,9 +4566,8 @@ if { (eval echo "$as_me:$LINENO: \"$ac_l
 for ac_file in conftest.exe conftest conftest.*; do
   test -f "$ac_file" || continue
   case $ac_file in
-    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.o | *.obj ) ;;
+    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.o | *.obj ) ;;
     *.* ) ac_cv_exeext=`expr "$ac_file" : '[^.]*\(\..*\)'`
-	  export ac_cv_exeext
 	  break;;
     * ) break;;
   esac
@@ -4005,14 +4581,14 @@ See \`config.log' for more details." >&2
 fi
 
 rm -f conftest$ac_cv_exeext
-echo "$as_me:$LINENO: result: $ac_cv_exeext" >&5
-echo "${ECHO_T}$ac_cv_exeext" >&6
+{ echo "$as_me:$LINENO: result: $ac_cv_exeext" >&5
+echo "${ECHO_T}$ac_cv_exeext" >&6; }
 
 rm -f conftest.$ac_ext
 EXEEXT=$ac_cv_exeext
 ac_exeext=$EXEEXT
-echo "$as_me:$LINENO: checking for suffix of object files" >&5
-echo $ECHO_N "checking for suffix of object files... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking for suffix of object files" >&5
+echo $ECHO_N "checking for suffix of object files... $ECHO_C" >&6; }
 if test "${ac_cv_objext+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -4032,14 +4608,20 @@ main ()
 }
 _ACEOF
 rm -f conftest.o conftest.obj
-if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
-  (eval $ac_compile) 2>&5
+if { (ac_try="$ac_compile"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_compile") 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }; then
-  for ac_file in `(ls conftest.o conftest.obj; ls conftest.*) 2>/dev/null`; do
+  for ac_file in conftest.o conftest.obj conftest.*; do
+  test -f "$ac_file" || continue;
   case $ac_file in
-    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg ) ;;
+    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf ) ;;
     *) ac_cv_objext=`expr "$ac_file" : '.*\.\(.*\)'`
        break;;
   esac
@@ -4057,12 +4639,12 @@ fi
 
 rm -f conftest.$ac_cv_objext conftest.$ac_ext
 fi
-echo "$as_me:$LINENO: result: $ac_cv_objext" >&5
-echo "${ECHO_T}$ac_cv_objext" >&6
+{ echo "$as_me:$LINENO: result: $ac_cv_objext" >&5
+echo "${ECHO_T}$ac_cv_objext" >&6; }
 OBJEXT=$ac_cv_objext
 ac_objext=$OBJEXT
-echo "$as_me:$LINENO: checking whether we are using the GNU C compiler" >&5
-echo $ECHO_N "checking whether we are using the GNU C compiler... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking whether we are using the GNU C compiler" >&5
+echo $ECHO_N "checking whether we are using the GNU C compiler... $ECHO_C" >&6; }
 if test "${ac_cv_c_compiler_gnu+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -4085,27 +4667,22 @@ main ()
 }
 _ACEOF
 rm -f conftest.$ac_objext
-if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
-  (eval $ac_compile) 2>conftest.er1
+if { (ac_try="$ac_compile"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_compile") 2>conftest.er1
   ac_status=$?
   grep -v '^ *+' conftest.er1 >conftest.err
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"
-			 || test ! -s conftest.err'
-  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
-  (eval $ac_try) 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; } &&
-	 { ac_try='test -s conftest.$ac_objext'
-  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
-  (eval $ac_try) 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; }; then
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest.$ac_objext; then
   ac_compiler_gnu=yes
 else
   echo "$as_me: failed program was:" >&5
@@ -4113,21 +4690,25 @@ sed 's/^/| /' conftest.$ac_ext >&5
 
 ac_compiler_gnu=no
 fi
-rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
+
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
 ac_cv_c_compiler_gnu=$ac_compiler_gnu
 
 fi
-echo "$as_me:$LINENO: result: $ac_cv_c_compiler_gnu" >&5
-echo "${ECHO_T}$ac_cv_c_compiler_gnu" >&6
+{ echo "$as_me:$LINENO: result: $ac_cv_c_compiler_gnu" >&5
+echo "${ECHO_T}$ac_cv_c_compiler_gnu" >&6; }
 GCC=`test $ac_compiler_gnu = yes && echo yes`
 ac_test_CFLAGS=${CFLAGS+set}
 ac_save_CFLAGS=$CFLAGS
-CFLAGS="-g"
-echo "$as_me:$LINENO: checking whether $CC accepts -g" >&5
-echo $ECHO_N "checking whether $CC accepts -g... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking whether $CC accepts -g" >&5
+echo $ECHO_N "checking whether $CC accepts -g... $ECHO_C" >&6; }
 if test "${ac_cv_prog_cc_g+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
+  ac_save_c_werror_flag=$ac_c_werror_flag
+   ac_c_werror_flag=yes
+   ac_cv_prog_cc_g=no
+   CFLAGS="-g"
   cat >conftest.$ac_ext <<_ACEOF
 /* confdefs.h.  */
 _ACEOF
@@ -4144,38 +4725,118 @@ main ()
 }
 _ACEOF
 rm -f conftest.$ac_objext
-if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
-  (eval $ac_compile) 2>conftest.er1
+if { (ac_try="$ac_compile"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_compile") 2>conftest.er1
   ac_status=$?
   grep -v '^ *+' conftest.er1 >conftest.err
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"
-			 || test ! -s conftest.err'
-  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
-  (eval $ac_try) 2>&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest.$ac_objext; then
+  ac_cv_prog_cc_g=yes
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	CFLAGS=""
+      cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext
+if { (ac_try="$ac_compile"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_compile") 2>conftest.er1
   ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; } &&
-	 { ac_try='test -s conftest.$ac_objext'
-  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
-  (eval $ac_try) 2>&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest.$ac_objext; then
+  :
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	ac_c_werror_flag=$ac_save_c_werror_flag
+	 CFLAGS="-g"
+	 cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext
+if { (ac_try="$ac_compile"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_compile") 2>conftest.er1
   ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; }; then
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest.$ac_objext; then
   ac_cv_prog_cc_g=yes
 else
   echo "$as_me: failed program was:" >&5
 sed 's/^/| /' conftest.$ac_ext >&5
 
-ac_cv_prog_cc_g=no
+
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
 fi
-rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
+
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
 fi
-echo "$as_me:$LINENO: result: $ac_cv_prog_cc_g" >&5
-echo "${ECHO_T}$ac_cv_prog_cc_g" >&6
+
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+   ac_c_werror_flag=$ac_save_c_werror_flag
+fi
+{ echo "$as_me:$LINENO: result: $ac_cv_prog_cc_g" >&5
+echo "${ECHO_T}$ac_cv_prog_cc_g" >&6; }
 if test "$ac_test_CFLAGS" = set; then
   CFLAGS=$ac_save_CFLAGS
 elif test $ac_cv_prog_cc_g = yes; then
@@ -4191,12 +4852,12 @@ else
     CFLAGS=
   fi
 fi
-echo "$as_me:$LINENO: checking for $CC option to accept ANSI C" >&5
-echo $ECHO_N "checking for $CC option to accept ANSI C... $ECHO_C" >&6
-if test "${ac_cv_prog_cc_stdc+set}" = set; then
+{ echo "$as_me:$LINENO: checking for $CC option to accept ISO C89" >&5
+echo $ECHO_N "checking for $CC option to accept ISO C89... $ECHO_C" >&6; }
+if test "${ac_cv_prog_cc_c89+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
-  ac_cv_prog_cc_stdc=no
+  ac_cv_prog_cc_c89=no
 ac_save_CC=$CC
 cat >conftest.$ac_ext <<_ACEOF
 /* confdefs.h.  */
@@ -4230,12 +4891,17 @@ static char *f (char * (*g) (char **, in
 /* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has
    function prototypes and stuff, but not '\xHH' hex character constants.
    These don't provoke an error unfortunately, instead are silently treated
-   as 'x'.  The following induces an error, until -std1 is added to get
+   as 'x'.  The following induces an error, until -std is added to get
    proper ANSI mode.  Curiously '\x00'!='x' always comes out true, for an
    array size at least.  It's necessary to write '\x00'==0 to get something
-   that's true only with -std1.  */
+   that's true only with -std.  */
 int osf4_cc_array ['\x00' == 0 ? 1 : -1];
 
+/* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters
+   inside strings and character constants.  */
+#define FOO(x) 'x'
+int xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];
+
 int test (int i, double x);
 struct s1 {int (*f) (int a);};
 struct s2 {int (*f) (double a);};
@@ -4250,214 +4916,702 @@ return f (e, argv, 0) != argv[0]  ||  f 
   return 0;
 }
 _ACEOF
-# Don't try gcc -ansi; that turns off useful extensions and
-# breaks some systems' header files.
-# AIX			-qlanglvl=ansi
-# Ultrix and OSF/1	-std1
-# HP-UX 10.20 and later	-Ae
-# HP-UX older versions	-Aa -D_HPUX_SOURCE
-# SVR4			-Xc -D__EXTENSIONS__
-for ac_arg in "" -qlanglvl=ansi -std1 -Ae "-Aa -D_HPUX_SOURCE" "-Xc -D__EXTENSIONS__"
+for ac_arg in '' -qlanglvl=extc89 -qlanglvl=ansi -std \
+	-Ae "-Aa -D_HPUX_SOURCE" "-Xc -D__EXTENSIONS__"
 do
   CC="$ac_save_CC $ac_arg"
   rm -f conftest.$ac_objext
-if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
-  (eval $ac_compile) 2>conftest.er1
+if { (ac_try="$ac_compile"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_compile") 2>conftest.er1
   ac_status=$?
   grep -v '^ *+' conftest.er1 >conftest.err
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"
-			 || test ! -s conftest.err'
-  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
-  (eval $ac_try) 2>&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest.$ac_objext; then
+  ac_cv_prog_cc_c89=$ac_arg
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+
+fi
+
+rm -f core conftest.err conftest.$ac_objext
+  test "x$ac_cv_prog_cc_c89" != "xno" && break
+done
+rm -f conftest.$ac_ext
+CC=$ac_save_CC
+
+fi
+# AC_CACHE_VAL
+case "x$ac_cv_prog_cc_c89" in
+  x)
+    { echo "$as_me:$LINENO: result: none needed" >&5
+echo "${ECHO_T}none needed" >&6; } ;;
+  xno)
+    { echo "$as_me:$LINENO: result: unsupported" >&5
+echo "${ECHO_T}unsupported" >&6; } ;;
+  *)
+    CC="$CC $ac_cv_prog_cc_c89"
+    { echo "$as_me:$LINENO: result: $ac_cv_prog_cc_c89" >&5
+echo "${ECHO_T}$ac_cv_prog_cc_c89" >&6; } ;;
+esac
+
+
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+{ echo "$as_me:$LINENO: checking how to run the C preprocessor" >&5
+echo $ECHO_N "checking how to run the C preprocessor... $ECHO_C" >&6; }
+# On Suns, sometimes $CPP names a directory.
+if test -n "$CPP" && test -d "$CPP"; then
+  CPP=
+fi
+if test -z "$CPP"; then
+  if test "${ac_cv_prog_CPP+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+      # Double quotes because CPP needs to be expanded
+    for CPP in "$CC -E" "$CC -E -traditional-cpp" "/lib/cpp"
+    do
+      ac_preproc_ok=false
+for ac_c_preproc_warn_flag in '' yes
+do
+  # Use a header file that comes with gcc, so configuring glibc
+  # with a fresh cross-compiler works.
+  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+  # <limits.h> exists even on freestanding compilers.
+  # On the NeXT, cc -E runs the code through the compiler's parser,
+  # not just through cpp. "Syntax error" is here to catch this case.
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+#ifdef __STDC__
+# include <limits.h>
+#else
+# include <assert.h>
+#endif
+		     Syntax error
+_ACEOF
+if { (ac_try="$ac_cpp conftest.$ac_ext"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.er1
   ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; } &&
-	 { ac_try='test -s conftest.$ac_objext'
-  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
-  (eval $ac_try) 2>&5
+  (exit $ac_status); } >/dev/null && {
+	 test -z "$ac_c_preproc_warn_flag$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       }; then
+  :
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+  # Broken: fails on valid input.
+continue
+fi
+
+rm -f conftest.err conftest.$ac_ext
+
+  # OK, works on sane cases.  Now check whether nonexistent headers
+  # can be detected and how.
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+#include <ac_nonexistent.h>
+_ACEOF
+if { (ac_try="$ac_cpp conftest.$ac_ext"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.er1
   ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; }; then
-  ac_cv_prog_cc_stdc=$ac_arg
-break
+  (exit $ac_status); } >/dev/null && {
+	 test -z "$ac_c_preproc_warn_flag$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       }; then
+  # Broken: success on invalid input.
+continue
 else
   echo "$as_me: failed program was:" >&5
 sed 's/^/| /' conftest.$ac_ext >&5
 
+  # Passes both tests.
+ac_preproc_ok=:
+break
 fi
-rm -f conftest.err conftest.$ac_objext
-done
-rm -f conftest.$ac_ext conftest.$ac_objext
-CC=$ac_save_CC
 
+rm -f conftest.err conftest.$ac_ext
+
+done
+# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
+rm -f conftest.err conftest.$ac_ext
+if $ac_preproc_ok; then
+  break
 fi
 
-case "x$ac_cv_prog_cc_stdc" in
-  x|xno)
-    echo "$as_me:$LINENO: result: none needed" >&5
-echo "${ECHO_T}none needed" >&6 ;;
-  *)
-    echo "$as_me:$LINENO: result: $ac_cv_prog_cc_stdc" >&5
-echo "${ECHO_T}$ac_cv_prog_cc_stdc" >&6
-    CC="$CC $ac_cv_prog_cc_stdc" ;;
-esac
+    done
+    ac_cv_prog_CPP=$CPP
 
-# Some people use a C++ compiler to compile C.  Since we use `exit',
-# in C++ we need to declare it.  In case someone uses the same compiler
-# for both compiling C and C++ we need to have the C++ compiler decide
-# the declaration of exit, since it's the most demanding environment.
+fi
+  CPP=$ac_cv_prog_CPP
+else
+  ac_cv_prog_CPP=$CPP
+fi
+{ echo "$as_me:$LINENO: result: $CPP" >&5
+echo "${ECHO_T}$CPP" >&6; }
+ac_preproc_ok=false
+for ac_c_preproc_warn_flag in '' yes
+do
+  # Use a header file that comes with gcc, so configuring glibc
+  # with a fresh cross-compiler works.
+  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+  # <limits.h> exists even on freestanding compilers.
+  # On the NeXT, cc -E runs the code through the compiler's parser,
+  # not just through cpp. "Syntax error" is here to catch this case.
 cat >conftest.$ac_ext <<_ACEOF
-#ifndef __cplusplus
-  choke me
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+#ifdef __STDC__
+# include <limits.h>
+#else
+# include <assert.h>
 #endif
+		     Syntax error
 _ACEOF
-rm -f conftest.$ac_objext
-if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
-  (eval $ac_compile) 2>conftest.er1
+if { (ac_try="$ac_cpp conftest.$ac_ext"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.er1
   ac_status=$?
   grep -v '^ *+' conftest.er1 >conftest.err
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"
-			 || test ! -s conftest.err'
-  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
-  (eval $ac_try) 2>&5
+  (exit $ac_status); } >/dev/null && {
+	 test -z "$ac_c_preproc_warn_flag$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       }; then
+  :
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+  # Broken: fails on valid input.
+continue
+fi
+
+rm -f conftest.err conftest.$ac_ext
+
+  # OK, works on sane cases.  Now check whether nonexistent headers
+  # can be detected and how.
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+#include <ac_nonexistent.h>
+_ACEOF
+if { (ac_try="$ac_cpp conftest.$ac_ext"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.er1
   ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; } &&
-	 { ac_try='test -s conftest.$ac_objext'
-  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
-  (eval $ac_try) 2>&5
+  (exit $ac_status); } >/dev/null && {
+	 test -z "$ac_c_preproc_warn_flag$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       }; then
+  # Broken: success on invalid input.
+continue
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+  # Passes both tests.
+ac_preproc_ok=:
+break
+fi
+
+rm -f conftest.err conftest.$ac_ext
+
+done
+# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
+rm -f conftest.err conftest.$ac_ext
+if $ac_preproc_ok; then
+  :
+else
+  { { echo "$as_me:$LINENO: error: C preprocessor \"$CPP\" fails sanity check
+See \`config.log' for more details." >&5
+echo "$as_me: error: C preprocessor \"$CPP\" fails sanity check
+See \`config.log' for more details." >&2;}
+   { (exit 1); exit 1; }; }
+fi
+
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+{ echo "$as_me:$LINENO: checking for grep that handles long lines and -e" >&5
+echo $ECHO_N "checking for grep that handles long lines and -e... $ECHO_C" >&6; }
+if test "${ac_cv_path_GREP+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  # Extract the first word of "grep ggrep" to use in msg output
+if test -z "$GREP"; then
+set dummy grep ggrep; ac_prog_name=$2
+if test "${ac_cv_path_GREP+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  ac_path_GREP_found=false
+# Loop through the user's path and test for each of PROGNAME-LIST
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_prog in grep ggrep; do
+  for ac_exec_ext in '' $ac_executable_extensions; do
+    ac_path_GREP="$as_dir/$ac_prog$ac_exec_ext"
+    { test -f "$ac_path_GREP" && $as_test_x "$ac_path_GREP"; } || continue
+    # Check for GNU ac_path_GREP and select it if it is found.
+  # Check for GNU $ac_path_GREP
+case `"$ac_path_GREP" --version 2>&1` in
+*GNU*)
+  ac_cv_path_GREP="$ac_path_GREP" ac_path_GREP_found=:;;
+*)
+  ac_count=0
+  echo $ECHO_N "0123456789$ECHO_C" >"conftest.in"
+  while :
+  do
+    cat "conftest.in" "conftest.in" >"conftest.tmp"
+    mv "conftest.tmp" "conftest.in"
+    cp "conftest.in" "conftest.nl"
+    echo 'GREP' >> "conftest.nl"
+    "$ac_path_GREP" -e 'GREP$' -e '-(cannot match)-' < "conftest.nl" >"conftest.out" 2>/dev/null || break
+    diff "conftest.out" "conftest.nl" >/dev/null 2>&1 || break
+    ac_count=`expr $ac_count + 1`
+    if test $ac_count -gt ${ac_path_GREP_max-0}; then
+      # Best one so far, save it but keep looking for a better one
+      ac_cv_path_GREP="$ac_path_GREP"
+      ac_path_GREP_max=$ac_count
+    fi
+    # 10*(2^10) chars as input seems more than enough
+    test $ac_count -gt 10 && break
+  done
+  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;
+esac
+
+
+    $ac_path_GREP_found && break 3
+  done
+done
+
+done
+IFS=$as_save_IFS
+
+
+fi
+
+GREP="$ac_cv_path_GREP"
+if test -z "$GREP"; then
+  { { echo "$as_me:$LINENO: error: no acceptable $ac_prog_name could be found in $PATH$PATH_SEPARATOR/usr/xpg4/bin" >&5
+echo "$as_me: error: no acceptable $ac_prog_name could be found in $PATH$PATH_SEPARATOR/usr/xpg4/bin" >&2;}
+   { (exit 1); exit 1; }; }
+fi
+
+else
+  ac_cv_path_GREP=$GREP
+fi
+
+
+fi
+{ echo "$as_me:$LINENO: result: $ac_cv_path_GREP" >&5
+echo "${ECHO_T}$ac_cv_path_GREP" >&6; }
+ GREP="$ac_cv_path_GREP"
+
+
+{ echo "$as_me:$LINENO: checking for egrep" >&5
+echo $ECHO_N "checking for egrep... $ECHO_C" >&6; }
+if test "${ac_cv_path_EGREP+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if echo a | $GREP -E '(a|b)' >/dev/null 2>&1
+   then ac_cv_path_EGREP="$GREP -E"
+   else
+     # Extract the first word of "egrep" to use in msg output
+if test -z "$EGREP"; then
+set dummy egrep; ac_prog_name=$2
+if test "${ac_cv_path_EGREP+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  ac_path_EGREP_found=false
+# Loop through the user's path and test for each of PROGNAME-LIST
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_prog in egrep; do
+  for ac_exec_ext in '' $ac_executable_extensions; do
+    ac_path_EGREP="$as_dir/$ac_prog$ac_exec_ext"
+    { test -f "$ac_path_EGREP" && $as_test_x "$ac_path_EGREP"; } || continue
+    # Check for GNU ac_path_EGREP and select it if it is found.
+  # Check for GNU $ac_path_EGREP
+case `"$ac_path_EGREP" --version 2>&1` in
+*GNU*)
+  ac_cv_path_EGREP="$ac_path_EGREP" ac_path_EGREP_found=:;;
+*)
+  ac_count=0
+  echo $ECHO_N "0123456789$ECHO_C" >"conftest.in"
+  while :
+  do
+    cat "conftest.in" "conftest.in" >"conftest.tmp"
+    mv "conftest.tmp" "conftest.in"
+    cp "conftest.in" "conftest.nl"
+    echo 'EGREP' >> "conftest.nl"
+    "$ac_path_EGREP" 'EGREP$' < "conftest.nl" >"conftest.out" 2>/dev/null || break
+    diff "conftest.out" "conftest.nl" >/dev/null 2>&1 || break
+    ac_count=`expr $ac_count + 1`
+    if test $ac_count -gt ${ac_path_EGREP_max-0}; then
+      # Best one so far, save it but keep looking for a better one
+      ac_cv_path_EGREP="$ac_path_EGREP"
+      ac_path_EGREP_max=$ac_count
+    fi
+    # 10*(2^10) chars as input seems more than enough
+    test $ac_count -gt 10 && break
+  done
+  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;
+esac
+
+
+    $ac_path_EGREP_found && break 3
+  done
+done
+
+done
+IFS=$as_save_IFS
+
+
+fi
+
+EGREP="$ac_cv_path_EGREP"
+if test -z "$EGREP"; then
+  { { echo "$as_me:$LINENO: error: no acceptable $ac_prog_name could be found in $PATH$PATH_SEPARATOR/usr/xpg4/bin" >&5
+echo "$as_me: error: no acceptable $ac_prog_name could be found in $PATH$PATH_SEPARATOR/usr/xpg4/bin" >&2;}
+   { (exit 1); exit 1; }; }
+fi
+
+else
+  ac_cv_path_EGREP=$EGREP
+fi
+
+
+   fi
+fi
+{ echo "$as_me:$LINENO: result: $ac_cv_path_EGREP" >&5
+echo "${ECHO_T}$ac_cv_path_EGREP" >&6; }
+ EGREP="$ac_cv_path_EGREP"
+
+
+{ echo "$as_me:$LINENO: checking for ANSI C header files" >&5
+echo $ECHO_N "checking for ANSI C header files... $ECHO_C" >&6; }
+if test "${ac_cv_header_stdc+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+#include <stdlib.h>
+#include <stdarg.h>
+#include <string.h>
+#include <float.h>
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext
+if { (ac_try="$ac_compile"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_compile") 2>conftest.er1
   ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; }; then
-  for ac_declaration in \
-   '' \
-   'extern "C" void std::exit (int) throw (); using std::exit;' \
-   'extern "C" void std::exit (int); using std::exit;' \
-   'extern "C" void exit (int) throw ();' \
-   'extern "C" void exit (int);' \
-   'void exit (int);'
-do
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest.$ac_objext; then
+  ac_cv_header_stdc=yes
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	ac_cv_header_stdc=no
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+
+if test $ac_cv_header_stdc = yes; then
+  # SunOS 4.x string.h does not declare mem*, contrary to ANSI.
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+#include <string.h>
+
+_ACEOF
+if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
+  $EGREP "memchr" >/dev/null 2>&1; then
+  :
+else
+  ac_cv_header_stdc=no
+fi
+rm -f conftest*
+
+fi
+
+if test $ac_cv_header_stdc = yes; then
+  # ISC 2.0.2 stdlib.h does not declare free, contrary to ANSI.
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+#include <stdlib.h>
+
+_ACEOF
+if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
+  $EGREP "free" >/dev/null 2>&1; then
+  :
+else
+  ac_cv_header_stdc=no
+fi
+rm -f conftest*
+
+fi
+
+if test $ac_cv_header_stdc = yes; then
+  # /bin/cc in Irix-4.0.5 gets non-ANSI ctype macros unless using -ansi.
+  if test "$cross_compiling" = yes; then
+  :
+else
   cat >conftest.$ac_ext <<_ACEOF
 /* confdefs.h.  */
 _ACEOF
 cat confdefs.h >>conftest.$ac_ext
 cat >>conftest.$ac_ext <<_ACEOF
 /* end confdefs.h.  */
-$ac_declaration
+#include <ctype.h>
 #include <stdlib.h>
+#if ((' ' & 0x0FF) == 0x020)
+# define ISLOWER(c) ('a' <= (c) && (c) <= 'z')
+# define TOUPPER(c) (ISLOWER(c) ? 'A' + ((c) - 'a') : (c))
+#else
+# define ISLOWER(c) \
+		   (('a' <= (c) && (c) <= 'i') \
+		     || ('j' <= (c) && (c) <= 'r') \
+		     || ('s' <= (c) && (c) <= 'z'))
+# define TOUPPER(c) (ISLOWER(c) ? ((c) | 0x40) : (c))
+#endif
+
+#define XOR(e, f) (((e) && !(f)) || (!(e) && (f)))
 int
 main ()
 {
-exit (42);
-  ;
+  int i;
+  for (i = 0; i < 256; i++)
+    if (XOR (islower (i), ISLOWER (i))
+	|| toupper (i) != TOUPPER (i))
+      return 2;
   return 0;
 }
 _ACEOF
-rm -f conftest.$ac_objext
-if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
-  (eval $ac_compile) 2>conftest.er1
-  ac_status=$?
-  grep -v '^ *+' conftest.er1 >conftest.err
-  rm -f conftest.er1
-  cat conftest.err >&5
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"
-			 || test ! -s conftest.err'
-  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
-  (eval $ac_try) 2>&5
+rm -f conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; } &&
-	 { ac_try='test -s conftest.$ac_objext'
-  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
-  (eval $ac_try) 2>&5
+  (exit $ac_status); } && { ac_try='./conftest$ac_exeext'
+  { (case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_try") 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }; }; then
   :
 else
+  echo "$as_me: program exited with status $ac_status" >&5
   echo "$as_me: failed program was:" >&5
 sed 's/^/| /' conftest.$ac_ext >&5
 
-continue
+( exit $ac_status )
+ac_cv_header_stdc=no
+fi
+rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext
+fi
+
+
+fi
+fi
+{ echo "$as_me:$LINENO: result: $ac_cv_header_stdc" >&5
+echo "${ECHO_T}$ac_cv_header_stdc" >&6; }
+if test $ac_cv_header_stdc = yes; then
+
+cat >>confdefs.h <<\_ACEOF
+#define STDC_HEADERS 1
+_ACEOF
+
 fi
-rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
+
+# On IRIX 5.3, sys/types and inttypes.h are conflicting.
+
+
+
+
+
+
+
+
+
+for ac_header in sys/types.h sys/stat.h stdlib.h string.h memory.h strings.h \
+		  inttypes.h stdint.h unistd.h
+do
+as_ac_Header=`echo "ac_cv_header_$ac_header" | $as_tr_sh`
+{ echo "$as_me:$LINENO: checking for $ac_header" >&5
+echo $ECHO_N "checking for $ac_header... $ECHO_C" >&6; }
+if { as_var=$as_ac_Header; eval "test \"\${$as_var+set}\" = set"; }; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
   cat >conftest.$ac_ext <<_ACEOF
 /* confdefs.h.  */
 _ACEOF
 cat confdefs.h >>conftest.$ac_ext
 cat >>conftest.$ac_ext <<_ACEOF
 /* end confdefs.h.  */
-$ac_declaration
-int
-main ()
-{
-exit (42);
-  ;
-  return 0;
-}
+$ac_includes_default
+
+#include <$ac_header>
 _ACEOF
 rm -f conftest.$ac_objext
-if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
-  (eval $ac_compile) 2>conftest.er1
+if { (ac_try="$ac_compile"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_compile") 2>conftest.er1
   ac_status=$?
   grep -v '^ *+' conftest.er1 >conftest.err
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"
-			 || test ! -s conftest.err'
-  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
-  (eval $ac_try) 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; } &&
-	 { ac_try='test -s conftest.$ac_objext'
-  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
-  (eval $ac_try) 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; }; then
-  break
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest.$ac_objext; then
+  eval "$as_ac_Header=yes"
 else
   echo "$as_me: failed program was:" >&5
 sed 's/^/| /' conftest.$ac_ext >&5
 
-fi
-rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
-done
-rm -f conftest*
-if test -n "$ac_declaration"; then
-  echo '#ifdef __cplusplus' >>confdefs.h
-  echo $ac_declaration      >>confdefs.h
-  echo '#endif'             >>confdefs.h
+	eval "$as_ac_Header=no"
 fi
 
-else
-  echo "$as_me: failed program was:" >&5
-sed 's/^/| /' conftest.$ac_ext >&5
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+ac_res=`eval echo '${'$as_ac_Header'}'`
+	       { echo "$as_me:$LINENO: result: $ac_res" >&5
+echo "${ECHO_T}$ac_res" >&6; }
+if test `eval echo '${'$as_ac_Header'}'` = yes; then
+  cat >>confdefs.h <<_ACEOF
+#define `echo "HAVE_$ac_header" | $as_tr_cpp` 1
+_ACEOF
 
 fi
-rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
-ac_ext=c
-ac_cpp='$CPP $CPPFLAGS'
-ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
-ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
-ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+done
 
 
-echo "$as_me:$LINENO: checking whether byte ordering is bigendian" >&5
-echo $ECHO_N "checking whether byte ordering is bigendian... $ECHO_C" >&6
+{ echo "$as_me:$LINENO: checking whether byte ordering is bigendian" >&5
+echo $ECHO_N "checking whether byte ordering is bigendian... $ECHO_C" >&6; }
 if test "${ac_cv_c_bigendian+set}" = set; then
   echo $ECHO_N "(cached) $ECHO_C" >&6
 else
@@ -4474,7 +5628,8 @@ cat >>conftest.$ac_ext <<_ACEOF
 int
 main ()
 {
-#if !BYTE_ORDER || !BIG_ENDIAN || !LITTLE_ENDIAN
+#if  ! (defined BYTE_ORDER && defined BIG_ENDIAN && defined LITTLE_ENDIAN \
+	&& BYTE_ORDER && BIG_ENDIAN && LITTLE_ENDIAN)
  bogus endian macros
 #endif
 
@@ -4483,27 +5638,22 @@ main ()
 }
 _ACEOF
 rm -f conftest.$ac_objext
-if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
-  (eval $ac_compile) 2>conftest.er1
+if { (ac_try="$ac_compile"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_compile") 2>conftest.er1
   ac_status=$?
   grep -v '^ *+' conftest.er1 >conftest.err
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"
-			 || test ! -s conftest.err'
-  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
-  (eval $ac_try) 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; } &&
-	 { ac_try='test -s conftest.$ac_objext'
-  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
-  (eval $ac_try) 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; }; then
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest.$ac_objext; then
   # It does; now see whether it defined to BIG_ENDIAN or not.
 cat >conftest.$ac_ext <<_ACEOF
 /* confdefs.h.  */
@@ -4526,27 +5676,22 @@ main ()
 }
 _ACEOF
 rm -f conftest.$ac_objext
-if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
-  (eval $ac_compile) 2>conftest.er1
+if { (ac_try="$ac_compile"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_compile") 2>conftest.er1
   ac_status=$?
   grep -v '^ *+' conftest.er1 >conftest.err
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"
-			 || test ! -s conftest.err'
-  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
-  (eval $ac_try) 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; } &&
-	 { ac_try='test -s conftest.$ac_objext'
-  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
-  (eval $ac_try) 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; }; then
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest.$ac_objext; then
   ac_cv_c_bigendian=yes
 else
   echo "$as_me: failed program was:" >&5
@@ -4554,7 +5699,8 @@ sed 's/^/| /' conftest.$ac_ext >&5
 
 ac_cv_c_bigendian=no
 fi
-rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
+
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
 else
   echo "$as_me: failed program was:" >&5
 sed 's/^/| /' conftest.$ac_ext >&5
@@ -4569,11 +5715,11 @@ _ACEOF
 cat confdefs.h >>conftest.$ac_ext
 cat >>conftest.$ac_ext <<_ACEOF
 /* end confdefs.h.  */
-short ascii_mm[] = { 0x4249, 0x4765, 0x6E44, 0x6961, 0x6E53, 0x7953, 0 };
-short ascii_ii[] = { 0x694C, 0x5454, 0x656C, 0x6E45, 0x6944, 0x6E61, 0 };
+short int ascii_mm[] = { 0x4249, 0x4765, 0x6E44, 0x6961, 0x6E53, 0x7953, 0 };
+short int ascii_ii[] = { 0x694C, 0x5454, 0x656C, 0x6E45, 0x6944, 0x6E61, 0 };
 void _ascii () { char *s = (char *) ascii_mm; s = (char *) ascii_ii; }
-short ebcdic_ii[] = { 0x89D3, 0xE3E3, 0x8593, 0x95C5, 0x89C4, 0x9581, 0 };
-short ebcdic_mm[] = { 0xC2C9, 0xC785, 0x95C4, 0x8981, 0x95E2, 0xA8E2, 0 };
+short int ebcdic_ii[] = { 0x89D3, 0xE3E3, 0x8593, 0x95C5, 0x89C4, 0x9581, 0 };
+short int ebcdic_mm[] = { 0xC2C9, 0xC785, 0x95C4, 0x8981, 0x95E2, 0xA8E2, 0 };
 void _ebcdic () { char *s = (char *) ebcdic_mm; s = (char *) ebcdic_ii; }
 int
 main ()
@@ -4584,27 +5730,22 @@ main ()
 }
 _ACEOF
 rm -f conftest.$ac_objext
-if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
-  (eval $ac_compile) 2>conftest.er1
+if { (ac_try="$ac_compile"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_compile") 2>conftest.er1
   ac_status=$?
   grep -v '^ *+' conftest.er1 >conftest.err
   rm -f conftest.er1
   cat conftest.err >&5
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); } &&
-	 { ac_try='test -z "$ac_c_werror_flag"
-			 || test ! -s conftest.err'
-  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
-  (eval $ac_try) 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; } &&
-	 { ac_try='test -s conftest.$ac_objext'
-  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
-  (eval $ac_try) 2>&5
-  ac_status=$?
-  echo "$as_me:$LINENO: \$? = $ac_status" >&5
-  (exit $ac_status); }; }; then
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest.$ac_objext; then
   if grep BIGenDianSyS conftest.$ac_objext >/dev/null ; then
   ac_cv_c_bigendian=yes
 fi
@@ -4620,8 +5761,10 @@ else
   echo "$as_me: failed program was:" >&5
 sed 's/^/| /' conftest.$ac_ext >&5
 
+
 fi
-rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
+
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
 else
   cat >conftest.$ac_ext <<_ACEOF
 /* confdefs.h.  */
@@ -4629,6 +5772,7 @@ _ACEOF
 cat confdefs.h >>conftest.$ac_ext
 cat >>conftest.$ac_ext <<_ACEOF
 /* end confdefs.h.  */
+$ac_includes_default
 int
 main ()
 {
@@ -4635,21 +5780,33 @@ main ()
   /* Are we little or big endian?  From Harbison&Steele.  */
   union
   {
-    long l;
-    char c[sizeof (long)];
+    long int l;
+    char c[sizeof (long int)];
   } u;
   u.l = 1;
-  exit (u.c[sizeof (long) - 1] == 1);
+  return u.c[sizeof (long int) - 1] == 1;
+
+  ;
+  return 0;
 }
 _ACEOF
 rm -f conftest$ac_exeext
-if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
-  (eval $ac_link) 2>&5
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); } && { ac_try='./conftest$ac_exeext'
-  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
-  (eval $ac_try) 2>&5
+  { (case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_try") 2>&5
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&5
   (exit $ac_status); }; }; then
@@ -4662,13 +5819,16 @@ sed 's/^/| /' conftest.$ac_ext >&5
 ( exit $ac_status )
 ac_cv_c_bigendian=yes
 fi
-rm -f core *.core gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext
+rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext
 fi
+
+
 fi
-rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
+
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
 fi
-echo "$as_me:$LINENO: result: $ac_cv_c_bigendian" >&5
-echo "${ECHO_T}$ac_cv_c_bigendian" >&6
+{ echo "$as_me:$LINENO: result: $ac_cv_c_bigendian" >&5
+echo "${ECHO_T}$ac_cv_c_bigendian" >&6; }
 case $ac_cv_c_bigendian in
   yes)
     BYTESWAP="1" ;;
@@ -4793,6 +5955,14 @@ if test -z "$MGCORDER"; then
 	fi
 fi
 
+if test -z "$STRORDER"; then
+	STRORDER=5
+fi
+
+if test -z "$MAGORDER"; then
+	MAGORDER=10
+fi
+
 if test -z "$LNGAIN"; then
 	LNGAIN=1
 fi
@@ -4831,6 +6001,13 @@ echo "$as_me: error: Cannot use MGC coef
    { (exit 1); exit 1; }; }
 fi
 
+if test -z "$STRVSIZE"; then
+	STRVSIZE=$STRORDER
+fi
+
+if test -z "$MAGVSIZE"; then
+	MAGVSIZE=$MAGORDER
+fi
 
 
 # substitute variables
@@ -4863,6 +6047,14 @@ if test -z "$NMGCWIN"; then
 	NMGCWIN=3
 fi
 
+if test -z "$NSTRWIN"; then
+	NSTRWIN=3
+fi
+
+if test -z "$NMAGWIN"; then
+	NMAGWIN=3
+fi
+
 if test -z "$NLF0WIN"; then
 	NLF0WIN=3
 fi
@@ -4913,6 +6112,14 @@ if test -z "$NMGCTRANSBLK"; then
 	NMGCTRANSBLK=3
 fi
 
+if test -z "$NSTRTRANSBLK"; then
+	NSTRTRANSBLK=3
+fi
+
+if test -z "$NMAGTRANSBLK"; then
+	NMAGTRANSBLK=3
+fi
+
 if test -z "$NLF0TRANSBLK"; then
 	NLF0TRANSBLK=1
 fi
@@ -4925,6 +6132,14 @@ if test -z "$MGCBANDWIDTH"; then
 	fi
 fi
 
+if test -z "$STRBANDWIDTH"; then
+	STRBANDWIDTH=5
+fi
+
+if test -z "$MAGBANDWIDTH"; then
+	MAGBANDWIDTH=5
+fi
+
 if test -z "$LF0BANDWIDTH"; then
 	LF0BANDWIDTH=0
 fi
@@ -5042,39 +6262,58 @@ _ACEOF
 
 # The following way of writing the cache mishandles newlines in values,
 # but we know of no workaround that is simple, portable, and efficient.
-# So, don't put newlines in cache variables' values.
+# So, we kill variables containing newlines.
 # Ultrix sh set writes to stderr and can't be redirected directly,
 # and sets the high bit in the cache file unless we assign to the vars.
-{
+(
+  for ac_var in `(set) 2>&1 | sed -n 's/^\([a-zA-Z_][a-zA-Z0-9_]*\)=.*/\1/p'`; do
+    eval ac_val=\$$ac_var
+    case $ac_val in #(
+    *${as_nl}*)
+      case $ac_var in #(
+      *_cv_*) { echo "$as_me:$LINENO: WARNING: Cache variable $ac_var contains a newline." >&5
+echo "$as_me: WARNING: Cache variable $ac_var contains a newline." >&2;} ;;
+      esac
+      case $ac_var in #(
+      _ | IFS | as_nl) ;; #(
+      *) $as_unset $ac_var ;;
+      esac ;;
+    esac
+  done
+
   (set) 2>&1 |
-    case `(ac_space=' '; set | grep ac_space) 2>&1` in
-    *ac_space=\ *)
+    case $as_nl`(ac_space=' '; set) 2>&1` in #(
+    *${as_nl}ac_space=\ *)
       # `set' does not quote correctly, so add quotes (double-quote
       # substitution turns \\\\ into \\, and sed turns \\ into \).
       sed -n \
 	"s/'/'\\\\''/g;
 	  s/^\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\)=\\(.*\\)/\\1='\\2'/p"
-      ;;
+      ;; #(
     *)
       # `set' quotes correctly as required by POSIX, so do not add quotes.
-      sed -n \
-	"s/^\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\)=\\(.*\\)/\\1=\\2/p"
+      sed -n "/^[_$as_cr_alnum]*_cv_[_$as_cr_alnum]*=/p"
       ;;
-    esac;
-} |
+    esac |
+    sort
+) |
   sed '
+     /^ac_cv_env_/b end
      t clear
      : clear
      s/^\([^=]*\)=\(.*[{}].*\)$/test "${\1+set}" = set || &/
      t end
-     /^ac_cv_env/!s/^\([^=]*\)=\(.*\)$/\1=${\1=\2}/
+     s/^\([^=]*\)=\(.*\)$/\1=${\1=\2}/
      : end' >>confcache
-if diff $cache_file confcache >/dev/null 2>&1; then :; else
-  if test -w $cache_file; then
-    test "x$cache_file" != "x/dev/null" && echo "updating cache $cache_file"
+if diff "$cache_file" confcache >/dev/null 2>&1; then :; else
+  if test -w "$cache_file"; then
+    test "x$cache_file" != "x/dev/null" &&
+      { echo "$as_me:$LINENO: updating cache $cache_file" >&5
+echo "$as_me: updating cache $cache_file" >&6;}
     cat confcache >$cache_file
   else
-    echo "not updating unwritable cache $cache_file"
+    { echo "$as_me:$LINENO: not updating unwritable cache $cache_file" >&5
+echo "$as_me: not updating unwritable cache $cache_file" >&6;}
   fi
 fi
 rm -f confcache
@@ -5083,63 +6322,48 @@ test "x$prefix" = xNONE && prefix=$ac_de
 # Let make expand exec_prefix.
 test "x$exec_prefix" = xNONE && exec_prefix='${prefix}'
 
-# VPATH may cause trouble with some makes, so we remove $(srcdir),
-# ${srcdir} and @srcdir@ from VPATH if srcdir is ".", strip leading and
-# trailing colons and then remove the whole line if VPATH becomes empty
-# (actually we leave an empty line to preserve line numbers).
-if test "x$srcdir" = x.; then
-  ac_vpsub='/^[	 ]*VPATH[	 ]*=/{
-s/:*\$(srcdir):*/:/;
-s/:*\${srcdir}:*/:/;
-s/:*@srcdir@:*/:/;
-s/^\([^=]*=[	 ]*\):*/\1/;
-s/:*$//;
-s/^[^=]*=[	 ]*$//;
-}'
-fi
-
 # Transform confdefs.h into DEFS.
 # Protect against shell expansion while executing Makefile rules.
 # Protect against Makefile macro expansion.
 #
 # If the first sed substitution is executed (which looks for macros that
-# take arguments), then we branch to the quote section.  Otherwise,
+# take arguments), then branch to the quote section.  Otherwise,
 # look for a macro that doesn't take arguments.
-cat >confdef2opt.sed <<\_ACEOF
+ac_script='
 t clear
 : clear
-s,^[	 ]*#[	 ]*define[	 ][	 ]*\([^	 (][^	 (]*([^)]*)\)[	 ]*\(.*\),-D\1=\2,g
+s/^[	 ]*#[	 ]*define[	 ][	 ]*\([^	 (][^	 (]*([^)]*)\)[	 ]*\(.*\)/-D\1=\2/g
 t quote
-s,^[	 ]*#[	 ]*define[	 ][	 ]*\([^	 ][^	 ]*\)[	 ]*\(.*\),-D\1=\2,g
+s/^[	 ]*#[	 ]*define[	 ][	 ]*\([^	 ][^	 ]*\)[	 ]*\(.*\)/-D\1=\2/g
 t quote
-d
+b any
 : quote
-s,[	 `~#$^&*(){}\\|;'"<>?],\\&,g
-s,\[,\\&,g
-s,\],\\&,g
-s,\$,$$,g
+s/[	 `~#$^&*(){}\\|;'\''"<>?]/\\&/g
+s/\[/\\&/g
+s/\]/\\&/g
+s/\$/$$/g
+H
+:any
+${
+	g
+	s/^\n//
+	s/\n/ /g
 p
-_ACEOF
-# We use echo to avoid assuming a particular line-breaking character.
-# The extra dot is to prevent the shell from consuming trailing
-# line-breaks from the sub-command output.  A line-break within
-# single-quotes doesn't work because, if this script is created in a
-# platform that uses two characters for line-breaks (e.g., DOS), tr
-# would break.
-ac_LF_and_DOT=`echo; echo .`
-DEFS=`sed -n -f confdef2opt.sed confdefs.h | tr "$ac_LF_and_DOT" ' .'`
-rm -f confdef2opt.sed
+}
+'
+DEFS=`sed -n "$ac_script" confdefs.h`
 
 
 ac_libobjs=
 ac_ltlibobjs=
 for ac_i in : $LIBOBJS; do test "x$ac_i" = x: && continue
   # 1. Remove the extension, and $U if already installed.
-  ac_i=`echo "$ac_i" |
-	 sed 's/\$U\././;s/\.o$//;s/\.obj$//'`
-  # 2. Add them.
-  ac_libobjs="$ac_libobjs $ac_i\$U.$ac_objext"
-  ac_ltlibobjs="$ac_ltlibobjs $ac_i"'$U.lo'
+  ac_script='s/\$U\././;s/\.o$//;s/\.obj$//'
+  ac_i=`echo "$ac_i" | sed "$ac_script"`
+  # 2. Prepend LIBOBJDIR.  When used with automake>=1.10 LIBOBJDIR
+  #    will be set to the directory where LIBOBJS objects are built.
+  ac_libobjs="$ac_libobjs \${LIBOBJDIR}$ac_i\$U.$ac_objext"
+  ac_ltlibobjs="$ac_ltlibobjs \${LIBOBJDIR}$ac_i"'$U.lo'
 done
 LIBOBJS=$ac_libobjs
 
@@ -5170,73 +6394,26 @@ cat >>$CONFIG_STATUS <<\_ACEOF
 ## M4sh Initialization.  ##
 ## --------------------- ##
 
-# Be Bourne compatible
+# Be more Bourne compatible
+DUALCASE=1; export DUALCASE # for MKS sh
 if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
   emulate sh
   NULLCMD=:
   # Zsh 3.x and 4.x performs word splitting on ${1+"$@"}, which
   # is contrary to our usage.  Disable this feature.
   alias -g '${1+"$@"}'='"$@"'
-elif test -n "${BASH_VERSION+set}" && (set -o posix) >/dev/null 2>&1; then
-  set -o posix
-fi
-DUALCASE=1; export DUALCASE # for MKS sh
-
-# Support unset when possible.
-if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then
-  as_unset=unset
-else
-  as_unset=false
-fi
-
-
-# Work around bugs in pre-3.0 UWIN ksh.
-$as_unset ENV MAIL MAILPATH
-PS1='$ '
-PS2='> '
-PS4='+ '
-
-# NLS nuisances.
-for as_var in \
-  LANG LANGUAGE LC_ADDRESS LC_ALL LC_COLLATE LC_CTYPE LC_IDENTIFICATION \
-  LC_MEASUREMENT LC_MESSAGES LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER \
-  LC_TELEPHONE LC_TIME
-do
-  if (set +x; test -z "`(eval $as_var=C; export $as_var) 2>&1`"); then
-    eval $as_var=C; export $as_var
-  else
-    $as_unset $as_var
-  fi
-done
-
-# Required to use basename.
-if expr a : '\(a\)' >/dev/null 2>&1; then
-  as_expr=expr
+  setopt NO_GLOB_SUBST
 else
-  as_expr=false
-fi
+  case `(set -o) 2>/dev/null` in
+  *posix*) set -o posix ;;
+esac
 
-if (basename /) >/dev/null 2>&1 && test "X`basename / 2>&1`" = "X/"; then
-  as_basename=basename
-else
-  as_basename=false
 fi
 
 
-# Name of the executable.
-as_me=`$as_basename "$0" ||
-$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
-	 X"$0" : 'X\(//\)$' \| \
-	 X"$0" : 'X\(/\)$' \| \
-	 .     : '\(.\)' 2>/dev/null ||
-echo X/"$0" |
-    sed '/^.*\/\([^/][^/]*\)\/*$/{ s//\1/; q; }
-  	  /^X\/\(\/\/\)$/{ s//\1/; q; }
-  	  /^X\/\(\/\).*/{ s//\1/; q; }
-  	  s/.*/./; q'`
 
 
-# PATH needs CR, and LINENO needs CR and PATH.
+# PATH needs CR
 # Avoid depending upon Character Ranges.
 as_cr_letters='abcdefghijklmnopqrstuvwxyz'
 as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
@@ -5257,14 +6434,24 @@ if test "${PATH_SEPARATOR+set}" != set; 
   rm -f conf$$.sh
 fi
 
+# Support unset when possible.
+if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then
+  as_unset=unset
+else
+  as_unset=false
+fi
+
 
-  as_lineno_1=$LINENO
-  as_lineno_2=$LINENO
-  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
-  test "x$as_lineno_1" != "x$as_lineno_2" &&
-  test "x$as_lineno_3"  = "x$as_lineno_2"  || {
-  # Find who we are.  Look in the path if we contain no path at all
-  # relative or not.
+# IFS
+# We need space, tab and new line, in precisely that order.  Quoting is
+# there to prevent editors from complaining about space-tab.
+# (If _AS_PATH_WALK were called with IFS unset, it would disable word
+# splitting by setting IFS to empty value.)
+as_nl='
+'
+IFS=" ""	$as_nl"
+
+# Find who we are.  Look in the path if we contain no directory separator.
   case $0 in
     *[\\/]* ) as_myself=$0 ;;
     *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
@@ -5274,6 +6461,7 @@ do
   test -z "$as_dir" && as_dir=.
   test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
 done
+IFS=$as_save_IFS
 
        ;;
   esac
@@ -5283,100 +6471,161 @@ done
     as_myself=$0
   fi
   if test ! -f "$as_myself"; then
-    { { echo "$as_me:$LINENO: error: cannot find myself; rerun with an absolute path" >&5
-echo "$as_me: error: cannot find myself; rerun with an absolute path" >&2;}
-   { (exit 1); exit 1; }; }
+  echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
+  { (exit 1); exit 1; }
+fi
+
+# Work around bugs in pre-3.0 UWIN ksh.
+for as_var in ENV MAIL MAILPATH
+do ($as_unset $as_var) >/dev/null 2>&1 && $as_unset $as_var
+done
+PS1='$ '
+PS2='> '
+PS4='+ '
+
+# NLS nuisances.
+for as_var in \
+  LANG LANGUAGE LC_ADDRESS LC_ALL LC_COLLATE LC_CTYPE LC_IDENTIFICATION \
+  LC_MEASUREMENT LC_MESSAGES LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER \
+  LC_TELEPHONE LC_TIME
+do
+  if (set +x; test -z "`(eval $as_var=C; export $as_var) 2>&1`"); then
+    eval $as_var=C; export $as_var
+  else
+    ($as_unset $as_var) >/dev/null 2>&1 && $as_unset $as_var
+  fi
+done
+
+# Required to use basename.
+if expr a : '\(a\)' >/dev/null 2>&1 &&
+   test "X`expr 00001 : '.*\(...\)'`" = X001; then
+  as_expr=expr
+else
+  as_expr=false
+fi
+
+if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
+  as_basename=basename
+else
+  as_basename=false
   fi
-  case $CONFIG_SHELL in
-  '')
-    as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
-for as_dir in /bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH
-do
-  IFS=$as_save_IFS
-  test -z "$as_dir" && as_dir=.
-  for as_base in sh bash ksh sh5; do
-	 case $as_dir in
-	 /*)
-	   if ("$as_dir/$as_base" -c '
+
+
+# Name of the executable.
+as_me=`$as_basename -- "$0" ||
+$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
+	 X"$0" : 'X\(//\)$' \| \
+	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
+echo X/"$0" |
+    sed '/^.*\/\([^/][^/]*\)\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\/\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\/\(\/\).*/{
+	    s//\1/
+	    q
+	  }
+	  s/.*/./; q'`
+
+# CDPATH.
+$as_unset CDPATH
+
+
+
   as_lineno_1=$LINENO
   as_lineno_2=$LINENO
-  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
   test "x$as_lineno_1" != "x$as_lineno_2" &&
-  test "x$as_lineno_3"  = "x$as_lineno_2" ') 2>/dev/null; then
-	     $as_unset BASH_ENV || test "${BASH_ENV+set}" != set || { BASH_ENV=; export BASH_ENV; }
-	     $as_unset ENV || test "${ENV+set}" != set || { ENV=; export ENV; }
-	     CONFIG_SHELL=$as_dir/$as_base
-	     export CONFIG_SHELL
-	     exec "$CONFIG_SHELL" "$0" ${1+"$@"}
-	   fi;;
-	 esac
-       done
-done
-;;
-  esac
+  test "x`expr $as_lineno_1 + 1`" = "x$as_lineno_2" || {
 
   # Create $as_me.lineno as a copy of $as_myself, but with $LINENO
   # uniformly replaced by the line number.  The first 'sed' inserts a
-  # line-number line before each line; the second 'sed' does the real
-  # work.  The second script uses 'N' to pair each line-number line
-  # with the numbered line, and appends trailing '-' during
-  # substitution so that $LINENO is not a special case at line end.
+  # line-number line after each line using $LINENO; the second 'sed'
+  # does the real work.  The second script uses 'N' to pair each
+  # line-number line with the line containing $LINENO, and appends
+  # trailing '-' during substitution so that $LINENO is not a special
+  # case at line end.
   # (Raja R Harinath suggested sed '=', and Paul Eggert wrote the
-  # second 'sed' script.  Blame Lee E. McMahon for sed's syntax.  :-)
-  sed '=' <$as_myself |
+  # scripts with optimization help from Paolo Bonzini.  Blame Lee
+  # E. McMahon (1931-1989) for sed's syntax.  :-)
+  sed -n '
+    p
+    /[$]LINENO/=
+  ' <$as_myself |
     sed '
+      s/[$]LINENO.*/&-/
+      t lineno
+      b
+      :lineno
       N
-      s,$,-,
       : loop
-      s,^\(['$as_cr_digits']*\)\(.*\)[$]LINENO\([^'$as_cr_alnum'_]\),\1\2\1\3,
+      s/[$]LINENO\([^'$as_cr_alnum'_].*\n\)\(.*\)/\2\1\2/
       t loop
-      s,-$,,
-      s,^['$as_cr_digits']*\n,,
+      s/-\n.*//
     ' >$as_me.lineno &&
-  chmod +x $as_me.lineno ||
-    { { echo "$as_me:$LINENO: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&5
-echo "$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&2;}
+  chmod +x "$as_me.lineno" ||
+    { echo "$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&2
    { (exit 1); exit 1; }; }
 
   # Don't try to exec as it changes $[0], causing all sort of problems
   # (the dirname of $[0] is not the place where we might find the
-  # original and so on.  Autoconf is especially sensible to this).
-  . ./$as_me.lineno
+  # original and so on.  Autoconf is especially sensitive to this).
+  . "./$as_me.lineno"
   # Exit status is that of the last command.
   exit
 }
 
 
-case `echo "testing\c"; echo 1,2,3`,`echo -n testing; echo 1,2,3` in
-  *c*,-n*) ECHO_N= ECHO_C='
-' ECHO_T='	' ;;
-  *c*,*  ) ECHO_N=-n ECHO_C= ECHO_T= ;;
-  *)       ECHO_N= ECHO_C='\c' ECHO_T= ;;
+if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
+  as_dirname=dirname
+else
+  as_dirname=false
+fi
+
+ECHO_C= ECHO_N= ECHO_T=
+case `echo -n x` in
+-n*)
+  case `echo 'x\c'` in
+  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
+  *)   ECHO_C='\c';;
+  esac;;
+*)
+  ECHO_N='-n';;
 esac
 
-if expr a : '\(a\)' >/dev/null 2>&1; then
+if expr a : '\(a\)' >/dev/null 2>&1 &&
+   test "X`expr 00001 : '.*\(...\)'`" = X001; then
   as_expr=expr
 else
   as_expr=false
 fi
 
 rm -f conf$$ conf$$.exe conf$$.file
+if test -d conf$$.dir; then
+  rm -f conf$$.dir/conf$$.file
+else
+  rm -f conf$$.dir
+  mkdir conf$$.dir
+fi
 echo >conf$$.file
 if ln -s conf$$.file conf$$ 2>/dev/null; then
-  # We could just check for DJGPP; but this test a) works b) is more generic
-  # and c) will remain valid once DJGPP supports symlinks (DJGPP 2.04).
-  if test -f conf$$.exe; then
-    # Don't use ln at all; we don't have any links
-    as_ln_s='cp -p'
-  else
     as_ln_s='ln -s'
-  fi
+  # ... but there are two gotchas:
+  # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
+  # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
+  # In both cases, we have to default to `cp -p'.
+  ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
+    as_ln_s='cp -p'
 elif ln conf$$.file conf$$ 2>/dev/null; then
   as_ln_s=ln
 else
   as_ln_s='cp -p'
 fi
-rm -f conf$$ conf$$.exe conf$$.file
+rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
+rmdir conf$$.dir 2>/dev/null
 
 if mkdir -p . 2>/dev/null; then
   as_mkdir_p=:
@@ -5385,7 +6634,28 @@ else
   as_mkdir_p=false
 fi
 
-as_executable_p="test -f"
+if test -x / >/dev/null 2>&1; then
+  as_test_x='test -x'
+else
+  if ls -dL / >/dev/null 2>&1; then
+    as_ls_L_option=L
+  else
+    as_ls_L_option=
+  fi
+  as_test_x='
+    eval sh -c '\''
+      if test -d "$1"; then
+        test -d "$1/.";
+      else
+	case $1 in
+        -*)set "./$1";;
+	esac;
+	case `ls -ld'$as_ls_L_option' "$1" 2>/dev/null` in
+	???[sx]*):;;*)false;;esac;fi
+    '\'' sh
+  '
+fi
+as_executable_p=$as_test_x
 
 # Sed expression to map a string onto a valid CPP name.
 as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"
@@ -5394,31 +6664,14 @@ as_tr_cpp="eval sed 'y%*$as_cr_letters%P
 as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"
 
 
-# IFS
-# We need space, tab and new line, in precisely that order.
-as_nl='
-'
-IFS=" 	$as_nl"
-
-# CDPATH.
-$as_unset CDPATH
-
 exec 6>&1
 
-# Open the log real soon, to keep \$[0] and so on meaningful, and to
+# Save the log message, to keep $[0] and so on meaningful, and to
 # report actual input values of CONFIG_FILES etc. instead of their
-# values after options handling.  Logging --version etc. is OK.
-exec 5>>config.log
-{
-  echo
-  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
-## Running $as_me. ##
-_ASBOX
-} >&5
-cat >&5 <<_CSEOF
-
+# values after options handling.
+ac_log="
 This file was extended by HTS-demo_CMU-ARCTIC-SLT $as_me 2.1, which was
-generated by GNU Autoconf 2.59.  Invocation command line was
+generated by GNU Autoconf 2.61.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
   CONFIG_HEADERS  = $CONFIG_HEADERS
@@ -5426,30 +6679,18 @@ generated by GNU Autoconf 2.59.  Invocat
   CONFIG_COMMANDS = $CONFIG_COMMANDS
   $ $0 $@
 
-_CSEOF
-echo "on `(hostname || uname -n) 2>/dev/null | sed 1q`" >&5
-echo >&5
+on `(hostname || uname -n) 2>/dev/null | sed 1q`
+"
+
 _ACEOF
 
+cat >>$CONFIG_STATUS <<_ACEOF
 # Files that config.status was made for.
-if test -n "$ac_config_files"; then
-  echo "config_files=\"$ac_config_files\"" >>$CONFIG_STATUS
-fi
-
-if test -n "$ac_config_headers"; then
-  echo "config_headers=\"$ac_config_headers\"" >>$CONFIG_STATUS
-fi
+config_files="$ac_config_files"
 
-if test -n "$ac_config_links"; then
-  echo "config_links=\"$ac_config_links\"" >>$CONFIG_STATUS
-fi
-
-if test -n "$ac_config_commands"; then
-  echo "config_commands=\"$ac_config_commands\"" >>$CONFIG_STATUS
-fi
+_ACEOF
 
 cat >>$CONFIG_STATUS <<\_ACEOF
-
 ac_cs_usage="\
 \`$as_me' instantiates files from templates according to the
 current configuration.
@@ -5457,7 +6698,7 @@ current configuration.
 Usage: $0 [OPTIONS] [FILE]...
 
   -h, --help       print this help, then exit
-  -V, --version    print version number, then exit
+  -V, --version    print version number and configuration settings, then exit
   -q, --quiet      do not print progress messages
   -d, --debug      don't remove temporary files
       --recheck    update $as_me by reconfiguring in the same conditions
@@ -5468,18 +6709,20 @@ Configuration files:
 $config_files
 
 Report bugs to <bug-autoconf@gnu.org>."
-_ACEOF
 
+_ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF
 ac_cs_version="\\
 HTS-demo_CMU-ARCTIC-SLT config.status 2.1
-configured by $0, generated by GNU Autoconf 2.59,
-  with options \\"`echo "$ac_configure_args" | sed 's/[\\""\`\$]/\\\\&/g'`\\"
+configured by $0, generated by GNU Autoconf 2.61,
+  with options \\"`echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`\\"
 
-Copyright (C) 2003 Free Software Foundation, Inc.
+Copyright (C) 2006 Free Software Foundation, Inc.
 This config.status script is free software; the Free Software Foundation
 gives unlimited permission to copy, distribute and modify it."
-srcdir=$srcdir
+
+ac_pwd='$ac_pwd'
+srcdir='$srcdir'
 _ACEOF
 
 cat >>$CONFIG_STATUS <<\_ACEOF
@@ -5490,60 +6733,42 @@ while test $# != 0
 do
   case $1 in
   --*=*)
-    ac_option=`expr "x$1" : 'x\([^=]*\)='`
-    ac_optarg=`expr "x$1" : 'x[^=]*=\(.*\)'`
+    ac_option=`expr "X$1" : 'X\([^=]*\)='`
+    ac_optarg=`expr "X$1" : 'X[^=]*=\(.*\)'`
     ac_shift=:
     ;;
-  -*)
+  *)
     ac_option=$1
     ac_optarg=$2
     ac_shift=shift
     ;;
-  *) # This is not an option, so the user has probably given explicit
-     # arguments.
-     ac_option=$1
-     ac_need_defaults=false;;
   esac
 
   case $ac_option in
   # Handling of the options.
-_ACEOF
-cat >>$CONFIG_STATUS <<\_ACEOF
   -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
     ac_cs_recheck=: ;;
-  --version | --vers* | -V )
-    echo "$ac_cs_version"; exit 0 ;;
-  --he | --h)
-    # Conflict between --help and --header
-    { { echo "$as_me:$LINENO: error: ambiguous option: $1
-Try \`$0 --help' for more information." >&5
-echo "$as_me: error: ambiguous option: $1
-Try \`$0 --help' for more information." >&2;}
-   { (exit 1); exit 1; }; };;
-  --help | --hel | -h )
-    echo "$ac_cs_usage"; exit 0 ;;
-  --debug | --d* | -d )
+  --version | --versio | --versi | --vers | --ver | --ve | --v | -V )
+    echo "$ac_cs_version"; exit ;;
+  --debug | --debu | --deb | --de | --d | -d )
     debug=: ;;
   --file | --fil | --fi | --f )
     $ac_shift
     CONFIG_FILES="$CONFIG_FILES $ac_optarg"
     ac_need_defaults=false;;
-  --header | --heade | --head | --hea )
-    $ac_shift
-    CONFIG_HEADERS="$CONFIG_HEADERS $ac_optarg"
-    ac_need_defaults=false;;
+  --he | --h |  --help | --hel | -h )
+    echo "$ac_cs_usage"; exit ;;
   -q | -quiet | --quiet | --quie | --qui | --qu | --q \
   | -silent | --silent | --silen | --sile | --sil | --si | --s)
     ac_cs_silent=: ;;
 
   # This is an error.
-  -*) { { echo "$as_me:$LINENO: error: unrecognized option: $1
-Try \`$0 --help' for more information." >&5
-echo "$as_me: error: unrecognized option: $1
-Try \`$0 --help' for more information." >&2;}
+  -*) { echo "$as_me: error: unrecognized option: $1
+Try \`$0 --help' for more information." >&2
    { (exit 1); exit 1; }; } ;;
 
-  *) ac_config_targets="$ac_config_targets $1" ;;
+  *) ac_config_targets="$ac_config_targets $1"
+     ac_need_defaults=false ;;
 
   esac
   shift
@@ -5559,21 +6784,33 @@ fi
 _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF
 if \$ac_cs_recheck; then
-  echo "running $SHELL $0 " $ac_configure_args \$ac_configure_extra_args " --no-create --no-recursion" >&6
-  exec $SHELL $0 $ac_configure_args \$ac_configure_extra_args --no-create --no-recursion
+  echo "running CONFIG_SHELL=$SHELL $SHELL $0 "$ac_configure_args \$ac_configure_extra_args " --no-create --no-recursion" >&6
+  CONFIG_SHELL=$SHELL
+  export CONFIG_SHELL
+  exec $SHELL "$0"$ac_configure_args \$ac_configure_extra_args --no-create --no-recursion
 fi
 
 _ACEOF
+cat >>$CONFIG_STATUS <<\_ACEOF
+exec 5>>config.log
+{
+  echo
+  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
+## Running $as_me. ##
+_ASBOX
+  echo "$ac_log"
+} >&5
 
-
-
-
+_ACEOF
+cat >>$CONFIG_STATUS <<_ACEOF
+_ACEOF
 
 cat >>$CONFIG_STATUS <<\_ACEOF
+
+# Handling of arguments.
 for ac_config_target in $ac_config_targets
 do
-  case "$ac_config_target" in
-  # Handling of arguments.
+  case $ac_config_target in
   "data/Makefile" ) CONFIG_FILES="$CONFIG_FILES data/Makefile" ;;
   "scripts/Config.pm" ) CONFIG_FILES="$CONFIG_FILES scripts/Config.pm" ;;
   "Makefile" ) CONFIG_FILES="$CONFIG_FILES Makefile" ;;
@@ -5592,15 +6831,19 @@ if $ac_need_defaults; then
 fi
 
 # Have a temporary directory for convenience.  Make it in the build tree
-# simply because there is no reason to put it here, and in addition,
+# simply because there is no reason against having it here, and in addition,
 # creating and moving files from /tmp can sometimes cause problems.
-# Create a temporary directory, and hook for its removal unless debugging.
+# Hook for its removal unless debugging.
+# Note that there is a small window in which the directory will not be cleaned:
+# after its creation but before its name has been assigned to `$tmp'.
 $debug ||
 {
-  trap 'exit_status=$?; rm -rf $tmp && exit $exit_status' 0
+  tmp=
+  trap 'exit_status=$?
+  { test -z "$tmp" || test ! -d "$tmp" || rm -fr "$tmp"; } && exit $exit_status
+' 0
   trap '{ (exit 1); exit 1; }' 1 2 13 15
 }
-
 # Create a (secure) tmp directory for tmp files.
 
 {
@@ -5604,361 +6847,481 @@ $debug ||
 # Create a (secure) tmp directory for tmp files.
 
 {
-  tmp=`(umask 077 && mktemp -d -q "./confstatXXXXXX") 2>/dev/null` &&
+  tmp=`(umask 077 && mktemp -d "./confXXXXXX") 2>/dev/null` &&
   test -n "$tmp" && test -d "$tmp"
 }  ||
 {
-  tmp=./confstat$$-$RANDOM
-  (umask 077 && mkdir $tmp)
+  tmp=./conf$$-$RANDOM
+  (umask 077 && mkdir "$tmp")
 } ||
 {
    echo "$me: cannot create a temporary directory in ." >&2
    { (exit 1); exit 1; }
 }
 
-_ACEOF
-
-cat >>$CONFIG_STATUS <<_ACEOF
-
 #
-# CONFIG_FILES section.
+# Set up the sed scripts for CONFIG_FILES section.
 #
 
 # No need to generate the scripts if there are no CONFIG_FILES.
 # This happens for instance when ./config.status config.h
-if test -n "\$CONFIG_FILES"; then
-  # Protect against being on the right side of a sed subst in config.status.
-  sed 's/,@/@@/; s/@,/@@/; s/,;t t\$/@;t t/; /@;t t\$/s/[\\\\&,]/\\\\&/g;
-   s/@@/,@/; s/@@/@,/; s/@;t t\$/,;t t/' >\$tmp/subs.sed <<\\CEOF
-s,@SHELL@,$SHELL,;t t
-s,@PATH_SEPARATOR@,$PATH_SEPARATOR,;t t
-s,@PACKAGE_NAME@,$PACKAGE_NAME,;t t
-s,@PACKAGE_TARNAME@,$PACKAGE_TARNAME,;t t
-s,@PACKAGE_VERSION@,$PACKAGE_VERSION,;t t
-s,@PACKAGE_STRING@,$PACKAGE_STRING,;t t
-s,@PACKAGE_BUGREPORT@,$PACKAGE_BUGREPORT,;t t
-s,@exec_prefix@,$exec_prefix,;t t
-s,@prefix@,$prefix,;t t
-s,@program_transform_name@,$program_transform_name,;t t
-s,@bindir@,$bindir,;t t
-s,@sbindir@,$sbindir,;t t
-s,@libexecdir@,$libexecdir,;t t
-s,@datadir@,$datadir,;t t
-s,@sysconfdir@,$sysconfdir,;t t
-s,@sharedstatedir@,$sharedstatedir,;t t
-s,@localstatedir@,$localstatedir,;t t
-s,@libdir@,$libdir,;t t
-s,@includedir@,$includedir,;t t
-s,@oldincludedir@,$oldincludedir,;t t
-s,@infodir@,$infodir,;t t
-s,@mandir@,$mandir,;t t
-s,@build_alias@,$build_alias,;t t
-s,@host_alias@,$host_alias,;t t
-s,@target_alias@,$target_alias,;t t
-s,@DEFS@,$DEFS,;t t
-s,@ECHO_C@,$ECHO_C,;t t
-s,@ECHO_N@,$ECHO_N,;t t
-s,@ECHO_T@,$ECHO_T,;t t
-s,@LIBS@,$LIBS,;t t
-s,@AWK@,$AWK,;t t
-s,@PERL@,$PERL,;t t
-s,@TCLSH@,$TCLSH,;t t
-s,@BC@,$BC,;t t
-s,@WC@,$WC,;t t
-s,@DUMPFEATS@,$DUMPFEATS,;t t
-s,@SWAB@,$SWAB,;t t
-s,@X2X@,$X2X,;t t
-s,@FRAME@,$FRAME,;t t
-s,@WINDOW@,$WINDOW,;t t
-s,@MGCEP@,$MGCEP,;t t
-s,@LPC2LSP@,$LPC2LSP,;t t
-s,@NAN@,$NAN,;t t
-s,@NRAND@,$NRAND,;t t
-s,@VSTAT@,$VSTAT,;t t
-s,@STEP@,$STEP,;t t
-s,@SOPR@,$SOPR,;t t
-s,@VOPR@,$VOPR,;t t
-s,@FREQT@,$FREQT,;t t
-s,@C2ACR@,$C2ACR,;t t
-s,@MC2B@,$MC2B,;t t
-s,@B2MC@,$B2MC,;t t
-s,@MERGE@,$MERGE,;t t
-s,@BCP@,$BCP,;t t
-s,@EXCITE@,$EXCITE,;t t
-s,@LSP2LPC@,$LSP2LPC,;t t
-s,@LSPCHECK@,$LSPCHECK,;t t
-s,@MGC2MGC@,$MGC2MGC,;t t
-s,@MGLSADF@,$MGLSADF,;t t
-s,@SOX@,$SOX,;t t
-s,@HMGENS@,$HMGENS,;t t
-s,@HCOMPV@,$HCOMPV,;t t
-s,@HINIT@,$HINIT,;t t
-s,@HREST@,$HREST,;t t
-s,@HEREST@,$HEREST,;t t
-s,@HHED@,$HHED,;t t
-s,@ENGINE@,$ENGINE,;t t
-s,@CC@,$CC,;t t
-s,@CFLAGS@,$CFLAGS,;t t
-s,@LDFLAGS@,$LDFLAGS,;t t
-s,@CPPFLAGS@,$CPPFLAGS,;t t
-s,@ac_ct_CC@,$ac_ct_CC,;t t
-s,@EXEEXT@,$EXEEXT,;t t
-s,@OBJEXT@,$OBJEXT,;t t
-s,@BYTESWAP@,$BYTESWAP,;t t
-s,@SPEAKER@,$SPEAKER,;t t
-s,@DATASET@,$DATASET,;t t
-s,@VER@,$VER,;t t
-s,@QNUM@,$QNUM,;t t
-s,@PWD@,$PWD,;t t
-s,@FRAMELEN@,$FRAMELEN,;t t
-s,@FRAMESHIFT@,$FRAMESHIFT,;t t
-s,@WINDOWTYPE@,$WINDOWTYPE,;t t
-s,@NORMALIZE@,$NORMALIZE,;t t
-s,@FFTLEN@,$FFTLEN,;t t
-s,@FREQWARP@,$FREQWARP,;t t
-s,@GAMMA@,$GAMMA,;t t
-s,@MGCLSP@,$MGCLSP,;t t
-s,@MGCORDER@,$MGCORDER,;t t
-s,@LNGAIN@,$LNGAIN,;t t
-s,@LOWERF0@,$LOWERF0,;t t
-s,@UPPERF0@,$UPPERF0,;t t
-s,@NOISEMASK@,$NOISEMASK,;t t
-s,@PSTFILTER@,$PSTFILTER,;t t
-s,@IMPLEN@,$IMPLEN,;t t
-s,@SAMPFREQ@,$SAMPFREQ,;t t
-s,@MGCVSIZE@,$MGCVSIZE,;t t
-s,@NMGCWIN@,$NMGCWIN,;t t
-s,@NLF0WIN@,$NLF0WIN,;t t
-s,@F0STREN@,$F0STREN,;t t
-s,@NSTATE@,$NSTATE,;t t
-s,@NITER@,$NITER,;t t
-s,@WFLOOR@,$WFLOOR,;t t
-s,@MAXDEV@,$MAXDEV,;t t
-s,@MINDUR@,$MINDUR,;t t
-s,@NMGCTRANSBLK@,$NMGCTRANSBLK,;t t
-s,@NLF0TRANSBLK@,$NLF0TRANSBLK,;t t
-s,@MGCBANDWIDTH@,$MGCBANDWIDTH,;t t
-s,@LF0BANDWIDTH@,$LF0BANDWIDTH,;t t
-s,@MAXEMITER@,$MAXEMITER,;t t
-s,@EMEPSILON@,$EMEPSILON,;t t
-s,@USEGV@,$USEGV,;t t
-s,@MAXGVITER@,$MAXGVITER,;t t
-s,@GVEPSILON@,$GVEPSILON,;t t
-s,@MINEUCNORM@,$MINEUCNORM,;t t
-s,@STEPINIT@,$STEPINIT,;t t
-s,@STEPINC@,$STEPINC,;t t
-s,@STEPDEC@,$STEPDEC,;t t
-s,@HMMWEIGHT@,$HMMWEIGHT,;t t
-s,@GVWEIGHT@,$GVWEIGHT,;t t
-s,@OPTKIND@,$OPTKIND,;t t
-s,@LIBOBJS@,$LIBOBJS,;t t
-s,@LTLIBOBJS@,$LTLIBOBJS,;t t
-CEOF
+if test -n "$CONFIG_FILES"; then
 
 _ACEOF
 
-  cat >>$CONFIG_STATUS <<\_ACEOF
-  # Split the substitutions into bite-sized pieces for seds with
-  # small command number limits, like on Digital OSF/1 and HP-UX.
-  ac_max_sed_lines=48
-  ac_sed_frag=1 # Number of current file.
-  ac_beg=1 # First line for current file.
-  ac_end=$ac_max_sed_lines # Line after last line for current file.
-  ac_more_lines=:
-  ac_sed_cmds=
-  while $ac_more_lines; do
-    if test $ac_beg -gt 1; then
-      sed "1,${ac_beg}d; ${ac_end}q" $tmp/subs.sed >$tmp/subs.frag
-    else
-      sed "${ac_end}q" $tmp/subs.sed >$tmp/subs.frag
-    fi
-    if test ! -s $tmp/subs.frag; then
-      ac_more_lines=false
-    else
-      # The purpose of the label and of the branching condition is to
-      # speed up the sed processing (if there are no `@' at all, there
-      # is no need to browse any of the substitutions).
-      # These are the two extra sed commands mentioned above.
-      (echo ':t
-  /@[a-zA-Z_][a-zA-Z_0-9]*@/!b' && cat $tmp/subs.frag) >$tmp/subs-$ac_sed_frag.sed
-      if test -z "$ac_sed_cmds"; then
-	ac_sed_cmds="sed -f $tmp/subs-$ac_sed_frag.sed"
-      else
-	ac_sed_cmds="$ac_sed_cmds | sed -f $tmp/subs-$ac_sed_frag.sed"
-      fi
-      ac_sed_frag=`expr $ac_sed_frag + 1`
-      ac_beg=$ac_end
-      ac_end=`expr $ac_end + $ac_max_sed_lines`
+
+
+ac_delim='%!_!# '
+for ac_last_try in false false false false false :; do
+  cat >conf$$subs.sed <<_ACEOF
+SHELL!$SHELL$ac_delim
+PATH_SEPARATOR!$PATH_SEPARATOR$ac_delim
+PACKAGE_NAME!$PACKAGE_NAME$ac_delim
+PACKAGE_TARNAME!$PACKAGE_TARNAME$ac_delim
+PACKAGE_VERSION!$PACKAGE_VERSION$ac_delim
+PACKAGE_STRING!$PACKAGE_STRING$ac_delim
+PACKAGE_BUGREPORT!$PACKAGE_BUGREPORT$ac_delim
+exec_prefix!$exec_prefix$ac_delim
+prefix!$prefix$ac_delim
+program_transform_name!$program_transform_name$ac_delim
+bindir!$bindir$ac_delim
+sbindir!$sbindir$ac_delim
+libexecdir!$libexecdir$ac_delim
+datarootdir!$datarootdir$ac_delim
+datadir!$datadir$ac_delim
+sysconfdir!$sysconfdir$ac_delim
+sharedstatedir!$sharedstatedir$ac_delim
+localstatedir!$localstatedir$ac_delim
+includedir!$includedir$ac_delim
+oldincludedir!$oldincludedir$ac_delim
+docdir!$docdir$ac_delim
+infodir!$infodir$ac_delim
+htmldir!$htmldir$ac_delim
+dvidir!$dvidir$ac_delim
+pdfdir!$pdfdir$ac_delim
+psdir!$psdir$ac_delim
+libdir!$libdir$ac_delim
+localedir!$localedir$ac_delim
+mandir!$mandir$ac_delim
+DEFS!$DEFS$ac_delim
+ECHO_C!$ECHO_C$ac_delim
+ECHO_N!$ECHO_N$ac_delim
+ECHO_T!$ECHO_T$ac_delim
+LIBS!$LIBS$ac_delim
+build_alias!$build_alias$ac_delim
+host_alias!$host_alias$ac_delim
+target_alias!$target_alias$ac_delim
+AWK!$AWK$ac_delim
+PERL!$PERL$ac_delim
+TCLSH!$TCLSH$ac_delim
+BC!$BC$ac_delim
+WC!$WC$ac_delim
+FEATURELIST!$FEATURELIST$ac_delim
+VOICELANG!$VOICELANG$ac_delim
+SWAB!$SWAB$ac_delim
+X2X!$X2X$ac_delim
+FRAME!$FRAME$ac_delim
+WINDOW!$WINDOW$ac_delim
+MGCEP!$MGCEP$ac_delim
+GCEP!$GCEP$ac_delim
+IGLSADF!$IGLSADF$ac_delim
+LPC2LSP!$LPC2LSP$ac_delim
+NAN!$NAN$ac_delim
+NRAND!$NRAND$ac_delim
+VSTAT!$VSTAT$ac_delim
+STEP!$STEP$ac_delim
+SOPR!$SOPR$ac_delim
+VOPR!$VOPR$ac_delim
+FREQT!$FREQT$ac_delim
+C2ACR!$C2ACR$ac_delim
+MC2B!$MC2B$ac_delim
+B2MC!$B2MC$ac_delim
+MERGE!$MERGE$ac_delim
+BCP!$BCP$ac_delim
+EXCITE!$EXCITE$ac_delim
+LSP2LPC!$LSP2LPC$ac_delim
+LSPCHECK!$LSPCHECK$ac_delim
+MGC2MGC!$MGC2MGC$ac_delim
+MGLSADF!$MGLSADF$ac_delim
+SOX!$SOX$ac_delim
+HMGENS!$HMGENS$ac_delim
+HCOMPV!$HCOMPV$ac_delim
+HINIT!$HINIT$ac_delim
+HREST!$HREST$ac_delim
+HEREST!$HEREST$ac_delim
+HHED!$HHED$ac_delim
+ENGINE!$ENGINE$ac_delim
+CC!$CC$ac_delim
+CFLAGS!$CFLAGS$ac_delim
+LDFLAGS!$LDFLAGS$ac_delim
+CPPFLAGS!$CPPFLAGS$ac_delim
+ac_ct_CC!$ac_ct_CC$ac_delim
+EXEEXT!$EXEEXT$ac_delim
+OBJEXT!$OBJEXT$ac_delim
+CPP!$CPP$ac_delim
+GREP!$GREP$ac_delim
+EGREP!$EGREP$ac_delim
+BYTESWAP!$BYTESWAP$ac_delim
+SPEAKER!$SPEAKER$ac_delim
+DATASET!$DATASET$ac_delim
+VER!$VER$ac_delim
+QNUM!$QNUM$ac_delim
+PWD!$PWD$ac_delim
+FRAMELEN!$FRAMELEN$ac_delim
+FRAMESHIFT!$FRAMESHIFT$ac_delim
+WINDOWTYPE!$WINDOWTYPE$ac_delim
+NORMALIZE!$NORMALIZE$ac_delim
+_ACEOF
+
+  if test `sed -n "s/.*$ac_delim\$/X/p" conf$$subs.sed | grep -c X` = 97; then
+    break
+  elif $ac_last_try; then
+    { { echo "$as_me:$LINENO: error: could not make $CONFIG_STATUS" >&5
+echo "$as_me: error: could not make $CONFIG_STATUS" >&2;}
+   { (exit 1); exit 1; }; }
+  else
+    ac_delim="$ac_delim!$ac_delim _$ac_delim!! "
     fi
   done
-  if test -z "$ac_sed_cmds"; then
-    ac_sed_cmds=cat
+
+ac_eof=`sed -n '/^CEOF[0-9]*$/s/CEOF/0/p' conf$$subs.sed`
+if test -n "$ac_eof"; then
+  ac_eof=`echo "$ac_eof" | sort -nru | sed 1q`
+  ac_eof=`expr $ac_eof + 1`
+fi
+
+cat >>$CONFIG_STATUS <<_ACEOF
+cat >"\$tmp/subs-1.sed" <<\CEOF$ac_eof
+/@[a-zA-Z_][a-zA-Z_0-9]*@/!b
+_ACEOF
+sed '
+s/[,\\&]/\\&/g; s/@/@|#_!!_#|/g
+s/^/s,@/; s/!/@,|#_!!_#|/
+:n
+t n
+s/'"$ac_delim"'$/,g/; t
+s/$/\\/; p
+N; s/^.*\n//; s/[,\\&]/\\&/g; s/@/@|#_!!_#|/g; b n
+' >>$CONFIG_STATUS <conf$$subs.sed
+rm -f conf$$subs.sed
+cat >>$CONFIG_STATUS <<_ACEOF
+CEOF$ac_eof
+_ACEOF
+
+
+ac_delim='%!_!# '
+for ac_last_try in false false false false false :; do
+  cat >conf$$subs.sed <<_ACEOF
+FFTLEN!$FFTLEN$ac_delim
+FREQWARP!$FREQWARP$ac_delim
+GAMMA!$GAMMA$ac_delim
+MGCLSP!$MGCLSP$ac_delim
+MGCORDER!$MGCORDER$ac_delim
+STRORDER!$STRORDER$ac_delim
+MAGORDER!$MAGORDER$ac_delim
+LNGAIN!$LNGAIN$ac_delim
+LOWERF0!$LOWERF0$ac_delim
+UPPERF0!$UPPERF0$ac_delim
+NOISEMASK!$NOISEMASK$ac_delim
+PSTFILTER!$PSTFILTER$ac_delim
+IMPLEN!$IMPLEN$ac_delim
+SAMPFREQ!$SAMPFREQ$ac_delim
+MGCVSIZE!$MGCVSIZE$ac_delim
+STRVSIZE!$STRVSIZE$ac_delim
+MAGVSIZE!$MAGVSIZE$ac_delim
+NMGCWIN!$NMGCWIN$ac_delim
+NSTRWIN!$NSTRWIN$ac_delim
+NMAGWIN!$NMAGWIN$ac_delim
+NLF0WIN!$NLF0WIN$ac_delim
+F0STREN!$F0STREN$ac_delim
+NSTATE!$NSTATE$ac_delim
+NITER!$NITER$ac_delim
+WFLOOR!$WFLOOR$ac_delim
+MAXDEV!$MAXDEV$ac_delim
+MINDUR!$MINDUR$ac_delim
+NMGCTRANSBLK!$NMGCTRANSBLK$ac_delim
+NSTRTRANSBLK!$NSTRTRANSBLK$ac_delim
+NMAGTRANSBLK!$NMAGTRANSBLK$ac_delim
+NLF0TRANSBLK!$NLF0TRANSBLK$ac_delim
+MGCBANDWIDTH!$MGCBANDWIDTH$ac_delim
+STRBANDWIDTH!$STRBANDWIDTH$ac_delim
+MAGBANDWIDTH!$MAGBANDWIDTH$ac_delim
+LF0BANDWIDTH!$LF0BANDWIDTH$ac_delim
+MAXEMITER!$MAXEMITER$ac_delim
+EMEPSILON!$EMEPSILON$ac_delim
+USEGV!$USEGV$ac_delim
+MAXGVITER!$MAXGVITER$ac_delim
+GVEPSILON!$GVEPSILON$ac_delim
+MINEUCNORM!$MINEUCNORM$ac_delim
+STEPINIT!$STEPINIT$ac_delim
+STEPINC!$STEPINC$ac_delim
+STEPDEC!$STEPDEC$ac_delim
+HMMWEIGHT!$HMMWEIGHT$ac_delim
+GVWEIGHT!$GVWEIGHT$ac_delim
+OPTKIND!$OPTKIND$ac_delim
+LIBOBJS!$LIBOBJS$ac_delim
+LTLIBOBJS!$LTLIBOBJS$ac_delim
+_ACEOF
+
+  if test `sed -n "s/.*$ac_delim\$/X/p" conf$$subs.sed | grep -c X` = 49; then
+    break
+  elif $ac_last_try; then
+    { { echo "$as_me:$LINENO: error: could not make $CONFIG_STATUS" >&5
+echo "$as_me: error: could not make $CONFIG_STATUS" >&2;}
+   { (exit 1); exit 1; }; }
+  else
+    ac_delim="$ac_delim!$ac_delim _$ac_delim!! "
+  fi
+done
+
+ac_eof=`sed -n '/^CEOF[0-9]*$/s/CEOF/0/p' conf$$subs.sed`
+if test -n "$ac_eof"; then
+  ac_eof=`echo "$ac_eof" | sort -nru | sed 1q`
+  ac_eof=`expr $ac_eof + 1`
   fi
-fi # test -n "$CONFIG_FILES"
 
+cat >>$CONFIG_STATUS <<_ACEOF
+cat >"\$tmp/subs-2.sed" <<\CEOF$ac_eof
+/@[a-zA-Z_][a-zA-Z_0-9]*@/!b end
+_ACEOF
+sed '
+s/[,\\&]/\\&/g; s/@/@|#_!!_#|/g
+s/^/s,@/; s/!/@,|#_!!_#|/
+:n
+t n
+s/'"$ac_delim"'$/,g/; t
+s/$/\\/; p
+N; s/^.*\n//; s/[,\\&]/\\&/g; s/@/@|#_!!_#|/g; b n
+' >>$CONFIG_STATUS <conf$$subs.sed
+rm -f conf$$subs.sed
+cat >>$CONFIG_STATUS <<_ACEOF
+:end
+s/|#_!!_#|//g
+CEOF$ac_eof
 _ACEOF
+
+
+# VPATH may cause trouble with some makes, so we remove $(srcdir),
+# ${srcdir} and @srcdir@ from VPATH if srcdir is ".", strip leading and
+# trailing colons and then remove the whole line if VPATH becomes empty
+# (actually we leave an empty line to preserve line numbers).
+if test "x$srcdir" = x.; then
+  ac_vpsub='/^[	 ]*VPATH[	 ]*=/{
+s/:*\$(srcdir):*/:/
+s/:*\${srcdir}:*/:/
+s/:*@srcdir@:*/:/
+s/^\([^=]*=[	 ]*\):*/\1/
+s/:*$//
+s/^[^=]*=[	 ]*$//
+}'
+fi
+
 cat >>$CONFIG_STATUS <<\_ACEOF
-for ac_file in : $CONFIG_FILES; do test "x$ac_file" = x: && continue
-  # Support "outfile[:infile[:infile...]]", defaulting infile="outfile.in".
-  case $ac_file in
-  - | *:- | *:-:* ) # input from stdin
-	cat >$tmp/stdin
-	ac_file_in=`echo "$ac_file" | sed 's,[^:]*:,,'`
-	ac_file=`echo "$ac_file" | sed 's,:.*,,'` ;;
-  *:* ) ac_file_in=`echo "$ac_file" | sed 's,[^:]*:,,'`
-	ac_file=`echo "$ac_file" | sed 's,:.*,,'` ;;
-  * )   ac_file_in=$ac_file.in ;;
+fi # test -n "$CONFIG_FILES"
+
+
+for ac_tag in  :F $CONFIG_FILES
+do
+  case $ac_tag in
+  :[FHLC]) ac_mode=$ac_tag; continue;;
+  esac
+  case $ac_mode$ac_tag in
+  :[FHL]*:*);;
+  :L* | :C*:*) { { echo "$as_me:$LINENO: error: Invalid tag $ac_tag." >&5
+echo "$as_me: error: Invalid tag $ac_tag." >&2;}
+   { (exit 1); exit 1; }; };;
+  :[FH]-) ac_tag=-:-;;
+  :[FH]*) ac_tag=$ac_tag:$ac_tag.in;;
+  esac
+  ac_save_IFS=$IFS
+  IFS=:
+  set x $ac_tag
+  IFS=$ac_save_IFS
+  shift
+  ac_file=$1
+  shift
+
+  case $ac_mode in
+  :L) ac_source=$1;;
+  :[FH])
+    ac_file_inputs=
+    for ac_f
+    do
+      case $ac_f in
+      -) ac_f="$tmp/stdin";;
+      *) # Look for the file first in the build tree, then in the source tree
+	 # (if the path is not absolute).  The absolute path cannot be DOS-style,
+	 # because $ac_f cannot contain `:'.
+	 test -f "$ac_f" ||
+	   case $ac_f in
+	   [\\/$]*) false;;
+	   *) test -f "$srcdir/$ac_f" && ac_f="$srcdir/$ac_f";;
+	   esac ||
+	   { { echo "$as_me:$LINENO: error: cannot find input file: $ac_f" >&5
+echo "$as_me: error: cannot find input file: $ac_f" >&2;}
+   { (exit 1); exit 1; }; };;
+      esac
+      ac_file_inputs="$ac_file_inputs $ac_f"
+    done
+
+    # Let's still pretend it is `configure' which instantiates (i.e., don't
+    # use $as_me), people would be surprised to read:
+    #    /* config.h.  Generated by config.status.  */
+    configure_input="Generated from "`IFS=:
+	  echo $* | sed 's|^[^:]*/||;s|:[^:]*/|, |g'`" by configure."
+    if test x"$ac_file" != x-; then
+      configure_input="$ac_file.  $configure_input"
+      { echo "$as_me:$LINENO: creating $ac_file" >&5
+echo "$as_me: creating $ac_file" >&6;}
+    fi
+
+    case $ac_tag in
+    *:-:* | *:-) cat >"$tmp/stdin";;
+    esac
+    ;;
   esac
 
-  # Compute @srcdir@, @top_srcdir@, and @INSTALL@ for subdirectories.
-  ac_dir=`(dirname "$ac_file") 2>/dev/null ||
+  ac_dir=`$as_dirname -- "$ac_file" ||
 $as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$ac_file" : 'X\(//\)[^/]' \| \
 	 X"$ac_file" : 'X\(//\)$' \| \
-	 X"$ac_file" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 X"$ac_file" : 'X\(/\)' \| . 2>/dev/null ||
 echo X"$ac_file" |
-    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
-  	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
-  	  /^X\(\/\/\)$/{ s//\1/; q; }
-  	  /^X\(\/\).*/{ s//\1/; q; }
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
   	  s/.*/./; q'`
-  { if $as_mkdir_p; then
-    mkdir -p "$ac_dir"
-  else
-    as_dir="$ac_dir"
+  { as_dir="$ac_dir"
+  case $as_dir in #(
+  -*) as_dir=./$as_dir;;
+  esac
+  test -d "$as_dir" || { $as_mkdir_p && mkdir -p "$as_dir"; } || {
     as_dirs=
-    while test ! -d "$as_dir"; do
-      as_dirs="$as_dir $as_dirs"
-      as_dir=`(dirname "$as_dir") 2>/dev/null ||
+    while :; do
+      case $as_dir in #(
+      *\'*) as_qdir=`echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #(
+      *) as_qdir=$as_dir;;
+      esac
+      as_dirs="'$as_qdir' $as_dirs"
+      as_dir=`$as_dirname -- "$as_dir" ||
 $as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
 	 X"$as_dir" : 'X\(//\)[^/]' \| \
 	 X"$as_dir" : 'X\(//\)$' \| \
-	 X"$as_dir" : 'X\(/\)' \| \
-	 .     : '\(.\)' 2>/dev/null ||
+	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
 echo X"$as_dir" |
-    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
-  	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
-  	  /^X\(\/\/\)$/{ s//\1/; q; }
-  	  /^X\(\/\).*/{ s//\1/; q; }
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)[^/].*/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\/\)$/{
+	    s//\1/
+	    q
+	  }
+	  /^X\(\/\).*/{
+	    s//\1/
+	    q
+	  }
   	  s/.*/./; q'`
+      test -d "$as_dir" && break
     done
-    test ! -n "$as_dirs" || mkdir $as_dirs
-  fi || { { echo "$as_me:$LINENO: error: cannot create directory \"$ac_dir\"" >&5
-echo "$as_me: error: cannot create directory \"$ac_dir\"" >&2;}
+    test -z "$as_dirs" || eval "mkdir $as_dirs"
+  } || test -d "$as_dir" || { { echo "$as_me:$LINENO: error: cannot create directory $as_dir" >&5
+echo "$as_me: error: cannot create directory $as_dir" >&2;}
    { (exit 1); exit 1; }; }; }
-
   ac_builddir=.
 
-if test "$ac_dir" != .; then
+case "$ac_dir" in
+.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
+*)
   ac_dir_suffix=/`echo "$ac_dir" | sed 's,^\.[\\/],,'`
-  # A "../" for each directory in $ac_dir_suffix.
-  ac_top_builddir=`echo "$ac_dir_suffix" | sed 's,/[^\\/]*,../,g'`
-else
-  ac_dir_suffix= ac_top_builddir=
-fi
+  # A ".." for each directory in $ac_dir_suffix.
+  ac_top_builddir_sub=`echo "$ac_dir_suffix" | sed 's,/[^\\/]*,/..,g;s,/,,'`
+  case $ac_top_builddir_sub in
+  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
+  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
+  esac ;;
+esac
+ac_abs_top_builddir=$ac_pwd
+ac_abs_builddir=$ac_pwd$ac_dir_suffix
+# for backward compatibility:
+ac_top_builddir=$ac_top_build_prefix
 
 case $srcdir in
-  .)  # No --srcdir option.  We are building in place.
+  .)  # We are building in place.
     ac_srcdir=.
-    if test -z "$ac_top_builddir"; then
-       ac_top_srcdir=.
-    else
-       ac_top_srcdir=`echo $ac_top_builddir | sed 's,/$,,'`
-    fi ;;
-  [\\/]* | ?:[\\/]* )  # Absolute path.
+    ac_top_srcdir=$ac_top_builddir_sub
+    ac_abs_top_srcdir=$ac_pwd ;;
+  [\\/]* | ?:[\\/]* )  # Absolute name.
     ac_srcdir=$srcdir$ac_dir_suffix;
-    ac_top_srcdir=$srcdir ;;
-  *) # Relative path.
-    ac_srcdir=$ac_top_builddir$srcdir$ac_dir_suffix
-    ac_top_srcdir=$ac_top_builddir$srcdir ;;
+    ac_top_srcdir=$srcdir
+    ac_abs_top_srcdir=$srcdir ;;
+  *) # Relative name.
+    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
+    ac_top_srcdir=$ac_top_build_prefix$srcdir
+    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
 esac
+ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix
 
-# Do not use `cd foo && pwd` to compute absolute paths, because
-# the directories may not exist.
-case `pwd` in
-.) ac_abs_builddir="$ac_dir";;
-*)
-  case "$ac_dir" in
-  .) ac_abs_builddir=`pwd`;;
-  [\\/]* | ?:[\\/]* ) ac_abs_builddir="$ac_dir";;
-  *) ac_abs_builddir=`pwd`/"$ac_dir";;
-  esac;;
-esac
-case $ac_abs_builddir in
-.) ac_abs_top_builddir=${ac_top_builddir}.;;
-*)
-  case ${ac_top_builddir}. in
-  .) ac_abs_top_builddir=$ac_abs_builddir;;
-  [\\/]* | ?:[\\/]* ) ac_abs_top_builddir=${ac_top_builddir}.;;
-  *) ac_abs_top_builddir=$ac_abs_builddir/${ac_top_builddir}.;;
-  esac;;
-esac
-case $ac_abs_builddir in
-.) ac_abs_srcdir=$ac_srcdir;;
-*)
-  case $ac_srcdir in
-  .) ac_abs_srcdir=$ac_abs_builddir;;
-  [\\/]* | ?:[\\/]* ) ac_abs_srcdir=$ac_srcdir;;
-  *) ac_abs_srcdir=$ac_abs_builddir/$ac_srcdir;;
-  esac;;
-esac
-case $ac_abs_builddir in
-.) ac_abs_top_srcdir=$ac_top_srcdir;;
-*)
-  case $ac_top_srcdir in
-  .) ac_abs_top_srcdir=$ac_abs_builddir;;
-  [\\/]* | ?:[\\/]* ) ac_abs_top_srcdir=$ac_top_srcdir;;
-  *) ac_abs_top_srcdir=$ac_abs_builddir/$ac_top_srcdir;;
-  esac;;
-esac
 
+  case $ac_mode in
+  :F)
+  #
+  # CONFIG_FILE
+  #
 
+_ACEOF
 
-  if test x"$ac_file" != x-; then
-    { echo "$as_me:$LINENO: creating $ac_file" >&5
-echo "$as_me: creating $ac_file" >&6;}
-    rm -f "$ac_file"
-  fi
-  # Let's still pretend it is `configure' which instantiates (i.e., don't
-  # use $as_me), people would be surprised to read:
-  #    /* config.h.  Generated by config.status.  */
-  if test x"$ac_file" = x-; then
-    configure_input=
-  else
-    configure_input="$ac_file.  "
-  fi
-  configure_input=$configure_input"Generated from `echo $ac_file_in |
-				     sed 's,.*/,,'` by configure."
+cat >>$CONFIG_STATUS <<\_ACEOF
+# If the template does not know about datarootdir, expand it.
+# FIXME: This hack should be removed a few years after 2.60.
+ac_datarootdir_hack=; ac_datarootdir_seen=
 
-  # First look for the input files in the build tree, otherwise in the
-  # src tree.
-  ac_file_inputs=`IFS=:
-    for f in $ac_file_in; do
-      case $f in
-      -) echo $tmp/stdin ;;
-      [\\/$]*)
-	 # Absolute (can't be DOS-style, as IFS=:)
-	 test -f "$f" || { { echo "$as_me:$LINENO: error: cannot find input file: $f" >&5
-echo "$as_me: error: cannot find input file: $f" >&2;}
-   { (exit 1); exit 1; }; }
-	 echo "$f";;
-      *) # Relative
-	 if test -f "$f"; then
-	   # Build tree
-	   echo "$f"
-	 elif test -f "$srcdir/$f"; then
-	   # Source tree
-	   echo "$srcdir/$f"
-	 else
-	   # /dev/null tree
-	   { { echo "$as_me:$LINENO: error: cannot find input file: $f" >&5
-echo "$as_me: error: cannot find input file: $f" >&2;}
-   { (exit 1); exit 1; }; }
-	 fi;;
+case `sed -n '/datarootdir/ {
+  p
+  q
+}
+/@datadir@/p
+/@docdir@/p
+/@infodir@/p
+/@localedir@/p
+/@mandir@/p
+' $ac_file_inputs` in
+*datarootdir*) ac_datarootdir_seen=yes;;
+*@datadir@*|*@docdir@*|*@infodir@*|*@localedir@*|*@mandir@*)
+  { echo "$as_me:$LINENO: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&5
+echo "$as_me: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&2;}
+_ACEOF
+cat >>$CONFIG_STATUS <<_ACEOF
+  ac_datarootdir_hack='
+  s&@datadir@&$datadir&g
+  s&@docdir@&$docdir&g
+  s&@infodir@&$infodir&g
+  s&@localedir@&$localedir&g
+  s&@mandir@&$mandir&g
+    s&\\\${datarootdir}&$datarootdir&g' ;;
       esac
-    done` || { (exit 1); exit 1; }
 _ACEOF
+
+# Neutralize VPATH when `$srcdir' = `.'.
+# Shell code in configure.ac might set extrasub.
+# FIXME: do we really want to maintain this feature?
 cat >>$CONFIG_STATUS <<_ACEOF
   sed "$ac_vpsub
 $extrasub
@@ -5966,28 +7329,39 @@ _ACEOF
 cat >>$CONFIG_STATUS <<\_ACEOF
 :t
 /@[a-zA-Z_][a-zA-Z_0-9]*@/!b
-s,@configure_input@,$configure_input,;t t
-s,@srcdir@,$ac_srcdir,;t t
-s,@abs_srcdir@,$ac_abs_srcdir,;t t
-s,@top_srcdir@,$ac_top_srcdir,;t t
-s,@abs_top_srcdir@,$ac_abs_top_srcdir,;t t
-s,@builddir@,$ac_builddir,;t t
-s,@abs_builddir@,$ac_abs_builddir,;t t
-s,@top_builddir@,$ac_top_builddir,;t t
-s,@abs_top_builddir@,$ac_abs_top_builddir,;t t
-" $ac_file_inputs | (eval "$ac_sed_cmds") >$tmp/out
-  rm -f $tmp/stdin
-  if test x"$ac_file" != x-; then
-    mv $tmp/out $ac_file
-  else
-    cat $tmp/out
-    rm -f $tmp/out
-  fi
+s&@configure_input@&$configure_input&;t t
+s&@top_builddir@&$ac_top_builddir_sub&;t t
+s&@srcdir@&$ac_srcdir&;t t
+s&@abs_srcdir@&$ac_abs_srcdir&;t t
+s&@top_srcdir@&$ac_top_srcdir&;t t
+s&@abs_top_srcdir@&$ac_abs_top_srcdir&;t t
+s&@builddir@&$ac_builddir&;t t
+s&@abs_builddir@&$ac_abs_builddir&;t t
+s&@abs_top_builddir@&$ac_abs_top_builddir&;t t
+$ac_datarootdir_hack
+" $ac_file_inputs | sed -f "$tmp/subs-1.sed" | sed -f "$tmp/subs-2.sed" >$tmp/out
+
+test -z "$ac_datarootdir_hack$ac_datarootdir_seen" &&
+  { ac_out=`sed -n '/\${datarootdir}/p' "$tmp/out"`; test -n "$ac_out"; } &&
+  { ac_out=`sed -n '/^[	 ]*datarootdir[	 ]*:*=/p' "$tmp/out"`; test -z "$ac_out"; } &&
+  { echo "$as_me:$LINENO: WARNING: $ac_file contains a reference to the variable \`datarootdir'
+which seems to be undefined.  Please make sure it is defined." >&5
+echo "$as_me: WARNING: $ac_file contains a reference to the variable \`datarootdir'
+which seems to be undefined.  Please make sure it is defined." >&2;}
 
-done
-_ACEOF
+  rm -f "$tmp/stdin"
+  case $ac_file in
+  -) cat "$tmp/out"; rm -f "$tmp/out";;
+  *) rm -f "$ac_file"; mv "$tmp/out" $ac_file;;
+  esac
+ ;;
+
+
+
+  esac
+
+done # for ac_tag
 
-cat >>$CONFIG_STATUS <<\_ACEOF
 
 { (exit 0); exit 0; }
 _ACEOF
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/configure.ac HTS-demo_CMU-ARCTIC-SLT-mary/configure.ac
--- HTS-demo_CMU-ARCTIC-SLT/configure.ac	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/configure.ac	2009-03-12 16:45:17.000000000 +0100
@@ -1,4 +1,12 @@
 # Process this file with autoconf to produce a configure script.
+#  ---------------------------------------------------------------  #
+# Modified by Sacha Krstulovic (DFKI) 2006 to use  Mary system      #
+#   instead of Festival as text analyser, so it uses phonefeatures  #
+#   and phonelab created with Mary.                                 #
+# Modified by Marcela Charfuelan (DFKI) 2008 to allow training      #
+#   strengths and Fourier magnitudes for mixed excitation in        #
+#   English and German.                                             #
+#  ---------------------------------------------------------------  #
 AC_INIT(HTS-demo_CMU-ARCTIC-SLT,2.1,hts-users@sp.nitech.ac.jp)
 AC_COPYRIGHT(Copyright 2001-2008 Nagoya Institute of Technology)
 AC_COPYRIGHT(Copyright 2001-2008 Tokyo Institute of Technology)
@@ -57,12 +65,27 @@ AC_ARG_WITH(fest-search-path,
 		AS_HELP_STRING([--with-fest-search-path],[specify the additional festival search path]),
  		[fest_search_path=$withval])
 
+# comented because is not used in MARY HMM voices
 # dumpfeats (festival)
-AC_PATH_PROG([DUMPFEATS], [dumpfeats], [:], [${fest_search_path}:$PATH])
-if test ! -f "$DUMPFEATS"; then
-	AC_MSG_ERROR(Can't find dumpfeats of festival)
+#AC_PATH_PROG([DUMPFEATS], [dumpfeats], [:], [${fest_search_path}:$PATH])
+#if test ! -f "$DUMPFEATS"; then
+#	AC_MSG_ERROR(Can't find dumpfeats of festival)
+#fi
+
+# Mary context features and language
+AC_ARG_VAR([FEATURELIST],[Mary context features file (default='data/feature_list.pl')])
+AC_ARG_VAR([VOICELANG],[voice language (default='en')])
+
+if test -z "$FEATURELIST"; then
+	FEATURELIST='data/feature_list.pl'
+fi
+
+if test -z "$VOICELANG"; then
+	VOICELANG='en'
 fi
 
+AC_SUBST(FEATURELIST)
+AC_SUBST(VOICELANG)
 
 
 # SPTK commands
@@ -113,6 +136,19 @@ else
 	fi
 fi
 
+# gcep
+AC_PATH_PROG([GCEP], [gcep], [:], [${sptk_search_path}:$PATH])
+if test ! -f "$GCEP"; then
+	AC_MSG_ERROR(Can't find gcep of SPTK)
+fi
+
+# iglsadf
+AC_PATH_PROG([IGLSADF], [iglsadf], [:], [${sptk_search_path}:$PATH])
+if test ! -f "$IGLSADF"; then
+	AC_MSG_ERROR(Can't find iglsadf of SPTK)
+fi
+
+
 # lpc2lsp
 AC_PATH_PROG([LPC2LSP], [lpc2lsp], [:], [${sptk_search_path}:$PATH])
 if test ! -f "$LPC2LSP"; then
@@ -393,6 +429,8 @@ AC_ARG_VAR([FREQWARP],[Frequency warping
 AC_ARG_VAR([GAMMA],[Pole/Zero weight factor (0: mel-cepstral analysis  1: LPC analysis  2,3,...,N: mel-generalized cepstral (MGC) analysis) (default=0)])
 AC_ARG_VAR([MGCLSP],[Use MGC-LSPs instead of MGC coefficients (default=0)])
 AC_ARG_VAR([MGCORDER],[Order of MGC analysis (default=24 for cepstral form, default=12 for LSP form)])
+AC_ARG_VAR([STRORDER],[Order of strengths analysis (default=5 for 5 filter bands)])
+AC_ARG_VAR([MAGORDER],[Order of Fourier magnitudes analysis (default=10 for 10 pitch harmonics)])
 AC_ARG_VAR([LNGAIN],[Use logarithmic gain instead of linear gain (default=0)])
 AC_ARG_VAR([LOWERF0],[Lower limit for F0 extraction in Hz (default=80)])
 AC_ARG_VAR([UPPERF0],[Upper limit for F0 extraction in Hz (default=350)])
@@ -452,6 +490,14 @@ if test -z "$MGCORDER"; then
 	fi
 fi
 
+if test -z "$STRORDER"; then
+	STRORDER=5
+fi
+
+if test -z "$MAGORDER"; then
+	MAGORDER=10
+fi
+
 if test -z "$LNGAIN"; then
 	LNGAIN=1
 fi
@@ -486,6 +532,13 @@ if test $GAMMA -ne 0 -a $MGCLSP -eq 0; t
 	AC_MSG_ERROR(Cannot use MGC coefficients directly if GAMMA>0!  Convert into the LSP form by setting MGCLSP=1!)
 fi
 
+if test -z "$STRVSIZE"; then
+	STRVSIZE=$STRORDER
+fi
+
+if test -z "$MAGVSIZE"; then
+	MAGVSIZE=$MAGORDER
+fi
 
 
 # substitute variables
@@ -497,6 +550,8 @@ AC_SUBST(FFTLEN)
 AC_SUBST(FREQWARP)
 AC_SUBST(GAMMA)
 AC_SUBST(MGCORDER)
+AC_SUBST(STRORDER)
+AC_SUBST(MAGORDER)
 AC_SUBST(MGCLSP)
 AC_SUBST(LOWERF0)
 AC_SUBST(UPPERF0)
@@ -505,14 +560,19 @@ AC_SUBST(PSTFILTER)
 AC_SUBST(IMPLEN)
 AC_SUBST(SAMPFREQ)
 AC_SUBST(MGCVSIZE)
+AC_SUBST(STRVSIZE)
+AC_SUBST(MAGVSIZE)
 
 
 
 # number of windows
 # parse command-line arguments
 AC_ARG_VAR([NMGCWIN],[number of delta windows for MGC coefficients (default=3)])
+AC_ARG_VAR([NSTRWIN],[number of delta windows for STR coefficients (default=3)])
+AC_ARG_VAR([NMAGWIN],[number of delta windows for MAG coefficients (default=3)])
 AC_ARG_VAR([NLF0WIN],[number of delta windows for log F0 values (default=3)])
 
+
 # default values
 if test -z "$NMGCWIN"; then
 	NMGCWIN=3
@@ -518,6 +578,14 @@ if test -z "$NMGCWIN"; then
 	NMGCWIN=3
 fi
 
+if test -z "$NSTRWIN"; then
+	NSTRWIN=3
+fi
+
+if test -z "$NMAGWIN"; then
+	NMAGWIN=3
+fi
+
 if test -z "$NLF0WIN"; then
 	NLF0WIN=3
 fi
@@ -526,6 +595,8 @@ F0STREN=`expr $NLF0WIN + 1`
 
 # substitute variables
 AC_SUBST(NMGCWIN)
+AC_SUBST(NSTRWIN)
+AC_SUBST(NMAGWIN)
 AC_SUBST(NLF0WIN)
 AC_SUBST(F0STREN)
 
@@ -539,8 +610,12 @@ AC_ARG_VAR([WFLOOR],[mixture weight floo
 AC_ARG_VAR([MAXDEV],[maximum duration scaling factor (default=10)])
 AC_ARG_VAR([MINDUR],[minimum duration to be evaluated (default=5)])
 AC_ARG_VAR([NMGCTRANSBLK],[number of blocks for MGC transforms (default=3)])
+AC_ARG_VAR([NSTRTRANSBLK],[number of blocks for STR transforms (default=3)])
+AC_ARG_VAR([NMAGTRANSBLK],[number of blocks for MAG transforms (default=3)])
 AC_ARG_VAR([NLF0TRANSBLK],[number of blocks for log F0 transforms (default=1)])
 AC_ARG_VAR([MGCBANDWIDTH],[band width for MGC transforms (default=24 for cepstral form, derault=2 for LSP form)])
+AC_ARG_VAR([STRBANDWIDTH],[band width for STR transforms (default=5)])
+AC_ARG_VAR([MAGBANDWIDTH],[band width for MAG transforms (default=10)])
 AC_ARG_VAR([LF0BANDWIDTH],[band width for log F0 transforms (default=1)])
 
 # default values
@@ -568,6 +643,14 @@ if test -z "$NMGCTRANSBLK"; then
 	NMGCTRANSBLK=3
 fi
 
+if test -z "$NSTRTRANSBLK"; then
+	NSTRTRANSBLK=3
+fi
+
+if test -z "$NMAGTRANSBLK"; then
+	NMAGTRANSBLK=3
+fi
+
 if test -z "$NLF0TRANSBLK"; then
 	NLF0TRANSBLK=1
 fi
@@ -580,6 +663,14 @@ if test -z "$MGCBANDWIDTH"; then
 	fi
 fi
 
+if test -z "$STRBANDWIDTH"; then
+	STRBANDWIDTH=5
+fi
+
+if test -z "$MAGBANDWIDTH"; then
+	MAGBANDWIDTH=5
+fi
+
 if test -z "$LF0BANDWIDTH"; then
 	LF0BANDWIDTH=0
 fi
@@ -591,8 +682,12 @@ AC_SUBST(WFLOOR)
 AC_SUBST(MAXDEV)
 AC_SUBST(MINDUR)
 AC_SUBST(NMGCTRANSBLK)
+AC_SUBST(NSTRTRANSBLK)
+AC_SUBST(NMAGTRANSBLK)
 AC_SUBST(NLF0TRANSBLK)
 AC_SUBST(MGCBANDWIDTH)
+AC_SUBST(STRBANDWIDTH)
+AC_SUBST(MAGBANDWIDTH)
 AC_SUBST(LF0BANDWIDTH)
 
 
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/feature_list_de.pl HTS-demo_CMU-ARCTIC-SLT-mary/data/feature_list_de.pl
--- HTS-demo_CMU-ARCTIC-SLT/data/feature_list_de.pl	1970-01-01 01:00:00.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/feature_list_de.pl	2009-03-17 11:47:29.000000000 +0100
@@ -0,0 +1,90 @@
+#!/usr/bin/perl
+#------------------------------------------------------------------------
+# Copyright 2007 DFKI GmbH.
+# All Rights Reserved.  Use is subject to license terms.
+#
+# This file is part of MARY TTS.
+#
+# MARY TTS is free software: you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation, version 3 of the License.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU Lesser General Public License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with this program.  If not, see <http://www.gnu.org/licenses/>.
+#
+#------------------------------------------------------------------------
+#
+# Created  by Sacha Krstulovic   (DFKI) 2006
+# Changed by Marcela Charfuelan (DFKI) 2009 
+
+# This structure is common to make_label_mono.pl, make_label_full.pl
+# it is imported via scripts/common_routines.pl
+
+# Requested features for the fullcontext names and tree questions
+# (apart from phonological features such as phoneme ID, vc, cplace etc.)
+#
+# Comment out the ones you don't want.
+#
+%requested_fea_keys = ( "stressed",
+                        "pos_in_syl",
+                        #"syl_break",
+                        #"prev_syl_break",
+                        "position_type",
+                        #"next_is_pause",
+                        #"prev_is_pause",
+                        "pos",
+                        #"tobi_accent",
+                        #"tobi_endtone",
+                        #"next_tobi_accent",
+                        #"next_tobi_endtone",
+                        #"nextnext_tobi_accent",
+                        #"nextnext_tobi_endtone",
+                        "sentence_punc",
+                        #"accented",
+                        #"sentence_numphrases",
+                        #"phrases_from_sentence_start",
+                        #"phrases_from_sentence_end",
+                        "sentence_numwords",
+                        "words_from_sentence_start",
+                        "words_from_sentence_end",
+                        #"phrase_numwords",
+                        #"words_from_phrase_start",
+                        #"words_from_phrase_end",
+                        #"phrase_numsyls",
+                        #"syls_from_phrase_start",
+                        #"syls_from_phrase_end",
+                        #"stressed_syls_from_phrase_start",
+                        #"stressed_syls_from_phrase_end",
+                        #"accented_syls_from_phrase_start",
+                        #"accented_syls_from_phrase_end",
+                        "word_numsyls",
+                        "syls_from_word_start",
+                        "syls_from_word_end",
+                        "word_numsegs",
+                        "segs_from_word_start",
+                        "segs_from_word_end",
+                        "syl_numsegs",
+                        "segs_from_syl_start",
+                        "segs_from_syl_end",
+                        "syls_from_prev_stressed",
+                        "syls_to_next_stressed",
+                        #"syls_from_prev_accent",
+                        #"syls_to_next_accent",
+                        #"phrase_endtone",
+                        #"prev_phrase_endtone",
+                        #"next_accent",
+                        #"prev_accent",
+                        "prev_punctuation",
+                        "next_punctuation",
+                        "words_from_prev_punctuation",
+                        "words_to_next_punctuation",
+                        "word_frequency" 
+		);
+
+1;
+
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/feature_list_en.pl HTS-demo_CMU-ARCTIC-SLT-mary/data/feature_list_en.pl
--- HTS-demo_CMU-ARCTIC-SLT/data/feature_list_en.pl	1970-01-01 01:00:00.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/feature_list_en.pl	2009-03-17 11:47:48.000000000 +0100
@@ -0,0 +1,93 @@
+#!/usr/bin/perl
+#------------------------------------------------------------------------
+# Copyright 2007 DFKI GmbH.
+# All Rights Reserved.  Use is subject to license terms.
+#
+# This file is part of MARY TTS.
+#
+# MARY TTS is free software: you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation, version 3 of the License.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU Lesser General Public License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with this program.  If not, see <http://www.gnu.org/licenses/>.
+#
+#------------------------------------------------------------------------
+#
+# Created by Sacha Krstulovic   (DFKI) 2006
+# Changed by Marcela Charfuelan (DFKI) 2009 
+
+# This structure is common to make_label_mono.pl, make_label_full.pl
+# it is imported via scripts/common_routines.pl
+
+# Requested features for the fullcontext names and tree questions
+# (apart from phonological features such as phoneme ID, vc, cplace etc.)
+#
+# Comment out the ones you don't want.
+#
+# changed: pos (DE) by gpos (EN)
+#
+%requested_fea_keys = (
+		        #"stressed",
+                        "pos_in_syl",
+                        "syl_break",
+                        "prev_syl_break",
+                        "position_type",
+                        #"next_is_pause",
+                        #"prev_is_pause",
+                        "gpos",
+                        #"tobi_accent",
+                        #"tobi_endtone",
+                        #"next_tobi_accent",
+                        #"next_tobi_endtone",
+                        #"nextnext_tobi_accent",
+                        #"nextnext_tobi_endtone",
+                        #"sentence_punc",
+                        #"accented",
+                        #"sentence_numphrases",
+                        #"phrases_from_sentence_start",
+                        #"phrases_from_sentence_end",
+                        #"sentence_numwords",
+                        #"words_from_sentence_start",
+                        #"words_from_sentence_end",
+                        #"phrase_numwords",
+                        #"words_from_phrase_start",
+                        #"words_from_phrase_end",
+                        #"phrase_numsyls",
+                        #"syls_from_phrase_start",
+                        #"syls_from_phrase_end",
+                        #"stressed_syls_from_phrase_start",
+                        #"stressed_syls_from_phrase_end",
+                        #"accented_syls_from_phrase_start",
+                        #"accented_syls_from_phrase_end",
+                        #"word_numsyls",
+                        #"syls_from_word_start",
+                        #"syls_from_word_end",
+                        #"word_numsegs",
+                        #"segs_from_word_start",
+                        #"segs_from_word_end",
+                        #"syl_numsegs",
+                        #"segs_from_syl_start",
+                        #"segs_from_syl_end",
+                        #"syls_from_prev_stressed",
+                        #"syls_to_next_stressed",
+                        #"syls_from_prev_accent",
+                        #"syls_to_next_accent",
+                        #"phrase_endtone",
+                        #"prev_phrase_endtone",
+                        #"next_accent",
+                        #"prev_accent",
+                        #"prev_punctuation",
+                        #"next_punctuation",
+                        #"words_from_prev_punctuation",
+                        #"words_to_next_punctuation",
+                        #"word_frequency" 
+		);
+
+1;
+
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/filters/mix_excitation_filters.txt HTS-demo_CMU-ARCTIC-SLT-mary/data/filters/mix_excitation_filters.txt
--- HTS-demo_CMU-ARCTIC-SLT/data/filters/mix_excitation_filters.txt	1970-01-01 01:00:00.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/filters/mix_excitation_filters.txt	2009-03-11 15:11:30.000000000 +0100
@@ -0,0 +1,250 @@
+# Created by Octave 2.1.73, Fri Jun 20 14:37:48 2008 CEST <marcela@ideas02>
+# name: mix
+# type: matrix
+# rows: 245
+# columns: 1
+ 0.000390592281555062
+ 0.000795189445333991
+ 0.00125252816092034
+ 0.00173991910129716
+ 0.00214376187527299
+ 0.00225973371371279
+ 0.00182935150884282
+ 0.000610084869995585
+ -0.00153373371252103
+ -0.00453981250957076
+ -0.00808084513499249
+ -0.011543791482837
+ -0.0140702284340657
+ -0.0146605505788618
+ -0.0123308107417484
+ -0.00629795593533759
+ 0.00383987520367413
+ 0.0179641635360896
+ 0.035369603283814
+ 0.0547907759626225
+ 0.0745258955278244
+ 0.0926434724844036
+ 0.107241375125194
+ 0.116716547652645
+ 0.12
+ 0.116716547652645
+ 0.107241375125194
+ 0.0926434724844036
+ 0.0745258955278244
+ 0.0547907759626225
+ 0.035369603283814
+ 0.0179641635360896
+ 0.00383987520367413
+ -0.00629795593533759
+ -0.0123308107417484
+ -0.0146605505788618
+ -0.0140702284340657
+ -0.011543791482837
+ -0.00808084513499249
+ -0.00453981250957076
+ -0.00153373371252103
+ 0.000610084869995586
+ 0.00182935150884282
+ 0.00225973371371279
+ 0.00214376187527299
+ 0.00173991910129715
+ 0.00125252816092035
+ 0.000795189445333991
+ 0.000390592281555062
+ -0.000390592281555063
+ -0.00161658485297481
+ -0.00263680171629946
+ -0.00297266022956409
+ -0.00214376187527299
+ -0.000185956205508249
+ 0.00196792416788939
+ 0.00283190043912722
+ 0.00153373371252102
+ -0.00092159061055328
+ -0.00148989733475093
+ 0.00323390735061167
+ 0.0140702284340657
+ 0.0269384516373609
+ 0.033309238991957
+ 0.0242051068865107
+ -0.00383987520367414
+ -0.0443315428371369
+ -0.0812735557666997
+ -0.095527502503929
+ -0.0745258955278244
+ -0.0202441919281326
+ 0.0494189543048827
+ 0.107476763334034
+ 0.13
+ 0.107476763334034
+ 0.0494189543048827
+ -0.0202441919281326
+ -0.0745258955278244
+ -0.095527502503929
+ -0.0812735557666997
+ -0.0443315428371369
+ -0.00383987520367414
+ 0.0242051068865107
+ 0.033309238991957
+ 0.0269384516373609
+ 0.0140702284340657
+ 0.00323390735061168
+ -0.00148989733475093
+ -0.000921590610553281
+ 0.00153373371252102
+ 0.00283190043912722
+ 0.00196792416788939
+ -0.000185956205508249
+ -0.00214376187527299
+ -0.00297266022956408
+ -0.00263680171629947
+ -0.00161658485297481
+ -0.000390592281555063
+ -0.00105893924778128
+ 0.000675804748332268
+ 0.0027440278203489
+ 0.00166629693659583
+ -0.00214376187527299
+ -0.00315340004596937
+ -0.000361397918753698
+ -0.00109695183894233
+ -0.00520718481369913
+ 0.00092159061055326
+ 0.0169451262858774
+ 0.0163546480698191
+ -0.00980541501190219
+ -0.0256567649172077
+ -0.00864761750846022
+ 0.00347506177331021
+ -0.0147596446277992
+ -0.00737281203778532
+ 0.0628023244571067
+ 0.095527502503929
+ -0.0185704811522054
+ -0.17297375126495
+ -0.137025583771356
+ 0.0922382700032197
+ 0.23
+ 0.0922382700032196
+ -0.137025583771356
+ -0.17297375126495
+ -0.0185704811522054
+ 0.095527502503929
+ 0.0628023244571067
+ -0.00737281203778532
+ -0.0147596446277992
+ 0.00347506177331021
+ -0.00864761750846022
+ -0.0256567649172077
+ -0.0098054150119022
+ 0.0163546480698191
+ 0.0169451262858774
+ 0.000921590610553261
+ -0.00520718481369913
+ -0.00109695183894233
+ -0.000361397918753698
+ -0.00315340004596938
+ -0.00214376187527299
+ 0.00166629693659583
+ 0.0027440278203489
+ 0.000675804748332268
+ -0.00105893924778128
+ 0.00206804155263549
+ -0.00046135857802789
+ -0.00157630235807485
+ 0.000892104944636483
+ -0.000110322754338749
+ 0.0033097139900343
+ -0.00402990254707841
+ -0.00488840093834734
+ 0.0110725919606642
+ -0.00259585454344358
+ -0.00302935765941664
+ -0.00530132549737331
+ -0.0017828998211087
+ 0.0306889119486715
+ -0.0271647996161064
+ -0.0193952725507044
+ 0.0327678133407305
+ -0.00251861312211727
+ 0.024002349174063
+ -0.0768373334994997
+ -0.00450482092450127
+ 0.187874629772393
+ -0.174366326470601
+ -0.110519387608503
+ 0.295
+ -0.110519387608503
+ -0.174366326470601
+ 0.187874629772393
+ -0.00450482092450127
+ -0.0768373334994997
+ 0.024002349174063
+ -0.00251861312211727
+ 0.0327678133407305
+ -0.0193952725507044
+ -0.0271647996161064
+ 0.0306889119486715
+ -0.0017828998211087
+ -0.00530132549737331
+ -0.00302935765941664
+ -0.00259585454344359
+ 0.0110725919606642
+ -0.00488840093834735
+ -0.00402990254707841
+ 0.00330971399003431
+ -0.000110322754338749
+ 0.000892104944636483
+ -0.00157630235807485
+ -0.00046135857802789
+ 0.00206804155263549
+ -0.00100910230485421
+ 0.000606949237336445
+ 0.000216548093105051
+ -0.00132566075296538
+ 0.00225408462961173
+ -0.00223009145226945
+ 0.000594024789099885
+ 0.00254336746816686
+ -0.0058654071469651
+ 0.0071356670530144
+ -0.00434502615671734
+ -0.0027434384402205
+ 0.0115883148330109
+ -0.0173100480899629
+ 0.014833988874358
+ -0.00198694017377894
+ -0.0180081687129313
+ 0.0362588044609499
+ -0.040900721148284
+ 0.0220465575368772
+ 0.0230753020767066
+ -0.0873001590637148
+ 0.15473158081188
+ -0.205912193381396
+ 0.225
+ -0.205912193381397
+ 0.15473158081188
+ -0.0873001590637148
+ 0.0230753020767066
+ 0.0220465575368772
+ -0.040900721148284
+ 0.0362588044609499
+ -0.0180081687129313
+ -0.00198694017377894
+ 0.014833988874358
+ -0.0173100480899629
+ 0.0115883148330109
+ -0.0027434384402205
+ -0.00434502615671734
+ 0.00713566705301441
+ -0.0058654071469651
+ 0.00254336746816686
+ 0.000594024789099885
+ -0.00223009145226945
+ 0.00225408462961174
+ -0.00132566075296538
+ 0.000216548093105051
+ 0.000606949237336445
+ -0.00100910230485421
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice01.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice01.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice01.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice01.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,206 +0,0 @@
-x^x-pau+ae=l@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+2/D:0_0/E:x+x@x+x&x+x#x+x/F:content_2/G:0_0/H:x=x@1=10|0/I:19=12/J:79+57-10
-x^pau-ae+l=ax@1_2/A:0_0_0/B:1-1-2@1-2&1-19#1-10$1-5!0-2;0-8|ae/C:0+0+2/D:0_0/E:content+2@1+12&1+6#0+2/F:aux_1/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-pau^ae-l+ax=s@2_1/A:0_0_0/B:1-1-2@1-2&1-19#1-10$1-5!0-2;0-8|ae/C:0+0+2/D:0_0/E:content+2@1+12&1+6#0+2/F:aux_1/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-ae^l-ax+s=w@1_2/A:1_1_2/B:0-0-2@2-1&2-18#1-10$1-5!1-1;1-7|ax/C:1+0+3/D:0_0/E:content+2@1+12&1+6#0+2/F:aux_1/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-l^ax-s+w=aa@2_1/A:1_1_2/B:0-0-2@2-1&2-18#1-10$1-5!1-1;1-7|ax/C:1+0+3/D:0_0/E:content+2@1+12&1+6#0+2/F:aux_1/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-ax^s-w+aa=z@1_3/A:0_0_2/B:1-0-3@1-1&3-17#1-9$1-5!2-2;2-6|aa/C:0+0+3/D:content_2/E:aux+1@2+11&2+6#1+1/F:content_3/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-s^w-aa+z=b@2_2/A:0_0_2/B:1-0-3@1-1&3-17#1-9$1-5!2-2;2-6|aa/C:0+0+3/D:content_2/E:aux+1@2+11&2+6#1+1/F:content_3/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-w^aa-z+b=ih@3_1/A:0_0_2/B:1-0-3@1-1&3-17#1-9$1-5!2-2;2-6|aa/C:0+0+3/D:content_2/E:aux+1@2+11&2+6#1+1/F:content_3/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-aa^z-b+ih=g@1_3/A:1_0_3/B:0-0-3@1-3&4-16#2-9$1-5!1-1;3-5|ih/C:1+0+2/D:aux_1/E:content+3@3+10&2+5#2+2/F:to_1/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-z^b-ih+g=ih@2_2/A:1_0_3/B:0-0-3@1-3&4-16#2-9$1-5!1-1;3-5|ih/C:1+0+2/D:aux_1/E:content+3@3+10&2+5#2+2/F:to_1/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-b^ih-g+ih=n@3_1/A:1_0_3/B:0-0-3@1-3&4-16#2-9$1-5!1-1;3-5|ih/C:1+0+2/D:aux_1/E:content+3@3+10&2+5#2+2/F:to_1/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-ih^g-ih+n=ih@1_2/A:0_0_3/B:1-0-2@2-2&5-15#2-8$1-5!2-3;4-4|ih/C:0+0+2/D:aux_1/E:content+3@3+10&2+5#2+2/F:to_1/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-g^ih-n+ih=ng@2_1/A:0_0_3/B:1-0-2@2-2&5-15#2-8$1-5!2-3;4-4|ih/C:0+0+2/D:aux_1/E:content+3@3+10&2+5#2+2/F:to_1/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-ih^n-ih+ng=t@1_2/A:1_0_2/B:0-0-2@3-1&6-14#3-8$1-5!1-2;5-3|ih/C:0+0+2/D:aux_1/E:content+3@3+10&2+5#2+2/F:to_1/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-n^ih-ng+t=ax@2_1/A:1_0_2/B:0-0-2@3-1&6-14#3-8$1-5!1-2;5-3|ih/C:0+0+2/D:aux_1/E:content+3@3+10&2+5#2+2/F:to_1/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-ih^ng-t+ax=g@1_2/A:0_0_2/B:0-0-2@1-1&7-13#3-8$1-5!2-1;6-2|ax/C:1+0+3/D:content_3/E:to+1@4+9&3+5#1+1/F:content_1/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-ng^t-ax+g=eh@2_1/A:0_0_2/B:0-0-2@1-1&7-13#3-8$1-5!2-1;6-2|ax/C:1+0+3/D:content_3/E:to+1@4+9&3+5#1+1/F:content_1/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-t^ax-g+eh=t@1_3/A:0_0_2/B:1-0-3@1-1&8-12#3-7$1-5!3-1;7-1|eh/C:1+1+3/D:to_1/E:content+1@5+8&3+4#2+1/F:content_2/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-ax^g-eh+t=v@2_2/A:0_0_2/B:1-0-3@1-1&8-12#3-7$1-5!3-1;7-1|eh/C:1+1+3/D:to_1/E:content+1@5+8&3+4#2+1/F:content_2/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-g^eh-t+v=eh@3_1/A:0_0_2/B:1-0-3@1-1&8-12#3-7$1-5!3-1;7-1|eh/C:1+1+3/D:to_1/E:content+1@5+8&3+4#2+1/F:content_2/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-eh^t-v+eh=r@1_3/A:1_0_3/B:1-1-3@1-2&9-11#4-6$1-4!1-2;8-5|eh/C:0+0+1/D:content_1/E:content+2@6+7&4+3#1+1/F:content_2/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-t^v-eh+r=iy@2_2/A:1_0_3/B:1-1-3@1-2&9-11#4-6$1-4!1-2;8-5|eh/C:0+0+1/D:content_1/E:content+2@6+7&4+3#1+1/F:content_2/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-v^eh-r+iy=t@3_1/A:1_0_3/B:1-1-3@1-2&9-11#4-6$1-4!1-2;8-5|eh/C:0+0+1/D:content_1/E:content+2@6+7&4+3#1+1/F:content_2/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-eh^r-iy+t=ay@1_1/A:1_1_3/B:0-0-1@2-1&10-10#5-6$2-4!1-1;1-4|iy/C:1+0+2/D:content_1/E:content+2@6+7&4+3#1+1/F:content_2/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-r^iy-t+ay=er@1_2/A:0_0_1/B:1-0-2@1-2&11-9#5-5$2-4!2-2;2-3|ay/C:0+0+2/D:content_2/E:content+2@7+6&5+2#1+2/F:in_1/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-iy^t-ay+er=d@2_1/A:0_0_1/B:1-0-2@1-2&11-9#5-5$2-4!2-2;2-3|ay/C:0+0+2/D:content_2/E:content+2@7+6&5+2#1+2/F:in_1/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-t^ay-er+d=ah@1_2/A:1_0_2/B:0-0-2@2-1&12-8#6-5$2-4!1-1;3-2|er/C:1+0+2/D:content_2/E:content+2@7+6&5+2#1+2/F:in_1/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-ay^er-d+ah=v@2_1/A:1_0_2/B:0-0-2@2-1&12-8#6-5$2-4!1-1;3-2|er/C:1+0+2/D:content_2/E:content+2@7+6&5+2#1+2/F:in_1/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-er^d-ah+v=s@1_2/A:0_0_2/B:1-0-2@1-1&13-7#6-4$2-4!2-1;4-1|ah/C:1+1+3/D:content_2/E:in+1@8+5&6+2#1+1/F:content_2/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-d^ah-v+s=ih@2_1/A:0_0_2/B:1-0-2@1-1&13-7#6-4$2-4!2-1;4-1|ah/C:1+1+3/D:content_2/E:in+1@8+5&6+2#1+1/F:content_2/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-ah^v-s+ih=t@1_3/A:1_0_2/B:1-1-3@1-2&14-6#7-3$2-3!1-2;5-4|ih/C:0+0+2/D:in_1/E:content+2@9+4&6+1#2+3/F:in_1/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-v^s-ih+t=ih@2_2/A:1_0_2/B:1-1-3@1-2&14-6#7-3$2-3!1-2;5-4|ih/C:0+0+2/D:in_1/E:content+2@9+4&6+1#2+3/F:in_1/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-s^ih-t+ih=ng@3_1/A:1_0_2/B:1-1-3@1-2&14-6#7-3$2-3!1-2;5-4|ih/C:0+0+2/D:in_1/E:content+2@9+4&6+1#2+3/F:in_1/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-ih^t-ih+ng=b@1_2/A:1_1_3/B:0-0-2@2-1&15-5#8-3$3-3!1-1;1-3|ih/C:1+0+2/D:in_1/E:content+2@9+4&6+1#2+3/F:in_1/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-t^ih-ng+b=ay@2_1/A:1_1_3/B:0-0-2@2-1&15-5#8-3$3-3!1-1;1-3|ih/C:1+0+2/D:in_1/E:content+2@9+4&6+1#2+3/F:in_1/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-ih^ng-b+ay=hh@1_2/A:0_0_2/B:1-0-2@1-1&16-4#8-2$3-3!2-2;2-2|ay/C:0+0+2/D:content_2/E:in+1@10+3&7+1#1+2/F:pps_1/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-ng^b-ay+hh=er@2_1/A:0_0_2/B:1-0-2@1-1&16-4#8-2$3-3!2-2;2-2|ay/C:0+0+2/D:content_2/E:in+1@10+3&7+1#1+2/F:pps_1/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-b^ay-hh+er=s@1_2/A:1_0_2/B:0-0-2@1-1&17-3#9-2$3-3!1-1;3-1|er/C:1+1+3/D:in_1/E:pps+1@11+2&7+1#2+1/F:content_2/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-ay^hh-er+s=ih@2_1/A:1_0_2/B:0-0-2@1-1&17-3#9-2$3-3!1-1;3-1|er/C:1+1+3/D:in_1/E:pps+1@11+2&7+1#2+1/F:content_2/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-hh^er-s+ih=s@1_3/A:0_0_2/B:1-1-3@1-2&18-2#9-1$3-2!2-0;4-1|ih/C:0+1+2/D:pps_1/E:content+2@12+1&7+0#3+0/F:in_1/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-er^s-ih+s=t@2_2/A:0_0_2/B:1-1-3@1-2&18-2#9-1$3-2!2-0;4-1|ih/C:0+1+2/D:pps_1/E:content+2@12+1&7+0#3+0/F:in_1/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-s^ih-s+t=er@3_1/A:0_0_2/B:1-1-3@1-2&18-2#9-1$3-2!2-0;4-1|ih/C:0+1+2/D:pps_1/E:content+2@12+1&7+0#3+0/F:in_1/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-ih^s-t+er=pau@1_2/A:1_1_3/B:0-1-2@2-1&19-1#10-1$4-1!1-0;1-0|er/C:1+0+2/D:pps_1/E:content+2@12+1&7+0#3+0/F:in_1/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-s^t-er+pau=aa@2_1/A:1_1_3/B:0-1-2@2-1&19-1#10-1$4-1!1-0;1-0|er/C:1+0+2/D:pps_1/E:content+2@12+1&7+0#3+0/F:in_1/G:0_0/H:19=12@1=10|L-H%/I:3=3/J:79+57-10
-t^er-pau+aa=n@x_x/A:0_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:content_2/E:x+x@x+x&x+x#x+x/F:in_1/G:19_12/H:x=x@1=10|0/I:3=3/J:79+57-10
-er^pau-aa+n=dh@1_2/A:0_1_2/B:1-0-2@1-1&1-3#1-2$1-2!0-2;0-2|aa/C:0+0+2/D:content_2/E:in+1@1+3&1+1#0+2/F:det_1/G:19_12/H:3=3@2=9|L-L%/I:8=6/J:79+57-10
-pau^aa-n+dh=ax@2_1/A:0_1_2/B:1-0-2@1-1&1-3#1-2$1-2!0-2;0-2|aa/C:0+0+2/D:content_2/E:in+1@1+3&1+1#0+2/F:det_1/G:19_12/H:3=3@2=9|L-L%/I:8=6/J:79+57-10
-aa^n-dh+ax=b@1_2/A:1_0_2/B:0-0-2@1-1&2-2#1-2$1-2!1-1;0-1|ax/C:1+1+4/D:in_1/E:det+1@2+2&1+1#0+1/F:content_1/G:19_12/H:3=3@2=9|L-L%/I:8=6/J:79+57-10
-n^dh-ax+b=ae@2_1/A:1_0_2/B:0-0-2@1-1&2-2#1-2$1-2!1-1;0-1|ax/C:1+1+4/D:in_1/E:det+1@2+2&1+1#0+1/F:content_1/G:19_12/H:3=3@2=9|L-L%/I:8=6/J:79+57-10
-dh^ax-b+ae=ng@1_4/A:0_0_2/B:1-1-4@1-1&3-1#1-1$1-1!2-0;0-0|ae/C:1+0+3/D:det_1/E:content+1@3+1&1+0#0+0/F:cc_1/G:19_12/H:3=3@2=9|L-L%/I:8=6/J:79+57-10
-ax^b-ae+ng=k@2_3/A:0_0_2/B:1-1-4@1-1&3-1#1-1$1-1!2-0;0-0|ae/C:1+0+3/D:det_1/E:content+1@3+1&1+0#0+0/F:cc_1/G:19_12/H:3=3@2=9|L-L%/I:8=6/J:79+57-10
-b^ae-ng+k=pau@3_2/A:0_0_2/B:1-1-4@1-1&3-1#1-1$1-1!2-0;0-0|ae/C:1+0+3/D:det_1/E:content+1@3+1&1+0#0+0/F:cc_1/G:19_12/H:3=3@2=9|L-L%/I:8=6/J:79+57-10
-ae^ng-k+pau=ae@4_1/A:0_0_2/B:1-1-4@1-1&3-1#1-1$1-1!2-0;0-0|ae/C:1+0+3/D:det_1/E:content+1@3+1&1+0#0+0/F:cc_1/G:19_12/H:3=3@2=9|L-L%/I:8=6/J:79+57-10
-ng^k-pau+ae=n@x_x/A:1_1_4/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:cc_1/G:3_3/H:x=x@1=10|0/I:8=6/J:79+57-10
-k^pau-ae+n=d@1_3/A:1_1_4/B:1-0-3@1-1&1-8#1-5$1-4!0-1;0-2|ae/C:1+0+2/D:content_1/E:cc+1@1+6&1+3#0+2/F:in_1/G:3_3/H:8=6@3=8|L-L%/I:6=6/J:79+57-10
-pau^ae-n+d=ah@2_2/A:1_1_4/B:1-0-3@1-1&1-8#1-5$1-4!0-1;0-2|ae/C:1+0+2/D:content_1/E:cc+1@1+6&1+3#0+2/F:in_1/G:3_3/H:8=6@3=8|L-L%/I:6=6/J:79+57-10
-ae^n-d+ah=v@3_1/A:1_1_4/B:1-0-3@1-1&1-8#1-5$1-4!0-1;0-2|ae/C:1+0+2/D:content_1/E:cc+1@1+6&1+3#0+2/F:in_1/G:3_3/H:8=6@3=8|L-L%/I:6=6/J:79+57-10
-n^d-ah+v=hh@1_2/A:1_0_3/B:1-0-2@1-1&2-7#1-4$1-4!1-1;0-1|ah/C:1+1+3/D:cc_1/E:in+1@2+5&1+3#0+1/F:content_2/G:3_3/H:8=6@3=8|L-L%/I:6=6/J:79+57-10
-d^ah-v+hh=ae@2_1/A:1_0_3/B:1-0-2@1-1&2-7#1-4$1-4!1-1;0-1|ah/C:1+1+3/D:cc_1/E:in+1@2+5&1+3#0+1/F:content_2/G:3_3/H:8=6@3=8|L-L%/I:6=6/J:79+57-10
-ah^v-hh+ae=v@1_3/A:1_0_2/B:1-1-3@1-2&3-6#2-3$1-3!1-2;0-2|ae/C:0+0+2/D:in_1/E:content+2@3+4&1+2#0+1/F:content_2/G:3_3/H:8=6@3=8|L-L%/I:6=6/J:79+57-10
-v^hh-ae+v=ih@2_2/A:1_0_2/B:1-1-3@1-2&3-6#2-3$1-3!1-2;0-2|ae/C:0+0+2/D:in_1/E:content+2@3+4&1+2#0+1/F:content_2/G:3_3/H:8=6@3=8|L-L%/I:6=6/J:79+57-10
-hh^ae-v+ih=ng@3_1/A:1_0_2/B:1-1-3@1-2&3-6#2-3$1-3!1-2;0-2|ae/C:0+0+2/D:in_1/E:content+2@3+4&1+2#0+1/F:content_2/G:3_3/H:8=6@3=8|L-L%/I:6=6/J:79+57-10
-ae^v-ih+ng=n@1_2/A:1_1_3/B:0-0-2@2-1&4-5#3-3$2-3!1-1;1-1|ih/C:1+1+3/D:in_1/E:content+2@3+4&1+2#0+1/F:content_2/G:3_3/H:8=6@3=8|L-L%/I:6=6/J:79+57-10
-v^ih-ng+n=ah@2_1/A:1_1_3/B:0-0-2@2-1&4-5#3-3$2-3!1-1;1-1|ih/C:1+1+3/D:in_1/E:content+2@3+4&1+2#0+1/F:content_2/G:3_3/H:8=6@3=8|L-L%/I:6=6/J:79+57-10
-ih^ng-n+ah=th@1_3/A:0_0_2/B:1-1-3@1-2&5-4#3-2$2-2!2-3;2-3|ah/C:0+0+2/D:content_2/E:content+2@4+3&2+1#1+2/F:to_1/G:3_3/H:8=6@3=8|L-L%/I:6=6/J:79+57-10
-ng^n-ah+th=ih@2_2/A:0_0_2/B:1-1-3@1-2&5-4#3-2$2-2!2-3;2-3|ah/C:0+0+2/D:content_2/E:content+2@4+3&2+1#1+2/F:to_1/G:3_3/H:8=6@3=8|L-L%/I:6=6/J:79+57-10
-n^ah-th+ih=ng@3_1/A:0_0_2/B:1-1-3@1-2&5-4#3-2$2-2!2-3;2-3|ah/C:0+0+2/D:content_2/E:content+2@4+3&2+1#1+2/F:to_1/G:3_3/H:8=6@3=8|L-L%/I:6=6/J:79+57-10
-ah^th-ih+ng=t@1_2/A:1_1_3/B:0-0-2@2-1&6-3#4-2$3-2!1-2;1-2|ih/C:0+0+2/D:content_2/E:content+2@4+3&2+1#1+2/F:to_1/G:3_3/H:8=6@3=8|L-L%/I:6=6/J:79+57-10
-th^ih-ng+t=ax@2_1/A:1_1_3/B:0-0-2@2-1&6-3#4-2$3-2!1-2;1-2|ih/C:0+0+2/D:content_2/E:content+2@4+3&2+1#1+2/F:to_1/G:3_3/H:8=6@3=8|L-L%/I:6=6/J:79+57-10
-ih^ng-t+ax=d@1_2/A:0_0_2/B:0-0-2@1-1&7-2#4-2$3-2!2-1;2-1|ax/C:1+1+2/D:content_2/E:to+1@5+2&3+1#1+1/F:content_1/G:3_3/H:8=6@3=8|L-L%/I:6=6/J:79+57-10
-ng^t-ax+d=uw@2_1/A:0_0_2/B:0-0-2@1-1&7-2#4-2$3-2!2-1;2-1|ax/C:1+1+2/D:content_2/E:to+1@5+2&3+1#1+1/F:content_1/G:3_3/H:8=6@3=8|L-L%/I:6=6/J:79+57-10
-t^ax-d+uw=pau@1_2/A:0_0_2/B:1-1-2@1-1&8-1#4-1$3-1!3-0;3-0|uw/C:1+0+4/D:to_1/E:content+1@6+1&3+0#2+0/F:content_1/G:3_3/H:8=6@3=8|L-L%/I:6=6/J:79+57-10
-ax^d-uw+pau=w@2_1/A:0_0_2/B:1-1-2@1-1&8-1#4-1$3-1!3-0;3-0|uw/C:1+0+4/D:to_1/E:content+1@6+1&3+0#2+0/F:content_1/G:3_3/H:8=6@3=8|L-L%/I:6=6/J:79+57-10
-d^uw-pau+w=ah@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+4/D:content_1/E:x+x@x+x&x+x#x+x/F:content_1/G:8_6/H:x=x@1=10|0/I:6=6/J:79+57-10
-uw^pau-w+ah=n@1_4/A:1_1_2/B:1-0-4@1-1&1-6#1-6$1-3!0-1;0-2|ah/C:1+0+2/D:content_1/E:content+1@1+6&1+3#0+2/F:cc_1/G:8_6/H:6=6@4=7|L-L%/I:10=7/J:79+57-10
-pau^w-ah+n=s@2_3/A:1_1_2/B:1-0-4@1-1&1-6#1-6$1-3!0-1;0-2|ah/C:1+0+2/D:content_1/E:content+1@1+6&1+3#0+2/F:cc_1/G:8_6/H:6=6@4=7|L-L%/I:10=7/J:79+57-10
-w^ah-n+s=ao@3_2/A:1_1_2/B:1-0-4@1-1&1-6#1-6$1-3!0-1;0-2|ah/C:1+0+2/D:content_1/E:content+1@1+6&1+3#0+2/F:cc_1/G:8_6/H:6=6@4=7|L-L%/I:10=7/J:79+57-10
-ah^n-s+ao=r@4_1/A:1_1_2/B:1-0-4@1-1&1-6#1-6$1-3!0-1;0-2|ah/C:1+0+2/D:content_1/E:content+1@1+6&1+3#0+2/F:cc_1/G:8_6/H:6=6@4=7|L-L%/I:10=7/J:79+57-10
-n^s-ao+r=t@1_2/A:1_0_4/B:1-0-2@1-1&2-5#1-5$1-3!1-1;0-1|ao/C:1+1+4/D:content_1/E:cc+1@2+5&2+3#1+1/F:content_1/G:8_6/H:6=6@4=7|L-L%/I:10=7/J:79+57-10
-s^ao-r+t=w@2_1/A:1_0_4/B:1-0-2@1-1&2-5#1-5$1-3!1-1;0-1|ao/C:1+1+4/D:content_1/E:cc+1@2+5&2+3#1+1/F:content_1/G:8_6/H:6=6@4=7|L-L%/I:10=7/J:79+57-10
-ao^r-t+w=ay@1_4/A:1_0_2/B:1-1-4@1-1&3-4#2-4$1-2!1-1;0-3|ay/C:1+0+2/D:cc_1/E:content+1@3+4&2+2#2+1/F:content_1/G:8_6/H:6=6@4=7|L-L%/I:10=7/J:79+57-10
-r^t-w+ay=s@2_3/A:1_0_2/B:1-1-4@1-1&3-4#2-4$1-2!1-1;0-3|ay/C:1+0+2/D:cc_1/E:content+1@3+4&2+2#2+1/F:content_1/G:8_6/H:6=6@4=7|L-L%/I:10=7/J:79+57-10
-t^w-ay+s=sh@3_2/A:1_0_2/B:1-1-4@1-1&3-4#2-4$1-2!1-1;0-3|ay/C:1+0+2/D:cc_1/E:content+1@3+4&2+2#2+1/F:content_1/G:8_6/H:6=6@4=7|L-L%/I:10=7/J:79+57-10
-w^ay-s+sh=iy@4_1/A:1_0_2/B:1-1-4@1-1&3-4#2-4$1-2!1-1;0-3|ay/C:1+0+2/D:cc_1/E:content+1@3+4&2+2#2+1/F:content_1/G:8_6/H:6=6@4=7|L-L%/I:10=7/J:79+57-10
-ay^s-sh+iy=hh@1_2/A:1_1_4/B:1-0-2@1-1&4-3#3-3$2-2!1-1;1-2|iy/C:1+0+3/D:content_1/E:content+1@4+3&3+1#1+2/F:aux_1/G:8_6/H:6=6@4=7|L-L%/I:10=7/J:79+57-10
-s^sh-iy+hh=ae@2_1/A:1_1_4/B:1-0-2@1-1&4-3#3-3$2-2!1-1;1-2|iy/C:1+0+3/D:content_1/E:content+1@4+3&3+1#1+2/F:aux_1/G:8_6/H:6=6@4=7|L-L%/I:10=7/J:79+57-10
-sh^iy-hh+ae=d@1_3/A:1_0_2/B:1-0-3@1-1&5-2#4-2$2-2!1-1;2-1|ae/C:1+1+4/D:content_1/E:aux+1@5+2&4+1#1+1/F:content_1/G:8_6/H:6=6@4=7|L-L%/I:10=7/J:79+57-10
-iy^hh-ae+d=p@2_2/A:1_0_2/B:1-0-3@1-1&5-2#4-2$2-2!1-1;2-1|ae/C:1+1+4/D:content_1/E:aux+1@5+2&4+1#1+1/F:content_1/G:8_6/H:6=6@4=7|L-L%/I:10=7/J:79+57-10
-hh^ae-d+p=iy@3_1/A:1_0_2/B:1-0-3@1-1&5-2#4-2$2-2!1-1;2-1|ae/C:1+1+4/D:content_1/E:aux+1@5+2&4+1#1+1/F:content_1/G:8_6/H:6=6@4=7|L-L%/I:10=7/J:79+57-10
-ae^d-p+iy=p@1_4/A:1_0_3/B:1-1-4@1-1&6-1#5-1$2-1!1-0;3-0|iy/C:0+0+3/D:aux_1/E:content+1@6+1&4+0#2+0/F:in_2/G:8_6/H:6=6@4=7|L-L%/I:10=7/J:79+57-10
-d^p-iy+p=t@2_3/A:1_0_3/B:1-1-4@1-1&6-1#5-1$2-1!1-0;3-0|iy/C:0+0+3/D:aux_1/E:content+1@6+1&4+0#2+0/F:in_2/G:8_6/H:6=6@4=7|L-L%/I:10=7/J:79+57-10
-p^iy-p+t=pau@3_2/A:1_0_3/B:1-1-4@1-1&6-1#5-1$2-1!1-0;3-0|iy/C:0+0+3/D:aux_1/E:content+1@6+1&4+0#2+0/F:in_2/G:8_6/H:6=6@4=7|L-L%/I:10=7/J:79+57-10
-iy^p-t+pau=ih@4_1/A:1_0_3/B:1-1-4@1-1&6-1#5-1$2-1!1-0;3-0|iy/C:0+0+3/D:aux_1/E:content+1@6+1&4+0#2+0/F:in_2/G:8_6/H:6=6@4=7|L-L%/I:10=7/J:79+57-10
-p^t-pau+ih=n@x_x/A:1_1_4/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:in_2/G:6_6/H:x=x@1=10|0/I:10=7/J:79+57-10
-t^pau-ih+n=t@1_3/A:1_1_4/B:0-0-3@1-2&1-10#1-6$1-4!0-1;0-3|ih/C:1+0+1/D:content_1/E:in+2@1+7&1+3#0+2/F:det_1/G:6_6/H:10=7@5=6|L-L%/I:6=5/J:79+57-10
-pau^ih-n+t=uw@2_2/A:1_1_4/B:0-0-3@1-2&1-10#1-6$1-4!0-1;0-3|ih/C:1+0+1/D:content_1/E:in+2@1+7&1+3#0+2/F:det_1/G:6_6/H:10=7@5=6|L-L%/I:6=5/J:79+57-10
-ih^n-t+uw=dh@3_1/A:1_1_4/B:0-0-3@1-2&1-10#1-6$1-4!0-1;0-3|ih/C:1+0+1/D:content_1/E:in+2@1+7&1+3#0+2/F:det_1/G:6_6/H:10=7@5=6|L-L%/I:6=5/J:79+57-10
-n^t-uw+dh=ax@1_1/A:0_0_3/B:1-0-1@2-1&2-9#1-5$1-4!0-2;0-2|uw/C:0+0+2/D:content_1/E:in+2@1+7&1+3#0+2/F:det_1/G:6_6/H:10=7@5=6|L-L%/I:6=5/J:79+57-10
-t^uw-dh+ax=b@1_2/A:1_0_1/B:0-0-2@1-1&3-8#2-5$1-4!1-1;0-1|ax/C:1+1+3/D:in_2/E:det+1@2+6&1+3#0+1/F:content_1/G:6_6/H:10=7@5=6|L-L%/I:6=5/J:79+57-10
-uw^dh-ax+b=uh@2_1/A:1_0_1/B:0-0-2@1-1&3-8#2-5$1-4!1-1;0-1|ax/C:1+1+3/D:in_2/E:det+1@2+6&1+3#0+1/F:content_1/G:6_6/H:10=7@5=6|L-L%/I:6=5/J:79+57-10
-dh^ax-b+uh=k@1_3/A:0_0_2/B:1-1-3@1-1&4-7#2-4$1-3!2-2;0-2|uh/C:0+0+2/D:det_1/E:content+1@3+5&1+2#0+2/F:pps_1/G:6_6/H:10=7@5=6|L-L%/I:6=5/J:79+57-10
-ax^b-uh+k=hh@2_2/A:0_0_2/B:1-1-3@1-1&4-7#2-4$1-3!2-2;0-2|uh/C:0+0+2/D:det_1/E:content+1@3+5&1+2#0+2/F:pps_1/G:6_6/H:10=7@5=6|L-L%/I:6=5/J:79+57-10
-b^uh-k+hh=er@3_1/A:0_0_2/B:1-1-3@1-1&4-7#2-4$1-3!2-2;0-2|uh/C:0+0+2/D:det_1/E:content+1@3+5&1+2#0+2/F:pps_1/G:6_6/H:10=7@5=6|L-L%/I:6=5/J:79+57-10
-uh^k-hh+er=s@1_2/A:1_1_3/B:0-0-2@1-1&5-6#3-4$2-3!1-1;1-1|er/C:1+1+3/D:content_1/E:pps+1@4+4&2+2#1+1/F:content_2/G:6_6/H:10=7@5=6|L-L%/I:6=5/J:79+57-10
-k^hh-er+s=ih@2_1/A:1_1_3/B:0-0-2@1-1&5-6#3-4$2-3!1-1;1-1|er/C:1+1+3/D:content_1/E:pps+1@4+4&2+2#1+1/F:content_2/G:6_6/H:10=7@5=6|L-L%/I:6=5/J:79+57-10
-hh^er-s+ih=s@1_3/A:0_0_2/B:1-1-3@1-2&6-5#3-3$2-2!2-2;2-4|ih/C:0+0+2/D:pps_1/E:content+2@5+3&2+1#2+2/F:aux_1/G:6_6/H:10=7@5=6|L-L%/I:6=5/J:79+57-10
-er^s-ih+s=t@2_2/A:0_0_2/B:1-1-3@1-2&6-5#3-3$2-2!2-2;2-4|ih/C:0+0+2/D:pps_1/E:content+2@5+3&2+1#2+2/F:aux_1/G:6_6/H:10=7@5=6|L-L%/I:6=5/J:79+57-10
-s^ih-s+t=er@3_1/A:0_0_2/B:1-1-3@1-2&6-5#3-3$2-2!2-2;2-4|ih/C:0+0+2/D:pps_1/E:content+2@5+3&2+1#2+2/F:aux_1/G:6_6/H:10=7@5=6|L-L%/I:6=5/J:79+57-10
-ih^s-t+er=w@1_2/A:1_1_3/B:0-0-2@2-1&7-4#4-3$3-2!1-1;1-3|er/C:1+0+3/D:pps_1/E:content+2@5+3&2+1#2+2/F:aux_1/G:6_6/H:10=7@5=6|L-L%/I:6=5/J:79+57-10
-s^t-er+w=aa@2_1/A:1_1_3/B:0-0-2@2-1&7-4#4-3$3-2!1-1;1-3|er/C:1+0+3/D:pps_1/E:content+2@5+3&2+1#2+2/F:aux_1/G:6_6/H:10=7@5=6|L-L%/I:6=5/J:79+57-10
-t^er-w+aa=z@1_3/A:0_0_2/B:1-0-3@1-1&8-3#4-2$3-2!2-1;2-2|aa/C:1+0+3/D:content_2/E:aux+1@6+2&3+1#1+1/F:content_2/G:6_6/H:10=7@5=6|L-L%/I:6=5/J:79+57-10
-er^w-aa+z=r@2_2/A:0_0_2/B:1-0-3@1-1&8-3#4-2$3-2!2-1;2-2|aa/C:1+0+3/D:content_2/E:aux+1@6+2&3+1#1+1/F:content_2/G:6_6/H:10=7@5=6|L-L%/I:6=5/J:79+57-10
-w^aa-z+r=iy@3_1/A:0_0_2/B:1-0-3@1-1&8-3#4-2$3-2!2-1;2-2|aa/C:1+0+3/D:content_2/E:aux+1@6+2&3+1#1+1/F:content_2/G:6_6/H:10=7@5=6|L-L%/I:6=5/J:79+57-10
-aa^z-r+iy=d@1_3/A:1_0_3/B:1-0-3@1-2&9-2#5-1$3-2!1-0;3-1|iy/C:0+1+2/D:aux_1/E:content+2@7+1&3+0#2+0/F:cc_1/G:6_6/H:10=7@5=6|L-L%/I:6=5/J:79+57-10
-z^r-iy+d=ih@2_2/A:1_0_3/B:1-0-3@1-2&9-2#5-1$3-2!1-0;3-1|iy/C:0+1+2/D:aux_1/E:content+2@7+1&3+0#2+0/F:cc_1/G:6_6/H:10=7@5=6|L-L%/I:6=5/J:79+57-10
-r^iy-d+ih=ng@3_1/A:1_0_3/B:1-0-3@1-2&9-2#5-1$3-2!1-0;3-1|iy/C:0+1+2/D:aux_1/E:content+2@7+1&3+0#2+0/F:cc_1/G:6_6/H:10=7@5=6|L-L%/I:6=5/J:79+57-10
-iy^d-ih+ng=pau@1_2/A:1_0_3/B:0-1-2@2-1&10-1#6-1$3-1!1-0;4-0|ih/C:1+0+3/D:aux_1/E:content+2@7+1&3+0#2+0/F:cc_1/G:6_6/H:10=7@5=6|L-L%/I:6=5/J:79+57-10
-d^ih-ng+pau=b@2_1/A:1_0_3/B:0-1-2@2-1&10-1#6-1$3-1!1-0;4-0|ih/C:1+0+3/D:aux_1/E:content+2@7+1&3+0#2+0/F:cc_1/G:6_6/H:10=7@5=6|L-L%/I:6=5/J:79+57-10
-ih^ng-pau+b=ah@x_x/A:0_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_2/E:x+x@x+x&x+x#x+x/F:cc_1/G:10_7/H:x=x@1=10|0/I:6=5/J:79+57-10
-ng^pau-b+ah=t@1_3/A:0_1_2/B:1-0-3@1-1&1-6#1-5$1-3!0-1;0-1|ah/C:1+1+2/D:content_2/E:cc+1@1+5&1+2#0+1/F:content_1/G:10_7/H:6=5@6=5|L-L%/I:7=4/J:79+57-10
-pau^b-ah+t=ih@2_2/A:0_1_2/B:1-0-3@1-1&1-6#1-5$1-3!0-1;0-1|ah/C:1+1+2/D:content_2/E:cc+1@1+5&1+2#0+1/F:content_1/G:10_7/H:6=5@6=5|L-L%/I:7=4/J:79+57-10
-b^ah-t+ih=t@3_1/A:0_1_2/B:1-0-3@1-1&1-6#1-5$1-3!0-1;0-1|ah/C:1+1+2/D:content_2/E:cc+1@1+5&1+2#0+1/F:content_1/G:10_7/H:6=5@6=5|L-L%/I:7=4/J:79+57-10
-ah^t-ih+t=hh@1_2/A:1_0_3/B:1-1-2@1-1&2-5#1-4$1-2!1-1;0-4|ih/C:1+0+3/D:cc_1/E:content+1@2+4&1+1#0+3/F:aux_1/G:10_7/H:6=5@6=5|L-L%/I:7=4/J:79+57-10
-t^ih-t+hh=ae@2_1/A:1_0_3/B:1-1-2@1-1&2-5#1-4$1-2!1-1;0-4|ih/C:1+0+3/D:cc_1/E:content+1@2+4&1+1#0+3/F:aux_1/G:10_7/H:6=5@6=5|L-L%/I:7=4/J:79+57-10
-ih^t-hh+ae=d@1_3/A:1_1_2/B:1-0-3@1-1&3-4#2-3$2-2!1-1;1-3|ae/C:1+0+2/D:content_1/E:aux+1@3+3&2+1#1+2/F:det_1/G:10_7/H:6=5@6=5|L-L%/I:7=4/J:79+57-10
-t^hh-ae+d=n@2_2/A:1_1_2/B:1-0-3@1-1&3-4#2-3$2-2!1-1;1-3|ae/C:1+0+2/D:content_1/E:aux+1@3+3&2+1#1+2/F:det_1/G:10_7/H:6=5@6=5|L-L%/I:7=4/J:79+57-10
-hh^ae-d+n=ow@3_1/A:1_1_2/B:1-0-3@1-1&3-4#2-3$2-2!1-1;1-3|ae/C:1+0+2/D:content_1/E:aux+1@3+3&2+1#1+2/F:det_1/G:10_7/H:6=5@6=5|L-L%/I:7=4/J:79+57-10
-ae^d-n+ow=p@1_2/A:1_0_3/B:1-0-2@1-1&4-3#3-2$2-2!1-1;2-2|ow/C:1+0+3/D:aux_1/E:det+1@4+2&2+1#2+1/F:content_2/G:10_7/H:6=5@6=5|L-L%/I:7=4/J:79+57-10
-d^n-ow+p=ih@2_1/A:1_0_3/B:1-0-2@1-1&4-3#3-2$2-2!1-1;2-2|ow/C:1+0+3/D:aux_1/E:det+1@4+2&2+1#2+1/F:content_2/G:10_7/H:6=5@6=5|L-L%/I:7=4/J:79+57-10
-n^ow-p+ih=k@1_3/A:1_0_2/B:1-0-3@1-2&5-2#4-1$2-2!1-0;3-1|ih/C:0+1+3/D:det_1/E:content+2@5+1&2+0#3+0/F:cc_1/G:10_7/H:6=5@6=5|L-L%/I:7=4/J:79+57-10
-ow^p-ih+k=ch@2_2/A:1_0_2/B:1-0-3@1-2&5-2#4-1$2-2!1-0;3-1|ih/C:0+1+3/D:det_1/E:content+2@5+1&2+0#3+0/F:cc_1/G:10_7/H:6=5@6=5|L-L%/I:7=4/J:79+57-10
-p^ih-k+ch=er@3_1/A:1_0_2/B:1-0-3@1-2&5-2#4-1$2-2!1-0;3-1|ih/C:0+1+3/D:det_1/E:content+2@5+1&2+0#3+0/F:cc_1/G:10_7/H:6=5@6=5|L-L%/I:7=4/J:79+57-10
-ih^k-ch+er=z@1_3/A:1_0_3/B:0-1-3@2-1&6-1#5-1$2-1!1-0;4-0|er/C:1+0+2/D:det_1/E:content+2@5+1&2+0#3+0/F:cc_1/G:10_7/H:6=5@6=5|L-L%/I:7=4/J:79+57-10
-k^ch-er+z=pau@2_2/A:1_0_3/B:0-1-3@2-1&6-1#5-1$2-1!1-0;4-0|er/C:1+0+2/D:det_1/E:content+2@5+1&2+0#3+0/F:cc_1/G:10_7/H:6=5@6=5|L-L%/I:7=4/J:79+57-10
-ch^er-z+pau=ao@3_1/A:1_0_3/B:0-1-3@2-1&6-1#5-1$2-1!1-0;4-0|er/C:1+0+2/D:det_1/E:content+2@5+1&2+0#3+0/F:cc_1/G:10_7/H:6=5@6=5|L-L%/I:7=4/J:79+57-10
-er^z-pau+ao=r@x_x/A:0_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:content_2/E:x+x@x+x&x+x#x+x/F:cc_1/G:6_5/H:x=x@1=10|0/I:7=4/J:79+57-10
-z^pau-ao+r=k@1_2/A:0_1_3/B:1-0-2@1-1&1-7#1-4$1-3!0-1;0-1|ao/C:1+1+4/D:content_2/E:cc+1@1+4&1+2#0+1/F:content_4/G:6_5/H:7=4@7=4|L-L%/I:5=5/J:79+57-10
-pau^ao-r+k=aa@2_1/A:0_1_3/B:1-0-2@1-1&1-7#1-4$1-3!0-1;0-1|ao/C:1+1+4/D:content_2/E:cc+1@1+4&1+2#0+1/F:content_4/G:6_5/H:7=4@7=4|L-L%/I:5=5/J:79+57-10
-ao^r-k+aa=n@1_4/A:1_0_2/B:1-1-4@1-4&2-6#1-3$1-2!1-2;0-5|aa/C:0+0+2/D:cc_1/E:content+4@2+3&1+1#0+2/F:in_1/G:6_5/H:7=4@7=4|L-L%/I:5=5/J:79+57-10
-r^k-aa+n=v@2_3/A:1_0_2/B:1-1-4@1-4&2-6#1-3$1-2!1-2;0-5|aa/C:0+0+2/D:cc_1/E:content+4@2+3&1+1#0+2/F:in_1/G:6_5/H:7=4@7=4|L-L%/I:5=5/J:79+57-10
-k^aa-n+v=er@3_2/A:1_0_2/B:1-1-4@1-4&2-6#1-3$1-2!1-2;0-5|aa/C:0+0+2/D:cc_1/E:content+4@2+3&1+1#0+2/F:in_1/G:6_5/H:7=4@7=4|L-L%/I:5=5/J:79+57-10
-aa^n-v+er=s@4_1/A:1_0_2/B:1-1-4@1-4&2-6#1-3$1-2!1-2;0-5|aa/C:0+0+2/D:cc_1/E:content+4@2+3&1+1#0+2/F:in_1/G:6_5/H:7=4@7=4|L-L%/I:5=5/J:79+57-10
-n^v-er+s=ey@1_2/A:1_1_4/B:0-0-2@2-3&3-5#2-3$2-2!1-1;1-4|er/C:1+0+2/D:cc_1/E:content+4@2+3&1+1#0+2/F:in_1/G:6_5/H:7=4@7=4|L-L%/I:5=5/J:79+57-10
-v^er-s+ey=sh@2_1/A:1_1_4/B:0-0-2@2-3&3-5#2-3$2-2!1-1;1-4|er/C:1+0+2/D:cc_1/E:content+4@2+3&1+1#0+2/F:in_1/G:6_5/H:7=4@7=4|L-L%/I:5=5/J:79+57-10
-er^s-ey+sh=ax@1_2/A:0_0_2/B:1-0-2@3-2&4-4#2-2$2-2!2-3;2-3|ey/C:0+0+3/D:cc_1/E:content+4@2+3&1+1#0+2/F:in_1/G:6_5/H:7=4@7=4|L-L%/I:5=5/J:79+57-10
-s^ey-sh+ax=n@2_1/A:0_0_2/B:1-0-2@3-2&4-4#2-2$2-2!2-3;2-3|ey/C:0+0+3/D:cc_1/E:content+4@2+3&1+1#0+2/F:in_1/G:6_5/H:7=4@7=4|L-L%/I:5=5/J:79+57-10
-ey^sh-ax+n=z@1_3/A:1_0_2/B:0-0-3@4-1&5-3#3-2$2-2!1-2;3-2|ax/C:0+0+2/D:cc_1/E:content+4@2+3&1+1#0+2/F:in_1/G:6_5/H:7=4@7=4|L-L%/I:5=5/J:79+57-10
-sh^ax-n+z=ih@2_2/A:1_0_2/B:0-0-3@4-1&5-3#3-2$2-2!1-2;3-2|ax/C:0+0+2/D:cc_1/E:content+4@2+3&1+1#0+2/F:in_1/G:6_5/H:7=4@7=4|L-L%/I:5=5/J:79+57-10
-ax^n-z+ih=n@3_1/A:1_0_2/B:0-0-3@4-1&5-3#3-2$2-2!1-2;3-2|ax/C:0+0+2/D:cc_1/E:content+4@2+3&1+1#0+2/F:in_1/G:6_5/H:7=4@7=4|L-L%/I:5=5/J:79+57-10
-n^z-ih+n=ih@1_2/A:0_0_3/B:0-0-2@1-1&6-2#3-2$2-2!2-1;4-1|ih/C:1+1+2/D:content_4/E:in+1@3+2&2+1#1+1/F:content_1/G:6_5/H:7=4@7=4|L-L%/I:5=5/J:79+57-10
-z^ih-n+ih=t@2_1/A:0_0_3/B:0-0-2@1-1&6-2#3-2$2-2!2-1;4-1|ih/C:1+1+2/D:content_4/E:in+1@3+2&2+1#1+1/F:content_1/G:6_5/H:7=4@7=4|L-L%/I:5=5/J:79+57-10
-ih^n-ih+t=pau@1_2/A:0_0_2/B:1-1-2@1-1&7-1#3-1$2-1!3-0;5-0|ih/C:1+0+3/D:in_1/E:content+1@4+1&2+0#2+0/F:cc_1/G:6_5/H:7=4@7=4|L-L%/I:5=5/J:79+57-10
-n^ih-t+pau=ae@2_1/A:0_0_2/B:1-1-2@1-1&7-1#3-1$2-1!3-0;5-0|ih/C:1+0+3/D:in_1/E:content+1@4+1&2+0#2+0/F:cc_1/G:6_5/H:7=4@7=4|L-L%/I:5=5/J:79+57-10
-ih^t-pau+ae=n@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:cc_1/G:7_4/H:x=x@1=10|0/I:5=5/J:79+57-10
-t^pau-ae+n=d@1_3/A:1_1_2/B:1-0-3@1-1&1-5#1-3$1-2!0-1;0-4|ae/C:1+0+3/D:content_1/E:cc+1@1+5&1+1#0+4/F:wp_1/G:7_4/H:5=5@8=3|L-L%/I:6=5/J:79+57-10
-pau^ae-n+d=w@2_2/A:1_1_2/B:1-0-3@1-1&1-5#1-3$1-2!0-1;0-4|ae/C:1+0+3/D:content_1/E:cc+1@1+5&1+1#0+4/F:wp_1/G:7_4/H:5=5@8=3|L-L%/I:6=5/J:79+57-10
-ae^n-d+w=ah@3_1/A:1_1_2/B:1-0-3@1-1&1-5#1-3$1-2!0-1;0-4|ae/C:1+0+3/D:content_1/E:cc+1@1+5&1+1#0+4/F:wp_1/G:7_4/H:5=5@8=3|L-L%/I:6=5/J:79+57-10
-n^d-w+ah=t@1_3/A:1_0_3/B:1-0-3@1-1&2-4#1-2$1-2!1-1;0-3|ah/C:1+0+2/D:cc_1/E:wp+1@2+4&1+1#0+3/F:aux_1/G:7_4/H:5=5@8=3|L-L%/I:6=5/J:79+57-10
-d^w-ah+t=ih@2_2/A:1_0_3/B:1-0-3@1-1&2-4#1-2$1-2!1-1;0-3|ah/C:1+0+2/D:cc_1/E:wp+1@2+4&1+1#0+3/F:aux_1/G:7_4/H:5=5@8=3|L-L%/I:6=5/J:79+57-10
-w^ah-t+ih=z@3_1/A:1_0_3/B:1-0-3@1-1&2-4#1-2$1-2!1-1;0-3|ah/C:1+0+2/D:cc_1/E:wp+1@2+4&1+1#0+3/F:aux_1/G:7_4/H:5=5@8=3|L-L%/I:6=5/J:79+57-10
-ah^t-ih+z=dh@1_2/A:1_0_3/B:1-0-2@1-1&3-3#2-1$1-2!1-0;0-2|ih/C:0+0+2/D:wp_1/E:aux+1@3+3&1+1#0+2/F:det_1/G:7_4/H:5=5@8=3|L-L%/I:6=5/J:79+57-10
-t^ih-z+dh=ax@2_1/A:1_0_3/B:1-0-2@1-1&3-3#2-1$1-2!1-0;0-2|ih/C:0+0+2/D:wp_1/E:aux+1@3+3&1+1#0+2/F:det_1/G:7_4/H:5=5@8=3|L-L%/I:6=5/J:79+57-10
-ih^z-dh+ax=y@1_2/A:1_0_2/B:0-0-2@1-1&4-2#3-1$1-2!1-0;0-1|ax/C:0+1+3/D:aux_1/E:det+1@4+2&1+1#0+1/F:content_1/G:7_4/H:5=5@8=3|L-L%/I:6=5/J:79+57-10
-z^dh-ax+y=uw@2_1/A:1_0_2/B:0-0-2@1-1&4-2#3-1$1-2!1-0;0-1|ax/C:0+1+3/D:aux_1/E:det+1@4+2&1+1#0+1/F:content_1/G:7_4/H:5=5@8=3|L-L%/I:6=5/J:79+57-10
-dh^ax-y+uw=s@1_3/A:0_0_2/B:0-1-3@1-1&5-1#3-1$1-1!2-0;0-0|uw/C:1+0+2/D:det_1/E:content+1@5+1&1+0#0+0/F:in_1/G:7_4/H:5=5@8=3|L-L%/I:6=5/J:79+57-10
-ax^y-uw+s=pau@2_2/A:0_0_2/B:0-1-3@1-1&5-1#3-1$1-1!2-0;0-0|uw/C:1+0+2/D:det_1/E:content+1@5+1&1+0#0+0/F:in_1/G:7_4/H:5=5@8=3|L-L%/I:6=5/J:79+57-10
-y^uw-s+pau=ah@3_1/A:0_0_2/B:0-1-3@1-1&5-1#3-1$1-1!2-0;0-0|uw/C:1+0+2/D:det_1/E:content+1@5+1&1+0#0+0/F:in_1/G:7_4/H:5=5@8=3|L-L%/I:6=5/J:79+57-10
-uw^s-pau+ah=v@x_x/A:0_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:content_1/E:x+x@x+x&x+x#x+x/F:in_1/G:5_5/H:x=x@1=10|0/I:6=5/J:79+57-10
-s^pau-ah+v=ax@1_2/A:0_1_3/B:1-0-2@1-1&1-6#1-4$1-4!0-2;0-2|ah/C:0+0+1/D:content_1/E:in+1@1+5&1+3#0+2/F:det_1/G:5_5/H:6=5@9=2|L-L%/I:9=4/J:79+57-10
-pau^ah-v+ax=b@2_1/A:0_1_3/B:1-0-2@1-1&1-6#1-4$1-4!0-2;0-2|ah/C:0+0+1/D:content_1/E:in+1@1+5&1+3#0+2/F:det_1/G:5_5/H:6=5@9=2|L-L%/I:9=4/J:79+57-10
-ah^v-ax+b=uh@1_1/A:1_0_2/B:0-0-1@1-1&2-5#1-4$1-4!1-1;0-1|ax/C:1+1+3/D:in_1/E:det+1@2+4&1+3#0+1/F:content_1/G:5_5/H:6=5@9=2|L-L%/I:9=4/J:79+57-10
-v^ax-b+uh=k@1_3/A:0_0_1/B:1-1-3@1-1&3-4#1-3$1-3!2-1;0-2|uh/C:1+0+3/D:det_1/E:content+1@3+3&1+2#0+1/F:content_1/G:5_5/H:6=5@9=2|L-L%/I:9=4/J:79+57-10
-ax^b-uh+k=th@2_2/A:0_0_1/B:1-1-3@1-1&3-4#1-3$1-3!2-1;0-2|uh/C:1+0+3/D:det_1/E:content+1@3+3&1+2#0+1/F:content_1/G:5_5/H:6=5@9=2|L-L%/I:9=4/J:79+57-10
-b^uh-k+th=ao@3_1/A:0_0_1/B:1-1-3@1-1&3-4#1-3$1-3!2-1;0-2|uh/C:1+0+3/D:det_1/E:content+1@3+3&1+2#0+1/F:content_1/G:5_5/H:6=5@9=2|L-L%/I:9=4/J:79+57-10
-uh^k-th+ao=t@1_3/A:1_1_3/B:1-0-3@1-1&4-3#2-2$2-3!1-1;1-1|ao/C:1+1+2/D:content_1/E:content+1@4+2&2+1#1+1/F:content_2/G:5_5/H:6=5@9=2|L-L%/I:9=4/J:79+57-10
-k^th-ao+t=ae@2_2/A:1_1_3/B:1-0-3@1-1&4-3#2-2$2-3!1-1;1-1|ao/C:1+1+2/D:content_1/E:content+1@4+2&2+1#1+1/F:content_2/G:5_5/H:6=5@9=2|L-L%/I:9=4/J:79+57-10
-th^ao-t+ae=l@3_1/A:1_1_3/B:1-0-3@1-1&4-3#2-2$2-3!1-1;1-1|ao/C:1+1+2/D:content_1/E:content+1@4+2&2+1#1+1/F:content_2/G:5_5/H:6=5@9=2|L-L%/I:9=4/J:79+57-10
-ao^t-ae+l=ax@1_2/A:1_0_3/B:1-1-2@1-2&5-2#3-1$2-2!1-0;2-1|ae/C:0+1+2/D:content_1/E:content+2@5+1&3+0#1+0/F:in_2/G:5_5/H:6=5@9=2|L-L%/I:9=4/J:79+57-10
-t^ae-l+ax=s@2_1/A:1_0_3/B:1-1-2@1-2&5-2#3-1$2-2!1-0;2-1|ae/C:0+1+2/D:content_1/E:content+2@5+1&3+0#1+0/F:in_2/G:5_5/H:6=5@9=2|L-L%/I:9=4/J:79+57-10
-ae^l-ax+s=pau@1_2/A:1_1_2/B:0-1-2@2-1&6-1#4-1$3-1!1-0;1-0|ax/C:0+0+3/D:content_1/E:content+2@5+1&3+0#1+0/F:in_2/G:5_5/H:6=5@9=2|L-L%/I:9=4/J:79+57-10
-l^ax-s+pau=w@2_1/A:1_1_2/B:0-1-2@2-1&6-1#4-1$3-1!1-0;1-0|ax/C:0+0+3/D:content_1/E:content+2@5+1&3+0#1+0/F:in_2/G:5_5/H:6=5@9=2|L-L%/I:9=4/J:79+57-10
-ax^s-pau+w=ih@x_x/A:0_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+3/D:content_2/E:x+x@x+x&x+x#x+x/F:in_2/G:6_5/H:x=x@1=10|0/I:9=4/J:79+57-10
-s^pau-w+ih=th@1_3/A:0_1_2/B:0-0-3@1-2&1-9#1-6$1-5!0-1;0-2|ih/C:1+0+2/D:content_2/E:in+2@1+4&1+2#0+1/F:content_2/G:6_5/H:9=4@10=1|H-H%/I:0=0/J:79+57-10
-pau^w-ih+th=aw@2_2/A:0_1_2/B:0-0-3@1-2&1-9#1-6$1-5!0-1;0-2|ih/C:1+0+2/D:content_2/E:in+2@1+4&1+2#0+1/F:content_2/G:6_5/H:9=4@10=1|H-H%/I:0=0/J:79+57-10
-w^ih-th+aw=t@3_1/A:0_1_2/B:0-0-3@1-2&1-9#1-6$1-5!0-1;0-2|ih/C:1+0+2/D:content_2/E:in+2@1+4&1+2#0+1/F:content_2/G:6_5/H:9=4@10=1|H-H%/I:0=0/J:79+57-10
-ih^th-aw+t=p@1_2/A:0_0_3/B:1-0-2@2-1&2-8#1-5$1-5!0-1;0-1|aw/C:1+1+3/D:content_2/E:in+2@1+4&1+2#0+1/F:content_2/G:6_5/H:9=4@10=1|H-H%/I:0=0/J:79+57-10
-th^aw-t+p=ih@2_1/A:0_0_3/B:1-0-2@2-1&2-8#1-5$1-5!0-1;0-1|aw/C:1+1+3/D:content_2/E:in+2@1+4&1+2#0+1/F:content_2/G:6_5/H:9=4@10=1|H-H%/I:0=0/J:79+57-10
-aw^t-p+ih=k@1_3/A:1_0_2/B:1-1-3@1-2&3-7#2-4$1-4!1-2;0-3|ih/C:0+0+3/D:in_2/E:content+2@2+3&1+1#0+2/F:cc_1/G:6_5/H:9=4@10=1|H-H%/I:0=0/J:79+57-10
-t^p-ih+k=ch@2_2/A:1_0_2/B:1-1-3@1-2&3-7#2-4$1-4!1-2;0-3|ih/C:0+0+3/D:in_2/E:content+2@2+3&1+1#0+2/F:cc_1/G:6_5/H:9=4@10=1|H-H%/I:0=0/J:79+57-10
-p^ih-k+ch=er@3_1/A:1_0_2/B:1-1-3@1-2&3-7#2-4$1-4!1-2;0-3|ih/C:0+0+3/D:in_2/E:content+2@2+3&1+1#0+2/F:cc_1/G:6_5/H:9=4@10=1|H-H%/I:0=0/J:79+57-10
-ih^k-ch+er=z@1_3/A:1_1_3/B:0-0-3@2-1&4-6#3-4$2-4!1-1;1-2|er/C:1+0+2/D:in_2/E:content+2@2+3&1+1#0+2/F:cc_1/G:6_5/H:9=4@10=1|H-H%/I:0=0/J:79+57-10
-k^ch-er+z=ao@2_2/A:1_1_3/B:0-0-3@2-1&4-6#3-4$2-4!1-1;1-2|er/C:1+0+2/D:in_2/E:content+2@2+3&1+1#0+2/F:cc_1/G:6_5/H:9=4@10=1|H-H%/I:0=0/J:79+57-10
-ch^er-z+ao=r@3_1/A:1_1_3/B:0-0-3@2-1&4-6#3-4$2-4!1-1;1-2|er/C:1+0+2/D:in_2/E:content+2@2+3&1+1#0+2/F:cc_1/G:6_5/H:9=4@10=1|H-H%/I:0=0/J:79+57-10
-er^z-ao+r=k@1_2/A:0_0_3/B:1-0-2@1-1&5-5#3-3$2-4!2-1;2-1|ao/C:1+1+4/D:content_2/E:cc+1@3+2&2+1#1+1/F:content_4/G:6_5/H:9=4@10=1|H-H%/I:0=0/J:79+57-10
-z^ao-r+k=aa@2_1/A:0_0_3/B:1-0-2@1-1&5-5#3-3$2-4!2-1;2-1|ao/C:1+1+4/D:content_2/E:cc+1@3+2&2+1#1+1/F:content_4/G:6_5/H:9=4@10=1|H-H%/I:0=0/J:79+57-10
-ao^r-k+aa=n@1_4/A:1_0_2/B:1-1-4@1-4&6-4#4-2$2-3!1-2;3-2|aa/C:0+0+2/D:cc_1/E:content+4@4+1&2+0#2+0/F:0_0/G:6_5/H:9=4@10=1|H-H%/I:0=0/J:79+57-10
-r^k-aa+n=v@2_3/A:1_0_2/B:1-1-4@1-4&6-4#4-2$2-3!1-2;3-2|aa/C:0+0+2/D:cc_1/E:content+4@4+1&2+0#2+0/F:0_0/G:6_5/H:9=4@10=1|H-H%/I:0=0/J:79+57-10
-k^aa-n+v=er@3_2/A:1_0_2/B:1-1-4@1-4&6-4#4-2$2-3!1-2;3-2|aa/C:0+0+2/D:cc_1/E:content+4@4+1&2+0#2+0/F:0_0/G:6_5/H:9=4@10=1|H-H%/I:0=0/J:79+57-10
-aa^n-v+er=s@4_1/A:1_0_2/B:1-1-4@1-4&6-4#4-2$2-3!1-2;3-2|aa/C:0+0+2/D:cc_1/E:content+4@4+1&2+0#2+0/F:0_0/G:6_5/H:9=4@10=1|H-H%/I:0=0/J:79+57-10
-n^v-er+s=ey@1_2/A:1_1_4/B:0-0-2@2-3&7-3#5-2$3-3!1-1;1-1|er/C:1+1+2/D:cc_1/E:content+4@4+1&2+0#2+0/F:0_0/G:6_5/H:9=4@10=1|H-H%/I:0=0/J:79+57-10
-v^er-s+ey=sh@2_1/A:1_1_4/B:0-0-2@2-3&7-3#5-2$3-3!1-1;1-1|er/C:1+1+2/D:cc_1/E:content+4@4+1&2+0#2+0/F:0_0/G:6_5/H:9=4@10=1|H-H%/I:0=0/J:79+57-10
-er^s-ey+sh=ax@1_2/A:0_0_2/B:1-1-2@3-2&8-2#5-1$3-2!2-0;2-1|ey/C:0+1+2/D:cc_1/E:content+4@4+1&2+0#2+0/F:0_0/G:6_5/H:9=4@10=1|H-H%/I:0=0/J:79+57-10
-s^ey-sh+ax=n@2_1/A:0_0_2/B:1-1-2@3-2&8-2#5-1$3-2!2-0;2-1|ey/C:0+1+2/D:cc_1/E:content+4@4+1&2+0#2+0/F:0_0/G:6_5/H:9=4@10=1|H-H%/I:0=0/J:79+57-10
-ey^sh-ax+n=pau@1_2/A:1_1_2/B:0-1-2@4-1&9-1#6-1$4-1!1-0;1-0|ax/C:0+0+0/D:cc_1/E:content+4@4+1&2+0#2+0/F:0_0/G:6_5/H:9=4@10=1|H-H%/I:0=0/J:79+57-10
-sh^ax-n+pau=x@2_1/A:1_1_2/B:0-1-2@4-1&9-1#6-1$4-1!1-0;1-0|ax/C:0+0+0/D:cc_1/E:content+4@4+1&2+0#2+0/F:0_0/G:6_5/H:9=4@10=1|H-H%/I:0=0/J:79+57-10
-ax^n-pau+x=x@x_x/A:0_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:content_4/E:x+x@x+x&x+x#x+x/F:0_0/G:9_4/H:x=x@1=10|0/I:0=0/J:79+57-10
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice02.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice02.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice02.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice02.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,191 +0,0 @@
-x^x-pau+s=ow@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+2/D:0_0/E:x+x@x+x&x+x#x+x/F:content_1/G:0_0/H:x=x@1=11|0/I:7=4/J:73+56-11
-x^pau-s+ow=sh@1_2/A:0_0_0/B:1-1-2@1-1&1-7#1-4$1-4!0-1;0-1|ow/C:1+1+2/D:0_0/E:content+1@1+4&1+2#0+1/F:content_1/G:0_0/H:7=4@1=11|L-L%/I:9=9/J:73+56-11
-pau^s-ow+sh=iy@2_1/A:0_0_0/B:1-1-2@1-1&1-7#1-4$1-4!0-1;0-1|ow/C:1+1+2/D:0_0/E:content+1@1+4&1+2#0+1/F:content_1/G:0_0/H:7=4@1=11|L-L%/I:9=9/J:73+56-11
-s^ow-sh+iy=w@1_2/A:1_1_2/B:1-1-2@1-1&2-6#1-3$1-3!1-1;1-3|iy/C:1+0+3/D:content_1/E:content+1@2+3&2+1#1+2/F:aux_1/G:0_0/H:7=4@1=11|L-L%/I:9=9/J:73+56-11
-ow^sh-iy+w=aa@2_1/A:1_1_2/B:1-1-2@1-1&2-6#1-3$1-3!1-1;1-3|iy/C:1+0+3/D:content_1/E:content+1@2+3&2+1#1+2/F:aux_1/G:0_0/H:7=4@1=11|L-L%/I:9=9/J:73+56-11
-sh^iy-w+aa=z@1_3/A:1_1_2/B:1-0-3@1-1&3-5#2-2$2-3!1-2;1-2|aa/C:0+0+4/D:content_1/E:aux+1@3+2&3+1#1+1/F:content_4/G:0_0/H:7=4@1=11|L-L%/I:9=9/J:73+56-11
-iy^w-aa+z=k@2_2/A:1_1_2/B:1-0-3@1-1&3-5#2-2$2-3!1-2;1-2|aa/C:0+0+4/D:content_1/E:aux+1@3+2&3+1#1+1/F:content_4/G:0_0/H:7=4@1=11|L-L%/I:9=9/J:73+56-11
-w^aa-z+k=ax@3_1/A:1_1_2/B:1-0-3@1-1&3-5#2-2$2-3!1-2;1-2|aa/C:0+0+4/D:content_1/E:aux+1@3+2&3+1#1+1/F:content_4/G:0_0/H:7=4@1=11|L-L%/I:9=9/J:73+56-11
-aa^z-k+ax=n@1_4/A:1_0_3/B:0-0-4@1-4&4-4#3-2$2-3!1-1;2-1|ax/C:1+1+2/D:aux_1/E:content+4@4+1&3+0#2+0/F:in_1/G:0_0/H:7=4@1=11|L-L%/I:9=9/J:73+56-11
-z^k-ax+n=s@2_3/A:1_0_3/B:0-0-4@1-4&4-4#3-2$2-3!1-1;2-1|ax/C:1+1+2/D:aux_1/E:content+4@4+1&3+0#2+0/F:in_1/G:0_0/H:7=4@1=11|L-L%/I:9=9/J:73+56-11
-k^ax-n+s=ih@3_2/A:1_0_3/B:0-0-4@1-4&4-4#3-2$2-3!1-1;2-1|ax/C:1+1+2/D:aux_1/E:content+4@4+1&3+0#2+0/F:in_1/G:0_0/H:7=4@1=11|L-L%/I:9=9/J:73+56-11
-ax^n-s+ih=d@4_1/A:1_0_3/B:0-0-4@1-4&4-4#3-2$2-3!1-1;2-1|ax/C:1+1+2/D:aux_1/E:content+4@4+1&3+0#2+0/F:in_1/G:0_0/H:7=4@1=11|L-L%/I:9=9/J:73+56-11
-n^s-ih+d=er@1_2/A:0_0_4/B:1-1-2@2-3&5-3#3-1$2-2!2-0;3-2|ih/C:0+0+1/D:aux_1/E:content+4@4+1&3+0#2+0/F:in_1/G:0_0/H:7=4@1=11|L-L%/I:9=9/J:73+56-11
-s^ih-d+er=ih@2_1/A:0_0_4/B:1-1-2@2-3&5-3#3-1$2-2!2-0;3-2|ih/C:0+0+1/D:aux_1/E:content+4@4+1&3+0#2+0/F:in_1/G:0_0/H:7=4@1=11|L-L%/I:9=9/J:73+56-11
-ih^d-er+ih=ng@1_1/A:1_1_2/B:0-0-1@3-2&6-2#4-1$3-2!1-0;1-1|er/C:0+1+2/D:aux_1/E:content+4@4+1&3+0#2+0/F:in_1/G:0_0/H:7=4@1=11|L-L%/I:9=9/J:73+56-11
-d^er-ih+ng=pau@1_2/A:0_0_1/B:0-1-2@4-1&7-1#4-1$3-1!2-0;2-0|ih/C:0+0+2/D:aux_1/E:content+4@4+1&3+0#2+0/F:in_1/G:0_0/H:7=4@1=11|L-L%/I:9=9/J:73+56-11
-er^ih-ng+pau=ih@2_1/A:0_0_1/B:0-1-2@4-1&7-1#4-1$3-1!2-0;2-0|ih/C:0+0+2/D:aux_1/E:content+4@4+1&3+0#2+0/F:in_1/G:0_0/H:7=4@1=11|L-L%/I:9=9/J:73+56-11
-ih^ng-pau+ih=n@x_x/A:0_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+2/D:content_4/E:x+x@x+x&x+x#x+x/F:in_1/G:7_4/H:x=x@1=11|0/I:9=9/J:73+56-11
-ng^pau-ih+n=hh@1_2/A:0_1_2/B:0-0-2@1-1&1-9#1-8$1-2!0-2;0-2|ih/C:0+0+2/D:content_4/E:in+1@1+9&1+4#0+2/F:pps_1/G:7_4/H:9=9@2=10|NONE/I:4=4/J:73+56-11
-pau^ih-n+hh=er@2_1/A:0_1_2/B:0-0-2@1-1&1-9#1-8$1-2!0-2;0-2|ih/C:0+0+2/D:content_4/E:in+1@1+9&1+4#0+2/F:pps_1/G:7_4/H:9=9@2=10|NONE/I:4=4/J:73+56-11
-ih^n-hh+er=ow@1_2/A:0_0_2/B:0-0-2@1-1&2-8#1-8$1-2!0-1;0-1|er/C:1+1+2/D:in_1/E:pps+1@2+8&1+4#0+1/F:content_1/G:7_4/H:9=9@2=10|NONE/I:4=4/J:73+56-11
-n^hh-er+ow=n@2_1/A:0_0_2/B:0-0-2@1-1&2-8#1-8$1-2!0-1;0-1|er/C:1+1+2/D:in_1/E:pps+1@2+8&1+4#0+1/F:content_1/G:7_4/H:9=9@2=10|NONE/I:4=4/J:73+56-11
-hh^er-ow+n=m@1_2/A:0_0_2/B:1-1-2@1-1&3-7#1-7$1-1!0-1;0-0|ow/C:1+0+4/D:pps_1/E:content+1@3+7&1+3#0+1/F:content_1/G:7_4/H:9=9@2=10|NONE/I:4=4/J:73+56-11
-er^ow-n+m=ay@2_1/A:0_0_2/B:1-1-2@1-1&3-7#1-7$1-1!0-1;0-0|ow/C:1+0+4/D:pps_1/E:content+1@3+7&1+3#0+1/F:content_1/G:7_4/H:9=9@2=10|NONE/I:4=4/J:73+56-11
-ow^n-m+ay=n@1_4/A:1_1_2/B:1-0-4@1-1&4-6#2-6$2-1!1-1;1-0|ay/C:1+0+2/D:content_1/E:content+1@4+6&2+2#1+2/F:in_1/G:7_4/H:9=9@2=10|NONE/I:4=4/J:73+56-11
-n^m-ay+n=d@2_3/A:1_1_2/B:1-0-4@1-1&4-6#2-6$2-1!1-1;1-0|ay/C:1+0+2/D:content_1/E:content+1@4+6&2+2#1+2/F:in_1/G:7_4/H:9=9@2=10|NONE/I:4=4/J:73+56-11
-m^ay-n+d=ae@3_2/A:1_1_2/B:1-0-4@1-1&4-6#2-6$2-1!1-1;1-0|ay/C:1+0+2/D:content_1/E:content+1@4+6&2+2#1+2/F:in_1/G:7_4/H:9=9@2=10|NONE/I:4=4/J:73+56-11
-ay^n-d+ae=z@4_1/A:1_1_2/B:1-0-4@1-1&4-6#2-6$2-1!1-1;1-0|ay/C:1+0+2/D:content_1/E:content+1@4+6&2+2#1+2/F:in_1/G:7_4/H:9=9@2=10|NONE/I:4=4/J:73+56-11
-n^d-ae+z=w@1_2/A:1_0_4/B:1-0-2@1-1&5-5#3-5$2-1!1-1;2-0|ae/C:1+0+3/D:content_1/E:in+1@5+5&3+2#1+1/F:content_1/G:7_4/H:9=9@2=10|NONE/I:4=4/J:73+56-11
-d^ae-z+w=eh@2_1/A:1_0_4/B:1-0-2@1-1&5-5#3-5$2-1!1-1;2-0|ae/C:1+0+3/D:content_1/E:in+1@5+5&3+2#1+1/F:content_1/G:7_4/H:9=9@2=10|NONE/I:4=4/J:73+56-11
-ae^z-w+eh=l@1_3/A:1_0_2/B:1-0-3@1-1&6-4#4-4$2-1!1-1;3-0|eh/C:1+0+2/D:in_1/E:content+1@6+4&3+1#2+2/F:in_1/G:7_4/H:9=9@2=10|NONE/I:4=4/J:73+56-11
-z^w-eh+l=ae@2_2/A:1_0_2/B:1-0-3@1-1&6-4#4-4$2-1!1-1;3-0|eh/C:1+0+2/D:in_1/E:content+1@6+4&3+1#2+2/F:in_1/G:7_4/H:9=9@2=10|NONE/I:4=4/J:73+56-11
-w^eh-l+ae=z@3_1/A:1_0_2/B:1-0-3@1-1&6-4#4-4$2-1!1-1;3-0|eh/C:1+0+2/D:in_1/E:content+1@6+4&3+1#2+2/F:in_1/G:7_4/H:9=9@2=10|NONE/I:4=4/J:73+56-11
-eh^l-ae+z=sh@1_2/A:1_0_3/B:1-0-2@1-1&7-3#5-3$2-1!1-1;4-0|ae/C:1+0+2/D:content_1/E:in+1@7+3&4+1#1+1/F:content_1/G:7_4/H:9=9@2=10|NONE/I:4=4/J:73+56-11
-l^ae-z+sh=iy@2_1/A:1_0_3/B:1-0-2@1-1&7-3#5-3$2-1!1-1;4-0|ae/C:1+0+2/D:content_1/E:in+1@7+3&4+1#1+1/F:content_1/G:7_4/H:9=9@2=10|NONE/I:4=4/J:73+56-11
-ae^z-sh+iy=k@1_2/A:1_0_2/B:1-0-2@1-1&8-2#6-2$2-1!1-1;5-0|iy/C:1+0+3/D:in_1/E:content+1@8+2&4+0#2+0/F:md_1/G:7_4/H:9=9@2=10|NONE/I:4=4/J:73+56-11
-z^sh-iy+k=uh@2_1/A:1_0_2/B:1-0-2@1-1&8-2#6-2$2-1!1-1;5-0|iy/C:1+0+3/D:in_1/E:content+1@8+2&4+0#2+0/F:md_1/G:7_4/H:9=9@2=10|NONE/I:4=4/J:73+56-11
-sh^iy-k+uh=d@1_3/A:1_0_2/B:1-0-3@1-1&9-1#7-1$2-1!1-0;6-0|uh/C:1+0+3/D:content_1/E:md+1@9+1&5+0#1+0/F:in_1/G:7_4/H:9=9@2=10|NONE/I:4=4/J:73+56-11
-iy^k-uh+d=pau@2_2/A:1_0_2/B:1-0-3@1-1&9-1#7-1$2-1!1-0;6-0|uh/C:1+0+3/D:content_1/E:md+1@9+1&5+0#1+0/F:in_1/G:7_4/H:9=9@2=10|NONE/I:4=4/J:73+56-11
-k^uh-d+pau=f@3_1/A:1_0_2/B:1-0-3@1-1&9-1#7-1$2-1!1-0;6-0|uh/C:1+0+3/D:content_1/E:md+1@9+1&5+0#1+0/F:in_1/G:7_4/H:9=9@2=10|NONE/I:4=4/J:73+56-11
-uh^d-pau+f=ao@x_x/A:1_0_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:md_1/E:x+x@x+x&x+x#x+x/F:in_1/G:9_9/H:x=x@1=11|0/I:4=4/J:73+56-11
-d^pau-f+ao=r@1_3/A:1_0_3/B:1-0-3@1-1&1-4#1-3$1-3!0-2;0-2|ao/C:0+0+2/D:md_1/E:in+1@1+4&1+2#0+2/F:det_1/G:9_9/H:4=4@3=9|L-L%/I:7=5/J:73+56-11
-pau^f-ao+r=dh@2_2/A:1_0_3/B:1-0-3@1-1&1-4#1-3$1-3!0-2;0-2|ao/C:0+0+2/D:md_1/E:in+1@1+4&1+2#0+2/F:det_1/G:9_9/H:4=4@3=9|L-L%/I:7=5/J:73+56-11
-f^ao-r+dh=ax@3_1/A:1_0_3/B:1-0-3@1-1&1-4#1-3$1-3!0-2;0-2|ao/C:0+0+2/D:md_1/E:in+1@1+4&1+2#0+2/F:det_1/G:9_9/H:4=4@3=9|L-L%/I:7=5/J:73+56-11
-ao^r-dh+ax=hh@1_2/A:1_0_3/B:0-0-2@1-1&2-3#1-3$1-3!1-1;0-1|ax/C:1+1+3/D:in_1/E:det+1@2+3&1+2#0+1/F:content_1/G:9_9/H:4=4@3=9|L-L%/I:7=5/J:73+56-11
-r^dh-ax+hh=aa@2_1/A:1_0_3/B:0-0-2@1-1&2-3#1-3$1-3!1-1;0-1|ax/C:1+1+3/D:in_1/E:det+1@2+3&1+2#0+1/F:content_1/G:9_9/H:4=4@3=9|L-L%/I:7=5/J:73+56-11
-dh^ax-hh+aa=t@1_3/A:0_0_2/B:1-1-3@1-1&3-2#1-2$1-2!2-1;0-1|aa/C:1+1+2/D:det_1/E:content+1@3+2&1+1#0+1/F:content_1/G:9_9/H:4=4@3=9|L-L%/I:7=5/J:73+56-11
-ax^hh-aa+t=d@2_2/A:0_0_2/B:1-1-3@1-1&3-2#1-2$1-2!2-1;0-1|aa/C:1+1+2/D:det_1/E:content+1@3+2&1+1#0+1/F:content_1/G:9_9/H:4=4@3=9|L-L%/I:7=5/J:73+56-11
-hh^aa-t+d=ey@3_1/A:0_0_2/B:1-1-3@1-1&3-2#1-2$1-2!2-1;0-1|aa/C:1+1+2/D:det_1/E:content+1@3+2&1+1#0+1/F:content_1/G:9_9/H:4=4@3=9|L-L%/I:7=5/J:73+56-11
-aa^t-d+ey=pau@1_2/A:1_1_3/B:1-1-2@1-1&4-1#2-1$2-1!1-0;1-0|ey/C:1+0+3/D:content_1/E:content+1@4+1&2+0#1+0/F:content_1/G:9_9/H:4=4@3=9|L-L%/I:7=5/J:73+56-11
-t^d-ey+pau=m@2_1/A:1_1_3/B:1-1-2@1-1&4-1#2-1$2-1!1-0;1-0|ey/C:1+0+3/D:content_1/E:content+1@4+1&2+0#1+0/F:content_1/G:9_9/H:4=4@3=9|L-L%/I:7=5/J:73+56-11
-d^ey-pau+m=ey@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:content_1/G:4_4/H:x=x@1=11|0/I:7=5/J:73+56-11
-ey^pau-m+ey=d@1_3/A:1_1_2/B:1-0-3@1-1&1-7#1-4$1-4!0-2;0-2|ey/C:0+0+2/D:content_1/E:content+1@1+5&1+3#0+2/F:pps_1/G:4_4/H:7=5@4=8|L-L%/I:3=2/J:73+56-11
-pau^m-ey+d=hh@2_2/A:1_1_2/B:1-0-3@1-1&1-7#1-4$1-4!0-2;0-2|ey/C:0+0+2/D:content_1/E:content+1@1+5&1+3#0+2/F:pps_1/G:4_4/H:7=5@4=8|L-L%/I:3=2/J:73+56-11
-m^ey-d+hh=er@3_1/A:1_1_2/B:1-0-3@1-1&1-7#1-4$1-4!0-2;0-2|ey/C:0+0+2/D:content_1/E:content+1@1+5&1+3#0+2/F:pps_1/G:4_4/H:7=5@4=8|L-L%/I:3=2/J:73+56-11
-ey^d-hh+er=f@1_2/A:1_0_3/B:0-0-2@1-1&2-6#1-4$1-4!1-1;0-1|er/C:1+1+3/D:content_1/E:pps+1@2+4&2+3#1+1/F:content_1/G:4_4/H:7=5@4=8|L-L%/I:3=2/J:73+56-11
-d^hh-er+f=iy@2_1/A:1_0_3/B:0-0-2@1-1&2-6#1-4$1-4!1-1;0-1|er/C:1+1+3/D:content_1/E:pps+1@2+4&2+3#1+1/F:content_1/G:4_4/H:7=5@4=8|L-L%/I:3=2/J:73+56-11
-hh^er-f+iy=l@1_3/A:0_0_2/B:1-1-3@1-1&3-5#1-3$1-3!2-1;0-1|iy/C:1+1+3/D:pps_1/E:content+1@3+3&2+2#2+1/F:content_2/G:4_4/H:7=5@4=8|L-L%/I:3=2/J:73+56-11
-er^f-iy+l=v@2_2/A:0_0_2/B:1-1-3@1-1&3-5#1-3$1-3!2-1;0-1|iy/C:1+1+3/D:pps_1/E:content+1@3+3&2+2#2+1/F:content_2/G:4_4/H:7=5@4=8|L-L%/I:3=2/J:73+56-11
-f^iy-l+v=eh@3_1/A:0_0_2/B:1-1-3@1-1&3-5#1-3$1-3!2-1;0-1|iy/C:1+1+3/D:pps_1/E:content+1@3+3&2+2#2+1/F:content_2/G:4_4/H:7=5@4=8|L-L%/I:3=2/J:73+56-11
-iy^l-v+eh=r@1_3/A:1_1_3/B:1-1-3@1-2&4-4#2-2$2-2!1-2;1-3|eh/C:0+0+1/D:content_1/E:content+2@4+2&3+1#1+1/F:content_2/G:4_4/H:7=5@4=8|L-L%/I:3=2/J:73+56-11
-l^v-eh+r=iy@2_2/A:1_1_3/B:1-1-3@1-2&4-4#2-2$2-2!1-2;1-3|eh/C:0+0+1/D:content_1/E:content+2@4+2&3+1#1+1/F:content_2/G:4_4/H:7=5@4=8|L-L%/I:3=2/J:73+56-11
-v^eh-r+iy=s@3_1/A:1_1_3/B:1-1-3@1-2&4-4#2-2$2-2!1-2;1-3|eh/C:0+0+1/D:content_1/E:content+2@4+2&3+1#1+1/F:content_2/G:4_4/H:7=5@4=8|L-L%/I:3=2/J:73+56-11
-eh^r-iy+s=l@1_1/A:1_1_3/B:0-0-1@2-1&5-3#3-2$3-2!1-1;1-2|iy/C:1+0+4/D:content_1/E:content+2@4+2&3+1#1+1/F:content_2/G:4_4/H:7=5@4=8|L-L%/I:3=2/J:73+56-11
-r^iy-s+l=iy@1_4/A:0_0_1/B:1-0-4@1-2&6-2#3-1$3-2!2-0;2-1|iy/C:0+1+1/D:content_2/E:content+2@5+1&4+0#1+0/F:cc_1/G:4_4/H:7=5@4=8|L-L%/I:3=2/J:73+56-11
-iy^s-l+iy=p@2_3/A:0_0_1/B:1-0-4@1-2&6-2#3-1$3-2!2-0;2-1|iy/C:0+1+1/D:content_2/E:content+2@5+1&4+0#1+0/F:cc_1/G:4_4/H:7=5@4=8|L-L%/I:3=2/J:73+56-11
-s^l-iy+p=iy@3_2/A:0_0_1/B:1-0-4@1-2&6-2#3-1$3-2!2-0;2-1|iy/C:0+1+1/D:content_2/E:content+2@5+1&4+0#1+0/F:cc_1/G:4_4/H:7=5@4=8|L-L%/I:3=2/J:73+56-11
-l^iy-p+iy=pau@4_1/A:0_0_1/B:1-0-4@1-2&6-2#3-1$3-2!2-0;2-1|iy/C:0+1+1/D:content_2/E:content+2@5+1&4+0#1+0/F:cc_1/G:4_4/H:7=5@4=8|L-L%/I:3=2/J:73+56-11
-iy^p-iy+pau=ae@1_1/A:1_0_4/B:0-1-1@2-1&7-1#4-1$3-1!1-0;3-0|iy/C:1+0+3/D:content_2/E:content+2@5+1&4+0#1+0/F:cc_1/G:4_4/H:7=5@4=8|L-L%/I:3=2/J:73+56-11
-p^iy-pau+ae=n@x_x/A:0_1_1/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_2/E:x+x@x+x&x+x#x+x/F:cc_1/G:7_5/H:x=x@1=11|0/I:3=2/J:73+56-11
-iy^pau-ae+n=d@1_3/A:0_1_1/B:1-0-3@1-1&1-3#1-2$1-3!0-1;0-1|ae/C:1+1+4/D:content_2/E:cc+1@1+2&1+1#0+1/F:content_2/G:7_5/H:3=2@5=7|L-L%/I:12=8/J:73+56-11
-pau^ae-n+d=s@2_2/A:0_1_1/B:1-0-3@1-1&1-3#1-2$1-3!0-1;0-1|ae/C:1+1+4/D:content_2/E:cc+1@1+2&1+1#0+1/F:content_2/G:7_5/H:3=2@5=7|L-L%/I:12=8/J:73+56-11
-ae^n-d+s=t@3_1/A:0_1_1/B:1-0-3@1-1&1-3#1-2$1-3!0-1;0-1|ae/C:1+1+4/D:content_2/E:cc+1@1+2&1+1#0+1/F:content_2/G:7_5/H:3=2@5=7|L-L%/I:12=8/J:73+56-11
-n^d-s+t=uw@1_4/A:1_0_3/B:1-1-4@1-2&2-2#1-1$1-2!1-0;0-1|uw/C:0+1+2/D:cc_1/E:content+2@2+1&1+0#0+0/F:content_2/G:7_5/H:3=2@5=7|L-L%/I:12=8/J:73+56-11
-d^s-t+uw=p@2_3/A:1_0_3/B:1-1-4@1-2&2-2#1-1$1-2!1-0;0-1|uw/C:0+1+2/D:cc_1/E:content+2@2+1&1+0#0+0/F:content_2/G:7_5/H:3=2@5=7|L-L%/I:12=8/J:73+56-11
-s^t-uw+p=ax@3_2/A:1_0_3/B:1-1-4@1-2&2-2#1-1$1-2!1-0;0-1|uw/C:0+1+2/D:cc_1/E:content+2@2+1&1+0#0+0/F:content_2/G:7_5/H:3=2@5=7|L-L%/I:12=8/J:73+56-11
-t^uw-p+ax=d@4_1/A:1_0_3/B:1-1-4@1-2&2-2#1-1$1-2!1-0;0-1|uw/C:0+1+2/D:cc_1/E:content+2@2+1&1+0#0+0/F:content_2/G:7_5/H:3=2@5=7|L-L%/I:12=8/J:73+56-11
-uw^p-ax+d=pau@1_2/A:1_1_4/B:0-1-2@2-1&3-1#2-1$2-1!1-0;1-0|ax/C:1+1+3/D:cc_1/E:content+2@2+1&1+0#0+0/F:content_2/G:7_5/H:3=2@5=7|L-L%/I:12=8/J:73+56-11
-p^ax-d+pau=w@2_1/A:1_1_4/B:0-1-2@2-1&3-1#2-1$2-1!1-0;1-0|ax/C:1+1+3/D:cc_1/E:content+2@2+1&1+0#0+0/F:content_2/G:7_5/H:3=2@5=7|L-L%/I:12=8/J:73+56-11
-ax^d-pau+w=eh@x_x/A:0_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+3/D:content_2/E:x+x@x+x&x+x#x+x/F:content_2/G:3_2/H:x=x@1=11|0/I:12=8/J:73+56-11
-d^pau-w+eh=dh@1_3/A:0_1_2/B:1-1-3@1-2&1-12#1-6$1-5!0-3;0-3|eh/C:0+0+1/D:content_2/E:content+2@1+8&1+4#0+2/F:det_1/G:3_2/H:12=8@6=6|L-L%/I:10=8/J:73+56-11
-pau^w-eh+dh=er@2_2/A:0_1_2/B:1-1-3@1-2&1-12#1-6$1-5!0-3;0-3|eh/C:0+0+1/D:content_2/E:content+2@1+8&1+4#0+2/F:det_1/G:3_2/H:12=8@6=6|L-L%/I:10=8/J:73+56-11
-w^eh-dh+er=dh@3_1/A:0_1_2/B:1-1-3@1-2&1-12#1-6$1-5!0-3;0-3|eh/C:0+0+1/D:content_2/E:content+2@1+8&1+4#0+2/F:det_1/G:3_2/H:12=8@6=6|L-L%/I:10=8/J:73+56-11
-eh^dh-er+dh=ax@1_1/A:1_1_3/B:0-0-1@2-1&2-11#1-6$1-5!1-2;1-2|er/C:0+0+2/D:content_2/E:content+2@1+8&1+4#0+2/F:det_1/G:3_2/H:12=8@6=6|L-L%/I:10=8/J:73+56-11
-dh^er-dh+ax=p@1_2/A:0_0_1/B:0-0-2@1-1&3-10#1-6$1-5!2-1;2-1|ax/C:1+1+4/D:content_2/E:det+1@2+7&2+4#1+1/F:content_2/G:3_2/H:12=8@6=6|L-L%/I:10=8/J:73+56-11
-er^dh-ax+p=l@2_1/A:0_0_1/B:0-0-2@1-1&3-10#1-6$1-5!2-1;2-1|ax/C:1+1+4/D:content_2/E:det+1@2+7&2+4#1+1/F:content_2/G:3_2/H:12=8@6=6|L-L%/I:10=8/J:73+56-11
-dh^ax-p+l=eh@1_4/A:0_0_2/B:1-1-4@1-2&4-9#1-5$1-4!3-2;3-3|eh/C:0+0+1/D:det_1/E:content+2@3+6&2+3#2+2/F:in_1/G:3_2/H:12=8@6=6|L-L%/I:10=8/J:73+56-11
-ax^p-l+eh=zh@2_3/A:0_0_2/B:1-1-4@1-2&4-9#1-5$1-4!3-2;3-3|eh/C:0+0+1/D:det_1/E:content+2@3+6&2+3#2+2/F:in_1/G:3_2/H:12=8@6=6|L-L%/I:10=8/J:73+56-11
-p^l-eh+zh=er@3_2/A:0_0_2/B:1-1-4@1-2&4-9#1-5$1-4!3-2;3-3|eh/C:0+0+1/D:det_1/E:content+2@3+6&2+3#2+2/F:in_1/G:3_2/H:12=8@6=6|L-L%/I:10=8/J:73+56-11
-l^eh-zh+er=ah@4_1/A:0_0_2/B:1-1-4@1-2&4-9#1-5$1-4!3-2;3-3|eh/C:0+0+1/D:det_1/E:content+2@3+6&2+3#2+2/F:in_1/G:3_2/H:12=8@6=6|L-L%/I:10=8/J:73+56-11
-eh^zh-er+ah=v@1_1/A:1_1_4/B:0-0-1@2-1&5-8#2-5$2-4!1-1;1-2|er/C:1+0+2/D:det_1/E:content+2@3+6&2+3#2+2/F:in_1/G:3_2/H:12=8@6=6|L-L%/I:10=8/J:73+56-11
-zh^er-ah+v=m@1_2/A:0_0_1/B:1-0-2@1-1&6-7#2-4$2-4!2-1;2-1|ah/C:1+1+3/D:content_2/E:in+1@4+5&3+3#1+1/F:content_2/G:3_2/H:12=8@6=6|L-L%/I:10=8/J:73+56-11
-er^ah-v+m=ey@2_1/A:0_0_1/B:1-0-2@1-1&6-7#2-4$2-4!2-1;2-1|ah/C:1+1+3/D:content_2/E:in+1@4+5&3+3#1+1/F:content_2/G:3_2/H:12=8@6=6|L-L%/I:10=8/J:73+56-11
-ah^v-m+ey=k@1_3/A:1_0_2/B:1-1-3@1-2&7-6#3-3$2-3!1-3;3-3|ey/C:0+0+2/D:in_1/E:content+2@5+4&3+2#2+2/F:det_1/G:3_2/H:12=8@6=6|L-L%/I:10=8/J:73+56-11
-v^m-ey+k=ih@2_2/A:1_0_2/B:1-1-3@1-2&7-6#3-3$2-3!1-3;3-3|ey/C:0+0+2/D:in_1/E:content+2@5+4&3+2#2+2/F:det_1/G:3_2/H:12=8@6=6|L-L%/I:10=8/J:73+56-11
-m^ey-k+ih=ng@3_1/A:1_0_2/B:1-1-3@1-2&7-6#3-3$2-3!1-3;3-3|ey/C:0+0+2/D:in_1/E:content+2@5+4&3+2#2+2/F:det_1/G:3_2/H:12=8@6=6|L-L%/I:10=8/J:73+56-11
-ey^k-ih+ng=ax@1_2/A:1_1_3/B:0-0-2@2-1&8-5#4-3$3-3!1-2;1-2|ih/C:0+0+1/D:in_1/E:content+2@5+4&3+2#2+2/F:det_1/G:3_2/H:12=8@6=6|L-L%/I:10=8/J:73+56-11
-k^ih-ng+ax=d@2_1/A:1_1_3/B:0-0-2@2-1&8-5#4-3$3-3!1-2;1-2|ih/C:0+0+1/D:in_1/E:content+2@5+4&3+2#2+2/F:det_1/G:3_2/H:12=8@6=6|L-L%/I:10=8/J:73+56-11
-ih^ng-ax+d=ey@1_1/A:0_0_2/B:0-0-1@1-1&9-4#4-3$3-3!2-1;2-1|ax/C:1+1+3/D:content_2/E:det+1@6+3&4+2#1+1/F:content_2/G:3_2/H:12=8@6=6|L-L%/I:10=8/J:73+56-11
-ng^ax-d+ey=z@1_3/A:0_0_1/B:1-1-3@1-2&10-3#4-2$3-2!3-2;3-2|ey/C:0+0+1/D:det_1/E:content+2@7+2&4+1#2+1/F:content_1/G:3_2/H:12=8@6=6|L-L%/I:10=8/J:73+56-11
-ax^d-ey+z=iy@2_2/A:0_0_1/B:1-1-3@1-2&10-3#4-2$3-2!3-2;3-2|ey/C:0+0+1/D:det_1/E:content+2@7+2&4+1#2+1/F:content_1/G:3_2/H:12=8@6=6|L-L%/I:10=8/J:73+56-11
-d^ey-z+iy=ch@3_1/A:0_0_1/B:1-1-3@1-2&10-3#4-2$3-2!3-2;3-2|ey/C:0+0+1/D:det_1/E:content+2@7+2&4+1#2+1/F:content_1/G:3_2/H:12=8@6=6|L-L%/I:10=8/J:73+56-11
-ey^z-iy+ch=ey@1_1/A:1_1_3/B:0-0-1@2-1&11-2#5-2$4-2!1-1;1-1|iy/C:1+1+3/D:det_1/E:content+2@7+2&4+1#2+1/F:content_1/G:3_2/H:12=8@6=6|L-L%/I:10=8/J:73+56-11
-z^iy-ch+ey=n@1_3/A:0_0_1/B:1-1-3@1-1&12-1#5-1$4-1!2-0;2-0|ey/C:1+0+3/D:content_2/E:content+1@8+1&5+0#1+0/F:md_1/G:3_2/H:12=8@6=6|L-L%/I:10=8/J:73+56-11
-iy^ch-ey+n=pau@2_2/A:0_0_1/B:1-1-3@1-1&12-1#5-1$4-1!2-0;2-0|ey/C:1+0+3/D:content_2/E:content+1@8+1&5+0#1+0/F:md_1/G:3_2/H:12=8@6=6|L-L%/I:10=8/J:73+56-11
-ch^ey-n+pau=w@3_1/A:0_0_1/B:1-1-3@1-1&12-1#5-1$4-1!2-0;2-0|ey/C:1+0+3/D:content_2/E:content+1@8+1&5+0#1+0/F:md_1/G:3_2/H:12=8@6=6|L-L%/I:10=8/J:73+56-11
-ey^n-pau+w=uh@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:md_1/G:12_8/H:x=x@1=11|0/I:10=8/J:73+56-11
-n^pau-w+uh=d@1_3/A:1_1_3/B:1-0-3@1-1&1-10#1-7$1-2!0-1;0-4|uh/C:1+0+2/D:content_1/E:md+1@1+8&1+3#0+2/F:aux_1/G:12_8/H:10=8@7=5|NONE/I:6=4/J:73+56-11
-pau^w-uh+d=b@2_2/A:1_1_3/B:1-0-3@1-1&1-10#1-7$1-2!0-1;0-4|uh/C:1+0+2/D:content_1/E:md+1@1+8&1+3#0+2/F:aux_1/G:12_8/H:10=8@7=5|NONE/I:6=4/J:73+56-11
-w^uh-d+b=iy@3_1/A:1_1_3/B:1-0-3@1-1&1-10#1-7$1-2!0-1;0-4|uh/C:1+0+2/D:content_1/E:md+1@1+8&1+3#0+2/F:aux_1/G:12_8/H:10=8@7=5|NONE/I:6=4/J:73+56-11
-uh^d-b+iy=w@1_2/A:1_0_3/B:1-0-2@1-1&2-9#1-6$1-2!1-1;0-3|iy/C:1+0+3/D:md_1/E:aux+1@2+7&1+3#0+1/F:content_1/G:12_8/H:10=8@7=5|NONE/I:6=4/J:73+56-11
-d^b-iy+w=er@2_1/A:1_0_3/B:1-0-2@1-1&2-9#1-6$1-2!1-1;0-3|iy/C:1+0+3/D:md_1/E:aux+1@2+7&1+3#0+1/F:content_1/G:12_8/H:10=8@7=5|NONE/I:6=4/J:73+56-11
-b^iy-w+er=th@1_3/A:1_0_2/B:1-0-3@1-1&3-8#2-5$1-2!1-2;0-2|er/C:0+0+2/D:aux_1/E:content+1@3+6&1+2#0+2/F:det_1/G:12_8/H:10=8@7=5|NONE/I:6=4/J:73+56-11
-iy^w-er+th=dh@2_2/A:1_0_2/B:1-0-3@1-1&3-8#2-5$1-2!1-2;0-2|er/C:0+0+2/D:aux_1/E:content+1@3+6&1+2#0+2/F:det_1/G:12_8/H:10=8@7=5|NONE/I:6=4/J:73+56-11
-w^er-th+dh=ax@3_1/A:1_0_2/B:1-0-3@1-1&3-8#2-5$1-2!1-2;0-2|er/C:0+0+2/D:aux_1/E:content+1@3+6&1+2#0+2/F:det_1/G:12_8/H:10=8@7=5|NONE/I:6=4/J:73+56-11
-er^th-dh+ax=t@1_2/A:1_0_3/B:0-0-2@1-1&4-7#3-5$1-2!1-1;0-1|ax/C:1+1+4/D:content_1/E:det+1@4+5&2+2#1+1/F:content_2/G:12_8/H:10=8@7=5|NONE/I:6=4/J:73+56-11
-th^dh-ax+t=r@2_1/A:1_0_3/B:0-0-2@1-1&4-7#3-5$1-2!1-1;0-1|ax/C:1+1+4/D:content_1/E:det+1@4+5&2+2#1+1/F:content_2/G:12_8/H:10=8@7=5|NONE/I:6=4/J:73+56-11
-dh^ax-t+r=ah@1_4/A:0_0_2/B:1-1-4@1-2&5-6#3-4$1-1!2-2;0-0|ah/C:0+0+2/D:det_1/E:content+2@5+4&2+1#2+2/F:in_1/G:12_8/H:10=8@7=5|NONE/I:6=4/J:73+56-11
-ax^t-r+ah=b@2_3/A:0_0_2/B:1-1-4@1-2&5-6#3-4$1-1!2-2;0-0|ah/C:0+0+2/D:det_1/E:content+2@5+4&2+1#2+2/F:in_1/G:12_8/H:10=8@7=5|NONE/I:6=4/J:73+56-11
-t^r-ah+b=ax@3_2/A:0_0_2/B:1-1-4@1-2&5-6#3-4$1-1!2-2;0-0|ah/C:0+0+2/D:det_1/E:content+2@5+4&2+1#2+2/F:in_1/G:12_8/H:10=8@7=5|NONE/I:6=4/J:73+56-11
-r^ah-b+ax=l@4_1/A:0_0_2/B:1-1-4@1-2&5-6#3-4$1-1!2-2;0-0|ah/C:0+0+2/D:det_1/E:content+2@5+4&2+1#2+2/F:in_1/G:12_8/H:10=8@7=5|NONE/I:6=4/J:73+56-11
-ah^b-ax+l=ah@1_2/A:1_1_4/B:0-0-2@2-1&6-5#4-4$2-1!1-1;1-0|ax/C:1+0+2/D:det_1/E:content+2@5+4&2+1#2+2/F:in_1/G:12_8/H:10=8@7=5|NONE/I:6=4/J:73+56-11
-b^ax-l+ah=v@2_1/A:1_1_4/B:0-0-2@2-1&6-5#4-4$2-1!1-1;1-0|ax/C:1+0+2/D:det_1/E:content+2@5+4&2+1#2+2/F:in_1/G:12_8/H:10=8@7=5|NONE/I:6=4/J:73+56-11
-ax^l-ah+v=g@1_2/A:0_0_2/B:1-0-2@1-1&7-4#4-3$2-1!2-1;2-0|ah/C:1+0+3/D:content_2/E:in+1@6+3&3+1#1+1/F:content_2/G:12_8/H:10=8@7=5|NONE/I:6=4/J:73+56-11
-l^ah-v+g=eh@2_1/A:0_0_2/B:1-0-2@1-1&7-4#4-3$2-1!2-1;2-0|ah/C:1+0+3/D:content_2/E:in+1@6+3&3+1#1+1/F:content_2/G:12_8/H:10=8@7=5|NONE/I:6=4/J:73+56-11
-ah^v-g+eh=t@1_3/A:1_0_2/B:1-0-3@1-2&8-3#5-2$2-1!1-2;3-0|eh/C:0+0+2/D:in_1/E:content+2@7+2&3+0#2+0/F:in_1/G:12_8/H:10=8@7=5|NONE/I:6=4/J:73+56-11
-v^g-eh+t=ih@2_2/A:1_0_2/B:1-0-3@1-2&8-3#5-2$2-1!1-2;3-0|eh/C:0+0+2/D:in_1/E:content+2@7+2&3+0#2+0/F:in_1/G:12_8/H:10=8@7=5|NONE/I:6=4/J:73+56-11
-g^eh-t+ih=ng@3_1/A:1_0_2/B:1-0-3@1-2&8-3#5-2$2-1!1-2;3-0|eh/C:0+0+2/D:in_1/E:content+2@7+2&3+0#2+0/F:in_1/G:12_8/H:10=8@7=5|NONE/I:6=4/J:73+56-11
-eh^t-ih+ng=ah@1_2/A:1_0_3/B:0-0-2@2-1&9-2#6-2$2-1!1-1;4-0|ih/C:1+0+2/D:in_1/E:content+2@7+2&3+0#2+0/F:in_1/G:12_8/H:10=8@7=5|NONE/I:6=4/J:73+56-11
-t^ih-ng+ah=p@2_1/A:1_0_3/B:0-0-2@2-1&9-2#6-2$2-1!1-1;4-0|ih/C:1+0+2/D:in_1/E:content+2@7+2&3+0#2+0/F:in_1/G:12_8/H:10=8@7=5|NONE/I:6=4/J:73+56-11
-ih^ng-ah+p=pau@1_2/A:0_0_2/B:1-0-2@1-1&10-1#6-1$2-1!2-0;5-0|ah/C:1+0+3/D:content_2/E:in+1@8+1&4+0#1+0/F:cc_1/G:12_8/H:10=8@7=5|NONE/I:6=4/J:73+56-11
-ng^ah-p+pau=ae@2_1/A:0_0_2/B:1-0-2@1-1&10-1#6-1$2-1!2-0;5-0|ah/C:1+0+3/D:content_2/E:in+1@8+1&4+0#1+0/F:cc_1/G:12_8/H:10=8@7=5|NONE/I:6=4/J:73+56-11
-ah^p-pau+ae=n@x_x/A:1_0_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:in_1/E:x+x@x+x&x+x#x+x/F:cc_1/G:10_8/H:x=x@1=11|0/I:6=4/J:73+56-11
-p^pau-ae+n=d@1_3/A:1_0_2/B:1-0-3@1-1&1-6#1-3$1-4!0-1;0-1|ae/C:1+1+3/D:in_1/E:cc+1@1+4&1+2#0+1/F:content_2/G:10_8/H:6=4@8=4|L-L%/I:8=5/J:73+56-11
-pau^ae-n+d=p@2_2/A:1_0_2/B:1-0-3@1-1&1-6#1-3$1-4!0-1;0-1|ae/C:1+1+3/D:in_1/E:cc+1@1+4&1+2#0+1/F:content_2/G:10_8/H:6=4@8=4|L-L%/I:8=5/J:73+56-11
-ae^n-d+p=ih@3_1/A:1_0_2/B:1-0-3@1-1&1-6#1-3$1-4!0-1;0-1|ae/C:1+1+3/D:in_1/E:cc+1@1+4&1+2#0+1/F:content_2/G:10_8/H:6=4@8=4|L-L%/I:8=5/J:73+56-11
-n^d-p+ih=k@1_3/A:1_0_3/B:1-1-3@1-2&2-5#1-2$1-3!1-3;0-3|ih/C:0+0+2/D:cc_1/E:content+2@2+3&1+1#0+2/F:det_1/G:10_8/H:6=4@8=4|L-L%/I:8=5/J:73+56-11
-d^p-ih+k=ih@2_2/A:1_0_3/B:1-1-3@1-2&2-5#1-2$1-3!1-3;0-3|ih/C:0+0+2/D:cc_1/E:content+2@2+3&1+1#0+2/F:det_1/G:10_8/H:6=4@8=4|L-L%/I:8=5/J:73+56-11
-p^ih-k+ih=ng@3_1/A:1_0_3/B:1-1-3@1-2&2-5#1-2$1-3!1-3;0-3|ih/C:0+0+2/D:cc_1/E:content+2@2+3&1+1#0+2/F:det_1/G:10_8/H:6=4@8=4|L-L%/I:8=5/J:73+56-11
-ih^k-ih+ng=dh@1_2/A:1_1_3/B:0-0-2@2-1&3-4#2-2$2-3!1-2;1-2|ih/C:0+0+2/D:cc_1/E:content+2@2+3&1+1#0+2/F:det_1/G:10_8/H:6=4@8=4|L-L%/I:8=5/J:73+56-11
-k^ih-ng+dh=ax@2_1/A:1_1_3/B:0-0-2@2-1&3-4#2-2$2-3!1-2;1-2|ih/C:0+0+2/D:cc_1/E:content+2@2+3&1+1#0+2/F:det_1/G:10_8/H:6=4@8=4|L-L%/I:8=5/J:73+56-11
-ih^ng-dh+ax=d@1_2/A:0_0_2/B:0-0-2@1-1&4-3#2-2$2-3!2-1;2-1|ax/C:1+1+3/D:content_2/E:det+1@3+2&2+1#1+1/F:content_2/G:10_8/H:6=4@8=4|L-L%/I:8=5/J:73+56-11
-ng^dh-ax+d=ey@2_1/A:0_0_2/B:0-0-2@1-1&4-3#2-2$2-3!2-1;2-1|ax/C:1+1+3/D:content_2/E:det+1@3+2&2+1#1+1/F:content_2/G:10_8/H:6=4@8=4|L-L%/I:8=5/J:73+56-11
-dh^ax-d+ey=z@1_3/A:0_0_2/B:1-1-3@1-2&5-2#2-1$2-2!3-0;3-1|ey/C:0+1+2/D:det_1/E:content+2@4+1&2+0#2+0/F:wp_1/G:10_8/H:6=4@8=4|L-L%/I:8=5/J:73+56-11
-ax^d-ey+z=iy@2_2/A:0_0_2/B:1-1-3@1-2&5-2#2-1$2-2!3-0;3-1|ey/C:0+1+2/D:det_1/E:content+2@4+1&2+0#2+0/F:wp_1/G:10_8/H:6=4@8=4|L-L%/I:8=5/J:73+56-11
-d^ey-z+iy=z@3_1/A:0_0_2/B:1-1-3@1-2&5-2#2-1$2-2!3-0;3-1|ey/C:0+1+2/D:det_1/E:content+2@4+1&2+0#2+0/F:wp_1/G:10_8/H:6=4@8=4|L-L%/I:8=5/J:73+56-11
-ey^z-iy+z=pau@1_2/A:1_1_3/B:0-1-2@2-1&6-1#3-1$3-1!1-0;1-0|iy/C:1+0+3/D:det_1/E:content+2@4+1&2+0#2+0/F:wp_1/G:10_8/H:6=4@8=4|L-L%/I:8=5/J:73+56-11
-z^iy-z+pau=w@2_1/A:1_1_3/B:0-1-2@2-1&6-1#3-1$3-1!1-0;1-0|iy/C:1+0+3/D:det_1/E:content+2@4+1&2+0#2+0/F:wp_1/G:10_8/H:6=4@8=4|L-L%/I:8=5/J:73+56-11
-iy^z-pau+w=eh@x_x/A:0_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_2/E:x+x@x+x&x+x#x+x/F:wp_1/G:6_4/H:x=x@1=11|0/I:8=5/J:73+56-11
-z^pau-w+eh=n@1_3/A:0_1_2/B:1-0-3@1-1&1-8#1-4$1-4!0-1;0-1|eh/C:1+1+3/D:content_2/E:wp+1@1+5&1+3#0+1/F:content_3/G:6_4/H:8=5@9=3|L-L%/I:3=3/J:73+56-11
-pau^w-eh+n=s@2_2/A:0_1_2/B:1-0-3@1-1&1-8#1-4$1-4!0-1;0-1|eh/C:1+1+3/D:content_2/E:wp+1@1+5&1+3#0+1/F:content_3/G:6_4/H:8=5@9=3|L-L%/I:3=3/J:73+56-11
-w^eh-n+s=ah@3_1/A:0_1_2/B:1-0-3@1-1&1-8#1-4$1-4!0-1;0-1|eh/C:1+1+3/D:content_2/E:wp+1@1+5&1+3#0+1/F:content_3/G:6_4/H:8=5@9=3|L-L%/I:3=3/J:73+56-11
-eh^n-s+ah=d@1_3/A:1_0_3/B:1-1-3@1-3&2-7#1-3$1-3!1-4;0-5|ah/C:0+0+2/D:wp_1/E:content+3@2+4&1+2#0+2/F:det_1/G:6_4/H:8=5@9=3|L-L%/I:3=3/J:73+56-11
-n^s-ah+d=ax@2_2/A:1_0_3/B:1-1-3@1-3&2-7#1-3$1-3!1-4;0-5|ah/C:0+0+2/D:wp_1/E:content+3@2+4&1+2#0+2/F:det_1/G:6_4/H:8=5@9=3|L-L%/I:3=3/J:73+56-11
-s^ah-d+ax=n@3_1/A:1_0_3/B:1-1-3@1-3&2-7#1-3$1-3!1-4;0-5|ah/C:0+0+2/D:wp_1/E:content+3@2+4&1+2#0+2/F:det_1/G:6_4/H:8=5@9=3|L-L%/I:3=3/J:73+56-11
-ah^d-ax+n=l@1_2/A:1_1_3/B:0-0-2@2-2&3-6#2-3$2-3!1-3;1-4|ax/C:0+0+2/D:wp_1/E:content+3@2+4&1+2#0+2/F:det_1/G:6_4/H:8=5@9=3|L-L%/I:3=3/J:73+56-11
-d^ax-n+l=iy@2_1/A:1_1_3/B:0-0-2@2-2&3-6#2-3$2-3!1-3;1-4|ax/C:0+0+2/D:wp_1/E:content+3@2+4&1+2#0+2/F:det_1/G:6_4/H:8=5@9=3|L-L%/I:3=3/J:73+56-11
-ax^n-l+iy=ax@1_2/A:0_0_2/B:0-0-2@3-1&4-5#2-3$2-3!2-2;2-3|iy/C:0+0+1/D:wp_1/E:content+3@2+4&1+2#0+2/F:det_1/G:6_4/H:8=5@9=3|L-L%/I:3=3/J:73+56-11
-n^l-iy+ax=w@2_1/A:0_0_2/B:0-0-2@3-1&4-5#2-3$2-3!2-2;2-3|iy/C:0+0+1/D:wp_1/E:content+3@2+4&1+2#0+2/F:det_1/G:6_4/H:8=5@9=3|L-L%/I:3=3/J:73+56-11
-l^iy-ax+w=ay@1_1/A:0_0_2/B:0-0-1@1-1&5-4#2-3$2-3!3-1;3-2|ax/C:1+0+3/D:content_3/E:det+1@3+3&2+2#1+1/F:content_1/G:6_4/H:8=5@9=3|L-L%/I:3=3/J:73+56-11
-iy^ax-w+ay=t@1_3/A:0_0_1/B:1-0-3@1-1&6-3#2-2$2-3!4-1;4-1|ay/C:1+1+3/D:det_1/E:content+1@4+2&2+1#2+1/F:content_2/G:6_4/H:8=5@9=3|L-L%/I:3=3/J:73+56-11
-ax^w-ay+t=r@2_2/A:0_0_1/B:1-0-3@1-1&6-3#2-2$2-3!4-1;4-1|ay/C:1+1+3/D:det_1/E:content+1@4+2&2+1#2+1/F:content_2/G:6_4/H:8=5@9=3|L-L%/I:3=3/J:73+56-11
-w^ay-t+r=ae@3_1/A:0_0_1/B:1-0-3@1-1&6-3#2-2$2-3!4-1;4-1|ay/C:1+1+3/D:det_1/E:content+1@4+2&2+1#2+1/F:content_2/G:6_4/H:8=5@9=3|L-L%/I:3=3/J:73+56-11
-ay^t-r+ae=b@1_3/A:1_0_3/B:1-1-3@1-2&7-2#3-1$2-2!1-0;5-1|ae/C:0+1+2/D:content_1/E:content+2@5+1&3+0#1+0/F:in_1/G:6_4/H:8=5@9=3|L-L%/I:3=3/J:73+56-11
-t^r-ae+b=ax@2_2/A:1_0_3/B:1-1-3@1-2&7-2#3-1$2-2!1-0;5-1|ae/C:0+1+2/D:content_1/E:content+2@5+1&3+0#1+0/F:in_1/G:6_4/H:8=5@9=3|L-L%/I:3=3/J:73+56-11
-r^ae-b+ax=t@3_1/A:1_0_3/B:1-1-3@1-2&7-2#3-1$2-2!1-0;5-1|ae/C:0+1+2/D:content_1/E:content+2@5+1&3+0#1+0/F:in_1/G:6_4/H:8=5@9=3|L-L%/I:3=3/J:73+56-11
-ae^b-ax+t=pau@1_2/A:1_1_3/B:0-1-2@2-1&8-1#4-1$3-1!1-0;1-0|ax/C:1+0+3/D:content_1/E:content+2@5+1&3+0#1+0/F:in_1/G:6_4/H:8=5@9=3|L-L%/I:3=3/J:73+56-11
-b^ax-t+pau=w@2_1/A:1_1_3/B:0-1-2@2-1&8-1#4-1$3-1!1-0;1-0|ax/C:1+0+3/D:content_1/E:content+2@5+1&3+0#1+0/F:in_1/G:6_4/H:8=5@9=3|L-L%/I:3=3/J:73+56-11
-ax^t-pau+w=ih@x_x/A:0_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_2/E:x+x@x+x&x+x#x+x/F:in_1/G:8_5/H:x=x@1=11|0/I:3=3/J:73+56-11
-t^pau-w+ih=dh@1_3/A:0_1_2/B:1-0-3@1-1&1-3#1-3$1-3!0-1;0-1|ih/C:1+1+4/D:content_2/E:in+1@1+3&1+2#0+1/F:content_1/G:8_5/H:3=3@10=2|L-L%/I:4=4/J:73+56-11
-pau^w-ih+dh=p@2_2/A:0_1_2/B:1-0-3@1-1&1-3#1-3$1-3!0-1;0-1|ih/C:1+1+4/D:content_2/E:in+1@1+3&1+2#0+1/F:content_1/G:8_5/H:3=3@10=2|L-L%/I:4=4/J:73+56-11
-w^ih-dh+p=ih@3_1/A:0_1_2/B:1-0-3@1-1&1-3#1-3$1-3!0-1;0-1|ih/C:1+1+4/D:content_2/E:in+1@1+3&1+2#0+1/F:content_1/G:8_5/H:3=3@10=2|L-L%/I:4=4/J:73+56-11
-ih^dh-p+ih=ng@1_4/A:1_0_3/B:1-1-4@1-1&2-2#1-2$1-2!1-1;0-1|ih/C:1+1+2/D:in_1/E:content+1@2+2&1+1#0+1/F:content_1/G:8_5/H:3=3@10=2|L-L%/I:4=4/J:73+56-11
-dh^p-ih+ng=k@2_3/A:1_0_3/B:1-1-4@1-1&2-2#1-2$1-2!1-1;0-1|ih/C:1+1+2/D:in_1/E:content+1@2+2&1+1#0+1/F:content_1/G:8_5/H:3=3@10=2|L-L%/I:4=4/J:73+56-11
-p^ih-ng+k=ay@3_2/A:1_0_3/B:1-1-4@1-1&2-2#1-2$1-2!1-1;0-1|ih/C:1+1+2/D:in_1/E:content+1@2+2&1+1#0+1/F:content_1/G:8_5/H:3=3@10=2|L-L%/I:4=4/J:73+56-11
-ih^ng-k+ay=z@4_1/A:1_0_3/B:1-1-4@1-1&2-2#1-2$1-2!1-1;0-1|ih/C:1+1+2/D:in_1/E:content+1@2+2&1+1#0+1/F:content_1/G:8_5/H:3=3@10=2|L-L%/I:4=4/J:73+56-11
-ng^k-ay+z=pau@1_2/A:1_1_4/B:1-1-2@1-1&3-1#2-1$2-1!1-0;1-0|ay/C:1+0+3/D:content_1/E:content+1@3+1&2+0#1+0/F:content_1/G:8_5/H:3=3@10=2|L-L%/I:4=4/J:73+56-11
-k^ay-z+pau=r@2_1/A:1_1_4/B:1-1-2@1-1&3-1#2-1$2-1!1-0;1-0|ay/C:1+0+3/D:content_1/E:content+1@3+1&2+0#1+0/F:content_1/G:8_5/H:3=3@10=2|L-L%/I:4=4/J:73+56-11
-ay^z-pau+r=ae@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:content_1/G:3_3/H:x=x@1=11|0/I:4=4/J:73+56-11
-z^pau-r+ae=n@1_3/A:1_1_2/B:1-0-3@1-1&1-4#1-3$1-3!0-1;0-1|ae/C:1+1+4/D:content_1/E:content+1@1+4&1+1#0+1/F:content_1/G:3_3/H:4=4@11=1|L-L%/I:0=0/J:73+56-11
-pau^r-ae+n=k@2_2/A:1_1_2/B:1-0-3@1-1&1-4#1-3$1-3!0-1;0-1|ae/C:1+1+4/D:content_1/E:content+1@1+4&1+1#0+1/F:content_1/G:3_3/H:4=4@11=1|L-L%/I:0=0/J:73+56-11
-r^ae-n+k=l@3_1/A:1_1_2/B:1-0-3@1-1&1-4#1-3$1-3!0-1;0-1|ae/C:1+1+4/D:content_1/E:content+1@1+4&1+1#0+1/F:content_1/G:3_3/H:4=4@11=1|L-L%/I:0=0/J:73+56-11
-ae^n-k+l=ow@1_4/A:1_0_3/B:1-1-4@1-1&2-3#1-2$1-2!1-1;0-2|ow/C:1+0+2/D:content_1/E:content+1@2+3&2+0#1+0/F:in_1/G:3_3/H:4=4@11=1|L-L%/I:0=0/J:73+56-11
-n^k-l+ow=s@2_3/A:1_0_3/B:1-1-4@1-1&2-3#1-2$1-2!1-1;0-2|ow/C:1+0+2/D:content_1/E:content+1@2+3&2+0#1+0/F:in_1/G:3_3/H:4=4@11=1|L-L%/I:0=0/J:73+56-11
-k^l-ow+s=b@3_2/A:1_0_3/B:1-1-4@1-1&2-3#1-2$1-2!1-1;0-2|ow/C:1+0+2/D:content_1/E:content+1@2+3&2+0#1+0/F:in_1/G:3_3/H:4=4@11=1|L-L%/I:0=0/J:73+56-11
-l^ow-s+b=ay@4_1/A:1_0_3/B:1-1-4@1-1&2-3#1-2$1-2!1-1;0-2|ow/C:1+0+2/D:content_1/E:content+1@2+3&2+0#1+0/F:in_1/G:3_3/H:4=4@11=1|L-L%/I:0=0/J:73+56-11
-ow^s-b+ay=hh@1_2/A:1_1_4/B:1-0-2@1-1&3-2#2-1$2-2!1-0;1-1|ay/C:0+1+2/D:content_1/E:in+1@3+2&3+0#1+0/F:pps_1/G:3_3/H:4=4@11=1|L-L%/I:0=0/J:73+56-11
-s^b-ay+hh=er@2_1/A:1_1_4/B:1-0-2@1-1&3-2#2-1$2-2!1-0;1-1|ay/C:0+1+2/D:content_1/E:in+1@3+2&3+0#1+0/F:pps_1/G:3_3/H:4=4@11=1|L-L%/I:0=0/J:73+56-11
-b^ay-hh+er=pau@1_2/A:1_0_2/B:0-1-2@1-1&4-1#3-1$2-1!1-0;2-0|er/C:0+0+0/D:in_1/E:pps+1@4+1&3+0#2+0/F:0_0/G:3_3/H:4=4@11=1|L-L%/I:0=0/J:73+56-11
-ay^hh-er+pau=x@2_1/A:1_0_2/B:0-1-2@1-1&4-1#3-1$2-1!1-0;2-0|er/C:0+0+0/D:in_1/E:pps+1@4+1&3+0#2+0/F:0_0/G:3_3/H:4=4@11=1|L-L%/I:0=0/J:73+56-11
-hh^er-pau+x=x@x_x/A:0_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:pps_1/E:x+x@x+x&x+x#x+x/F:0_0/G:4_4/H:x=x@1=11|0/I:0=0/J:73+56-11
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice03.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice03.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice03.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice03.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,478 +0,0 @@
-x^x-pau+dh=eh@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+3/D:0_0/E:x+x@x+x&x+x#x+x/F:content_1/G:0_0/H:x=x@1=28|0/I:11=6/J:183+144-28
-x^pau-dh+eh=r@1_3/A:0_0_0/B:1-1-3@1-1&1-11#1-6$1-4!0-1;0-2|eh/C:1+0+3/D:0_0/E:content+1@1+6&1+4#0+2/F:aux_1/G:0_0/H:11=6@1=28|L-H%/I:2=2/J:183+144-28
-pau^dh-eh+r=w@2_2/A:0_0_0/B:1-1-3@1-1&1-11#1-6$1-4!0-1;0-2|eh/C:1+0+3/D:0_0/E:content+1@1+6&1+4#0+2/F:aux_1/G:0_0/H:11=6@1=28|L-H%/I:2=2/J:183+144-28
-dh^eh-r+w=aa@3_1/A:0_0_0/B:1-1-3@1-1&1-11#1-6$1-4!0-1;0-2|eh/C:1+0+3/D:0_0/E:content+1@1+6&1+4#0+2/F:aux_1/G:0_0/H:11=6@1=28|L-H%/I:2=2/J:183+144-28
-eh^r-w+aa=z@1_3/A:1_1_3/B:1-0-3@1-1&2-10#1-5$1-4!1-1;1-1|aa/C:1+1+3/D:content_1/E:aux+1@2+5&2+4#1+1/F:content_2/G:0_0/H:11=6@1=28|L-H%/I:2=2/J:183+144-28
-r^w-aa+z=n@2_2/A:1_1_3/B:1-0-3@1-1&2-10#1-5$1-4!1-1;1-1|aa/C:1+1+3/D:content_1/E:aux+1@2+5&2+4#1+1/F:content_2/G:0_0/H:11=6@1=28|L-H%/I:2=2/J:183+144-28
-w^aa-z+n=ah@3_1/A:1_1_3/B:1-0-3@1-1&2-10#1-5$1-4!1-1;1-1|aa/C:1+1+3/D:content_1/E:aux+1@2+5&2+4#1+1/F:content_2/G:0_0/H:11=6@1=28|L-H%/I:2=2/J:183+144-28
-aa^z-n+ah=th@1_3/A:1_0_3/B:1-1-3@1-2&3-9#2-4$1-3!1-2;2-6|ah/C:0+0+2/D:aux_1/E:content+2@3+4&2+3#2+1/F:content_1/G:0_0/H:11=6@1=28|L-H%/I:2=2/J:183+144-28
-z^n-ah+th=ih@2_2/A:1_0_3/B:1-1-3@1-2&3-9#2-4$1-3!1-2;2-6|ah/C:0+0+2/D:aux_1/E:content+2@3+4&2+3#2+1/F:content_1/G:0_0/H:11=6@1=28|L-H%/I:2=2/J:183+144-28
-n^ah-th+ih=ng@3_1/A:1_0_3/B:1-1-3@1-2&3-9#2-4$1-3!1-2;2-6|ah/C:0+0+2/D:aux_1/E:content+2@3+4&2+3#2+1/F:content_1/G:0_0/H:11=6@1=28|L-H%/I:2=2/J:183+144-28
-ah^th-ih+ng=s@1_2/A:1_1_3/B:0-0-2@2-1&4-8#3-4$2-3!1-1;1-5|ih/C:1+0+2/D:aux_1/E:content+2@3+4&2+3#2+1/F:content_1/G:0_0/H:11=6@1=28|L-H%/I:2=2/J:183+144-28
-th^ih-ng+s=ow@2_1/A:1_1_3/B:0-0-2@2-1&4-8#3-4$2-3!1-1;1-5|ih/C:1+0+2/D:aux_1/E:content+2@3+4&2+3#2+1/F:content_1/G:0_0/H:11=6@1=28|L-H%/I:2=2/J:183+144-28
-ih^ng-s+ow=v@1_2/A:0_0_2/B:1-0-2@1-1&5-7#3-3$2-3!2-1;2-4|ow/C:1+0+3/D:content_2/E:content+1@4+3&3+2#1+1/F:content_2/G:0_0/H:11=6@1=28|L-H%/I:2=2/J:183+144-28
-ng^s-ow+v=eh@2_1/A:0_0_2/B:1-0-2@1-1&5-7#3-3$2-3!2-1;2-4|ow/C:1+0+3/D:content_2/E:content+1@4+3&3+2#1+1/F:content_2/G:0_0/H:11=6@1=28|L-H%/I:2=2/J:183+144-28
-s^ow-v+eh=r@1_3/A:1_0_2/B:1-0-3@1-2&6-6#4-2$2-3!1-3;3-3|eh/C:0+0+1/D:content_1/E:content+2@5+2&4+1#1+1/F:content_4/G:0_0/H:11=6@1=28|L-H%/I:2=2/J:183+144-28
-ow^v-eh+r=iy@2_2/A:1_0_2/B:1-0-3@1-2&6-6#4-2$2-3!1-3;3-3|eh/C:0+0+1/D:content_1/E:content+2@5+2&4+1#1+1/F:content_4/G:0_0/H:11=6@1=28|L-H%/I:2=2/J:183+144-28
-v^eh-r+iy=r@3_1/A:1_0_2/B:1-0-3@1-2&6-6#4-2$2-3!1-3;3-3|eh/C:0+0+1/D:content_1/E:content+2@5+2&4+1#1+1/F:content_4/G:0_0/H:11=6@1=28|L-H%/I:2=2/J:183+144-28
-eh^r-iy+r=ih@1_1/A:1_0_3/B:0-0-1@2-1&7-5#5-2$2-3!1-2;4-2|iy/C:0+0+3/D:content_1/E:content+2@5+2&4+1#1+1/F:content_4/G:0_0/H:11=6@1=28|L-H%/I:2=2/J:183+144-28
-r^iy-r+ih=m@1_3/A:0_0_1/B:0-0-3@1-4&8-4#5-2$2-3!2-1;5-1|ih/C:1+1+3/D:content_2/E:content+4@6+1&5+0#1+0/F:in_1/G:0_0/H:11=6@1=28|L-H%/I:2=2/J:183+144-28
-iy^r-ih+m=aa@2_2/A:0_0_1/B:0-0-3@1-4&8-4#5-2$2-3!2-1;5-1|ih/C:1+1+3/D:content_2/E:content+4@6+1&5+0#1+0/F:in_1/G:0_0/H:11=6@1=28|L-H%/I:2=2/J:183+144-28
-r^ih-m+aa=r@3_1/A:0_0_1/B:0-0-3@1-4&8-4#5-2$2-3!2-1;5-1|ih/C:1+1+3/D:content_2/E:content+4@6+1&5+0#1+0/F:in_1/G:0_0/H:11=6@1=28|L-H%/I:2=2/J:183+144-28
-ih^m-aa+r=k@1_3/A:0_0_3/B:1-1-3@2-3&9-3#5-1$2-2!3-0;6-2|aa/C:0+0+2/D:content_2/E:content+4@6+1&5+0#1+0/F:in_1/G:0_0/H:11=6@1=28|L-H%/I:2=2/J:183+144-28
-m^aa-r+k=ax@2_2/A:0_0_3/B:1-1-3@2-3&9-3#5-1$2-2!3-0;6-2|aa/C:0+0+2/D:content_2/E:content+4@6+1&5+0#1+0/F:in_1/G:0_0/H:11=6@1=28|L-H%/I:2=2/J:183+144-28
-aa^r-k+ax=b@3_1/A:0_0_3/B:1-1-3@2-3&9-3#5-1$2-2!3-0;6-2|aa/C:0+0+2/D:content_2/E:content+4@6+1&5+0#1+0/F:in_1/G:0_0/H:11=6@1=28|L-H%/I:2=2/J:183+144-28
-r^k-ax+b=ax@1_2/A:1_1_3/B:0-0-2@3-2&10-2#6-1$3-2!1-0;1-1|ax/C:0+1+2/D:content_2/E:content+4@6+1&5+0#1+0/F:in_1/G:0_0/H:11=6@1=28|L-H%/I:2=2/J:183+144-28
-k^ax-b+ax=l@2_1/A:1_1_3/B:0-0-2@3-2&10-2#6-1$3-2!1-0;1-1|ax/C:0+1+2/D:content_2/E:content+4@6+1&5+0#1+0/F:in_1/G:0_0/H:11=6@1=28|L-H%/I:2=2/J:183+144-28
-ax^b-ax+l=pau@1_2/A:0_0_2/B:0-1-2@4-1&11-1#6-1$3-1!2-0;2-0|ax/C:0+0+2/D:content_2/E:content+4@6+1&5+0#1+0/F:in_1/G:0_0/H:11=6@1=28|L-H%/I:2=2/J:183+144-28
-b^ax-l+pau=ih@2_1/A:0_0_2/B:0-1-2@4-1&11-1#6-1$3-1!2-0;2-0|ax/C:0+0+2/D:content_2/E:content+4@6+1&5+0#1+0/F:in_1/G:0_0/H:11=6@1=28|L-H%/I:2=2/J:183+144-28
-ax^l-pau+ih=n@x_x/A:0_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+2/D:content_4/E:x+x@x+x&x+x#x+x/F:in_1/G:11_6/H:x=x@1=28|0/I:2=2/J:183+144-28
-l^pau-ih+n=dh@1_2/A:0_1_2/B:0-0-2@1-1&1-2#1-2$1-1!0-1;0-0|ih/C:1+0+3/D:content_4/E:in+1@1+2&1+0#0+0/F:in_1/G:11_6/H:2=2@2=27|NONE/I:4=3/J:183+144-28
-pau^ih-n+dh=ae@2_1/A:0_1_2/B:0-0-2@1-1&1-2#1-2$1-1!0-1;0-0|ih/C:1+0+3/D:content_4/E:in+1@1+2&1+0#0+0/F:in_1/G:11_6/H:2=2@2=27|NONE/I:4=3/J:183+144-28
-ih^n-dh+ae=t@1_3/A:0_0_2/B:1-0-3@1-1&2-1#1-1$1-1!0-0;0-0|ae/C:1+0+3/D:in_1/E:in+1@2+1&1+0#0+0/F:cc_1/G:11_6/H:2=2@2=27|NONE/I:4=3/J:183+144-28
-n^dh-ae+t=pau@2_2/A:0_0_2/B:1-0-3@1-1&2-1#1-1$1-1!0-0;0-0|ae/C:1+0+3/D:in_1/E:in+1@2+1&1+0#0+0/F:cc_1/G:11_6/H:2=2@2=27|NONE/I:4=3/J:183+144-28
-dh^ae-t+pau=n@3_1/A:0_0_2/B:1-0-3@1-1&2-1#1-1$1-1!0-0;0-0|ae/C:1+0+3/D:in_1/E:in+1@2+1&1+0#0+0/F:cc_1/G:11_6/H:2=2@2=27|NONE/I:4=3/J:183+144-28
-ae^t-pau+n=ao@x_x/A:1_0_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:in_1/E:x+x@x+x&x+x#x+x/F:cc_1/G:2_2/H:x=x@1=28|0/I:4=3/J:183+144-28
-t^pau-n+ao=r@1_3/A:1_0_3/B:1-0-3@1-1&1-4#1-3$1-4!0-1;0-1|ao/C:1+1+3/D:in_1/E:cc+1@1+3&1+2#0+1/F:content_1/G:2_2/H:4=3@3=26|L-L%/I:10=9/J:183+144-28
-pau^n-ao+r=d@2_2/A:1_0_3/B:1-0-3@1-1&1-4#1-3$1-4!0-1;0-1|ao/C:1+1+3/D:in_1/E:cc+1@1+3&1+2#0+1/F:content_1/G:2_2/H:4=3@3=26|L-L%/I:10=9/J:183+144-28
-n^ao-r+d=ih@3_1/A:1_0_3/B:1-0-3@1-1&1-4#1-3$1-4!0-1;0-1|ao/C:1+1+3/D:in_1/E:cc+1@1+3&1+2#0+1/F:content_1/G:2_2/H:4=3@3=26|L-L%/I:10=9/J:183+144-28
-ao^r-d+ih=d@1_3/A:1_0_3/B:1-1-3@1-1&2-3#1-2$1-3!1-1;0-1|ih/C:1+1+2/D:cc_1/E:content+1@2+2&1+1#0+1/F:content_2/G:2_2/H:4=3@3=26|L-L%/I:10=9/J:183+144-28
-r^d-ih+d=ae@2_2/A:1_0_3/B:1-1-3@1-1&2-3#1-2$1-3!1-1;0-1|ih/C:1+1+2/D:cc_1/E:content+1@2+2&1+1#0+1/F:content_2/G:2_2/H:4=3@3=26|L-L%/I:10=9/J:183+144-28
-d^ih-d+ae=l@3_1/A:1_0_3/B:1-1-3@1-1&2-3#1-2$1-3!1-1;0-1|ih/C:1+1+2/D:cc_1/E:content+1@2+2&1+1#0+1/F:content_2/G:2_2/H:4=3@3=26|L-L%/I:10=9/J:183+144-28
-ih^d-ae+l=ax@1_2/A:1_1_3/B:1-1-2@1-2&3-2#2-1$2-2!1-0;1-1|ae/C:0+1+2/D:content_1/E:content+2@3+1&2+0#1+0/F:content_1/G:2_2/H:4=3@3=26|L-L%/I:10=9/J:183+144-28
-d^ae-l+ax=s@2_1/A:1_1_3/B:1-1-2@1-2&3-2#2-1$2-2!1-0;1-1|ae/C:0+1+2/D:content_1/E:content+2@3+1&2+0#1+0/F:content_1/G:2_2/H:4=3@3=26|L-L%/I:10=9/J:183+144-28
-ae^l-ax+s=pau@1_2/A:1_1_2/B:0-1-2@2-1&4-1#3-1$3-1!1-0;1-0|ax/C:1+0+4/D:content_1/E:content+2@3+1&2+0#1+0/F:content_1/G:2_2/H:4=3@3=26|L-L%/I:10=9/J:183+144-28
-l^ax-s+pau=th@2_1/A:1_1_2/B:0-1-2@2-1&4-1#3-1$3-1!1-0;1-0|ax/C:1+0+4/D:content_1/E:content+2@3+1&2+0#1+0/F:content_1/G:2_2/H:4=3@3=26|L-L%/I:10=9/J:183+144-28
-ax^s-pau+th=ih@x_x/A:0_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+4/D:content_2/E:x+x@x+x&x+x#x+x/F:content_1/G:4_3/H:x=x@1=28|0/I:10=9/J:183+144-28
-s^pau-th+ih=ng@1_4/A:0_1_2/B:1-0-4@1-1&1-10#1-8$1-3!0-1;0-1|ih/C:1+1+2/D:content_2/E:content+1@1+9&1+6#0+1/F:content_1/G:4_3/H:10=9@4=25|L-L%/I:9=7/J:183+144-28
-pau^th-ih+ng=k@2_3/A:0_1_2/B:1-0-4@1-1&1-10#1-8$1-3!0-1;0-1|ih/C:1+1+2/D:content_2/E:content+1@1+9&1+6#0+1/F:content_1/G:4_3/H:10=9@4=25|L-L%/I:9=7/J:183+144-28
-th^ih-ng+k=ih@3_2/A:0_1_2/B:1-0-4@1-1&1-10#1-8$1-3!0-1;0-1|ih/C:1+1+2/D:content_2/E:content+1@1+9&1+6#0+1/F:content_1/G:4_3/H:10=9@4=25|L-L%/I:9=7/J:183+144-28
-ih^ng-k+ih=t@4_1/A:0_1_2/B:1-0-4@1-1&1-10#1-8$1-3!0-1;0-1|ih/C:1+1+2/D:content_2/E:content+1@1+9&1+6#0+1/F:content_1/G:4_3/H:10=9@4=25|L-L%/I:9=7/J:183+144-28
-ng^k-ih+t=s@1_2/A:1_0_4/B:1-1-2@1-1&2-9#1-7$1-2!1-1;0-8|ih/C:1+0+2/D:content_1/E:content+1@2+8&2+5#1+1/F:content_1/G:4_3/H:10=9@4=25|L-L%/I:9=7/J:183+144-28
-k^ih-t+s=ow@2_1/A:1_0_4/B:1-1-2@1-1&2-9#1-7$1-2!1-1;0-8|ih/C:1+0+2/D:content_1/E:content+1@2+8&2+5#1+1/F:content_1/G:4_3/H:10=9@4=25|L-L%/I:9=7/J:183+144-28
-ih^t-s+ow=v@1_2/A:1_1_2/B:1-0-2@1-1&3-8#2-6$2-2!1-1;1-7|ow/C:1+0+3/D:content_1/E:content+1@3+7&3+4#1+1/F:content_2/G:4_3/H:10=9@4=25|L-L%/I:9=7/J:183+144-28
-t^s-ow+v=eh@2_1/A:1_1_2/B:1-0-2@1-1&3-8#2-6$2-2!1-1;1-7|ow/C:1+0+3/D:content_1/E:content+1@3+7&3+4#1+1/F:content_2/G:4_3/H:10=9@4=25|L-L%/I:9=7/J:183+144-28
-s^ow-v+eh=r@1_3/A:1_0_2/B:1-0-3@1-2&4-7#3-5$2-2!1-2;2-6|eh/C:0+0+1/D:content_1/E:content+2@4+6&4+3#1+1/F:content_1/G:4_3/H:10=9@4=25|L-L%/I:9=7/J:183+144-28
-ow^v-eh+r=iy@2_2/A:1_0_2/B:1-0-3@1-2&4-7#3-5$2-2!1-2;2-6|eh/C:0+0+1/D:content_1/E:content+2@4+6&4+3#1+1/F:content_1/G:4_3/H:10=9@4=25|L-L%/I:9=7/J:183+144-28
-v^eh-r+iy=m@3_1/A:1_0_2/B:1-0-3@1-2&4-7#3-5$2-2!1-2;2-6|eh/C:0+0+1/D:content_1/E:content+2@4+6&4+3#1+1/F:content_1/G:4_3/H:10=9@4=25|L-L%/I:9=7/J:183+144-28
-eh^r-iy+m=ah@1_1/A:1_0_3/B:0-0-1@2-1&5-6#4-5$2-2!1-1;3-5|iy/C:1+0+3/D:content_1/E:content+2@4+6&4+3#1+1/F:content_1/G:4_3/H:10=9@4=25|L-L%/I:9=7/J:183+144-28
-r^iy-m+ah=ch@1_3/A:0_0_1/B:1-0-3@1-1&6-5#4-4$2-2!2-1;4-4|ah/C:1+0+2/D:content_2/E:content+1@5+5&5+2#1+1/F:content_1/G:4_3/H:10=9@4=25|L-L%/I:9=7/J:183+144-28
-iy^m-ah+ch=aw@2_2/A:0_0_1/B:1-0-3@1-1&6-5#4-4$2-2!2-1;4-4|ah/C:1+0+2/D:content_2/E:content+1@5+5&5+2#1+1/F:content_1/G:4_3/H:10=9@4=25|L-L%/I:9=7/J:183+144-28
-m^ah-ch+aw=t@3_1/A:0_0_1/B:1-0-3@1-1&6-5#4-4$2-2!2-1;4-4|ah/C:1+0+2/D:content_2/E:content+1@5+5&5+2#1+1/F:content_1/G:4_3/H:10=9@4=25|L-L%/I:9=7/J:183+144-28
-ah^ch-aw+t=ah@1_2/A:1_0_3/B:1-0-2@1-1&7-4#5-3$2-2!1-1;5-3|aw/C:1+0+2/D:content_1/E:content+1@6+4&6+1#1+3/F:in_1/G:4_3/H:10=9@4=25|L-L%/I:9=7/J:183+144-28
-ch^aw-t+ah=v@2_1/A:1_0_3/B:1-0-2@1-1&7-4#5-3$2-2!1-1;5-3|aw/C:1+0+2/D:content_1/E:content+1@6+4&6+1#1+3/F:in_1/G:4_3/H:10=9@4=25|L-L%/I:9=7/J:183+144-28
-aw^t-ah+v=dh@1_2/A:1_0_2/B:1-0-2@1-1&8-3#6-2$2-2!1-2;6-2|ah/C:0+0+2/D:content_1/E:in+1@7+3&7+1#1+2/F:det_1/G:4_3/H:10=9@4=25|L-L%/I:9=7/J:183+144-28
-t^ah-v+dh=ax@2_1/A:1_0_2/B:1-0-2@1-1&8-3#6-2$2-2!1-2;6-2|ah/C:0+0+2/D:content_1/E:in+1@7+3&7+1#1+2/F:det_1/G:4_3/H:10=9@4=25|L-L%/I:9=7/J:183+144-28
-ah^v-dh+ax=w@1_2/A:1_0_2/B:0-0-2@1-1&9-2#7-2$2-2!1-1;7-1|ax/C:1+1+2/D:in_1/E:det+1@8+2&7+1#2+1/F:content_1/G:4_3/H:10=9@4=25|L-L%/I:9=7/J:183+144-28
-v^dh-ax+w=ey@2_1/A:1_0_2/B:0-0-2@1-1&9-2#7-2$2-2!1-1;7-1|ax/C:1+1+2/D:in_1/E:det+1@8+2&7+1#2+1/F:content_1/G:4_3/H:10=9@4=25|L-L%/I:9=7/J:183+144-28
-dh^ax-w+ey=pau@1_2/A:0_0_2/B:1-1-2@1-1&10-1#7-1$2-1!2-0;8-0|ey/C:0+0+2/D:det_1/E:content+1@9+1&7+0#3+0/F:to_1/G:4_3/H:10=9@4=25|L-L%/I:9=7/J:183+144-28
-ax^w-ey+pau=t@2_1/A:0_0_2/B:1-1-2@1-1&10-1#7-1$2-1!2-0;8-0|ey/C:0+0+2/D:det_1/E:content+1@9+1&7+0#3+0/F:to_1/G:4_3/H:10=9@4=25|L-L%/I:9=7/J:183+144-28
-w^ey-pau+t=ax@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+2/D:content_1/E:x+x@x+x&x+x#x+x/F:to_1/G:10_9/H:x=x@1=28|0/I:9=7/J:183+144-28
-ey^pau-t+ax=hh@1_2/A:1_1_2/B:0-0-2@1-1&1-9#1-5$1-4!0-1;0-1|ax/C:1+1+3/D:content_1/E:to+1@1+7&1+4#0+1/F:content_1/G:10_9/H:9=7@5=24|L-L%/I:2=2/J:183+144-28
-pau^t-ax+hh=ih@2_1/A:1_1_2/B:0-0-2@1-1&1-9#1-5$1-4!0-1;0-1|ax/C:1+1+3/D:content_1/E:to+1@1+7&1+4#0+1/F:content_1/G:10_9/H:9=7@5=24|L-L%/I:2=2/J:183+144-28
-t^ax-hh+ih=r@1_3/A:0_0_2/B:1-1-3@1-1&2-8#1-4$1-3!0-2;0-2|ih/C:0+0+2/D:to_1/E:content+1@2+6&1+3#0+2/F:det_1/G:10_9/H:9=7@5=24|L-L%/I:2=2/J:183+144-28
-ax^hh-ih+r=dh@2_2/A:0_0_2/B:1-1-3@1-1&2-8#1-4$1-3!0-2;0-2|ih/C:0+0+2/D:to_1/E:content+1@2+6&1+3#0+2/F:det_1/G:10_9/H:9=7@5=24|L-L%/I:2=2/J:183+144-28
-hh^ih-r+dh=ax@3_1/A:0_0_2/B:1-1-3@1-1&2-8#1-4$1-3!0-2;0-2|ih/C:0+0+2/D:to_1/E:content+1@2+6&1+3#0+2/F:det_1/G:10_9/H:9=7@5=24|L-L%/I:2=2/J:183+144-28
-ih^r-dh+ax=r@1_2/A:1_1_3/B:0-0-2@1-1&3-7#2-4$2-3!1-1;1-1|ax/C:1+1+3/D:content_1/E:det+1@3+5&2+3#1+1/F:content_2/G:10_9/H:9=7@5=24|L-L%/I:2=2/J:183+144-28
-r^dh-ax+r=ae@2_1/A:1_1_3/B:0-0-2@1-1&3-7#2-4$2-3!1-1;1-1|ax/C:1+1+3/D:content_1/E:det+1@3+5&2+3#1+1/F:content_2/G:10_9/H:9=7@5=24|L-L%/I:2=2/J:183+144-28
-dh^ax-r+ae=b@1_3/A:0_0_2/B:1-1-3@1-2&4-6#2-3$2-2!2-2;2-5|ae/C:0+0+2/D:det_1/E:content+2@4+4&2+2#2+1/F:content_1/G:10_9/H:9=7@5=24|L-L%/I:2=2/J:183+144-28
-ax^r-ae+b=ax@2_2/A:0_0_2/B:1-1-3@1-2&4-6#2-3$2-2!2-2;2-5|ae/C:0+0+2/D:det_1/E:content+2@4+4&2+2#2+1/F:content_1/G:10_9/H:9=7@5=24|L-L%/I:2=2/J:183+144-28
-r^ae-b+ax=t@3_1/A:0_0_2/B:1-1-3@1-2&4-6#2-3$2-2!2-2;2-5|ae/C:0+0+2/D:det_1/E:content+2@4+4&2+2#2+1/F:content_1/G:10_9/H:9=7@5=24|L-L%/I:2=2/J:183+144-28
-ae^b-ax+t=s@1_2/A:1_1_3/B:0-0-2@2-1&5-5#3-3$3-2!1-1;1-4|ax/C:1+0+2/D:det_1/E:content+2@4+4&2+2#2+1/F:content_1/G:10_9/H:9=7@5=24|L-L%/I:2=2/J:183+144-28
-b^ax-t+s=ey@2_1/A:1_1_3/B:0-0-2@2-1&5-5#3-3$3-2!1-1;1-4|ax/C:1+0+2/D:det_1/E:content+2@4+4&2+2#2+1/F:content_1/G:10_9/H:9=7@5=24|L-L%/I:2=2/J:183+144-28
-ax^t-s+ey=t@1_2/A:0_0_2/B:1-0-2@1-1&6-4#3-2$3-2!2-3;2-3|ey/C:0+0+2/D:content_2/E:content+1@5+3&3+1#1+2/F:to_1/G:10_9/H:9=7@5=24|L-L%/I:2=2/J:183+144-28
-t^s-ey+t=ax@2_1/A:0_0_2/B:1-0-2@1-1&6-4#3-2$3-2!2-3;2-3|ey/C:0+0+2/D:content_2/E:content+1@5+3&3+1#1+2/F:to_1/G:10_9/H:9=7@5=24|L-L%/I:2=2/J:183+144-28
-s^ey-t+ax=ih@1_2/A:1_0_2/B:0-0-2@1-1&7-3#4-2$3-2!1-2;3-2|ax/C:0+0+2/D:content_1/E:to+1@6+2&4+1#1+1/F:content_2/G:10_9/H:9=7@5=24|L-L%/I:2=2/J:183+144-28
-ey^t-ax+ih=t@2_1/A:1_0_2/B:0-0-2@1-1&7-3#4-2$3-2!1-2;3-2|ax/C:0+0+2/D:content_1/E:to+1@6+2&4+1#1+1/F:content_2/G:10_9/H:9=7@5=24|L-L%/I:2=2/J:183+144-28
-t^ax-ih+t=s@1_2/A:0_0_2/B:0-0-2@1-2&8-2#4-2$3-2!2-1;4-1|ih/C:1+1+4/D:to_1/E:content+2@7+1&4+0#2+0/F:content_1/G:10_9/H:9=7@5=24|L-L%/I:2=2/J:183+144-28
-ax^ih-t+s=eh@2_1/A:0_0_2/B:0-0-2@1-2&8-2#4-2$3-2!2-1;4-1|ih/C:1+1+4/D:to_1/E:content+2@7+1&4+0#2+0/F:content_1/G:10_9/H:9=7@5=24|L-L%/I:2=2/J:183+144-28
-ih^t-s+eh=l@1_4/A:0_0_2/B:1-1-4@2-1&9-1#4-1$3-1!3-0;5-0|eh/C:1+0+1/D:to_1/E:content+2@7+1&4+0#2+0/F:content_1/G:10_9/H:9=7@5=24|L-L%/I:2=2/J:183+144-28
-t^s-eh+l=f@2_3/A:0_0_2/B:1-1-4@2-1&9-1#4-1$3-1!3-0;5-0|eh/C:1+0+1/D:to_1/E:content+2@7+1&4+0#2+0/F:content_1/G:10_9/H:9=7@5=24|L-L%/I:2=2/J:183+144-28
-s^eh-l+f=pau@3_2/A:0_0_2/B:1-1-4@2-1&9-1#4-1$3-1!3-0;5-0|eh/C:1+0+1/D:to_1/E:content+2@7+1&4+0#2+0/F:content_1/G:10_9/H:9=7@5=24|L-L%/I:2=2/J:183+144-28
-eh^l-f+pau=ow@4_1/A:0_0_2/B:1-1-4@2-1&9-1#4-1$3-1!3-0;5-0|eh/C:1+0+1/D:to_1/E:content+2@7+1&4+0#2+0/F:content_1/G:10_9/H:9=7@5=24|L-L%/I:2=2/J:183+144-28
-l^f-pau+ow=d@x_x/A:1_1_4/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+1/D:content_2/E:x+x@x+x&x+x#x+x/F:content_1/G:9_7/H:x=x@1=28|0/I:2=2/J:183+144-28
-f^pau-ow+d=ih@1_1/A:1_1_4/B:1-0-1@1-1&1-2#1-2$1-2!0-1;0-1|ow/C:1+1+3/D:content_2/E:content+1@1+2&1+1#0+1/F:content_1/G:9_7/H:2=2@6=23|L-L%/I:2=2/J:183+144-28
-pau^ow-d+ih=r@1_3/A:1_0_1/B:1-1-3@1-1&2-1#1-1$1-1!1-0;0-0|ih/C:1+1+1/D:content_1/E:content+1@2+1&2+0#1+0/F:content_1/G:9_7/H:2=2@6=23|L-L%/I:2=2/J:183+144-28
-ow^d-ih+r=pau@2_2/A:1_0_1/B:1-1-3@1-1&2-1#1-1$1-1!1-0;0-0|ih/C:1+1+1/D:content_1/E:content+1@2+1&2+0#1+0/F:content_1/G:9_7/H:2=2@6=23|L-L%/I:2=2/J:183+144-28
-d^ih-r+pau=ow@3_1/A:1_0_1/B:1-1-3@1-1&2-1#1-1$1-1!1-0;0-0|ih/C:1+1+1/D:content_1/E:content+1@2+1&2+0#1+0/F:content_1/G:9_7/H:2=2@6=23|L-L%/I:2=2/J:183+144-28
-ih^r-pau+ow=d@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+1/D:content_1/E:x+x@x+x&x+x#x+x/F:content_1/G:2_2/H:x=x@1=28|0/I:2=2/J:183+144-28
-r^pau-ow+d=ih@1_1/A:1_1_3/B:1-1-1@1-1&1-2#1-2$1-2!0-1;0-1|ow/C:1+1+3/D:content_1/E:content+1@1+2&1+1#0+1/F:content_1/G:2_2/H:2=2@1=28|L-H%/I:5=5/J:183+144-28
-pau^ow-d+ih=r@1_3/A:1_1_1/B:1-1-3@1-1&2-1#1-1$1-1!1-0;1-0|ih/C:1+1+1/D:content_1/E:content+1@2+1&2+0#1+0/F:content_1/G:2_2/H:2=2@1=28|L-H%/I:5=5/J:183+144-28
-ow^d-ih+r=pau@2_2/A:1_1_1/B:1-1-3@1-1&2-1#1-1$1-1!1-0;1-0|ih/C:1+1+1/D:content_1/E:content+1@2+1&2+0#1+0/F:content_1/G:2_2/H:2=2@1=28|L-H%/I:5=5/J:183+144-28
-d^ih-r+pau=ay@3_1/A:1_1_1/B:1-1-3@1-1&2-1#1-1$1-1!1-0;1-0|ih/C:1+1+1/D:content_1/E:content+1@2+1&2+0#1+0/F:content_1/G:2_2/H:2=2@1=28|L-H%/I:5=5/J:183+144-28
-ih^r-pau+ay=sh@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+1/D:content_1/E:x+x@x+x&x+x#x+x/F:content_1/G:2_2/H:x=x@1=28|0/I:5=5/J:183+144-28
-r^pau-ay+sh=ae@1_1/A:1_1_3/B:1-1-1@1-1&1-5#1-5$1-3!0-1;0-1|ay/C:1+1+3/D:content_1/E:content+1@1+5&1+3#0+1/F:content_1/G:2_2/H:5=5@1=28|L-H%/I:9=6/J:183+144-28
-pau^ay-sh+ae=l@1_3/A:1_1_1/B:1-1-3@1-1&2-4#1-4$1-2!1-1;1-3|ae/C:1+0+2/D:content_1/E:content+1@2+4&2+2#1+2/F:aux_1/G:2_2/H:5=5@1=28|L-H%/I:9=6/J:183+144-28
-ay^sh-ae+l=b@2_2/A:1_1_1/B:1-1-3@1-1&2-4#1-4$1-2!1-1;1-3|ae/C:1+0+2/D:content_1/E:content+1@2+4&2+2#1+2/F:aux_1/G:2_2/H:5=5@1=28|L-H%/I:9=6/J:183+144-28
-sh^ae-l+b=iy@3_1/A:1_1_1/B:1-1-3@1-1&2-4#1-4$1-2!1-1;1-3|ae/C:1+0+2/D:content_1/E:content+1@2+4&2+2#1+2/F:aux_1/G:2_2/H:5=5@1=28|L-H%/I:9=6/J:183+144-28
-ae^l-b+iy=t@1_2/A:1_1_3/B:1-0-2@1-1&3-3#2-3$2-2!1-1;1-2|iy/C:1+0+2/D:content_1/E:aux+1@3+3&3+2#1+1/F:content_1/G:2_2/H:5=5@1=28|L-H%/I:9=6/J:183+144-28
-l^b-iy+t=uw@2_1/A:1_1_3/B:1-0-2@1-1&3-3#2-3$2-2!1-1;1-2|iy/C:1+0+2/D:content_1/E:aux+1@3+3&3+2#1+1/F:content_1/G:2_2/H:5=5@1=28|L-H%/I:9=6/J:183+144-28
-b^iy-t+uw=l@1_2/A:1_0_2/B:1-0-2@1-1&4-2#3-2$2-2!1-1;2-1|uw/C:1+1+3/D:aux_1/E:content+1@4+2&3+1#2+1/F:content_1/G:2_2/H:5=5@1=28|L-H%/I:9=6/J:183+144-28
-iy^t-uw+l=ey@2_1/A:1_0_2/B:1-0-2@1-1&4-2#3-2$2-2!1-1;2-1|uw/C:1+1+3/D:aux_1/E:content+1@4+2&3+1#2+1/F:content_1/G:2_2/H:5=5@1=28|L-H%/I:9=6/J:183+144-28
-t^uw-l+ey=t@1_3/A:1_0_2/B:1-1-3@1-1&5-1#4-1$2-1!1-0;3-0|ey/C:1+0+3/D:content_1/E:content+1@5+1&4+0#1+0/F:wp_1/G:2_2/H:5=5@1=28|L-H%/I:9=6/J:183+144-28
-uw^l-ey+t=pau@2_2/A:1_0_2/B:1-1-3@1-1&5-1#4-1$2-1!1-0;3-0|ey/C:1+0+3/D:content_1/E:content+1@5+1&4+0#1+0/F:wp_1/G:2_2/H:5=5@1=28|L-H%/I:9=6/J:183+144-28
-l^ey-t+pau=w@3_1/A:1_0_2/B:1-1-3@1-1&5-1#4-1$2-1!1-0;3-0|ey/C:1+0+3/D:content_1/E:content+1@5+1&4+0#1+0/F:wp_1/G:2_2/H:5=5@1=28|L-H%/I:9=6/J:183+144-28
-ey^t-pau+w=eh@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:wp_1/G:5_5/H:x=x@1=28|0/I:9=6/J:183+144-28
-t^pau-w+eh=n@1_3/A:1_1_3/B:1-0-3@1-1&1-9#1-6$1-5!0-1;0-1|eh/C:1+1+2/D:content_1/E:wp+1@1+6&1+4#0+1/F:content_1/G:5_5/H:9=6@2=27|L-L%/I:8=7/J:183+144-28
-pau^w-eh+n=sh@2_2/A:1_1_3/B:1-0-3@1-1&1-9#1-6$1-5!0-1;0-1|eh/C:1+1+2/D:content_1/E:wp+1@1+6&1+4#0+1/F:content_1/G:5_5/H:9=6@2=27|L-L%/I:8=7/J:183+144-28
-w^eh-n+sh=iy@3_1/A:1_1_3/B:1-0-3@1-1&1-9#1-6$1-5!0-1;0-1|eh/C:1+1+2/D:content_1/E:wp+1@1+6&1+4#0+1/F:content_1/G:5_5/H:9=6@2=27|L-L%/I:8=7/J:183+144-28
-eh^n-sh+iy=th@1_2/A:1_0_3/B:1-1-2@1-1&2-8#1-5$1-4!1-1;0-1|iy/C:1+1+3/D:wp_1/E:content+1@2+5&1+3#0+1/F:content_1/G:5_5/H:9=6@2=27|L-L%/I:8=7/J:183+144-28
-n^sh-iy+th=ao@2_1/A:1_0_3/B:1-1-2@1-1&2-8#1-5$1-4!1-1;0-1|iy/C:1+1+3/D:wp_1/E:content+1@2+5&1+3#0+1/F:content_1/G:5_5/H:9=6@2=27|L-L%/I:8=7/J:183+144-28
-sh^iy-th+ao=t@1_3/A:1_1_2/B:1-1-3@1-1&3-7#2-4$2-3!1-1;1-4|ao/C:1+0+2/D:content_1/E:content+1@3+4&2+2#1+1/F:content_1/G:5_5/H:9=6@2=27|L-L%/I:8=7/J:183+144-28
-iy^th-ao+t=ih@2_2/A:1_1_2/B:1-1-3@1-1&3-7#2-4$2-3!1-1;1-4|ao/C:1+0+2/D:content_1/E:content+1@3+4&2+2#1+1/F:content_1/G:5_5/H:9=6@2=27|L-L%/I:8=7/J:183+144-28
-th^ao-t+ih=t@3_1/A:1_1_2/B:1-1-3@1-1&3-7#2-4$2-3!1-1;1-4|ao/C:1+0+2/D:content_1/E:content+1@3+4&2+2#1+1/F:content_1/G:5_5/H:9=6@2=27|L-L%/I:8=7/J:183+144-28
-ao^t-ih+t=ow@1_2/A:1_1_3/B:1-0-2@1-1&4-6#3-3$3-3!1-1;1-3|ih/C:1+0+2/D:content_1/E:content+1@4+3&3+1#1+2/F:in_2/G:5_5/H:9=6@2=27|L-L%/I:8=7/J:183+144-28
-t^ih-t+ow=v@2_1/A:1_1_3/B:1-0-2@1-1&4-6#3-3$3-3!1-1;1-3|ih/C:1+0+2/D:content_1/E:content+1@4+3&3+1#1+2/F:in_2/G:5_5/H:9=6@2=27|L-L%/I:8=7/J:183+144-28
-ih^t-ow+v=er@1_2/A:1_0_2/B:1-0-2@1-2&5-5#4-2$3-3!1-2;2-2|ow/C:0+0+1/D:content_1/E:in+2@5+2&4+1#1+1/F:content_3/G:5_5/H:9=6@2=27|L-L%/I:8=7/J:183+144-28
-t^ow-v+er=ae@2_1/A:1_0_2/B:1-0-2@1-2&5-5#4-2$3-3!1-2;2-2|ow/C:0+0+1/D:content_1/E:in+2@5+2&4+1#1+1/F:content_3/G:5_5/H:9=6@2=27|L-L%/I:8=7/J:183+144-28
-ow^v-er+ae=f@1_1/A:1_0_2/B:0-0-1@2-1&6-4#5-2$3-3!1-1;3-1|er/C:1+1+2/D:content_1/E:in+2@5+2&4+1#1+1/F:content_3/G:5_5/H:9=6@2=27|L-L%/I:8=7/J:183+144-28
-v^er-ae+f=t@1_2/A:0_0_1/B:1-1-2@1-3&7-3#5-1$3-2!2-0;4-2|ae/C:0+0+3/D:in_2/E:content+3@6+1&4+0#2+0/F:content_1/G:5_5/H:9=6@2=27|L-L%/I:8=7/J:183+144-28
-er^ae-f+t=er@2_1/A:0_0_1/B:1-1-2@1-3&7-3#5-1$3-2!2-0;4-2|ae/C:0+0+3/D:in_2/E:content+3@6+1&4+0#2+0/F:content_1/G:5_5/H:9=6@2=27|L-L%/I:8=7/J:183+144-28
-ae^f-t+er=w@1_3/A:1_1_2/B:0-0-3@2-2&8-2#6-1$4-2!1-0;1-1|er/C:0+1+3/D:in_2/E:content+3@6+1&4+0#2+0/F:content_1/G:5_5/H:9=6@2=27|L-L%/I:8=7/J:183+144-28
-f^t-er+w=er@2_2/A:1_1_2/B:0-0-3@2-2&8-2#6-1$4-2!1-0;1-1|er/C:0+1+3/D:in_2/E:content+3@6+1&4+0#2+0/F:content_1/G:5_5/H:9=6@2=27|L-L%/I:8=7/J:183+144-28
-t^er-w+er=d@3_1/A:1_1_2/B:0-0-3@2-2&8-2#6-1$4-2!1-0;1-1|er/C:0+1+3/D:in_2/E:content+3@6+1&4+0#2+0/F:content_1/G:5_5/H:9=6@2=27|L-L%/I:8=7/J:183+144-28
-er^w-er+d=z@1_3/A:0_0_3/B:0-1-3@3-1&9-1#6-1$4-1!2-0;2-0|er/C:1+0+2/D:in_2/E:content+3@6+1&4+0#2+0/F:content_1/G:5_5/H:9=6@2=27|L-L%/I:8=7/J:183+144-28
-w^er-d+z=pau@2_2/A:0_0_3/B:0-1-3@3-1&9-1#6-1$4-1!2-0;2-0|er/C:1+0+2/D:in_2/E:content+3@6+1&4+0#2+0/F:content_1/G:5_5/H:9=6@2=27|L-L%/I:8=7/J:183+144-28
-er^d-z+pau=ih@3_1/A:0_0_3/B:0-1-3@3-1&9-1#6-1$4-1!2-0;2-0|er/C:1+0+2/D:in_2/E:content+3@6+1&4+0#2+0/F:content_1/G:5_5/H:9=6@2=27|L-L%/I:8=7/J:183+144-28
-d^z-pau+ih=t@x_x/A:0_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:content_3/E:x+x@x+x&x+x#x+x/F:content_1/G:9_6/H:x=x@1=28|0/I:8=7/J:183+144-28
-z^pau-ih+t=ax@1_2/A:0_1_3/B:1-0-2@1-1&1-8#1-5$1-2!0-2;0-2|ih/C:0+0+2/D:content_3/E:content+1@1+7&1+2#0+1/F:content_2/G:9_6/H:8=7@3=26|NONE/I:6=5/J:183+144-28
-pau^ih-t+ax=k@2_1/A:0_1_3/B:1-0-2@1-1&1-8#1-5$1-2!0-2;0-2|ih/C:0+0+2/D:content_3/E:content+1@1+7&1+2#0+1/F:content_2/G:9_6/H:8=7@3=26|NONE/I:6=5/J:183+144-28
-ih^t-ax+k=er@1_2/A:1_0_2/B:0-0-2@1-2&2-7#1-5$1-2!1-1;0-1|ax/C:1+1+2/D:content_1/E:content+2@2+6&2+1#1+4/F:to_1/G:9_6/H:8=7@3=26|NONE/I:6=5/J:183+144-28
-t^ax-k+er=d@2_1/A:1_0_2/B:0-0-2@1-2&2-7#1-5$1-2!1-1;0-1|ax/C:1+1+2/D:content_1/E:content+2@2+6&2+1#1+4/F:to_1/G:9_6/H:8=7@3=26|NONE/I:6=5/J:183+144-28
-ax^k-er+d=t@1_2/A:0_0_2/B:1-1-2@2-1&3-6#1-4$1-1!2-3;0-0|er/C:0+0+2/D:content_1/E:content+2@2+6&2+1#1+4/F:to_1/G:9_6/H:8=7@3=26|NONE/I:6=5/J:183+144-28
-k^er-d+t=ax@2_1/A:0_0_2/B:1-1-2@2-1&3-6#1-4$1-1!2-3;0-0|er/C:0+0+2/D:content_1/E:content+2@2+6&2+1#1+4/F:to_1/G:9_6/H:8=7@3=26|NONE/I:6=5/J:183+144-28
-er^d-t+ax=hh@1_2/A:1_1_2/B:0-0-2@1-1&4-5#2-4$2-1!1-2;1-0|ax/C:0+0+2/D:content_2/E:to+1@3+5&3+1#1+3/F:pps_1/G:9_6/H:8=7@3=26|NONE/I:6=5/J:183+144-28
-d^t-ax+hh=er@2_1/A:1_1_2/B:0-0-2@1-1&4-5#2-4$2-1!1-2;1-0|ax/C:0+0+2/D:content_2/E:to+1@3+5&3+1#1+3/F:pps_1/G:9_6/H:8=7@3=26|NONE/I:6=5/J:183+144-28
-t^ax-hh+er=dh@1_2/A:0_0_2/B:0-0-2@1-1&5-4#2-4$2-1!2-1;2-0|er/C:1+0+3/D:to_1/E:pps+1@4+4&3+1#2+2/F:in_1/G:9_6/H:8=7@3=26|NONE/I:6=5/J:183+144-28
-ax^hh-er+dh=ae@2_1/A:0_0_2/B:0-0-2@1-1&5-4#2-4$2-1!2-1;2-0|er/C:1+0+3/D:to_1/E:pps+1@4+4&3+1#2+2/F:in_1/G:9_6/H:8=7@3=26|NONE/I:6=5/J:183+144-28
-hh^er-dh+ae=t@1_3/A:0_0_2/B:1-0-3@1-1&6-3#2-3$2-1!3-1;3-0|ae/C:1+0+2/D:pps_1/E:in+1@5+3&3+1#3+1/F:content_1/G:9_6/H:8=7@3=26|NONE/I:6=5/J:183+144-28
-er^dh-ae+t=sh@2_2/A:0_0_2/B:1-0-3@1-1&6-3#2-3$2-1!3-1;3-0|ae/C:1+0+2/D:pps_1/E:in+1@5+3&3+1#3+1/F:content_1/G:9_6/H:8=7@3=26|NONE/I:6=5/J:183+144-28
-dh^ae-t+sh=iy@3_1/A:0_0_2/B:1-0-3@1-1&6-3#2-3$2-1!3-1;3-0|ae/C:1+0+2/D:pps_1/E:in+1@5+3&3+1#3+1/F:content_1/G:9_6/H:8=7@3=26|NONE/I:6=5/J:183+144-28
-ae^t-sh+iy=ao@1_2/A:1_0_3/B:1-0-2@1-1&7-2#3-2$2-1!1-1;4-0|iy/C:1+0+2/D:in_1/E:content+1@6+2&3+0#4+0/F:md_1/G:9_6/H:8=7@3=26|NONE/I:6=5/J:183+144-28
-t^sh-iy+ao=t@2_1/A:1_0_3/B:1-0-2@1-1&7-2#3-2$2-1!1-1;4-0|iy/C:1+0+2/D:in_1/E:content+1@6+2&3+0#4+0/F:md_1/G:9_6/H:8=7@3=26|NONE/I:6=5/J:183+144-28
-sh^iy-ao+t=pau@1_2/A:1_0_2/B:1-0-2@1-1&8-1#4-1$2-1!1-0;5-0|ao/C:0+0+2/D:content_1/E:md+1@7+1&4+0#1+0/F:to_1/G:9_6/H:8=7@3=26|NONE/I:6=5/J:183+144-28
-iy^ao-t+pau=t@2_1/A:1_0_2/B:1-0-2@1-1&8-1#4-1$2-1!1-0;5-0|ao/C:0+0+2/D:content_1/E:md+1@7+1&4+0#1+0/F:to_1/G:9_6/H:8=7@3=26|NONE/I:6=5/J:183+144-28
-ao^t-pau+t=ax@x_x/A:1_0_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+2/D:md_1/E:x+x@x+x&x+x#x+x/F:to_1/G:8_7/H:x=x@1=28|0/I:6=5/J:183+144-28
-t^pau-t+ax=hh@1_2/A:1_0_2/B:0-0-2@1-1&1-6#1-5$1-2!0-1;0-2|ax/C:1+0+3/D:md_1/E:to+1@1+5&1+1#0+2/F:aux_1/G:8_7/H:6=5@4=25|NONE/I:12=10/J:183+144-28
-pau^t-ax+hh=ae@2_1/A:1_0_2/B:0-0-2@1-1&1-6#1-5$1-2!0-1;0-2|ax/C:1+0+3/D:md_1/E:to+1@1+5&1+1#0+2/F:aux_1/G:8_7/H:6=5@4=25|NONE/I:12=10/J:183+144-28
-t^ax-hh+ae=v@1_3/A:0_0_2/B:1-0-3@1-1&2-5#1-4$1-2!0-1;0-1|ae/C:1+1+4/D:to_1/E:aux+1@2+4&1+1#0+1/F:content_2/G:8_7/H:6=5@4=25|NONE/I:12=10/J:183+144-28
-ax^hh-ae+v=w@2_2/A:0_0_2/B:1-0-3@1-1&2-5#1-4$1-2!0-1;0-1|ae/C:1+1+4/D:to_1/E:aux+1@2+4&1+1#0+1/F:content_2/G:8_7/H:6=5@4=25|NONE/I:12=10/J:183+144-28
-hh^ae-v+w=ah@3_1/A:0_0_2/B:1-0-3@1-1&2-5#1-4$1-2!0-1;0-1|ae/C:1+1+4/D:to_1/E:aux+1@2+4&1+1#0+1/F:content_2/G:8_7/H:6=5@4=25|NONE/I:12=10/J:183+144-28
-ae^v-w+ah=n@1_4/A:1_0_3/B:1-1-4@1-2&3-4#2-3$1-1!1-2;0-0|ah/C:0+0+2/D:aux_1/E:content+2@3+3&1+0#0+0/F:in_1/G:8_7/H:6=5@4=25|NONE/I:12=10/J:183+144-28
-v^w-ah+n=d@2_3/A:1_0_3/B:1-1-4@1-2&3-4#2-3$1-1!1-2;0-0|ah/C:0+0+2/D:aux_1/E:content+2@3+3&1+0#0+0/F:in_1/G:8_7/H:6=5@4=25|NONE/I:12=10/J:183+144-28
-w^ah-n+d=er@3_2/A:1_0_3/B:1-1-4@1-2&3-4#2-3$1-1!1-2;0-0|ah/C:0+0+2/D:aux_1/E:content+2@3+3&1+0#0+0/F:in_1/G:8_7/H:6=5@4=25|NONE/I:12=10/J:183+144-28
-ah^n-d+er=d@4_1/A:1_0_3/B:1-1-4@1-2&3-4#2-3$1-1!1-2;0-0|ah/C:0+0+2/D:aux_1/E:content+2@3+3&1+0#0+0/F:in_1/G:8_7/H:6=5@4=25|NONE/I:12=10/J:183+144-28
-n^d-er+d=ae@1_2/A:1_1_4/B:0-0-2@2-1&4-3#3-3$2-1!1-1;1-0|er/C:1+0+2/D:aux_1/E:content+2@3+3&1+0#0+0/F:in_1/G:8_7/H:6=5@4=25|NONE/I:12=10/J:183+144-28
-d^er-d+ae=t@2_1/A:1_1_4/B:0-0-2@2-1&4-3#3-3$2-1!1-1;1-0|er/C:1+0+2/D:aux_1/E:content+2@3+3&1+0#0+0/F:in_1/G:8_7/H:6=5@4=25|NONE/I:12=10/J:183+144-28
-er^d-ae+t=dh@1_2/A:0_0_2/B:1-0-2@1-1&5-2#3-2$2-1!2-1;2-0|ae/C:1+0+3/D:content_2/E:in+1@4+2&2+0#1+0/F:det_1/G:8_7/H:6=5@4=25|NONE/I:12=10/J:183+144-28
-d^ae-t+dh=ih@2_1/A:0_0_2/B:1-0-2@1-1&5-2#3-2$2-1!2-1;2-0|ae/C:1+0+3/D:content_2/E:in+1@4+2&2+0#1+0/F:det_1/G:8_7/H:6=5@4=25|NONE/I:12=10/J:183+144-28
-ae^t-dh+ih=s@1_3/A:1_0_2/B:1-0-3@1-1&6-1#4-1$2-1!1-0;3-0|ih/C:1+0+3/D:in_1/E:det+1@5+1&2+0#2+0/F:cc_1/G:8_7/H:6=5@4=25|NONE/I:12=10/J:183+144-28
-t^dh-ih+s=pau@2_2/A:1_0_2/B:1-0-3@1-1&6-1#4-1$2-1!1-0;3-0|ih/C:1+0+3/D:in_1/E:det+1@5+1&2+0#2+0/F:cc_1/G:8_7/H:6=5@4=25|NONE/I:12=10/J:183+144-28
-dh^ih-s+pau=b@3_1/A:1_0_2/B:1-0-3@1-1&6-1#4-1$2-1!1-0;3-0|ih/C:1+0+3/D:in_1/E:det+1@5+1&2+0#2+0/F:cc_1/G:8_7/H:6=5@4=25|NONE/I:12=10/J:183+144-28
-ih^s-pau+b=ah@x_x/A:1_0_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:det_1/E:x+x@x+x&x+x#x+x/F:cc_1/G:6_5/H:x=x@1=28|0/I:12=10/J:183+144-28
-s^pau-b+ah=t@1_3/A:1_0_3/B:1-0-3@1-1&1-12#1-9$1-1!0-1;0-0|ah/C:1+0+2/D:det_1/E:cc+1@1+10&1+5#0+3/F:in_1/G:6_5/H:12=10@5=24|NONE/I:11=7/J:183+144-28
-pau^b-ah+t=ae@2_2/A:1_0_3/B:1-0-3@1-1&1-12#1-9$1-1!0-1;0-0|ah/C:1+0+2/D:det_1/E:cc+1@1+10&1+5#0+3/F:in_1/G:6_5/H:12=10@5=24|NONE/I:11=7/J:183+144-28
-b^ah-t+ae=t@3_1/A:1_0_3/B:1-0-3@1-1&1-12#1-9$1-1!0-1;0-0|ah/C:1+0+2/D:det_1/E:cc+1@1+10&1+5#0+3/F:in_1/G:6_5/H:12=10@5=24|NONE/I:11=7/J:183+144-28
-ah^t-ae+t=dh@1_2/A:1_0_3/B:1-0-2@1-1&2-11#1-8$1-1!1-2;0-0|ae/C:0+0+2/D:cc_1/E:in+1@2+9&1+5#0+2/F:det_1/G:6_5/H:12=10@5=24|NONE/I:11=7/J:183+144-28
-t^ae-t+dh=ax@2_1/A:1_0_3/B:1-0-2@1-1&2-11#1-8$1-1!1-2;0-0|ae/C:0+0+2/D:cc_1/E:in+1@2+9&1+5#0+2/F:det_1/G:6_5/H:12=10@5=24|NONE/I:11=7/J:183+144-28
-ae^t-dh+ax=t@1_2/A:1_0_2/B:0-0-2@1-1&3-10#2-8$1-1!1-1;0-0|ax/C:1+0+3/D:in_1/E:det+1@3+8&1+5#0+1/F:content_1/G:6_5/H:12=10@5=24|NONE/I:11=7/J:183+144-28
-t^dh-ax+t=ay@2_1/A:1_0_2/B:0-0-2@1-1&3-10#2-8$1-1!1-1;0-0|ax/C:1+0+3/D:in_1/E:det+1@3+8&1+5#0+1/F:content_1/G:6_5/H:12=10@5=24|NONE/I:11=7/J:183+144-28
-dh^ax-t+ay=m@1_3/A:0_0_2/B:1-0-3@1-1&4-9#2-7$1-1!2-1;0-0|ay/C:1+0+2/D:det_1/E:content+1@4+7&1+4#0+1/F:content_1/G:6_5/H:12=10@5=24|NONE/I:11=7/J:183+144-28
-ax^t-ay+m=ih@2_2/A:0_0_2/B:1-0-3@1-1&4-9#2-7$1-1!2-1;0-0|ay/C:1+0+2/D:det_1/E:content+1@4+7&1+4#0+1/F:content_1/G:6_5/H:12=10@5=24|NONE/I:11=7/J:183+144-28
-t^ay-m+ih=t@3_1/A:0_0_2/B:1-0-3@1-1&4-9#2-7$1-1!2-1;0-0|ay/C:1+0+2/D:det_1/E:content+1@4+7&1+4#0+1/F:content_1/G:6_5/H:12=10@5=24|NONE/I:11=7/J:183+144-28
-ay^m-ih+t=ao@1_2/A:1_0_3/B:1-0-2@1-1&5-8#3-6$1-1!1-1;0-0|ih/C:1+0+2/D:content_1/E:content+1@5+6&2+3#1+2/F:det_1/G:6_5/H:12=10@5=24|NONE/I:11=7/J:183+144-28
-m^ih-t+ao=l@2_1/A:1_0_3/B:1-0-2@1-1&5-8#3-6$1-1!1-1;0-0|ih/C:1+0+2/D:content_1/E:content+1@5+6&2+3#1+2/F:det_1/G:6_5/H:12=10@5=24|NONE/I:11=7/J:183+144-28
-ih^t-ao+l=s@1_2/A:1_0_2/B:1-0-2@1-1&6-7#4-5$1-1!1-1;0-0|ao/C:1+0+4/D:content_1/E:det+1@6+5&3+3#1+1/F:content_1/G:6_5/H:12=10@5=24|NONE/I:11=7/J:183+144-28
-t^ao-l+s=iy@2_1/A:1_0_2/B:1-0-2@1-1&6-7#4-5$1-1!1-1;0-0|ao/C:1+0+4/D:content_1/E:det+1@6+5&3+3#1+1/F:content_1/G:6_5/H:12=10@5=24|NONE/I:11=7/J:183+144-28
-ao^l-s+iy=m@1_4/A:1_0_2/B:1-0-4@1-1&7-6#5-4$1-1!1-1;0-0|iy/C:1+0+4/D:det_1/E:content+1@7+4&3+2#2+1/F:content_1/G:6_5/H:12=10@5=24|NONE/I:11=7/J:183+144-28
-l^s-iy+m=d@2_3/A:1_0_2/B:1-0-4@1-1&7-6#5-4$1-1!1-1;0-0|iy/C:1+0+4/D:det_1/E:content+1@7+4&3+2#2+1/F:content_1/G:6_5/H:12=10@5=24|NONE/I:11=7/J:183+144-28
-s^iy-m+d=k@3_2/A:1_0_2/B:1-0-4@1-1&7-6#5-4$1-1!1-1;0-0|iy/C:1+0+4/D:det_1/E:content+1@7+4&3+2#2+1/F:content_1/G:6_5/H:12=10@5=24|NONE/I:11=7/J:183+144-28
-iy^m-d+k=w@4_1/A:1_0_2/B:1-0-4@1-1&7-6#5-4$1-1!1-1;0-0|iy/C:1+0+4/D:det_1/E:content+1@7+4&3+2#2+1/F:content_1/G:6_5/H:12=10@5=24|NONE/I:11=7/J:183+144-28
-m^d-k+w=ay@1_4/A:1_0_4/B:1-0-4@1-1&8-5#6-3$1-1!1-1;0-0|ay/C:1+0+3/D:content_1/E:content+1@8+3&4+1#1+1/F:content_3/G:6_5/H:12=10@5=24|NONE/I:11=7/J:183+144-28
-d^k-w+ay=t@2_3/A:1_0_4/B:1-0-4@1-1&8-5#6-3$1-1!1-1;0-0|ay/C:1+0+3/D:content_1/E:content+1@8+3&4+1#1+1/F:content_3/G:6_5/H:12=10@5=24|NONE/I:11=7/J:183+144-28
-k^w-ay+t=n@3_2/A:1_0_4/B:1-0-4@1-1&8-5#6-3$1-1!1-1;0-0|ay/C:1+0+3/D:content_1/E:content+1@8+3&4+1#1+1/F:content_3/G:6_5/H:12=10@5=24|NONE/I:11=7/J:183+144-28
-w^ay-t+n=ae@4_1/A:1_0_4/B:1-0-4@1-1&8-5#6-3$1-1!1-1;0-0|ay/C:1+0+3/D:content_1/E:content+1@8+3&4+1#1+1/F:content_3/G:6_5/H:12=10@5=24|NONE/I:11=7/J:183+144-28
-ay^t-n+ae=ch@1_3/A:1_0_4/B:1-0-3@1-3&9-4#7-2$1-1!1-3;0-0|ae/C:0+0+1/D:content_1/E:content+3@9+2&5+0#1+0/F:cc_1/G:6_5/H:12=10@5=24|NONE/I:11=7/J:183+144-28
-t^n-ae+ch=er@2_2/A:1_0_4/B:1-0-3@1-3&9-4#7-2$1-1!1-3;0-0|ae/C:0+0+1/D:content_1/E:content+3@9+2&5+0#1+0/F:cc_1/G:6_5/H:12=10@5=24|NONE/I:11=7/J:183+144-28
-n^ae-ch+er=ax@3_1/A:1_0_4/B:1-0-3@1-3&9-4#7-2$1-1!1-3;0-0|ae/C:0+0+1/D:content_1/E:content+3@9+2&5+0#1+0/F:cc_1/G:6_5/H:12=10@5=24|NONE/I:11=7/J:183+144-28
-ae^ch-er+ax=l@1_1/A:1_0_3/B:0-0-1@2-2&10-3#8-2$1-1!1-2;0-0|er/C:0+0+2/D:content_1/E:content+3@9+2&5+0#1+0/F:cc_1/G:6_5/H:12=10@5=24|NONE/I:11=7/J:183+144-28
-ch^er-ax+l=b@1_2/A:0_0_1/B:0-0-2@3-1&11-2#8-2$1-1!2-1;0-0|ax/C:1+0+3/D:content_1/E:content+3@9+2&5+0#1+0/F:cc_1/G:6_5/H:12=10@5=24|NONE/I:11=7/J:183+144-28
-er^ax-l+b=ah@2_1/A:0_0_1/B:0-0-2@3-1&11-2#8-2$1-1!2-1;0-0|ax/C:1+0+3/D:content_1/E:content+3@9+2&5+0#1+0/F:cc_1/G:6_5/H:12=10@5=24|NONE/I:11=7/J:183+144-28
-ax^l-b+ah=t@1_3/A:0_0_2/B:1-0-3@1-1&12-1#8-1$1-1!3-0;0-0|ah/C:1+0+3/D:content_3/E:cc+1@10+1&6+0#1+0/F:wp_1/G:6_5/H:12=10@5=24|NONE/I:11=7/J:183+144-28
-l^b-ah+t=pau@2_2/A:0_0_2/B:1-0-3@1-1&12-1#8-1$1-1!3-0;0-0|ah/C:1+0+3/D:content_3/E:cc+1@10+1&6+0#1+0/F:wp_1/G:6_5/H:12=10@5=24|NONE/I:11=7/J:183+144-28
-b^ah-t+pau=w@3_1/A:0_0_2/B:1-0-3@1-1&12-1#8-1$1-1!3-0;0-0|ah/C:1+0+3/D:content_3/E:cc+1@10+1&6+0#1+0/F:wp_1/G:6_5/H:12=10@5=24|NONE/I:11=7/J:183+144-28
-ah^t-pau+w=eh@x_x/A:1_0_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:cc_1/E:x+x@x+x&x+x#x+x/F:wp_1/G:12_10/H:x=x@1=28|0/I:11=7/J:183+144-28
-t^pau-w+eh=n@1_3/A:1_0_3/B:1-0-3@1-1&1-11#1-5$1-3!0-2;0-2|eh/C:0+0+2/D:cc_1/E:wp+1@1+7&1+4#0+2/F:det_1/G:12_10/H:11=7@6=23|L-L%/I:6=5/J:183+144-28
-pau^w-eh+n=dh@2_2/A:1_0_3/B:1-0-3@1-1&1-11#1-5$1-3!0-2;0-2|eh/C:0+0+2/D:cc_1/E:wp+1@1+7&1+4#0+2/F:det_1/G:12_10/H:11=7@6=23|L-L%/I:6=5/J:183+144-28
-w^eh-n+dh=ax@3_1/A:1_0_3/B:1-0-3@1-1&1-11#1-5$1-3!0-2;0-2|eh/C:0+0+2/D:cc_1/E:wp+1@1+7&1+4#0+2/F:det_1/G:12_10/H:11=7@6=23|L-L%/I:6=5/J:183+144-28
-eh^n-dh+ax=r@1_2/A:1_0_3/B:0-0-2@1-1&2-10#1-5$1-3!1-1;0-1|ax/C:1+1+3/D:wp_1/E:det+1@2+6&1+4#0+1/F:content_2/G:12_10/H:11=7@6=23|L-L%/I:6=5/J:183+144-28
-n^dh-ax+r=ae@2_1/A:1_0_3/B:0-0-2@1-1&2-10#1-5$1-3!1-1;0-1|ax/C:1+1+3/D:wp_1/E:det+1@2+6&1+4#0+1/F:content_2/G:12_10/H:11=7@6=23|L-L%/I:6=5/J:183+144-28
-dh^ax-r+ae=b@1_3/A:0_0_2/B:1-1-3@1-2&3-9#1-4$1-2!2-2;0-8|ae/C:0+0+2/D:det_1/E:content+2@3+5&1+3#0+1/F:content_4/G:12_10/H:11=7@6=23|L-L%/I:6=5/J:183+144-28
-ax^r-ae+b=ax@2_2/A:0_0_2/B:1-1-3@1-2&3-9#1-4$1-2!2-2;0-8|ae/C:0+0+2/D:det_1/E:content+2@3+5&1+3#0+1/F:content_4/G:12_10/H:11=7@6=23|L-L%/I:6=5/J:183+144-28
-r^ae-b+ax=t@3_1/A:0_0_2/B:1-1-3@1-2&3-9#1-4$1-2!2-2;0-8|ae/C:0+0+2/D:det_1/E:content+2@3+5&1+3#0+1/F:content_4/G:12_10/H:11=7@6=23|L-L%/I:6=5/J:183+144-28
-ae^b-ax+t=ae@1_2/A:1_1_3/B:0-0-2@2-1&4-8#2-4$2-2!1-1;1-7|ax/C:1+0+2/D:det_1/E:content+2@3+5&1+3#0+1/F:content_4/G:12_10/H:11=7@6=23|L-L%/I:6=5/J:183+144-28
-b^ax-t+ae=k@2_1/A:1_1_3/B:0-0-2@2-1&4-8#2-4$2-2!1-1;1-7|ax/C:1+0+2/D:det_1/E:content+2@3+5&1+3#0+1/F:content_4/G:12_10/H:11=7@6=23|L-L%/I:6=5/J:183+144-28
-ax^t-ae+k=ch@1_2/A:0_0_2/B:1-0-2@1-4&5-7#2-3$2-2!2-4;2-6|ae/C:0+0+3/D:content_2/E:content+4@4+4&2+2#1+1/F:content_1/G:12_10/H:11=7@6=23|L-L%/I:6=5/J:183+144-28
-t^ae-k+ch=ax@2_1/A:0_0_2/B:1-0-2@1-4&5-7#2-3$2-2!2-4;2-6|ae/C:0+0+3/D:content_2/E:content+4@4+4&2+2#1+1/F:content_1/G:12_10/H:11=7@6=23|L-L%/I:6=5/J:183+144-28
-ae^k-ch+ax=w@1_3/A:1_0_2/B:0-0-3@2-3&6-6#3-3$2-2!1-3;3-5|ax/C:0+0+2/D:content_2/E:content+4@4+4&2+2#1+1/F:content_1/G:12_10/H:11=7@6=23|L-L%/I:6=5/J:183+144-28
-k^ch-ax+w=ax@2_2/A:1_0_2/B:0-0-3@2-3&6-6#3-3$2-2!1-3;3-5|ax/C:0+0+2/D:content_2/E:content+4@4+4&2+2#1+1/F:content_1/G:12_10/H:11=7@6=23|L-L%/I:6=5/J:183+144-28
-ch^ax-w+ax=l@3_1/A:1_0_2/B:0-0-3@2-3&6-6#3-3$2-2!1-3;3-5|ax/C:0+0+2/D:content_2/E:content+4@4+4&2+2#1+1/F:content_1/G:12_10/H:11=7@6=23|L-L%/I:6=5/J:183+144-28
-ax^w-ax+l=iy@1_2/A:0_0_3/B:0-0-2@3-2&7-5#3-3$2-2!2-2;4-4|ax/C:0+0+1/D:content_2/E:content+4@4+4&2+2#1+1/F:content_1/G:12_10/H:11=7@6=23|L-L%/I:6=5/J:183+144-28
-w^ax-l+iy=t@2_1/A:0_0_3/B:0-0-2@3-2&7-5#3-3$2-2!2-2;4-4|ax/C:0+0+1/D:content_2/E:content+4@4+4&2+2#1+1/F:content_1/G:12_10/H:11=7@6=23|L-L%/I:6=5/J:183+144-28
-ax^l-iy+t=uh@1_1/A:0_0_2/B:0-0-1@4-1&8-4#3-3$2-2!3-1;5-3|iy/C:1+0+3/D:content_2/E:content+4@4+4&2+2#1+1/F:content_1/G:12_10/H:11=7@6=23|L-L%/I:6=5/J:183+144-28
-l^iy-t+uh=k@1_3/A:0_0_1/B:1-0-3@1-1&9-3#3-2$2-2!4-2;6-2|uh/C:0+0+1/D:content_4/E:content+1@5+3&3+1#1+2/F:det_1/G:12_10/H:11=7@6=23|L-L%/I:6=5/J:183+144-28
-iy^t-uh+k=ax@2_2/A:0_0_1/B:1-0-3@1-1&9-3#3-2$2-2!4-2;6-2|uh/C:0+0+1/D:content_4/E:content+1@5+3&3+1#1+2/F:det_1/G:12_10/H:11=7@6=23|L-L%/I:6=5/J:183+144-28
-t^uh-k+ax=w@3_1/A:0_0_1/B:1-0-3@1-1&9-3#3-2$2-2!4-2;6-2|uh/C:0+0+1/D:content_4/E:content+1@5+3&3+1#1+2/F:det_1/G:12_10/H:11=7@6=23|L-L%/I:6=5/J:183+144-28
-uh^k-ax+w=aa@1_1/A:1_0_3/B:0-0-1@1-1&10-2#4-2$2-2!1-1;7-1|ax/C:1+1+3/D:content_1/E:det+1@6+2&4+1#1+1/F:content_1/G:12_10/H:11=7@6=23|L-L%/I:6=5/J:183+144-28
-k^ax-w+aa=ch@1_3/A:0_0_1/B:1-1-3@1-1&11-1#4-1$2-1!2-0;8-0|aa/C:1+0+2/D:det_1/E:content+1@7+1&4+0#2+0/F:content_1/G:12_10/H:11=7@6=23|L-L%/I:6=5/J:183+144-28
-ax^w-aa+ch=pau@2_2/A:0_0_1/B:1-1-3@1-1&11-1#4-1$2-1!2-0;8-0|aa/C:1+0+2/D:det_1/E:content+1@7+1&4+0#2+0/F:content_1/G:12_10/H:11=7@6=23|L-L%/I:6=5/J:183+144-28
-w^aa-ch+pau=aw@3_1/A:0_0_1/B:1-1-3@1-1&11-1#4-1$2-1!2-0;8-0|aa/C:1+0+2/D:det_1/E:content+1@7+1&4+0#2+0/F:content_1/G:12_10/H:11=7@6=23|L-L%/I:6=5/J:183+144-28
-aa^ch-pau+aw=t@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:content_1/E:x+x@x+x&x+x#x+x/F:content_1/G:11_7/H:x=x@1=28|0/I:6=5/J:183+144-28
-ch^pau-aw+t=ah@1_2/A:1_1_3/B:1-0-2@1-1&1-6#1-4$1-3!0-1;0-2|aw/C:1+0+2/D:content_1/E:content+1@1+5&1+2#0+3/F:in_1/G:11_7/H:6=5@7=22|L-L%/I:4=4/J:183+144-28
-pau^aw-t+ah=v@2_1/A:1_1_3/B:1-0-2@1-1&1-6#1-4$1-3!0-1;0-2|aw/C:1+0+2/D:content_1/E:content+1@1+5&1+2#0+3/F:in_1/G:11_7/H:6=5@7=22|L-L%/I:4=4/J:183+144-28
-aw^t-ah+v=ih@1_2/A:1_0_2/B:1-0-2@1-1&2-5#1-3$1-3!1-1;0-1|ah/C:1+1+3/D:content_1/E:in+1@2+4&2+2#1+2/F:pps_1/G:11_7/H:6=5@7=22|L-L%/I:4=4/J:183+144-28
-t^ah-v+ih=t@2_1/A:1_0_2/B:1-0-2@1-1&2-5#1-3$1-3!1-1;0-1|ah/C:1+1+3/D:content_1/E:in+1@2+4&2+2#1+2/F:pps_1/G:11_7/H:6=5@7=22|L-L%/I:4=4/J:183+144-28
-ah^v-ih+t=s@1_3/A:1_0_2/B:1-1-3@1-1&3-4#2-2$1-2!1-2;0-3|ih/C:0+0+6/D:in_1/E:pps+1@3+3&2+2#2+1/F:content_1/G:11_7/H:6=5@7=22|L-L%/I:4=4/J:183+144-28
-v^ih-t+s=w@2_2/A:1_0_2/B:1-1-3@1-1&3-4#2-2$1-2!1-2;0-3|ih/C:0+0+6/D:in_1/E:pps+1@3+3&2+2#2+1/F:content_1/G:11_7/H:6=5@7=22|L-L%/I:4=4/J:183+144-28
-ih^t-s+w=s@3_1/A:1_0_2/B:1-1-3@1-1&3-4#2-2$1-2!1-2;0-3|ih/C:0+0+6/D:in_1/E:pps+1@3+3&2+2#2+1/F:content_1/G:11_7/H:6=5@7=22|L-L%/I:4=4/J:183+144-28
-t^s-w+s=t@1_6/A:1_1_3/B:0-0-6@1-1&4-3#3-2$2-2!1-1;1-2|ow/C:1+0+3/D:pps_1/E:content+1@4+2&2+1#3+1/F:content_2/G:11_7/H:6=5@7=22|L-L%/I:4=4/J:183+144-28
-s^w-s+t=k@2_5/A:1_1_3/B:0-0-6@1-1&4-3#3-2$2-2!1-1;1-2|ow/C:1+0+3/D:pps_1/E:content+1@4+2&2+1#3+1/F:content_2/G:11_7/H:6=5@7=22|L-L%/I:4=4/J:183+144-28
-w^s-t+k=ow@3_4/A:1_1_3/B:0-0-6@1-1&4-3#3-2$2-2!1-1;1-2|ow/C:1+0+3/D:pps_1/E:content+1@4+2&2+1#3+1/F:content_2/G:11_7/H:6=5@7=22|L-L%/I:4=4/J:183+144-28
-s^t-k+ow=t@4_3/A:1_1_3/B:0-0-6@1-1&4-3#3-2$2-2!1-1;1-2|ow/C:1+0+3/D:pps_1/E:content+1@4+2&2+1#3+1/F:content_2/G:11_7/H:6=5@7=22|L-L%/I:4=4/J:183+144-28
-t^k-ow+t=p@5_2/A:1_1_3/B:0-0-6@1-1&4-3#3-2$2-2!1-1;1-2|ow/C:1+0+3/D:pps_1/E:content+1@4+2&2+1#3+1/F:content_2/G:11_7/H:6=5@7=22|L-L%/I:4=4/J:183+144-28
-k^ow-t+p=aa@6_1/A:1_1_3/B:0-0-6@1-1&4-3#3-2$2-2!1-1;1-2|ow/C:1+0+3/D:pps_1/E:content+1@4+2&2+1#3+1/F:content_2/G:11_7/H:6=5@7=22|L-L%/I:4=4/J:183+144-28
-ow^t-p+aa=k@1_3/A:0_0_6/B:1-0-3@1-2&5-2#3-1$2-2!2-0;2-1|aa/C:0+1+2/D:content_1/E:content+2@5+1&3+0#1+0/F:cc_1/G:11_7/H:6=5@7=22|L-L%/I:4=4/J:183+144-28
-t^p-aa+k=ax@2_2/A:0_0_6/B:1-0-3@1-2&5-2#3-1$2-2!2-0;2-1|aa/C:0+1+2/D:content_1/E:content+2@5+1&3+0#1+0/F:cc_1/G:11_7/H:6=5@7=22|L-L%/I:4=4/J:183+144-28
-p^aa-k+ax=t@3_1/A:0_0_6/B:1-0-3@1-2&5-2#3-1$2-2!2-0;2-1|aa/C:0+1+2/D:content_1/E:content+2@5+1&3+0#1+0/F:cc_1/G:11_7/H:6=5@7=22|L-L%/I:4=4/J:183+144-28
-aa^k-ax+t=pau@1_2/A:1_0_3/B:0-1-2@2-1&6-1#4-1$2-1!1-0;3-0|ax/C:1+0+3/D:content_1/E:content+2@5+1&3+0#1+0/F:cc_1/G:11_7/H:6=5@7=22|L-L%/I:4=4/J:183+144-28
-k^ax-t+pau=ae@2_1/A:1_0_3/B:0-1-2@2-1&6-1#4-1$2-1!1-0;3-0|ax/C:1+0+3/D:content_1/E:content+2@5+1&3+0#1+0/F:cc_1/G:11_7/H:6=5@7=22|L-L%/I:4=4/J:183+144-28
-ax^t-pau+ae=n@x_x/A:0_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_2/E:x+x@x+x&x+x#x+x/F:cc_1/G:6_5/H:x=x@1=28|0/I:4=4/J:183+144-28
-t^pau-ae+n=d@1_3/A:0_1_2/B:1-0-3@1-1&1-4#1-4$1-3!0-1;0-1|ae/C:1+1+4/D:content_2/E:cc+1@1+4&1+2#0+1/F:content_1/G:6_5/H:4=4@8=21|L-L%/I:5=4/J:183+144-28
-pau^ae-n+d=l@2_2/A:0_1_2/B:1-0-3@1-1&1-4#1-4$1-3!0-1;0-1|ae/C:1+1+4/D:content_2/E:cc+1@1+4&1+2#0+1/F:content_1/G:6_5/H:4=4@8=21|L-L%/I:5=4/J:183+144-28
-ae^n-d+l=uh@3_1/A:0_1_2/B:1-0-3@1-1&1-4#1-4$1-3!0-1;0-1|ae/C:1+1+4/D:content_2/E:cc+1@1+4&1+2#0+1/F:content_1/G:6_5/H:4=4@8=21|L-L%/I:5=4/J:183+144-28
-n^d-l+uh=k@1_4/A:1_0_3/B:1-1-4@1-1&2-3#1-3$1-2!1-1;0-2|uh/C:1+0+2/D:cc_1/E:content+1@2+3&1+1#0+2/F:in_1/G:6_5/H:4=4@8=21|L-L%/I:5=4/J:183+144-28
-d^l-uh+k=t@2_3/A:1_0_3/B:1-1-4@1-1&2-3#1-3$1-2!1-1;0-2|uh/C:1+0+2/D:cc_1/E:content+1@2+3&1+1#0+2/F:in_1/G:6_5/H:4=4@8=21|L-L%/I:5=4/J:183+144-28
-l^uh-k+t=ae@3_2/A:1_0_3/B:1-1-4@1-1&2-3#1-3$1-2!1-1;0-2|uh/C:1+0+2/D:cc_1/E:content+1@2+3&1+1#0+2/F:in_1/G:6_5/H:4=4@8=21|L-L%/I:5=4/J:183+144-28
-uh^k-t+ae=t@4_1/A:1_0_3/B:1-1-4@1-1&2-3#1-3$1-2!1-1;0-2|uh/C:1+0+2/D:cc_1/E:content+1@2+3&1+1#0+2/F:in_1/G:6_5/H:4=4@8=21|L-L%/I:5=4/J:183+144-28
-k^t-ae+t=ih@1_2/A:1_1_4/B:1-0-2@1-1&3-2#2-2$2-2!1-1;1-1|ae/C:1+1+2/D:content_1/E:in+1@3+2&2+1#1+1/F:content_1/G:6_5/H:4=4@8=21|L-L%/I:5=4/J:183+144-28
-t^ae-t+ih=t@2_1/A:1_1_4/B:1-0-2@1-1&3-2#2-2$2-2!1-1;1-1|ae/C:1+1+2/D:content_1/E:in+1@3+2&2+1#1+1/F:content_1/G:6_5/H:4=4@8=21|L-L%/I:5=4/J:183+144-28
-ae^t-ih+t=pau@1_2/A:1_0_2/B:1-1-2@1-1&4-1#3-1$2-1!1-0;2-0|ih/C:1+0+3/D:in_1/E:content+1@4+1&2+0#2+0/F:cc_1/G:6_5/H:4=4@8=21|L-L%/I:5=4/J:183+144-28
-t^ih-t+pau=ae@2_1/A:1_0_2/B:1-1-2@1-1&4-1#3-1$2-1!1-0;2-0|ih/C:1+0+3/D:in_1/E:content+1@4+1&2+0#2+0/F:cc_1/G:6_5/H:4=4@8=21|L-L%/I:5=4/J:183+144-28
-ih^t-pau+ae=n@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:cc_1/G:4_4/H:x=x@1=28|0/I:5=4/J:183+144-28
-t^pau-ae+n=d@1_3/A:1_1_2/B:1-0-3@1-1&1-5#1-4$1-3!0-1;0-1|ae/C:1+1+3/D:content_1/E:cc+1@1+4&1+2#0+1/F:content_1/G:4_4/H:5=4@9=20|NONE/I:7=5/J:183+144-28
-pau^ae-n+d=dh@2_2/A:1_1_2/B:1-0-3@1-1&1-5#1-4$1-3!0-1;0-1|ae/C:1+1+3/D:content_1/E:cc+1@1+4&1+2#0+1/F:content_1/G:4_4/H:5=4@9=20|NONE/I:7=5/J:183+144-28
-ae^n-d+dh=eh@3_1/A:1_1_2/B:1-0-3@1-1&1-5#1-4$1-3!0-1;0-1|ae/C:1+1+3/D:content_1/E:cc+1@1+4&1+2#0+1/F:content_1/G:4_4/H:5=4@9=20|NONE/I:7=5/J:183+144-28
-n^d-dh+eh=n@1_3/A:1_0_3/B:1-1-3@1-1&2-4#1-3$1-2!1-1;0-1|eh/C:1+1+2/D:cc_1/E:content+1@2+3&1+1#0+1/F:content_2/G:4_4/H:5=4@9=20|NONE/I:7=5/J:183+144-28
-d^dh-eh+n=hh@2_2/A:1_0_3/B:1-1-3@1-1&2-4#1-3$1-2!1-1;0-1|eh/C:1+1+2/D:cc_1/E:content+1@2+3&1+1#0+1/F:content_2/G:4_4/H:5=4@9=20|NONE/I:7=5/J:183+144-28
-dh^eh-n+hh=er@3_1/A:1_0_3/B:1-1-3@1-1&2-4#1-3$1-2!1-1;0-1|eh/C:1+1+2/D:cc_1/E:content+1@2+3&1+1#0+1/F:content_2/G:4_4/H:5=4@9=20|NONE/I:7=5/J:183+144-28
-eh^n-hh+er=iy@1_2/A:1_1_3/B:1-1-2@1-2&3-3#2-2$2-1!1-2;1-0|er/C:0+0+2/D:content_1/E:content+2@3+2&2+0#1+0/F:in_1/G:4_4/H:5=4@9=20|NONE/I:7=5/J:183+144-28
-n^hh-er+iy=d@2_1/A:1_1_3/B:1-1-2@1-2&3-3#2-2$2-1!1-2;1-0|er/C:0+0+2/D:content_1/E:content+2@3+2&2+0#1+0/F:in_1/G:4_4/H:5=4@9=20|NONE/I:7=5/J:183+144-28
-hh^er-iy+d=aa@1_2/A:1_1_2/B:0-0-2@2-1&4-2#3-2$3-1!1-1;1-0|iy/C:1+0+2/D:content_1/E:content+2@3+2&2+0#1+0/F:in_1/G:4_4/H:5=4@9=20|NONE/I:7=5/J:183+144-28
-er^iy-d+aa=n@2_1/A:1_1_2/B:0-0-2@2-1&4-2#3-2$3-1!1-1;1-0|iy/C:1+0+2/D:content_1/E:content+2@3+2&2+0#1+0/F:in_1/G:4_4/H:5=4@9=20|NONE/I:7=5/J:183+144-28
-iy^d-aa+n=pau@1_2/A:0_0_2/B:1-0-2@1-1&5-1#3-1$3-1!2-0;2-0|aa/C:1+1+2/D:content_2/E:in+1@4+1&3+0#1+0/F:content_2/G:4_4/H:5=4@9=20|NONE/I:7=5/J:183+144-28
-d^aa-n+pau=ae@2_1/A:0_0_2/B:1-0-2@1-1&5-1#3-1$3-1!2-0;2-0|aa/C:1+1+2/D:content_2/E:in+1@4+1&3+0#1+0/F:content_2/G:4_4/H:5=4@9=20|NONE/I:7=5/J:183+144-28
-aa^n-pau+ae=l@x_x/A:1_0_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+2/D:in_1/E:x+x@x+x&x+x#x+x/F:content_2/G:5_4/H:x=x@1=28|0/I:7=5/J:183+144-28
-n^pau-ae+l=ax@1_2/A:1_0_2/B:1-1-2@1-2&1-7#1-3$1-3!0-2;0-2|ae/C:0+0+2/D:in_1/E:content+2@1+5&1+2#0+1/F:content_2/G:5_4/H:7=5@10=19|L-L%/I:7=6/J:183+144-28
-pau^ae-l+ax=s@2_1/A:1_0_2/B:1-1-2@1-2&1-7#1-3$1-3!0-2;0-2|ae/C:0+0+2/D:in_1/E:content+2@1+5&1+2#0+1/F:content_2/G:5_4/H:7=5@10=19|L-L%/I:7=6/J:183+144-28
-ae^l-ax+s=s@1_2/A:1_1_2/B:0-0-2@2-1&2-6#1-3$1-3!1-1;1-1|ax/C:1+1+5/D:in_1/E:content+2@1+5&1+2#0+1/F:content_2/G:5_4/H:7=5@10=19|L-L%/I:7=6/J:183+144-28
-l^ax-s+s=t@2_1/A:1_1_2/B:0-0-2@2-1&2-6#1-3$1-3!1-1;1-1|ax/C:1+1+5/D:in_1/E:content+2@1+5&1+2#0+1/F:content_2/G:5_4/H:7=5@10=19|L-L%/I:7=6/J:183+144-28
-ax^s-s+t=aa@1_5/A:0_0_2/B:1-1-5@1-2&3-5#1-2$1-2!2-4;2-4|aa/C:0+0+2/D:content_2/E:content+2@2+4&2+1#1+3/F:to_1/G:5_4/H:7=5@10=19|L-L%/I:7=6/J:183+144-28
-s^s-t+aa=r@2_4/A:0_0_2/B:1-1-5@1-2&3-5#1-2$1-2!2-4;2-4|aa/C:0+0+2/D:content_2/E:content+2@2+4&2+1#1+3/F:to_1/G:5_4/H:7=5@10=19|L-L%/I:7=6/J:183+144-28
-s^t-aa+r=t@3_3/A:0_0_2/B:1-1-5@1-2&3-5#1-2$1-2!2-4;2-4|aa/C:0+0+2/D:content_2/E:content+2@2+4&2+1#1+3/F:to_1/G:5_4/H:7=5@10=19|L-L%/I:7=6/J:183+144-28
-t^aa-r+t=ax@4_2/A:0_0_2/B:1-1-5@1-2&3-5#1-2$1-2!2-4;2-4|aa/C:0+0+2/D:content_2/E:content+2@2+4&2+1#1+3/F:to_1/G:5_4/H:7=5@10=19|L-L%/I:7=6/J:183+144-28
-aa^r-t+ax=d@5_1/A:0_0_2/B:1-1-5@1-2&3-5#1-2$1-2!2-4;2-4|aa/C:0+0+2/D:content_2/E:content+2@2+4&2+1#1+3/F:to_1/G:5_4/H:7=5@10=19|L-L%/I:7=6/J:183+144-28
-r^t-ax+d=t@1_2/A:1_1_5/B:0-0-2@2-1&4-4#2-2$2-2!1-3;1-3|ax/C:0+0+2/D:content_2/E:content+2@2+4&2+1#1+3/F:to_1/G:5_4/H:7=5@10=19|L-L%/I:7=6/J:183+144-28
-t^ax-d+t=ax@2_1/A:1_1_5/B:0-0-2@2-1&4-4#2-2$2-2!1-3;1-3|ax/C:0+0+2/D:content_2/E:content+2@2+4&2+1#1+3/F:to_1/G:5_4/H:7=5@10=19|L-L%/I:7=6/J:183+144-28
-ax^d-t+ax=hh@1_2/A:0_0_2/B:0-0-2@1-1&5-3#2-2$2-2!2-2;2-2|ax/C:0+0+2/D:content_2/E:to+1@3+3&3+1#1+2/F:pps_1/G:5_4/H:7=5@10=19|L-L%/I:7=6/J:183+144-28
-d^t-ax+hh=er@2_1/A:0_0_2/B:0-0-2@1-1&5-3#2-2$2-2!2-2;2-2|ax/C:0+0+2/D:content_2/E:to+1@3+3&3+1#1+2/F:pps_1/G:5_4/H:7=5@10=19|L-L%/I:7=6/J:183+144-28
-t^ax-hh+er=f@1_2/A:0_0_2/B:0-0-2@1-1&6-2#2-2$2-2!3-1;3-1|er/C:1+1+3/D:to_1/E:pps+1@4+2&3+1#2+1/F:content_1/G:5_4/H:7=5@10=19|L-L%/I:7=6/J:183+144-28
-ax^hh-er+f=iy@2_1/A:0_0_2/B:0-0-2@1-1&6-2#2-2$2-2!3-1;3-1|er/C:1+1+3/D:to_1/E:pps+1@4+2&3+1#2+1/F:content_1/G:5_4/H:7=5@10=19|L-L%/I:7=6/J:183+144-28
-hh^er-f+iy=t@1_3/A:0_0_2/B:1-1-3@1-1&7-1#2-1$2-1!4-0;4-0|iy/C:1+0+3/D:pps_1/E:content+1@5+1&3+0#3+0/F:in_1/G:5_4/H:7=5@10=19|L-L%/I:7=6/J:183+144-28
-er^f-iy+t=pau@2_2/A:0_0_2/B:1-1-3@1-1&7-1#2-1$2-1!4-0;4-0|iy/C:1+0+3/D:pps_1/E:content+1@5+1&3+0#3+0/F:in_1/G:5_4/H:7=5@10=19|L-L%/I:7=6/J:183+144-28
-f^iy-t+pau=f@3_1/A:0_0_2/B:1-1-3@1-1&7-1#2-1$2-1!4-0;4-0|iy/C:1+0+3/D:pps_1/E:content+1@5+1&3+0#3+0/F:in_1/G:5_4/H:7=5@10=19|L-L%/I:7=6/J:183+144-28
-iy^t-pau+f=ao@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:in_1/G:7_5/H:x=x@1=28|0/I:7=6/J:183+144-28
-t^pau-f+ao=r@1_3/A:1_1_3/B:1-0-3@1-1&1-7#1-5$1-3!0-1;0-1|ao/C:1+1+2/D:content_1/E:in+1@1+6&1+4#0+1/F:content_1/G:7_5/H:7=6@11=18|L-L%/I:11=8/J:183+144-28
-pau^f-ao+r=ih@2_2/A:1_1_3/B:1-0-3@1-1&1-7#1-5$1-3!0-1;0-1|ao/C:1+1+2/D:content_1/E:in+1@1+6&1+4#0+1/F:content_1/G:7_5/H:7=6@11=18|L-L%/I:11=8/J:183+144-28
-f^ao-r+ih=t@3_1/A:1_1_3/B:1-0-3@1-1&1-7#1-5$1-3!0-1;0-1|ao/C:1+1+2/D:content_1/E:in+1@1+6&1+4#0+1/F:content_1/G:7_5/H:7=6@11=18|L-L%/I:11=8/J:183+144-28
-ao^r-ih+t=f@1_2/A:1_0_3/B:1-1-2@1-1&2-6#1-4$1-2!1-1;0-5|ih/C:1+0+5/D:in_1/E:content+1@2+5&1+3#0+1/F:content_1/G:7_5/H:7=6@11=18|L-L%/I:11=8/J:183+144-28
-r^ih-t+f=l@2_1/A:1_0_3/B:1-1-2@1-1&2-6#1-4$1-2!1-1;0-5|ih/C:1+0+5/D:in_1/E:content+1@2+5&1+3#0+1/F:content_1/G:7_5/H:7=6@11=18|L-L%/I:11=8/J:183+144-28
-ih^t-f+l=ae@1_5/A:1_1_2/B:1-0-5@1-1&3-5#2-3$2-2!1-2;1-4|ae/C:0+0+2/D:content_1/E:content+1@3+4&2+2#1+1/F:content_2/G:7_5/H:7=6@11=18|L-L%/I:11=8/J:183+144-28
-t^f-l+ae=sh@2_4/A:1_1_2/B:1-0-5@1-1&3-5#2-3$2-2!1-2;1-4|ae/C:0+0+2/D:content_1/E:content+1@3+4&2+2#1+1/F:content_2/G:7_5/H:7=6@11=18|L-L%/I:11=8/J:183+144-28
-f^l-ae+sh=t@3_3/A:1_1_2/B:1-0-5@1-1&3-5#2-3$2-2!1-2;1-4|ae/C:0+0+2/D:content_1/E:content+1@3+4&2+2#1+1/F:content_2/G:7_5/H:7=6@11=18|L-L%/I:11=8/J:183+144-28
-l^ae-sh+t=ax@4_2/A:1_1_2/B:1-0-5@1-1&3-5#2-3$2-2!1-2;1-4|ae/C:0+0+2/D:content_1/E:content+1@3+4&2+2#1+1/F:content_2/G:7_5/H:7=6@11=18|L-L%/I:11=8/J:183+144-28
-ae^sh-t+ax=k@5_1/A:1_1_2/B:1-0-5@1-1&3-5#2-3$2-2!1-2;1-4|ae/C:0+0+2/D:content_1/E:content+1@3+4&2+2#1+1/F:content_2/G:7_5/H:7=6@11=18|L-L%/I:11=8/J:183+144-28
-sh^t-ax+k=r@1_2/A:1_0_5/B:0-0-2@1-2&4-4#3-3$2-2!1-1;2-3|ax/C:1+0+3/D:content_1/E:content+2@4+3&3+1#1+2/F:pps_1/G:7_5/H:7=6@11=18|L-L%/I:11=8/J:183+144-28
-t^ax-k+r=ao@2_1/A:1_0_5/B:0-0-2@1-2&4-4#3-3$2-2!1-1;2-3|ax/C:1+0+3/D:content_1/E:content+2@4+3&3+1#1+2/F:pps_1/G:7_5/H:7=6@11=18|L-L%/I:11=8/J:183+144-28
-ax^k-r+ao=s@1_3/A:0_0_2/B:1-0-3@2-1&5-3#3-2$2-2!2-2;3-2|ao/C:0+0+2/D:content_1/E:content+2@4+3&3+1#1+2/F:pps_1/G:7_5/H:7=6@11=18|L-L%/I:11=8/J:183+144-28
-k^r-ao+s=hh@2_2/A:0_0_2/B:1-0-3@2-1&5-3#3-2$2-2!2-2;3-2|ao/C:0+0+2/D:content_1/E:content+2@4+3&3+1#1+2/F:pps_1/G:7_5/H:7=6@11=18|L-L%/I:11=8/J:183+144-28
-r^ao-s+hh=er@3_1/A:0_0_2/B:1-0-3@2-1&5-3#3-2$2-2!2-2;3-2|ao/C:0+0+2/D:content_1/E:content+2@4+3&3+1#1+2/F:pps_1/G:7_5/H:7=6@11=18|L-L%/I:11=8/J:183+144-28
-ao^s-hh+er=m@1_2/A:1_0_3/B:0-0-2@1-1&6-2#4-2$2-2!1-1;4-1|er/C:1+1+4/D:content_2/E:pps+1@5+2&4+1#1+1/F:content_1/G:7_5/H:7=6@11=18|L-L%/I:11=8/J:183+144-28
-s^hh-er+m=ay@2_1/A:1_0_3/B:0-0-2@1-1&6-2#4-2$2-2!1-1;4-1|er/C:1+1+4/D:content_2/E:pps+1@5+2&4+1#1+1/F:content_1/G:7_5/H:7=6@11=18|L-L%/I:11=8/J:183+144-28
-hh^er-m+ay=n@1_4/A:0_0_2/B:1-1-4@1-1&7-1#4-1$2-1!2-0;5-0|ay/C:1+0+3/D:pps_1/E:content+1@6+1&4+0#2+0/F:in_1/G:7_5/H:7=6@11=18|L-L%/I:11=8/J:183+144-28
-er^m-ay+n=d@2_3/A:0_0_2/B:1-1-4@1-1&7-1#4-1$2-1!2-0;5-0|ay/C:1+0+3/D:pps_1/E:content+1@6+1&4+0#2+0/F:in_1/G:7_5/H:7=6@11=18|L-L%/I:11=8/J:183+144-28
-m^ay-n+d=pau@3_2/A:0_0_2/B:1-1-4@1-1&7-1#4-1$2-1!2-0;5-0|ay/C:1+0+3/D:pps_1/E:content+1@6+1&4+0#2+0/F:in_1/G:7_5/H:7=6@11=18|L-L%/I:11=8/J:183+144-28
-ay^n-d+pau=dh@4_1/A:0_0_2/B:1-1-4@1-1&7-1#4-1$2-1!2-0;5-0|ay/C:1+0+3/D:pps_1/E:content+1@6+1&4+0#2+0/F:in_1/G:7_5/H:7=6@11=18|L-L%/I:11=8/J:183+144-28
-n^d-pau+dh=ae@x_x/A:1_1_4/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:in_1/G:7_6/H:x=x@1=28|0/I:11=8/J:183+144-28
-d^pau-dh+ae=t@1_3/A:1_1_4/B:1-0-3@1-1&1-11#1-7$1-4!0-1;0-1|ae/C:1+1+2/D:content_1/E:in+1@1+8&1+4#0+1/F:content_1/G:7_6/H:11=8@12=17|L-L%/I:7=5/J:183+144-28
-pau^dh-ae+t=sh@2_2/A:1_1_4/B:1-0-3@1-1&1-11#1-7$1-4!0-1;0-1|ae/C:1+1+2/D:content_1/E:in+1@1+8&1+4#0+1/F:content_1/G:7_6/H:11=8@12=17|L-L%/I:7=5/J:183+144-28
-dh^ae-t+sh=iy@3_1/A:1_1_4/B:1-0-3@1-1&1-11#1-7$1-4!0-1;0-1|ae/C:1+1+2/D:content_1/E:in+1@1+8&1+4#0+1/F:content_1/G:7_6/H:11=8@12=17|L-L%/I:7=5/J:183+144-28
-ae^t-sh+iy=hh@1_2/A:1_0_3/B:1-1-2@1-1&2-10#1-6$1-3!1-1;0-2|iy/C:1+0+3/D:in_1/E:content+1@2+7&1+3#0+2/F:aux_1/G:7_6/H:11=8@12=17|L-L%/I:7=5/J:183+144-28
-t^sh-iy+hh=ae@2_1/A:1_0_3/B:1-1-2@1-1&2-10#1-6$1-3!1-1;0-2|iy/C:1+0+3/D:in_1/E:content+1@2+7&1+3#0+2/F:aux_1/G:7_6/H:11=8@12=17|L-L%/I:7=5/J:183+144-28
-sh^iy-hh+ae=d@1_3/A:1_1_2/B:1-0-3@1-1&3-9#2-5$2-3!1-1;1-1|ae/C:1+1+3/D:content_1/E:aux+1@3+6&2+3#1+1/F:content_2/G:7_6/H:11=8@12=17|L-L%/I:7=5/J:183+144-28
-iy^hh-ae+d=n@2_2/A:1_1_2/B:1-0-3@1-1&3-9#2-5$2-3!1-1;1-1|ae/C:1+1+3/D:content_1/E:aux+1@3+6&2+3#1+1/F:content_2/G:7_6/H:11=8@12=17|L-L%/I:7=5/J:183+144-28
-hh^ae-d+n=eh@3_1/A:1_1_2/B:1-0-3@1-1&3-9#2-5$2-3!1-1;1-1|ae/C:1+1+3/D:content_1/E:aux+1@3+6&2+3#1+1/F:content_2/G:7_6/H:11=8@12=17|L-L%/I:7=5/J:183+144-28
-ae^d-n+eh=v@1_3/A:1_0_3/B:1-1-3@1-2&4-8#3-4$2-2!1-3;2-7|eh/C:0+0+1/D:aux_1/E:content+2@4+5&2+2#2+2/F:in_2/G:7_6/H:11=8@12=17|L-L%/I:7=5/J:183+144-28
-d^n-eh+v=er@2_2/A:1_0_3/B:1-1-3@1-2&4-8#3-4$2-2!1-3;2-7|eh/C:0+0+1/D:aux_1/E:content+2@4+5&2+2#2+2/F:in_2/G:7_6/H:11=8@12=17|L-L%/I:7=5/J:183+144-28
-n^eh-v+er=b@3_1/A:1_0_3/B:1-1-3@1-2&4-8#3-4$2-2!1-3;2-7|eh/C:0+0+1/D:aux_1/E:content+2@4+5&2+2#2+2/F:in_2/G:7_6/H:11=8@12=17|L-L%/I:7=5/J:183+144-28
-eh^v-er+b=iy@1_1/A:1_1_3/B:0-0-1@2-1&5-7#4-4$3-2!1-2;1-6|er/C:0+0+2/D:aux_1/E:content+2@4+5&2+2#2+2/F:in_2/G:7_6/H:11=8@12=17|L-L%/I:7=5/J:183+144-28
-v^er-b+iy=f@1_2/A:0_0_1/B:0-0-2@1-2&6-6#4-4$3-2!2-1;2-5|iy/C:1+0+3/D:content_2/E:in+2@5+4&3+2#1+1/F:content_1/G:7_6/H:11=8@12=17|L-L%/I:7=5/J:183+144-28
-er^b-iy+f=ao@2_1/A:0_0_1/B:0-0-2@1-2&6-6#4-4$3-2!2-1;2-5|iy/C:1+0+3/D:content_2/E:in+2@5+4&3+2#1+1/F:content_1/G:7_6/H:11=8@12=17|L-L%/I:7=5/J:183+144-28
-b^iy-f+ao=r@1_3/A:0_0_2/B:1-0-3@2-1&7-5#4-3$3-2!3-1;3-4|ao/C:1+0+3/D:content_2/E:in+2@5+4&3+2#1+1/F:content_1/G:7_6/H:11=8@12=17|L-L%/I:7=5/J:183+144-28
-iy^f-ao+r=s@2_2/A:0_0_2/B:1-0-3@2-1&7-5#4-3$3-2!3-1;3-4|ao/C:1+0+3/D:content_2/E:in+2@5+4&3+2#1+1/F:content_1/G:7_6/H:11=8@12=17|L-L%/I:7=5/J:183+144-28
-f^ao-r+s=iy@3_1/A:0_0_2/B:1-0-3@2-1&7-5#4-3$3-2!3-1;3-4|ao/C:1+0+3/D:content_2/E:in+2@5+4&3+2#1+1/F:content_1/G:7_6/H:11=8@12=17|L-L%/I:7=5/J:183+144-28
-ao^r-s+iy=n@1_3/A:1_0_3/B:1-0-3@1-1&8-4#5-2$3-2!1-2;4-3|iy/C:0+0+1/D:in_2/E:content+1@6+3&3+1#2+2/F:det_1/G:7_6/H:11=8@12=17|L-L%/I:7=5/J:183+144-28
-r^s-iy+n=ax@2_2/A:1_0_3/B:1-0-3@1-1&8-4#5-2$3-2!1-2;4-3|iy/C:0+0+1/D:in_2/E:content+1@6+3&3+1#2+2/F:det_1/G:7_6/H:11=8@12=17|L-L%/I:7=5/J:183+144-28
-s^iy-n+ax=r@3_1/A:1_0_3/B:1-0-3@1-1&8-4#5-2$3-2!1-2;4-3|iy/C:0+0+1/D:in_2/E:content+1@6+3&3+1#2+2/F:det_1/G:7_6/H:11=8@12=17|L-L%/I:7=5/J:183+144-28
-iy^n-ax+r=ae@1_1/A:1_0_3/B:0-0-1@1-1&9-3#6-2$3-2!1-1;5-2|ax/C:1+0+3/D:content_1/E:det+1@7+2&4+1#1+1/F:content_2/G:7_6/H:11=8@12=17|L-L%/I:7=5/J:183+144-28
-n^ax-r+ae=b@1_3/A:0_0_1/B:1-0-3@1-2&10-2#6-1$3-2!2-0;6-1|ae/C:0+1+2/D:det_1/E:content+2@8+1&4+0#2+0/F:in_1/G:7_6/H:11=8@12=17|L-L%/I:7=5/J:183+144-28
-ax^r-ae+b=ax@2_2/A:0_0_1/B:1-0-3@1-2&10-2#6-1$3-2!2-0;6-1|ae/C:0+1+2/D:det_1/E:content+2@8+1&4+0#2+0/F:in_1/G:7_6/H:11=8@12=17|L-L%/I:7=5/J:183+144-28
-r^ae-b+ax=t@3_1/A:0_0_1/B:1-0-3@1-2&10-2#6-1$3-2!2-0;6-1|ae/C:0+1+2/D:det_1/E:content+2@8+1&4+0#2+0/F:in_1/G:7_6/H:11=8@12=17|L-L%/I:7=5/J:183+144-28
-ae^b-ax+t=pau@1_2/A:1_0_3/B:0-1-2@2-1&11-1#7-1$3-1!1-0;7-0|ax/C:1+0+3/D:det_1/E:content+2@8+1&4+0#2+0/F:in_1/G:7_6/H:11=8@12=17|L-L%/I:7=5/J:183+144-28
-b^ax-t+pau=w@2_1/A:1_0_3/B:0-1-2@2-1&11-1#7-1$3-1!1-0;7-0|ax/C:1+0+3/D:det_1/E:content+2@8+1&4+0#2+0/F:in_1/G:7_6/H:11=8@12=17|L-L%/I:7=5/J:183+144-28
-ax^t-pau+w=ih@x_x/A:0_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_2/E:x+x@x+x&x+x#x+x/F:in_1/G:11_8/H:x=x@1=28|0/I:7=5/J:183+144-28
-t^pau-w+ih=dh@1_3/A:0_1_2/B:1-0-3@1-1&1-7#1-3$1-3!0-1;0-1|ih/C:1+1+2/D:content_2/E:in+1@1+5&1+3#0+1/F:content_2/G:11_8/H:7=5@13=16|L-L%/I:3=3/J:183+144-28
-pau^w-ih+dh=iy@2_2/A:0_1_2/B:1-0-3@1-1&1-7#1-3$1-3!0-1;0-1|ih/C:1+1+2/D:content_2/E:in+1@1+5&1+3#0+1/F:content_2/G:11_8/H:7=5@13=16|L-L%/I:3=3/J:183+144-28
-w^ih-dh+iy=dh@3_1/A:0_1_2/B:1-0-3@1-1&1-7#1-3$1-3!0-1;0-1|ih/C:1+1+2/D:content_2/E:in+1@1+5&1+3#0+1/F:content_2/G:11_8/H:7=5@13=16|L-L%/I:3=3/J:183+144-28
-ih^dh-iy+dh=er@1_2/A:1_0_3/B:1-1-2@1-2&2-6#1-2$1-2!1-4;0-5|iy/C:0+0+1/D:in_1/E:content+2@2+4&1+2#0+2/F:det_1/G:11_8/H:7=5@13=16|L-L%/I:3=3/J:183+144-28
-dh^iy-dh+er=ax@2_1/A:1_0_3/B:1-1-2@1-2&2-6#1-2$1-2!1-4;0-5|iy/C:0+0+1/D:in_1/E:content+2@2+4&1+2#0+2/F:det_1/G:11_8/H:7=5@13=16|L-L%/I:3=3/J:183+144-28
-iy^dh-er+ax=w@1_1/A:1_1_2/B:0-0-1@2-1&3-5#2-2$2-2!1-3;1-4|er/C:0+0+1/D:in_1/E:content+2@2+4&1+2#0+2/F:det_1/G:11_8/H:7=5@13=16|L-L%/I:3=3/J:183+144-28
-dh^er-ax+w=s@1_1/A:0_0_1/B:0-0-1@1-1&4-4#2-2$2-2!2-2;2-3|ax/C:0+0+6/D:content_2/E:det+1@3+3&2+2#1+1/F:content_1/G:11_8/H:7=5@13=16|L-L%/I:3=3/J:183+144-28
-er^ax-w+s=t@1_6/A:0_0_1/B:0-0-6@1-1&5-3#2-2$2-2!3-1;3-2|ow/C:1+0+3/D:det_1/E:content+1@4+2&2+1#2+1/F:content_2/G:11_8/H:7=5@13=16|L-L%/I:3=3/J:183+144-28
-ax^w-s+t=k@2_5/A:0_0_1/B:0-0-6@1-1&5-3#2-2$2-2!3-1;3-2|ow/C:1+0+3/D:det_1/E:content+1@4+2&2+1#2+1/F:content_2/G:11_8/H:7=5@13=16|L-L%/I:3=3/J:183+144-28
-w^s-t+k=ow@3_4/A:0_0_1/B:0-0-6@1-1&5-3#2-2$2-2!3-1;3-2|ow/C:1+0+3/D:det_1/E:content+1@4+2&2+1#2+1/F:content_2/G:11_8/H:7=5@13=16|L-L%/I:3=3/J:183+144-28
-s^t-k+ow=t@4_3/A:0_0_1/B:0-0-6@1-1&5-3#2-2$2-2!3-1;3-2|ow/C:1+0+3/D:det_1/E:content+1@4+2&2+1#2+1/F:content_2/G:11_8/H:7=5@13=16|L-L%/I:3=3/J:183+144-28
-t^k-ow+t=p@5_2/A:0_0_1/B:0-0-6@1-1&5-3#2-2$2-2!3-1;3-2|ow/C:1+0+3/D:det_1/E:content+1@4+2&2+1#2+1/F:content_2/G:11_8/H:7=5@13=16|L-L%/I:3=3/J:183+144-28
-k^ow-t+p=aa@6_1/A:0_0_1/B:0-0-6@1-1&5-3#2-2$2-2!3-1;3-2|ow/C:1+0+3/D:det_1/E:content+1@4+2&2+1#2+1/F:content_2/G:11_8/H:7=5@13=16|L-L%/I:3=3/J:183+144-28
-ow^t-p+aa=k@1_3/A:0_0_6/B:1-0-3@1-2&6-2#2-1$2-2!4-0;4-1|aa/C:0+1+2/D:content_1/E:content+2@5+1&3+0#1+0/F:cc_1/G:11_8/H:7=5@13=16|L-L%/I:3=3/J:183+144-28
-t^p-aa+k=ax@2_2/A:0_0_6/B:1-0-3@1-2&6-2#2-1$2-2!4-0;4-1|aa/C:0+1+2/D:content_1/E:content+2@5+1&3+0#1+0/F:cc_1/G:11_8/H:7=5@13=16|L-L%/I:3=3/J:183+144-28
-p^aa-k+ax=t@3_1/A:0_0_6/B:1-0-3@1-2&6-2#2-1$2-2!4-0;4-1|aa/C:0+1+2/D:content_1/E:content+2@5+1&3+0#1+0/F:cc_1/G:11_8/H:7=5@13=16|L-L%/I:3=3/J:183+144-28
-aa^k-ax+t=pau@1_2/A:1_0_3/B:0-1-2@2-1&7-1#3-1$2-1!1-0;5-0|ax/C:1+0+2/D:content_1/E:content+2@5+1&3+0#1+0/F:cc_1/G:11_8/H:7=5@13=16|L-L%/I:3=3/J:183+144-28
-k^ax-t+pau=ao@2_1/A:1_0_3/B:0-1-2@2-1&7-1#3-1$2-1!1-0;5-0|ax/C:1+0+2/D:content_1/E:content+2@5+1&3+0#1+0/F:cc_1/G:11_8/H:7=5@13=16|L-L%/I:3=3/J:183+144-28
-ax^t-pau+ao=r@x_x/A:0_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:content_2/E:x+x@x+x&x+x#x+x/F:cc_1/G:7_5/H:x=x@1=28|0/I:3=3/J:183+144-28
-t^pau-ao+r=ax@1_2/A:0_1_2/B:1-0-2@1-1&1-3#1-2$1-2!0-2;0-2|ao/C:0+0+1/D:content_2/E:cc+1@1+3&1+1#0+2/F:det_1/G:7_5/H:3=3@14=15|L-L%/I:5=5/J:183+144-28
-pau^ao-r+ax=w@2_1/A:0_1_2/B:1-0-2@1-1&1-3#1-2$1-2!0-2;0-2|ao/C:0+0+1/D:content_2/E:cc+1@1+3&1+1#0+2/F:det_1/G:7_5/H:3=3@14=15|L-L%/I:5=5/J:183+144-28
-ao^r-ax+w=aa@1_1/A:1_0_2/B:0-0-1@1-1&2-2#1-2$1-2!1-1;0-1|ax/C:1+1+3/D:cc_1/E:det+1@2+2&1+1#0+1/F:content_1/G:7_5/H:3=3@14=15|L-L%/I:5=5/J:183+144-28
-r^ax-w+aa=ch@1_3/A:0_0_1/B:1-1-3@1-1&3-1#1-1$1-1!2-0;0-0|aa/C:0+0+2/D:det_1/E:content+1@3+1&1+0#0+0/F:to_1/G:7_5/H:3=3@14=15|L-L%/I:5=5/J:183+144-28
-ax^w-aa+ch=pau@2_2/A:0_0_1/B:1-1-3@1-1&3-1#1-1$1-1!2-0;0-0|aa/C:0+0+2/D:det_1/E:content+1@3+1&1+0#0+0/F:to_1/G:7_5/H:3=3@14=15|L-L%/I:5=5/J:183+144-28
-w^aa-ch+pau=t@3_1/A:0_0_1/B:1-1-3@1-1&3-1#1-1$1-1!2-0;0-0|aa/C:0+0+2/D:det_1/E:content+1@3+1&1+0#0+0/F:to_1/G:7_5/H:3=3@14=15|L-L%/I:5=5/J:183+144-28
-aa^ch-pau+t=ax@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+2/D:content_1/E:x+x@x+x&x+x#x+x/F:to_1/G:3_3/H:x=x@1=28|0/I:5=5/J:183+144-28
-ch^pau-t+ax=t@1_2/A:1_1_3/B:0-0-2@1-1&1-5#1-5$1-4!0-1;0-1|ax/C:1+1+3/D:content_1/E:to+1@1+5&1+3#0+1/F:content_1/G:3_3/H:5=5@15=14|L-L%/I:9=4/J:183+144-28
-pau^t-ax+t=ey@2_1/A:1_1_3/B:0-0-2@1-1&1-5#1-5$1-4!0-1;0-1|ax/C:1+1+3/D:content_1/E:to+1@1+5&1+3#0+1/F:content_1/G:3_3/H:5=5@15=14|L-L%/I:9=4/J:183+144-28
-t^ax-t+ey=k@1_3/A:0_0_2/B:1-1-3@1-1&2-4#1-4$1-3!0-1;0-1|ey/C:1+1+2/D:to_1/E:content+1@2+4&1+2#0+1/F:content_1/G:3_3/H:5=5@15=14|L-L%/I:9=4/J:183+144-28
-ax^t-ey+k=aw@2_2/A:0_0_2/B:1-1-3@1-1&2-4#1-4$1-3!0-1;0-1|ey/C:1+1+2/D:to_1/E:content+1@2+4&1+2#0+1/F:content_1/G:3_3/H:5=5@15=14|L-L%/I:9=4/J:183+144-28
-t^ey-k+aw=t@3_1/A:0_0_2/B:1-1-3@1-1&2-4#1-4$1-3!0-1;0-1|ey/C:1+1+2/D:to_1/E:content+1@2+4&1+2#0+1/F:content_1/G:3_3/H:5=5@15=14|L-L%/I:9=4/J:183+144-28
-ey^k-aw+t=ah@1_2/A:1_1_3/B:1-1-2@1-1&3-3#2-3$2-2!1-1;1-2|aw/C:1+0+2/D:content_1/E:content+1@3+3&2+1#1+2/F:in_1/G:3_3/H:5=5@15=14|L-L%/I:9=4/J:183+144-28
-k^aw-t+ah=v@2_1/A:1_1_3/B:1-1-2@1-1&3-3#2-3$2-2!1-1;1-2|aw/C:1+0+2/D:content_1/E:content+1@3+3&2+1#1+2/F:in_1/G:3_3/H:5=5@15=14|L-L%/I:9=4/J:183+144-28
-aw^t-ah+v=ih@1_2/A:1_1_2/B:1-0-2@1-1&4-2#3-2$3-2!1-1;1-1|ah/C:1+1+2/D:content_1/E:in+1@4+2&3+1#1+1/F:content_1/G:3_3/H:5=5@15=14|L-L%/I:9=4/J:183+144-28
-t^ah-v+ih=t@2_1/A:1_1_2/B:1-0-2@1-1&4-2#3-2$3-2!1-1;1-1|ah/C:1+1+2/D:content_1/E:in+1@4+2&3+1#1+1/F:content_1/G:3_3/H:5=5@15=14|L-L%/I:9=4/J:183+144-28
-ah^v-ih+t=pau@1_2/A:1_0_2/B:1-1-2@1-1&5-1#4-1$3-1!1-0;2-0|ih/C:1+0+3/D:in_1/E:content+1@5+1&3+0#2+0/F:cc_1/G:3_3/H:5=5@15=14|L-L%/I:9=4/J:183+144-28
-v^ih-t+pau=ae@2_1/A:1_0_2/B:1-1-2@1-1&5-1#4-1$3-1!1-0;2-0|ih/C:1+0+3/D:in_1/E:content+1@5+1&3+0#2+0/F:cc_1/G:3_3/H:5=5@15=14|L-L%/I:9=4/J:183+144-28
-ih^t-pau+ae=n@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:cc_1/G:5_5/H:x=x@1=28|0/I:9=4/J:183+144-28
-t^pau-ae+n=d@1_3/A:1_1_2/B:1-0-3@1-1&1-9#1-5$1-5!0-1;0-1|ae/C:1+1+3/D:content_1/E:cc+1@1+4&1+2#0+1/F:content_2/G:5_5/H:9=4@16=13|L-L%/I:9=7/J:183+144-28
-pau^ae-n+d=b@2_2/A:1_1_2/B:1-0-3@1-1&1-9#1-5$1-5!0-1;0-1|ae/C:1+1+3/D:content_1/E:cc+1@1+4&1+2#0+1/F:content_2/G:5_5/H:9=4@16=13|L-L%/I:9=7/J:183+144-28
-ae^n-d+b=er@3_1/A:1_1_2/B:1-0-3@1-1&1-9#1-5$1-5!0-1;0-1|ae/C:1+1+3/D:content_1/E:cc+1@1+4&1+2#0+1/F:content_2/G:5_5/H:9=4@16=13|L-L%/I:9=7/J:183+144-28
-n^d-b+er=n@1_3/A:1_0_3/B:1-1-3@1-2&2-8#1-4$1-4!1-2;0-3|er/C:0+0+2/D:cc_1/E:content+2@2+3&1+1#0+2/F:in_1/G:5_5/H:9=4@16=13|L-L%/I:9=7/J:183+144-28
-d^b-er+n=ih@2_2/A:1_0_3/B:1-1-3@1-2&2-8#1-4$1-4!1-2;0-3|er/C:0+0+2/D:cc_1/E:content+2@2+3&1+1#0+2/F:in_1/G:5_5/H:9=4@16=13|L-L%/I:9=7/J:183+144-28
-b^er-n+ih=ng@3_1/A:1_0_3/B:1-1-3@1-2&2-8#1-4$1-4!1-2;0-3|er/C:0+0+2/D:cc_1/E:content+2@2+3&1+1#0+2/F:in_1/G:5_5/H:9=4@16=13|L-L%/I:9=7/J:183+144-28
-er^n-ih+ng=w@1_2/A:1_1_3/B:0-0-2@2-1&3-7#2-4$2-4!1-1;1-2|ih/C:1+0+3/D:cc_1/E:content+2@2+3&1+1#0+2/F:in_1/G:5_5/H:9=4@16=13|L-L%/I:9=7/J:183+144-28
-n^ih-ng+w=ih@2_1/A:1_1_3/B:0-0-2@2-1&3-7#2-4$2-4!1-1;1-2|ih/C:1+0+3/D:cc_1/E:content+2@2+3&1+1#0+2/F:in_1/G:5_5/H:9=4@16=13|L-L%/I:9=7/J:183+144-28
-ih^ng-w+ih=dh@1_3/A:0_0_2/B:1-0-3@1-1&4-6#2-3$2-4!2-1;2-1|ih/C:1+1+4/D:content_2/E:in+1@3+2&2+1#1+1/F:content_5/G:5_5/H:9=4@16=13|L-L%/I:9=7/J:183+144-28
-ng^w-ih+dh=k@2_2/A:0_0_2/B:1-0-3@1-1&4-6#2-3$2-4!2-1;2-1|ih/C:1+1+4/D:content_2/E:in+1@3+2&2+1#1+1/F:content_5/G:5_5/H:9=4@16=13|L-L%/I:9=7/J:183+144-28
-w^ih-dh+k=y@3_1/A:0_0_2/B:1-0-3@1-1&4-6#2-3$2-4!2-1;2-1|ih/C:1+1+4/D:content_2/E:in+1@3+2&2+1#1+1/F:content_5/G:5_5/H:9=4@16=13|L-L%/I:9=7/J:183+144-28
-ih^dh-k+y=uh@1_4/A:1_0_3/B:1-1-4@1-5&5-5#3-2$2-3!1-2;3-2|uh/C:0+0+1/D:in_1/E:content+5@4+1&2+0#2+0/F:content_1/G:5_5/H:9=4@16=13|L-L%/I:9=7/J:183+144-28
-dh^k-y+uh=r@2_3/A:1_0_3/B:1-1-4@1-5&5-5#3-2$2-3!1-2;3-2|uh/C:0+0+1/D:in_1/E:content+5@4+1&2+0#2+0/F:content_1/G:5_5/H:9=4@16=13|L-L%/I:9=7/J:183+144-28
-k^y-uh+r=iy@3_2/A:1_0_3/B:1-1-4@1-5&5-5#3-2$2-3!1-2;3-2|uh/C:0+0+1/D:in_1/E:content+5@4+1&2+0#2+0/F:content_1/G:5_5/H:9=4@16=13|L-L%/I:9=7/J:183+144-28
-y^uh-r+iy=aa@4_1/A:1_0_3/B:1-1-4@1-5&5-5#3-2$2-3!1-2;3-2|uh/C:0+0+1/D:in_1/E:content+5@4+1&2+0#2+0/F:content_1/G:5_5/H:9=4@16=13|L-L%/I:9=7/J:183+144-28
-uh^r-iy+aa=s@1_1/A:1_1_4/B:0-0-1@2-4&6-4#4-2$3-3!1-1;1-1|iy/C:1+1+2/D:in_1/E:content+5@4+1&2+0#2+0/F:content_1/G:5_5/H:9=4@16=13|L-L%/I:9=7/J:183+144-28
-r^iy-aa+s=ax@1_2/A:0_0_1/B:1-1-2@3-3&7-3#4-1$3-2!2-0;2-2|aa/C:0+0+2/D:in_1/E:content+5@4+1&2+0#2+0/F:content_1/G:5_5/H:9=4@16=13|L-L%/I:9=7/J:183+144-28
-iy^aa-s+ax=t@2_1/A:0_0_1/B:1-1-2@3-3&7-3#4-1$3-2!2-0;2-2|aa/C:0+0+2/D:in_1/E:content+5@4+1&2+0#2+0/F:content_1/G:5_5/H:9=4@16=13|L-L%/I:9=7/J:183+144-28
-aa^s-ax+t=iy@1_2/A:1_1_2/B:0-0-2@4-2&8-2#5-1$4-2!1-0;1-1|ax/C:0+1+1/D:in_1/E:content+5@4+1&2+0#2+0/F:content_1/G:5_5/H:9=4@16=13|L-L%/I:9=7/J:183+144-28
-s^ax-t+iy=pau@2_1/A:1_1_2/B:0-0-2@4-2&8-2#5-1$4-2!1-0;1-1|ax/C:0+1+1/D:in_1/E:content+5@4+1&2+0#2+0/F:content_1/G:5_5/H:9=4@16=13|L-L%/I:9=7/J:183+144-28
-ax^t-iy+pau=sh@1_1/A:0_0_2/B:0-1-1@5-1&9-1#5-1$4-1!2-0;2-0|iy/C:1+0+2/D:in_1/E:content+5@4+1&2+0#2+0/F:content_1/G:5_5/H:9=4@16=13|L-L%/I:9=7/J:183+144-28
-t^iy-pau+sh=iy@x_x/A:0_1_1/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:content_5/E:x+x@x+x&x+x#x+x/F:content_1/G:9_4/H:x=x@1=28|0/I:9=7/J:183+144-28
-iy^pau-sh+iy=r@1_2/A:0_1_1/B:1-0-2@1-1&1-9#1-6$1-3!0-1;0-1|iy/C:1+1+3/D:content_5/E:content+1@1+7&1+4#0+1/F:content_1/G:9_4/H:9=7@17=12|L-L%/I:5=5/J:183+144-28
-pau^sh-iy+r=ae@2_1/A:0_1_1/B:1-0-2@1-1&1-9#1-6$1-3!0-1;0-1|iy/C:1+1+3/D:content_5/E:content+1@1+7&1+4#0+1/F:content_1/G:9_4/H:9=7@17=12|L-L%/I:5=5/J:183+144-28
-sh^iy-r+ae=n@1_3/A:1_0_2/B:1-1-3@1-1&2-8#1-5$1-2!1-2;0-7|ae/C:0+0+2/D:content_1/E:content+1@2+6&2+3#1+1/F:content_2/G:9_4/H:9=7@17=12|L-L%/I:5=5/J:183+144-28
-iy^r-ae+n=ax@2_2/A:1_0_2/B:1-1-3@1-1&2-8#1-5$1-2!1-2;0-7|ae/C:0+0+2/D:content_1/E:content+1@2+6&2+3#1+1/F:content_2/G:9_4/H:9=7@17=12|L-L%/I:5=5/J:183+144-28
-r^ae-n+ax=k@3_1/A:1_0_2/B:1-1-3@1-1&2-8#1-5$1-2!1-2;0-7|ae/C:0+0+2/D:content_1/E:content+1@2+6&2+3#1+1/F:content_2/G:9_4/H:9=7@17=12|L-L%/I:5=5/J:183+144-28
-ae^n-ax+k=r@1_2/A:1_1_3/B:0-0-2@1-2&3-7#2-5$2-2!1-1;1-6|ax/C:1+0+3/D:content_1/E:content+2@3+5&3+2#1+2/F:det_1/G:9_4/H:9=7@17=12|L-L%/I:5=5/J:183+144-28
-n^ax-k+r=ao@2_1/A:1_1_3/B:0-0-2@1-2&3-7#2-5$2-2!1-1;1-6|ax/C:1+0+3/D:content_1/E:content+2@3+5&3+2#1+2/F:det_1/G:9_4/H:9=7@17=12|L-L%/I:5=5/J:183+144-28
-ax^k-r+ao=s@1_3/A:0_0_2/B:1-0-3@2-1&4-6#2-4$2-2!2-2;2-5|ao/C:0+0+2/D:content_1/E:content+2@3+5&3+2#1+2/F:det_1/G:9_4/H:9=7@17=12|L-L%/I:5=5/J:183+144-28
-k^r-ao+s=dh@2_2/A:0_0_2/B:1-0-3@2-1&4-6#2-4$2-2!2-2;2-5|ao/C:0+0+2/D:content_1/E:content+2@3+5&3+2#1+2/F:det_1/G:9_4/H:9=7@17=12|L-L%/I:5=5/J:183+144-28
-r^ao-s+dh=ax@3_1/A:0_0_2/B:1-0-3@2-1&4-6#2-4$2-2!2-2;2-5|ao/C:0+0+2/D:content_1/E:content+2@3+5&3+2#1+2/F:det_1/G:9_4/H:9=7@17=12|L-L%/I:5=5/J:183+144-28
-ao^s-dh+ax=f@1_2/A:1_0_3/B:0-0-2@1-1&5-5#3-4$2-2!1-1;3-4|ax/C:1+0+4/D:content_2/E:det+1@4+4&4+2#1+1/F:content_1/G:9_4/H:9=7@17=12|L-L%/I:5=5/J:183+144-28
-s^dh-ax+f=iy@2_1/A:1_0_3/B:0-0-2@1-1&5-5#3-4$2-2!1-1;3-4|ax/C:1+0+4/D:content_2/E:det+1@4+4&4+2#1+1/F:content_1/G:9_4/H:9=7@17=12|L-L%/I:5=5/J:183+144-28
-dh^ax-f+iy=l@1_4/A:0_0_2/B:1-0-4@1-1&6-4#3-3$2-2!2-1;4-3|iy/C:1+0+2/D:det_1/E:content+1@5+3&4+1#2+2/F:in_2/G:9_4/H:9=7@17=12|L-L%/I:5=5/J:183+144-28
-ax^f-iy+l=d@2_3/A:0_0_2/B:1-0-4@1-1&6-4#3-3$2-2!2-1;4-3|iy/C:1+0+2/D:det_1/E:content+1@5+3&4+1#2+2/F:in_2/G:9_4/H:9=7@17=12|L-L%/I:5=5/J:183+144-28
-f^iy-l+d=ae@3_2/A:0_0_2/B:1-0-4@1-1&6-4#3-3$2-2!2-1;4-3|iy/C:1+0+2/D:det_1/E:content+1@5+3&4+1#2+2/F:in_2/G:9_4/H:9=7@17=12|L-L%/I:5=5/J:183+144-28
-iy^l-d+ae=f@4_1/A:0_0_2/B:1-0-4@1-1&6-4#3-3$2-2!2-1;4-3|iy/C:1+0+2/D:det_1/E:content+1@5+3&4+1#2+2/F:in_2/G:9_4/H:9=7@17=12|L-L%/I:5=5/J:183+144-28
-l^d-ae+f=t@1_2/A:1_0_4/B:1-0-2@1-2&7-3#4-2$2-2!1-2;5-2|ae/C:0+0+2/D:content_1/E:in+2@6+2&5+1#1+1/F:content_1/G:9_4/H:9=7@17=12|L-L%/I:5=5/J:183+144-28
-d^ae-f+t=er@2_1/A:1_0_4/B:1-0-2@1-2&7-3#4-2$2-2!1-2;5-2|ae/C:0+0+2/D:content_1/E:in+2@6+2&5+1#1+1/F:content_1/G:9_4/H:9=7@17=12|L-L%/I:5=5/J:183+144-28
-ae^f-t+er=ih@1_2/A:1_0_2/B:0-0-2@2-1&8-2#5-2$2-2!1-1;6-1|er/C:1+1+2/D:content_1/E:in+2@6+2&5+1#1+1/F:content_1/G:9_4/H:9=7@17=12|L-L%/I:5=5/J:183+144-28
-f^t-er+ih=t@2_1/A:1_0_2/B:0-0-2@2-1&8-2#5-2$2-2!1-1;6-1|er/C:1+1+2/D:content_1/E:in+2@6+2&5+1#1+1/F:content_1/G:9_4/H:9=7@17=12|L-L%/I:5=5/J:183+144-28
-t^er-ih+t=pau@1_2/A:0_0_2/B:1-1-2@1-1&9-1#5-1$2-1!2-0;7-0|ih/C:1+0+3/D:in_2/E:content+1@7+1&5+0#2+0/F:cc_1/G:9_4/H:9=7@17=12|L-L%/I:5=5/J:183+144-28
-er^ih-t+pau=ae@2_1/A:0_0_2/B:1-1-2@1-1&9-1#5-1$2-1!2-0;7-0|ih/C:1+0+3/D:in_2/E:content+1@7+1&5+0#2+0/F:cc_1/G:9_4/H:9=7@17=12|L-L%/I:5=5/J:183+144-28
-ih^t-pau+ae=n@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:cc_1/G:9_7/H:x=x@1=28|0/I:5=5/J:183+144-28
-t^pau-ae+n=d@1_3/A:1_1_2/B:1-0-3@1-1&1-5#1-4$1-3!0-1;0-2|ae/C:1+0+3/D:content_1/E:cc+1@1+5&1+2#0+2/F:aux_1/G:9_7/H:5=5@18=11|L-L%/I:4=4/J:183+144-28
-pau^ae-n+d=w@2_2/A:1_1_2/B:1-0-3@1-1&1-5#1-4$1-3!0-1;0-2|ae/C:1+0+3/D:content_1/E:cc+1@1+5&1+2#0+2/F:aux_1/G:9_7/H:5=5@18=11|L-L%/I:4=4/J:183+144-28
-ae^n-d+w=aa@3_1/A:1_1_2/B:1-0-3@1-1&1-5#1-4$1-3!0-1;0-2|ae/C:1+0+3/D:content_1/E:cc+1@1+5&1+2#0+2/F:aux_1/G:9_7/H:5=5@18=11|L-L%/I:4=4/J:183+144-28
-n^d-w+aa=z@1_3/A:1_0_3/B:1-0-3@1-1&2-4#1-3$1-3!1-1;0-1|aa/C:1+1+4/D:cc_1/E:aux+1@2+4&1+2#0+1/F:content_1/G:9_7/H:5=5@18=11|L-L%/I:4=4/J:183+144-28
-d^w-aa+z=jh@2_2/A:1_0_3/B:1-0-3@1-1&2-4#1-3$1-3!1-1;0-1|aa/C:1+1+4/D:cc_1/E:aux+1@2+4&1+2#0+1/F:content_1/G:9_7/H:5=5@18=11|L-L%/I:4=4/J:183+144-28
-w^aa-z+jh=ah@3_1/A:1_0_3/B:1-0-3@1-1&2-4#1-3$1-3!1-1;0-1|aa/C:1+1+4/D:cc_1/E:aux+1@2+4&1+2#0+1/F:content_1/G:9_7/H:5=5@18=11|L-L%/I:4=4/J:183+144-28
-aa^z-jh+ah=s@1_4/A:1_0_3/B:1-1-4@1-1&3-3#2-2$1-2!1-2;0-2|ah/C:0+0+2/D:aux_1/E:content+1@3+3&1+1#0+2/F:in_1/G:9_7/H:5=5@18=11|L-L%/I:4=4/J:183+144-28
-z^jh-ah+s=t@2_3/A:1_0_3/B:1-1-4@1-1&3-3#2-2$1-2!1-2;0-2|ah/C:0+0+2/D:aux_1/E:content+1@3+3&1+1#0+2/F:in_1/G:9_7/H:5=5@18=11|L-L%/I:4=4/J:183+144-28
-jh^ah-s+t=ih@3_2/A:1_0_3/B:1-1-4@1-1&3-3#2-2$1-2!1-2;0-2|ah/C:0+0+2/D:aux_1/E:content+1@3+3&1+1#0+2/F:in_1/G:9_7/H:5=5@18=11|L-L%/I:4=4/J:183+144-28
-ah^s-t+ih=n@4_1/A:1_0_3/B:1-1-4@1-1&3-3#2-2$1-2!1-2;0-2|ah/C:0+0+2/D:aux_1/E:content+1@3+3&1+1#0+2/F:in_1/G:9_7/H:5=5@18=11|L-L%/I:4=4/J:183+144-28
-s^t-ih+n=t@1_2/A:1_1_4/B:0-0-2@1-1&4-2#3-2$2-2!1-1;1-1|ih/C:1+1+3/D:content_1/E:in+1@4+2&2+1#1+1/F:content_1/G:9_7/H:5=5@18=11|L-L%/I:4=4/J:183+144-28
-t^ih-n+t=ay@2_1/A:1_1_4/B:0-0-2@1-1&4-2#3-2$2-2!1-1;1-1|ih/C:1+1+3/D:content_1/E:in+1@4+2&2+1#1+1/F:content_1/G:9_7/H:5=5@18=11|L-L%/I:4=4/J:183+144-28
-ih^n-t+ay=m@1_3/A:0_0_2/B:1-1-3@1-1&5-1#3-1$2-1!2-0;2-0|ay/C:0+0+2/D:in_1/E:content+1@5+1&2+0#2+0/F:to_1/G:9_7/H:5=5@18=11|L-L%/I:4=4/J:183+144-28
-n^t-ay+m=pau@2_2/A:0_0_2/B:1-1-3@1-1&5-1#3-1$2-1!2-0;2-0|ay/C:0+0+2/D:in_1/E:content+1@5+1&2+0#2+0/F:to_1/G:9_7/H:5=5@18=11|L-L%/I:4=4/J:183+144-28
-t^ay-m+pau=t@3_1/A:0_0_2/B:1-1-3@1-1&5-1#3-1$2-1!2-0;2-0|ay/C:0+0+2/D:in_1/E:content+1@5+1&2+0#2+0/F:to_1/G:9_7/H:5=5@18=11|L-L%/I:4=4/J:183+144-28
-ay^m-pau+t=ax@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+2/D:content_1/E:x+x@x+x&x+x#x+x/F:to_1/G:5_5/H:x=x@1=28|0/I:4=4/J:183+144-28
-m^pau-t+ax=s@1_2/A:1_1_3/B:0-0-2@1-1&1-4#1-4$1-4!0-1;0-1|ax/C:1+1+2/D:content_1/E:to+1@1+4&1+3#0+1/F:content_1/G:5_5/H:4=4@19=10|L-L%/I:6=5/J:183+144-28
-pau^t-ax+s=iy@2_1/A:1_1_3/B:0-0-2@1-1&1-4#1-4$1-4!0-1;0-1|ax/C:1+1+2/D:content_1/E:to+1@1+4&1+3#0+1/F:content_1/G:5_5/H:4=4@19=10|L-L%/I:6=5/J:183+144-28
-t^ax-s+iy=ih@1_2/A:0_0_2/B:1-1-2@1-1&2-3#1-3$1-3!0-1;0-1|iy/C:1+1+2/D:to_1/E:content+1@2+3&1+2#0+1/F:content_1/G:5_5/H:4=4@19=10|L-L%/I:6=5/J:183+144-28
-ax^s-iy+ih=t@2_1/A:0_0_2/B:1-1-2@1-1&2-3#1-3$1-3!0-1;0-1|iy/C:1+1+2/D:to_1/E:content+1@2+3&1+2#0+1/F:content_1/G:5_5/H:4=4@19=10|L-L%/I:6=5/J:183+144-28
-s^iy-ih+t=p@1_2/A:1_1_2/B:1-1-2@1-1&3-2#2-2$2-2!1-1;1-1|ih/C:1+1+3/D:content_1/E:content+1@3+2&2+1#1+1/F:content_1/G:5_5/H:4=4@19=10|L-L%/I:6=5/J:183+144-28
-iy^ih-t+p=aa@2_1/A:1_1_2/B:1-1-2@1-1&3-2#2-2$2-2!1-1;1-1|ih/C:1+1+3/D:content_1/E:content+1@3+2&2+1#1+1/F:content_1/G:5_5/H:4=4@19=10|L-L%/I:6=5/J:183+144-28
-ih^t-p+aa=p@1_3/A:1_1_2/B:1-1-3@1-1&4-1#3-1$3-1!1-0;1-0|aa/C:1+0+3/D:content_1/E:content+1@4+1&3+0#1+0/F:in_1/G:5_5/H:4=4@19=10|L-L%/I:6=5/J:183+144-28
-t^p-aa+p=pau@2_2/A:1_1_2/B:1-1-3@1-1&4-1#3-1$3-1!1-0;1-0|aa/C:1+0+3/D:content_1/E:content+1@4+1&3+0#1+0/F:in_1/G:5_5/H:4=4@19=10|L-L%/I:6=5/J:183+144-28
-p^aa-p+pau=d@3_1/A:1_1_2/B:1-1-3@1-1&4-1#3-1$3-1!1-0;1-0|aa/C:1+0+3/D:content_1/E:content+1@4+1&3+0#1+0/F:in_1/G:5_5/H:4=4@19=10|L-L%/I:6=5/J:183+144-28
-aa^p-pau+d=aw@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:in_1/G:4_4/H:x=x@1=28|0/I:6=5/J:183+144-28
-p^pau-d+aw=n@1_3/A:1_1_3/B:1-0-3@1-1&1-6#1-4$1-4!0-2;0-2|aw/C:0+0+1/D:content_1/E:in+1@1+5&1+3#0+2/F:det_1/G:4_4/H:6=5@20=9|L-L%/I:4=3/J:183+144-28
-pau^d-aw+n=ax@2_2/A:1_1_3/B:1-0-3@1-1&1-6#1-4$1-4!0-2;0-2|aw/C:0+0+1/D:content_1/E:in+1@1+5&1+3#0+2/F:det_1/G:4_4/H:6=5@20=9|L-L%/I:4=3/J:183+144-28
-d^aw-n+ax=l@3_1/A:1_1_3/B:1-0-3@1-1&1-6#1-4$1-4!0-2;0-2|aw/C:0+0+1/D:content_1/E:in+1@1+5&1+3#0+2/F:det_1/G:4_4/H:6=5@20=9|L-L%/I:4=3/J:183+144-28
-aw^n-ax+l=aa@1_1/A:1_0_3/B:0-0-1@1-1&2-5#1-4$1-4!1-1;0-1|ax/C:1+1+4/D:in_1/E:det+1@2+4&1+3#0+1/F:content_1/G:4_4/H:6=5@20=9|L-L%/I:4=3/J:183+144-28
-n^ax-l+aa=r@1_4/A:0_0_1/B:1-1-4@1-1&3-4#1-3$1-3!2-1;0-1|aa/C:1+1+3/D:det_1/E:content+1@3+3&1+2#0+1/F:content_2/G:4_4/H:6=5@20=9|L-L%/I:4=3/J:183+144-28
-ax^l-aa+r=jh@2_3/A:0_0_1/B:1-1-4@1-1&3-4#1-3$1-3!2-1;0-1|aa/C:1+1+3/D:det_1/E:content+1@3+3&1+2#0+1/F:content_2/G:4_4/H:6=5@20=9|L-L%/I:4=3/J:183+144-28
-l^aa-r+jh=r@3_2/A:0_0_1/B:1-1-4@1-1&3-4#1-3$1-3!2-1;0-1|aa/C:1+1+3/D:det_1/E:content+1@3+3&1+2#0+1/F:content_2/G:4_4/H:6=5@20=9|L-L%/I:4=3/J:183+144-28
-aa^r-jh+r=ae@4_1/A:0_0_1/B:1-1-4@1-1&3-4#1-3$1-3!2-1;0-1|aa/C:1+1+3/D:det_1/E:content+1@3+3&1+2#0+1/F:content_2/G:4_4/H:6=5@20=9|L-L%/I:4=3/J:183+144-28
-r^jh-r+ae=b@1_3/A:1_1_4/B:1-1-3@1-2&4-3#2-2$2-2!1-2;1-2|ae/C:0+0+2/D:content_1/E:content+2@4+2&2+1#1+1/F:content_1/G:4_4/H:6=5@20=9|L-L%/I:4=3/J:183+144-28
-jh^r-ae+b=ax@2_2/A:1_1_4/B:1-1-3@1-2&4-3#2-2$2-2!1-2;1-2|ae/C:0+0+2/D:content_1/E:content+2@4+2&2+1#1+1/F:content_1/G:4_4/H:6=5@20=9|L-L%/I:4=3/J:183+144-28
-r^ae-b+ax=t@3_1/A:1_1_4/B:1-1-3@1-2&4-3#2-2$2-2!1-2;1-2|ae/C:0+0+2/D:content_1/E:content+2@4+2&2+1#1+1/F:content_1/G:4_4/H:6=5@20=9|L-L%/I:4=3/J:183+144-28
-ae^b-ax+t=hh@1_2/A:1_1_3/B:0-0-2@2-1&5-2#3-2$3-2!1-1;1-1|ax/C:1+1+3/D:content_1/E:content+2@4+2&2+1#1+1/F:content_1/G:4_4/H:6=5@20=9|L-L%/I:4=3/J:183+144-28
-b^ax-t+hh=ow@2_1/A:1_1_3/B:0-0-2@2-1&5-2#3-2$3-2!1-1;1-1|ax/C:1+1+3/D:content_1/E:content+2@4+2&2+1#1+1/F:content_1/G:4_4/H:6=5@20=9|L-L%/I:4=3/J:183+144-28
-ax^t-hh+ow=l@1_3/A:0_0_2/B:1-1-3@1-1&6-1#3-1$3-1!2-0;2-0|ow/C:1+0+3/D:content_2/E:content+1@5+1&3+0#1+0/F:in_2/G:4_4/H:6=5@20=9|L-L%/I:4=3/J:183+144-28
-t^hh-ow+l=pau@2_2/A:0_0_2/B:1-1-3@1-1&6-1#3-1$3-1!2-0;2-0|ow/C:1+0+3/D:content_2/E:content+1@5+1&3+0#1+0/F:in_2/G:4_4/H:6=5@20=9|L-L%/I:4=3/J:183+144-28
-hh^ow-l+pau=ah@3_1/A:0_0_2/B:1-1-3@1-1&6-1#3-1$3-1!2-0;2-0|ow/C:1+0+3/D:content_2/E:content+1@5+1&3+0#1+0/F:in_2/G:4_4/H:6=5@20=9|L-L%/I:4=3/J:183+144-28
-ow^l-pau+ah=n@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:in_2/G:6_5/H:x=x@1=28|0/I:4=3/J:183+144-28
-l^pau-ah+n=d@1_3/A:1_1_3/B:1-0-3@1-2&1-4#1-2$1-2!0-3;0-3|ah/C:0+0+1/D:content_1/E:in+2@1+3&1+1#0+2/F:det_1/G:6_5/H:4=3@21=8|L-L%/I:0=0/J:183+144-28
-pau^ah-n+d=er@2_2/A:1_1_3/B:1-0-3@1-2&1-4#1-2$1-2!0-3;0-3|ah/C:0+0+1/D:content_1/E:in+2@1+3&1+1#0+2/F:det_1/G:6_5/H:4=3@21=8|L-L%/I:0=0/J:183+144-28
-ah^n-d+er=dh@3_1/A:1_1_3/B:1-0-3@1-2&1-4#1-2$1-2!0-3;0-3|ah/C:0+0+1/D:content_1/E:in+2@1+3&1+1#0+2/F:det_1/G:6_5/H:4=3@21=8|L-L%/I:0=0/J:183+144-28
-n^d-er+dh=ax@1_1/A:1_0_3/B:0-0-1@2-1&2-3#1-2$1-2!1-2;0-2|er/C:0+0+2/D:content_1/E:in+2@1+3&1+1#0+2/F:det_1/G:6_5/H:4=3@21=8|L-L%/I:0=0/J:183+144-28
-d^er-dh+ax=hh@1_2/A:0_0_1/B:0-0-2@1-1&3-2#1-2$1-2!2-1;0-1|ax/C:1+1+3/D:in_2/E:det+1@2+2&1+1#0+1/F:content_1/G:6_5/H:4=3@21=8|L-L%/I:0=0/J:183+144-28
-er^dh-ax+hh=eh@2_1/A:0_0_1/B:0-0-2@1-1&3-2#1-2$1-2!2-1;0-1|ax/C:1+1+3/D:in_2/E:det+1@2+2&1+1#0+1/F:content_1/G:6_5/H:4=3@21=8|L-L%/I:0=0/J:183+144-28
-dh^ax-hh+eh=jh@1_3/A:0_0_2/B:1-1-3@1-1&4-1#1-1$1-1!3-0;0-0|eh/C:0+0+0/D:det_1/E:content+1@3+1&1+0#0+0/F:0_0/G:6_5/H:4=3@21=8|L-L%/I:0=0/J:183+144-28
-ax^hh-eh+jh=pau@2_2/A:0_0_2/B:1-1-3@1-1&4-1#1-1$1-1!3-0;0-0|eh/C:0+0+0/D:det_1/E:content+1@3+1&1+0#0+0/F:0_0/G:6_5/H:4=3@21=8|L-L%/I:0=0/J:183+144-28
-hh^eh-jh+pau=x@3_1/A:0_0_2/B:1-1-3@1-1&4-1#1-1$1-1!3-0;0-0|eh/C:0+0+0/D:det_1/E:content+1@3+1&1+0#0+0/F:0_0/G:6_5/H:4=3@21=8|L-L%/I:0=0/J:183+144-28
-eh^jh-pau+x=x@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:content_1/E:x+x@x+x&x+x#x+x/F:0_0/G:4_3/H:x=x@1=28|0/I:0=0/J:183+144-28
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice04.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice04.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice04.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice04.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,77 +0,0 @@
-x^x-pau+ih=n@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+2/D:0_0/E:x+x@x+x&x+x#x+x/F:in_1/G:0_0/H:x=x@1=3|0/I:13=8/J:31+21-3
-x^pau-ih+n=ax@1_2/A:0_0_0/B:0-0-2@1-1&1-13#1-8$1-4!0-2;0-4|ih/C:0+0+2/D:0_0/E:in+1@1+8&1+4#0+2/F:det_3/G:0_0/H:13=8@1=3|L-H%/I:9=5/J:31+21-3
-pau^ih-n+ax=n@2_1/A:0_0_0/B:0-0-2@1-1&1-13#1-8$1-4!0-2;0-4|ih/C:0+0+2/D:0_0/E:in+1@1+8&1+4#0+2/F:det_3/G:0_0/H:13=8@1=3|L-H%/I:9=5/J:31+21-3
-ih^n-ax+n=ah@1_2/A:0_0_2/B:0-0-2@1-3&2-12#1-8$1-4!0-1;0-3|ax/C:1+0+2/D:in_1/E:det+3@2+7&1+4#0+1/F:content_2/G:0_0/H:13=8@1=3|L-H%/I:9=5/J:31+21-3
-n^ax-n+ah=dh@2_1/A:0_0_2/B:0-0-2@1-3&2-12#1-8$1-4!0-1;0-3|ax/C:1+0+2/D:in_1/E:det+3@2+7&1+4#0+1/F:content_2/G:0_0/H:13=8@1=3|L-H%/I:9=5/J:31+21-3
-ax^n-ah+dh=er@1_2/A:0_0_2/B:1-0-2@2-2&3-11#1-7$1-4!0-2;0-2|ah/C:0+0+1/D:in_1/E:det+3@2+7&1+4#0+1/F:content_2/G:0_0/H:13=8@1=3|L-H%/I:9=5/J:31+21-3
-n^ah-dh+er=m@2_1/A:0_0_2/B:1-0-2@2-2&3-11#1-7$1-4!0-2;0-2|ah/C:0+0+1/D:in_1/E:det+3@2+7&1+4#0+1/F:content_2/G:0_0/H:13=8@1=3|L-H%/I:9=5/J:31+21-3
-ah^dh-er+m=ow@1_1/A:1_0_2/B:0-0-1@3-1&4-10#2-7$1-4!1-1;0-1|er/C:1+1+3/D:in_1/E:det+3@2+7&1+4#0+1/F:content_2/G:0_0/H:13=8@1=3|L-H%/I:9=5/J:31+21-3
-dh^er-m+ow=m@1_3/A:0_0_1/B:1-1-3@1-2&5-9#2-6$1-3!2-2;0-4|ow/C:0+0+3/D:det_3/E:content+2@3+6&1+3#0+2/F:in_1/G:0_0/H:13=8@1=3|L-H%/I:9=5/J:31+21-3
-er^m-ow+m=ax@2_2/A:0_0_1/B:1-1-3@1-2&5-9#2-6$1-3!2-2;0-4|ow/C:0+0+3/D:det_3/E:content+2@3+6&1+3#0+2/F:in_1/G:0_0/H:13=8@1=3|L-H%/I:9=5/J:31+21-3
-m^ow-m+ax=n@3_1/A:0_0_1/B:1-1-3@1-2&5-9#2-6$1-3!2-2;0-4|ow/C:0+0+3/D:det_3/E:content+2@3+6&1+3#0+2/F:in_1/G:0_0/H:13=8@1=3|L-H%/I:9=5/J:31+21-3
-ow^m-ax+n=t@1_3/A:1_1_3/B:0-0-3@2-1&6-8#3-6$2-3!1-1;1-3|ax/C:1+0+3/D:det_3/E:content+2@3+6&1+3#0+2/F:in_1/G:0_0/H:13=8@1=3|L-H%/I:9=5/J:31+21-3
-m^ax-n+t=d@2_2/A:1_1_3/B:0-0-3@2-1&6-8#3-6$2-3!1-1;1-3|ax/C:1+0+3/D:det_3/E:content+2@3+6&1+3#0+2/F:in_1/G:0_0/H:13=8@1=3|L-H%/I:9=5/J:31+21-3
-ax^n-t+d=aw@3_1/A:1_1_3/B:0-0-3@2-1&6-8#3-6$2-3!1-1;1-3|ax/C:1+0+3/D:det_3/E:content+2@3+6&1+3#0+2/F:in_1/G:0_0/H:13=8@1=3|L-H%/I:9=5/J:31+21-3
-n^t-d+aw=n@1_3/A:0_0_3/B:1-0-3@1-1&7-7#3-5$2-3!2-1;2-2|aw/C:1+0+4/D:content_2/E:in+1@4+5&2+3#1+1/F:content_1/G:0_0/H:13=8@1=3|L-H%/I:9=5/J:31+21-3
-t^d-aw+n=w@2_2/A:0_0_3/B:1-0-3@1-1&7-7#3-5$2-3!2-1;2-2|aw/C:1+0+4/D:content_2/E:in+1@4+5&2+3#1+1/F:content_1/G:0_0/H:13=8@1=3|L-H%/I:9=5/J:31+21-3
-d^aw-n+w=eh@3_1/A:0_0_3/B:1-0-3@1-1&7-7#3-5$2-3!2-1;2-2|aw/C:1+0+4/D:content_2/E:in+1@4+5&2+3#1+1/F:content_1/G:0_0/H:13=8@1=3|L-H%/I:9=5/J:31+21-3
-aw^n-w+eh=n@1_4/A:1_0_3/B:1-0-4@1-1&8-6#4-4$2-3!1-1;3-1|eh/C:1+1+2/D:in_1/E:content+1@5+4&2+2#2+1/F:content_2/G:0_0/H:13=8@1=3|L-H%/I:9=5/J:31+21-3
-n^w-eh+n=t@2_3/A:1_0_3/B:1-0-4@1-1&8-6#4-4$2-3!1-1;3-1|eh/C:1+1+2/D:in_1/E:content+1@5+4&2+2#2+1/F:content_2/G:0_0/H:13=8@1=3|L-H%/I:9=5/J:31+21-3
-w^eh-n+t=ae@3_2/A:1_0_3/B:1-0-4@1-1&8-6#4-4$2-3!1-1;3-1|eh/C:1+1+2/D:in_1/E:content+1@5+4&2+2#2+1/F:content_2/G:0_0/H:13=8@1=3|L-H%/I:9=5/J:31+21-3
-eh^n-t+ae=l@4_1/A:1_0_3/B:1-0-4@1-1&8-6#4-4$2-3!1-1;3-1|eh/C:1+1+2/D:in_1/E:content+1@5+4&2+2#2+1/F:content_2/G:0_0/H:13=8@1=3|L-H%/I:9=5/J:31+21-3
-n^t-ae+l=ax@1_2/A:1_0_4/B:1-1-2@1-2&9-5#5-3$2-2!1-2;4-4|ae/C:0+0+2/D:content_1/E:content+2@6+3&3+1#1+2/F:in_2/G:0_0/H:13=8@1=3|L-H%/I:9=5/J:31+21-3
-t^ae-l+ax=s@2_1/A:1_0_4/B:1-1-2@1-2&9-5#5-3$2-2!1-2;4-4|ae/C:0+0+2/D:content_1/E:content+2@6+3&3+1#1+2/F:in_2/G:0_0/H:13=8@1=3|L-H%/I:9=5/J:31+21-3
-ae^l-ax+s=ae@1_2/A:1_1_2/B:0-0-2@2-1&10-4#6-3$3-2!1-1;1-3|ax/C:1+0+2/D:content_1/E:content+2@6+3&3+1#1+2/F:in_2/G:0_0/H:13=8@1=3|L-H%/I:9=5/J:31+21-3
-l^ax-s+ae=f@2_1/A:1_1_2/B:0-0-2@2-1&10-4#6-3$3-2!1-1;1-3|ax/C:1+0+2/D:content_1/E:content+2@6+3&3+1#1+2/F:in_2/G:0_0/H:13=8@1=3|L-H%/I:9=5/J:31+21-3
-ax^s-ae+f=t@1_2/A:0_0_2/B:1-0-2@1-2&11-3#6-2$3-2!2-2;2-2|ae/C:0+0+2/D:content_2/E:in+2@7+2&4+1#1+1/F:content_1/G:0_0/H:13=8@1=3|L-H%/I:9=5/J:31+21-3
-s^ae-f+t=er@2_1/A:0_0_2/B:1-0-2@1-2&11-3#6-2$3-2!2-2;2-2|ae/C:0+0+2/D:content_2/E:in+2@7+2&4+1#1+1/F:content_1/G:0_0/H:13=8@1=3|L-H%/I:9=5/J:31+21-3
-ae^f-t+er=ih@1_2/A:1_0_2/B:0-0-2@2-1&12-2#7-2$3-2!1-1;3-1|er/C:1+1+2/D:content_2/E:in+2@7+2&4+1#1+1/F:content_1/G:0_0/H:13=8@1=3|L-H%/I:9=5/J:31+21-3
-f^t-er+ih=t@2_1/A:1_0_2/B:0-0-2@2-1&12-2#7-2$3-2!1-1;3-1|er/C:1+1+2/D:content_2/E:in+2@7+2&4+1#1+1/F:content_1/G:0_0/H:13=8@1=3|L-H%/I:9=5/J:31+21-3
-t^er-ih+t=pau@1_2/A:0_0_2/B:1-1-2@1-1&13-1#7-1$3-1!2-0;4-0|ih/C:1+1+3/D:in_2/E:content+1@8+1&4+0#2+0/F:content_2/G:0_0/H:13=8@1=3|L-H%/I:9=5/J:31+21-3
-er^ih-t+pau=n@2_1/A:0_0_2/B:1-1-2@1-1&13-1#7-1$3-1!2-0;4-0|ih/C:1+1+3/D:in_2/E:content+1@8+1&4+0#2+0/F:content_2/G:0_0/H:13=8@1=3|L-H%/I:9=5/J:31+21-3
-ih^t-pau+n=eh@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+3/D:content_1/E:x+x@x+x&x+x#x+x/F:content_2/G:13_8/H:x=x@1=3|0/I:9=5/J:31+21-3
-t^pau-n+eh=v@1_3/A:1_1_2/B:1-1-3@1-2&1-9#1-4$1-3!0-2;0-2|eh/C:0+0+1/D:content_1/E:content+2@1+5&1+2#0+1/F:content_1/G:13_8/H:9=5@2=2|NONE/I:9=8/J:31+21-3
-pau^n-eh+v=er@2_2/A:1_1_2/B:1-1-3@1-2&1-9#1-4$1-3!0-2;0-2|eh/C:0+0+1/D:content_1/E:content+2@1+5&1+2#0+1/F:content_1/G:13_8/H:9=5@2=2|NONE/I:9=8/J:31+21-3
-n^eh-v+er=w@3_1/A:1_1_2/B:1-1-3@1-2&1-9#1-4$1-3!0-2;0-2|eh/C:0+0+1/D:content_1/E:content+2@1+5&1+2#0+1/F:content_1/G:13_8/H:9=5@2=2|NONE/I:9=8/J:31+21-3
-eh^v-er+w=ah@1_1/A:1_1_3/B:0-0-1@2-1&2-8#1-4$1-3!1-1;1-1|er/C:1+1+4/D:content_1/E:content+2@1+5&1+2#0+1/F:content_1/G:13_8/H:9=5@2=2|NONE/I:9=8/J:31+21-3
-v^er-w+ah=n@1_4/A:0_0_1/B:1-1-4@1-1&3-7#1-3$1-2!2-2;2-2|ah/C:0+0+4/D:content_2/E:content+1@2+4&2+1#1+1/F:content_4/G:13_8/H:9=5@2=2|NONE/I:9=8/J:31+21-3
-er^w-ah+n=s@2_3/A:0_0_1/B:1-1-4@1-1&3-7#1-3$1-2!2-2;2-2|ah/C:0+0+4/D:content_2/E:content+1@2+4&2+1#1+1/F:content_4/G:13_8/H:9=5@2=2|NONE/I:9=8/J:31+21-3
-w^ah-n+s=k@3_2/A:0_0_1/B:1-1-4@1-1&3-7#1-3$1-2!2-2;2-2|ah/C:0+0+4/D:content_2/E:content+1@2+4&2+1#1+1/F:content_4/G:13_8/H:9=5@2=2|NONE/I:9=8/J:31+21-3
-ah^n-s+k=ax@4_1/A:0_0_1/B:1-1-4@1-1&3-7#1-3$1-2!2-2;2-2|ah/C:0+0+4/D:content_2/E:content+1@2+4&2+1#1+1/F:content_4/G:13_8/H:9=5@2=2|NONE/I:9=8/J:31+21-3
-n^s-k+ax=n@1_4/A:1_1_4/B:0-0-4@1-4&4-6#2-3$2-2!1-1;1-1|ax/C:1+1+2/D:content_1/E:content+4@3+3&3+0#1+0/F:wp_1/G:13_8/H:9=5@2=2|NONE/I:9=8/J:31+21-3
-s^k-ax+n=s@2_3/A:1_1_4/B:0-0-4@1-4&4-6#2-3$2-2!1-1;1-1|ax/C:1+1+2/D:content_1/E:content+4@3+3&3+0#1+0/F:wp_1/G:13_8/H:9=5@2=2|NONE/I:9=8/J:31+21-3
-k^ax-n+s=ih@3_2/A:1_1_4/B:0-0-4@1-4&4-6#2-3$2-2!1-1;1-1|ax/C:1+1+2/D:content_1/E:content+4@3+3&3+0#1+0/F:wp_1/G:13_8/H:9=5@2=2|NONE/I:9=8/J:31+21-3
-ax^n-s+ih=d@4_1/A:1_1_4/B:0-0-4@1-4&4-6#2-3$2-2!1-1;1-1|ax/C:1+1+2/D:content_1/E:content+4@3+3&3+0#1+0/F:wp_1/G:13_8/H:9=5@2=2|NONE/I:9=8/J:31+21-3
-n^s-ih+d=er@1_2/A:0_0_4/B:1-1-2@2-3&5-5#2-2$2-1!2-3;2-0|ih/C:0+0+1/D:content_1/E:content+4@3+3&3+0#1+0/F:wp_1/G:13_8/H:9=5@2=2|NONE/I:9=8/J:31+21-3
-s^ih-d+er=ih@2_1/A:0_0_4/B:1-1-2@2-3&5-5#2-2$2-1!2-3;2-0|ih/C:0+0+1/D:content_1/E:content+4@3+3&3+0#1+0/F:wp_1/G:13_8/H:9=5@2=2|NONE/I:9=8/J:31+21-3
-ih^d-er+ih=ng@1_1/A:1_1_2/B:0-0-1@3-2&6-4#3-2$3-1!1-2;1-0|er/C:0+0+2/D:content_1/E:content+4@3+3&3+0#1+0/F:wp_1/G:13_8/H:9=5@2=2|NONE/I:9=8/J:31+21-3
-d^er-ih+ng=hh@1_2/A:0_0_1/B:0-0-2@4-1&7-3#3-2$3-1!2-1;2-0|ih/C:1+0+2/D:content_1/E:content+4@3+3&3+0#1+0/F:wp_1/G:13_8/H:9=5@2=2|NONE/I:9=8/J:31+21-3
-er^ih-ng+hh=aw@2_1/A:0_0_1/B:0-0-2@4-1&7-3#3-2$3-1!2-1;2-0|ih/C:1+0+2/D:content_1/E:content+4@3+3&3+0#1+0/F:wp_1/G:13_8/H:9=5@2=2|NONE/I:9=8/J:31+21-3
-ih^ng-hh+aw=ih@1_2/A:0_0_2/B:1-0-2@1-1&8-2#3-1$3-1!3-0;3-0|aw/C:0+0+2/D:content_4/E:wp+1@4+2&4+0#1+0/F:in_1/G:13_8/H:9=5@2=2|NONE/I:9=8/J:31+21-3
-ng^hh-aw+ih=n@2_1/A:0_0_2/B:1-0-2@1-1&8-2#3-1$3-1!3-0;3-0|aw/C:0+0+2/D:content_4/E:wp+1@4+2&4+0#1+0/F:in_1/G:13_8/H:9=5@2=2|NONE/I:9=8/J:31+21-3
-hh^aw-ih+n=pau@1_2/A:1_0_2/B:0-0-2@1-1&9-1#4-1$3-1!1-0;4-0|ih/C:0+0+2/D:wp_1/E:in+1@5+1&4+0#2+0/F:det_1/G:13_8/H:9=5@2=2|NONE/I:9=8/J:31+21-3
-aw^ih-n+pau=dh@2_1/A:1_0_2/B:0-0-2@1-1&9-1#4-1$3-1!1-0;4-0|ih/C:0+0+2/D:wp_1/E:in+1@5+1&4+0#2+0/F:det_1/G:13_8/H:9=5@2=2|NONE/I:9=8/J:31+21-3
-ih^n-pau+dh=ax@x_x/A:0_0_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+2/D:in_1/E:x+x@x+x&x+x#x+x/F:det_1/G:9_5/H:x=x@1=3|0/I:9=8/J:31+21-3
-n^pau-dh+ax=w@1_2/A:0_0_2/B:0-0-2@1-1&1-9#1-7$1-4!0-1;0-1|ax/C:1+1+4/D:in_1/E:det+1@1+8&1+5#0+1/F:content_1/G:9_5/H:9=8@3=1|L-L%/I:0=0/J:31+21-3
-pau^dh-ax+w=er@2_1/A:0_0_2/B:0-0-2@1-1&1-9#1-7$1-4!0-1;0-1|ax/C:1+1+4/D:in_1/E:det+1@1+8&1+5#0+1/F:content_1/G:9_5/H:9=8@3=1|L-L%/I:0=0/J:31+21-3
-dh^ax-w+er=l@1_4/A:0_0_2/B:1-1-4@1-1&2-8#1-6$1-3!0-1;0-5|er/C:1+0+2/D:det_1/E:content+1@2+7&1+4#0+1/F:content_1/G:9_5/H:9=8@3=1|L-L%/I:0=0/J:31+21-3
-ax^w-er+l=d@2_3/A:0_0_2/B:1-1-4@1-1&2-8#1-6$1-3!0-1;0-5|er/C:1+0+2/D:det_1/E:content+1@2+7&1+4#0+1/F:content_1/G:9_5/H:9=8@3=1|L-L%/I:0=0/J:31+21-3
-w^er-l+d=sh@3_2/A:0_0_2/B:1-1-4@1-1&2-8#1-6$1-3!0-1;0-5|er/C:1+0+2/D:det_1/E:content+1@2+7&1+4#0+1/F:content_1/G:9_5/H:9=8@3=1|L-L%/I:0=0/J:31+21-3
-er^l-d+sh=iy@4_1/A:0_0_2/B:1-1-4@1-1&2-8#1-6$1-3!0-1;0-5|er/C:1+0+2/D:det_1/E:content+1@2+7&1+4#0+1/F:content_1/G:9_5/H:9=8@3=1|L-L%/I:0=0/J:31+21-3
-l^d-sh+iy=w@1_2/A:1_1_4/B:1-0-2@1-1&3-7#2-5$2-3!1-1;1-4|iy/C:1+0+3/D:content_1/E:content+1@3+6&2+3#1+3/F:aux_1/G:9_5/H:9=8@3=1|L-L%/I:0=0/J:31+21-3
-d^sh-iy+w=aa@2_1/A:1_1_4/B:1-0-2@1-1&3-7#2-5$2-3!1-1;1-4|iy/C:1+0+3/D:content_1/E:content+1@3+6&2+3#1+3/F:aux_1/G:9_5/H:9=8@3=1|L-L%/I:0=0/J:31+21-3
-sh^iy-w+aa=z@1_3/A:1_0_2/B:1-0-3@1-1&4-6#3-4$2-3!1-2;2-3|aa/C:0+0+2/D:content_1/E:aux+1@4+5&3+3#1+2/F:to_1/G:9_5/H:9=8@3=1|L-L%/I:0=0/J:31+21-3
-iy^w-aa+z=t@2_2/A:1_0_2/B:1-0-3@1-1&4-6#3-4$2-3!1-2;2-3|aa/C:0+0+2/D:content_1/E:aux+1@4+5&3+3#1+2/F:to_1/G:9_5/H:9=8@3=1|L-L%/I:0=0/J:31+21-3
-w^aa-z+t=ax@3_1/A:1_0_2/B:1-0-3@1-1&4-6#3-4$2-3!1-2;2-3|aa/C:0+0+2/D:content_1/E:aux+1@4+5&3+3#1+2/F:to_1/G:9_5/H:9=8@3=1|L-L%/I:0=0/J:31+21-3
-aa^z-t+ax=g@1_2/A:1_0_3/B:0-0-2@1-1&5-5#4-4$2-3!1-1;3-2|ax/C:1+0+3/D:aux_1/E:to+1@5+4&3+3#2+1/F:content_1/G:9_5/H:9=8@3=1|L-L%/I:0=0/J:31+21-3
-z^t-ax+g=eh@2_1/A:1_0_3/B:0-0-2@1-1&5-5#4-4$2-3!1-1;3-2|ax/C:1+0+3/D:aux_1/E:to+1@5+4&3+3#2+1/F:content_1/G:9_5/H:9=8@3=1|L-L%/I:0=0/J:31+21-3
-t^ax-g+eh=t@1_3/A:0_0_2/B:1-0-3@1-1&6-4#4-3$2-3!2-1;4-1|eh/C:1+1+2/D:to_1/E:content+1@6+3&3+2#3+1/F:content_1/G:9_5/H:9=8@3=1|L-L%/I:0=0/J:31+21-3
-ax^g-eh+t=aw@2_2/A:0_0_2/B:1-0-3@1-1&6-4#4-3$2-3!2-1;4-1|eh/C:1+1+2/D:to_1/E:content+1@6+3&3+2#3+1/F:content_1/G:9_5/H:9=8@3=1|L-L%/I:0=0/J:31+21-3
-g^eh-t+aw=t@3_1/A:0_0_2/B:1-0-3@1-1&6-4#4-3$2-3!2-1;4-1|eh/C:1+1+2/D:to_1/E:content+1@6+3&3+2#3+1/F:content_1/G:9_5/H:9=8@3=1|L-L%/I:0=0/J:31+21-3
-eh^t-aw+t=ax@1_2/A:1_0_3/B:1-1-2@1-1&7-3#5-2$2-2!1-2;5-2|aw/C:0+0+2/D:content_1/E:content+1@7+2&4+1#1+1/F:content_2/G:9_5/H:9=8@3=1|L-L%/I:0=0/J:31+21-3
-t^aw-t+ax=g@2_1/A:1_0_3/B:1-1-2@1-1&7-3#5-2$2-2!1-2;5-2|aw/C:0+0+2/D:content_1/E:content+1@7+2&4+1#1+1/F:content_2/G:9_5/H:9=8@3=1|L-L%/I:0=0/J:31+21-3
-aw^t-ax+g=eh@1_2/A:1_1_2/B:0-0-2@1-2&8-2#6-2$3-2!1-1;1-1|ax/C:1+1+2/D:content_1/E:content+2@8+1&5+0#1+0/F:0_0/G:9_5/H:9=8@3=1|L-L%/I:0=0/J:31+21-3
-t^ax-g+eh=n@2_1/A:1_1_2/B:0-0-2@1-2&8-2#6-2$3-2!1-1;1-1|ax/C:1+1+2/D:content_1/E:content+2@8+1&5+0#1+0/F:0_0/G:9_5/H:9=8@3=1|L-L%/I:0=0/J:31+21-3
-ax^g-eh+n=pau@1_2/A:0_0_2/B:1-1-2@2-1&9-1#6-1$3-1!2-0;2-0|eh/C:0+0+0/D:content_1/E:content+2@8+1&5+0#1+0/F:0_0/G:9_5/H:9=8@3=1|L-L%/I:0=0/J:31+21-3
-g^eh-n+pau=x@2_1/A:0_0_2/B:1-1-2@2-1&9-1#6-1$3-1!2-0;2-0|eh/C:0+0+0/D:content_1/E:content+2@8+1&5+0#1+0/F:0_0/G:9_5/H:9=8@3=1|L-L%/I:0=0/J:31+21-3
-eh^n-pau+x=x@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:content_2/E:x+x@x+x&x+x#x+x/F:0_0/G:9_8/H:x=x@1=3|0/I:0=0/J:31+21-3
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice05.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice05.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice05.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice05.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,163 +0,0 @@
-x^x-pau+dh=ax@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+2/D:0_0/E:x+x@x+x&x+x#x+x/F:det_1/G:0_0/H:x=x@1=6|0/I:11=9/J:59+44-6
-x^pau-dh+ax=r@1_2/A:0_0_0/B:0-0-2@1-1&1-11#1-8$1-4!0-1;0-1|ax/C:1+1+3/D:0_0/E:det+1@1+9&1+6#0+1/F:content_2/G:0_0/H:11=9@1=6|L-L%/I:3=3/J:59+44-6
-pau^dh-ax+r=ae@2_1/A:0_0_0/B:0-0-2@1-1&1-11#1-8$1-4!0-1;0-1|ax/C:1+1+3/D:0_0/E:det+1@1+9&1+6#0+1/F:content_2/G:0_0/H:11=9@1=6|L-L%/I:3=3/J:59+44-6
-dh^ax-r+ae=b@1_3/A:0_0_2/B:1-1-3@1-2&2-10#1-7$1-3!0-2;0-6|ae/C:0+0+2/D:det_1/E:content+2@2+8&1+5#0+1/F:content_1/G:0_0/H:11=9@1=6|L-L%/I:3=3/J:59+44-6
-ax^r-ae+b=ax@2_2/A:0_0_2/B:1-1-3@1-2&2-10#1-7$1-3!0-2;0-6|ae/C:0+0+2/D:det_1/E:content+2@2+8&1+5#0+1/F:content_1/G:0_0/H:11=9@1=6|L-L%/I:3=3/J:59+44-6
-r^ae-b+ax=t@3_1/A:0_0_2/B:1-1-3@1-2&2-10#1-7$1-3!0-2;0-6|ae/C:0+0+2/D:det_1/E:content+2@2+8&1+5#0+1/F:content_1/G:0_0/H:11=9@1=6|L-L%/I:3=3/J:59+44-6
-ae^b-ax+t=hh@1_2/A:1_1_3/B:0-0-2@2-1&3-9#2-7$2-3!1-1;1-5|ax/C:1+0+3/D:det_1/E:content+2@2+8&1+5#0+1/F:content_1/G:0_0/H:11=9@1=6|L-L%/I:3=3/J:59+44-6
-b^ax-t+hh=ow@2_1/A:1_1_3/B:0-0-2@2-1&3-9#2-7$2-3!1-1;1-5|ax/C:1+0+3/D:det_1/E:content+2@2+8&1+5#0+1/F:content_1/G:0_0/H:11=9@1=6|L-L%/I:3=3/J:59+44-6
-ax^t-hh+ow=l@1_3/A:0_0_2/B:1-0-3@1-1&4-8#2-6$2-3!2-1;2-4|ow/C:1+0+4/D:content_2/E:content+1@3+7&2+4#1+1/F:content_1/G:0_0/H:11=9@1=6|L-L%/I:3=3/J:59+44-6
-t^hh-ow+l=w@2_2/A:0_0_2/B:1-0-3@1-1&4-8#2-6$2-3!2-1;2-4|ow/C:1+0+4/D:content_2/E:content+1@3+7&2+4#1+1/F:content_1/G:0_0/H:11=9@1=6|L-L%/I:3=3/J:59+44-6
-hh^ow-l+w=eh@3_1/A:0_0_2/B:1-0-3@1-1&4-8#2-6$2-3!2-1;2-4|ow/C:1+0+4/D:content_2/E:content+1@3+7&2+4#1+1/F:content_1/G:0_0/H:11=9@1=6|L-L%/I:3=3/J:59+44-6
-ow^l-w+eh=n@1_4/A:1_0_3/B:1-0-4@1-1&5-7#3-5$2-3!1-1;3-3|eh/C:1+0+5/D:content_1/E:content+1@4+6&3+3#1+1/F:content_1/G:0_0/H:11=9@1=6|L-L%/I:3=3/J:59+44-6
-l^w-eh+n=t@2_3/A:1_0_3/B:1-0-4@1-1&5-7#3-5$2-3!1-1;3-3|eh/C:1+0+5/D:content_1/E:content+1@4+6&3+3#1+1/F:content_1/G:0_0/H:11=9@1=6|L-L%/I:3=3/J:59+44-6
-w^eh-n+t=s@3_2/A:1_0_3/B:1-0-4@1-1&5-7#3-5$2-3!1-1;3-3|eh/C:1+0+5/D:content_1/E:content+1@4+6&3+3#1+1/F:content_1/G:0_0/H:11=9@1=6|L-L%/I:3=3/J:59+44-6
-eh^n-t+s=t@4_1/A:1_0_3/B:1-0-4@1-1&5-7#3-5$2-3!1-1;3-3|eh/C:1+0+5/D:content_1/E:content+1@4+6&3+3#1+1/F:content_1/G:0_0/H:11=9@1=6|L-L%/I:3=3/J:59+44-6
-n^t-s+t=r@1_5/A:1_0_4/B:1-0-5@1-1&6-6#4-4$2-3!1-1;4-2|ey/C:1+0+2/D:content_1/E:content+1@5+5&4+2#1+2/F:in_1/G:0_0/H:11=9@1=6|L-L%/I:3=3/J:59+44-6
-t^s-t+r=ey@2_4/A:1_0_4/B:1-0-5@1-1&6-6#4-4$2-3!1-1;4-2|ey/C:1+0+2/D:content_1/E:content+1@5+5&4+2#1+2/F:in_1/G:0_0/H:11=9@1=6|L-L%/I:3=3/J:59+44-6
-s^t-r+ey=t@3_3/A:1_0_4/B:1-0-5@1-1&6-6#4-4$2-3!1-1;4-2|ey/C:1+0+2/D:content_1/E:content+1@5+5&4+2#1+2/F:in_1/G:0_0/H:11=9@1=6|L-L%/I:3=3/J:59+44-6
-t^r-ey+t=aa@4_2/A:1_0_4/B:1-0-5@1-1&6-6#4-4$2-3!1-1;4-2|ey/C:1+0+2/D:content_1/E:content+1@5+5&4+2#1+2/F:in_1/G:0_0/H:11=9@1=6|L-L%/I:3=3/J:59+44-6
-r^ey-t+aa=n@5_1/A:1_0_4/B:1-0-5@1-1&6-6#4-4$2-3!1-1;4-2|ey/C:1+0+2/D:content_1/E:content+1@5+5&4+2#1+2/F:in_1/G:0_0/H:11=9@1=6|L-L%/I:3=3/J:59+44-6
-ey^t-aa+n=l@1_2/A:1_0_5/B:1-0-2@1-1&7-5#5-3$2-3!1-1;5-1|aa/C:1+1+3/D:content_1/E:in+1@6+4&5+2#1+1/F:content_1/G:0_0/H:11=9@1=6|L-L%/I:3=3/J:59+44-6
-t^aa-n+l=ay@2_1/A:1_0_5/B:1-0-2@1-1&7-5#5-3$2-3!1-1;5-1|aa/C:1+1+3/D:content_1/E:in+1@6+4&5+2#1+1/F:content_1/G:0_0/H:11=9@1=6|L-L%/I:3=3/J:59+44-6
-aa^n-l+ay=k@1_3/A:1_0_2/B:1-1-3@1-1&8-4#6-2$2-2!1-2;6-3|ay/C:0+0+1/D:in_1/E:content+1@7+3&5+1#2+2/F:det_1/G:0_0/H:11=9@1=6|L-L%/I:3=3/J:59+44-6
-n^l-ay+k=ax@2_2/A:1_0_2/B:1-1-3@1-1&8-4#6-2$2-2!1-2;6-3|ay/C:0+0+1/D:in_1/E:content+1@7+3&5+1#2+2/F:det_1/G:0_0/H:11=9@1=6|L-L%/I:3=3/J:59+44-6
-l^ay-k+ax=t@3_1/A:1_0_2/B:1-1-3@1-1&8-4#6-2$2-2!1-2;6-3|ay/C:0+0+1/D:in_1/E:content+1@7+3&5+1#2+2/F:det_1/G:0_0/H:11=9@1=6|L-L%/I:3=3/J:59+44-6
-ay^k-ax+t=ah@1_1/A:1_1_3/B:0-0-1@1-1&9-3#7-2$3-2!1-1;1-2|ax/C:1+0+3/D:content_1/E:det+1@8+2&6+1#1+1/F:content_2/G:0_0/H:11=9@1=6|L-L%/I:3=3/J:59+44-6
-k^ax-t+ah=n@1_3/A:0_0_1/B:1-0-3@1-2&10-2#7-1$3-2!2-0;2-1|ah/C:0+1+2/D:det_1/E:content+2@9+1&6+0#2+0/F:in_1/G:0_0/H:11=9@1=6|L-L%/I:3=3/J:59+44-6
-ax^t-ah+n=ax@2_2/A:0_0_1/B:1-0-3@1-2&10-2#7-1$3-2!2-0;2-1|ah/C:0+1+2/D:det_1/E:content+2@9+1&6+0#2+0/F:in_1/G:0_0/H:11=9@1=6|L-L%/I:3=3/J:59+44-6
-t^ah-n+ax=l@3_1/A:0_0_1/B:1-0-3@1-2&10-2#7-1$3-2!2-0;2-1|ah/C:0+1+2/D:det_1/E:content+2@9+1&6+0#2+0/F:in_1/G:0_0/H:11=9@1=6|L-L%/I:3=3/J:59+44-6
-ah^n-ax+l=pau@1_2/A:1_0_3/B:0-1-2@2-1&11-1#8-1$3-1!1-0;3-0|ax/C:1+0+3/D:det_1/E:content+2@9+1&6+0#2+0/F:in_1/G:0_0/H:11=9@1=6|L-L%/I:3=3/J:59+44-6
-n^ax-l+pau=f@2_1/A:1_0_3/B:0-1-2@2-1&11-1#8-1$3-1!1-0;3-0|ax/C:1+0+3/D:det_1/E:content+2@9+1&6+0#2+0/F:in_1/G:0_0/H:11=9@1=6|L-L%/I:3=3/J:59+44-6
-ax^l-pau+f=ao@x_x/A:0_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_2/E:x+x@x+x&x+x#x+x/F:in_1/G:11_9/H:x=x@1=6|0/I:3=3/J:59+44-6
-l^pau-f+ao=r@1_3/A:0_1_2/B:1-0-3@1-1&1-3#1-3$1-2!0-1;0-2|ao/C:1+0+3/D:content_2/E:in+1@1+3&1+1#0+2/F:det_1/G:11_9/H:3=3@2=5|L-L%/I:7=5/J:59+44-6
-pau^f-ao+r=s@2_2/A:0_1_2/B:1-0-3@1-1&1-3#1-3$1-2!0-1;0-2|ao/C:1+0+3/D:content_2/E:in+1@1+3&1+1#0+2/F:det_1/G:11_9/H:3=3@2=5|L-L%/I:7=5/J:59+44-6
-f^ao-r+s=ah@3_1/A:0_1_2/B:1-0-3@1-1&1-3#1-3$1-2!0-1;0-2|ao/C:1+0+3/D:content_2/E:in+1@1+3&1+1#0+2/F:det_1/G:11_9/H:3=3@2=5|L-L%/I:7=5/J:59+44-6
-ao^r-s+ah=m@1_3/A:1_0_3/B:1-0-3@1-1&2-2#1-2$1-2!1-1;0-1|ah/C:1+1+2/D:in_1/E:det+1@2+2&1+1#0+1/F:content_1/G:11_9/H:3=3@2=5|L-L%/I:7=5/J:59+44-6
-r^s-ah+m=w@2_2/A:1_0_3/B:1-0-3@1-1&2-2#1-2$1-2!1-1;0-1|ah/C:1+1+2/D:in_1/E:det+1@2+2&1+1#0+1/F:content_1/G:11_9/H:3=3@2=5|L-L%/I:7=5/J:59+44-6
-s^ah-m+w=ey@3_1/A:1_0_3/B:1-0-3@1-1&2-2#1-2$1-2!1-1;0-1|ah/C:1+1+2/D:in_1/E:det+1@2+2&1+1#0+1/F:content_1/G:11_9/H:3=3@2=5|L-L%/I:7=5/J:59+44-6
-ah^m-w+ey=pau@1_2/A:1_0_3/B:1-1-2@1-1&3-1#2-1$1-1!1-0;0-0|ey/C:1+0+3/D:det_1/E:content+1@3+1&1+0#0+0/F:cc_1/G:11_9/H:3=3@2=5|L-L%/I:7=5/J:59+44-6
-m^w-ey+pau=ae@2_1/A:1_0_3/B:1-1-2@1-1&3-1#2-1$1-1!1-0;0-0|ey/C:1+0+3/D:det_1/E:content+1@3+1&1+0#0+0/F:cc_1/G:11_9/H:3=3@2=5|L-L%/I:7=5/J:59+44-6
-w^ey-pau+ae=n@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:cc_1/G:3_3/H:x=x@1=6|0/I:7=5/J:59+44-6
-ey^pau-ae+n=d@1_3/A:1_1_2/B:1-0-3@1-1&1-7#1-5$1-3!0-1;0-1|ae/C:1+1+3/D:content_1/E:cc+1@1+5&1+3#0+1/F:content_1/G:3_3/H:7=5@3=4|NONE/I:12=8/J:59+44-6
-pau^ae-n+d=dh@2_2/A:1_1_2/B:1-0-3@1-1&1-7#1-5$1-3!0-1;0-1|ae/C:1+1+3/D:content_1/E:cc+1@1+5&1+3#0+1/F:content_1/G:3_3/H:7=5@3=4|NONE/I:12=8/J:59+44-6
-ae^n-d+dh=eh@3_1/A:1_1_2/B:1-0-3@1-1&1-7#1-5$1-3!0-1;0-1|ae/C:1+1+3/D:content_1/E:cc+1@1+5&1+3#0+1/F:content_1/G:3_3/H:7=5@3=4|NONE/I:12=8/J:59+44-6
-n^d-dh+eh=n@1_3/A:1_0_3/B:1-1-3@1-1&2-6#1-4$1-2!1-1;0-2|eh/C:1+0+4/D:cc_1/E:content+1@2+4&1+2#0+1/F:content_1/G:3_3/H:7=5@3=4|NONE/I:12=8/J:59+44-6
-d^dh-eh+n=d@2_2/A:1_0_3/B:1-1-3@1-1&2-6#1-4$1-2!1-1;0-2|eh/C:1+0+4/D:cc_1/E:content+1@2+4&1+2#0+1/F:content_1/G:3_3/H:7=5@3=4|NONE/I:12=8/J:59+44-6
-dh^eh-n+d=ih@3_1/A:1_0_3/B:1-1-3@1-1&2-6#1-4$1-2!1-1;0-2|eh/C:1+0+4/D:cc_1/E:content+1@2+4&1+2#0+1/F:content_1/G:3_3/H:7=5@3=4|NONE/I:12=8/J:59+44-6
-eh^n-d+ih=p@1_4/A:1_1_3/B:1-0-4@1-1&3-5#2-3$2-2!1-1;1-1|ih/C:1+1+3/D:content_1/E:content+1@3+3&2+1#1+1/F:content_3/G:3_3/H:7=5@3=4|NONE/I:12=8/J:59+44-6
-n^d-ih+p=t@2_3/A:1_1_3/B:1-0-4@1-1&3-5#2-3$2-2!1-1;1-1|ih/C:1+1+3/D:content_1/E:content+1@3+3&2+1#1+1/F:content_3/G:3_3/H:7=5@3=4|NONE/I:12=8/J:59+44-6
-d^ih-p+t=s@3_2/A:1_1_3/B:1-0-4@1-1&3-5#2-3$2-2!1-1;1-1|ih/C:1+1+3/D:content_1/E:content+1@3+3&2+1#1+1/F:content_3/G:3_3/H:7=5@3=4|NONE/I:12=8/J:59+44-6
-ih^p-t+s=ah@4_1/A:1_1_3/B:1-0-4@1-1&3-5#2-3$2-2!1-1;1-1|ih/C:1+1+3/D:content_1/E:content+1@3+3&2+1#1+1/F:content_3/G:3_3/H:7=5@3=4|NONE/I:12=8/J:59+44-6
-p^t-s+ah=d@1_3/A:1_0_4/B:1-1-3@1-3&4-4#3-2$2-1!1-3;2-0|ah/C:0+0+2/D:content_1/E:content+3@4+2&3+0#1+0/F:in_1/G:3_3/H:7=5@3=4|NONE/I:12=8/J:59+44-6
-t^s-ah+d=ax@2_2/A:1_0_4/B:1-1-3@1-3&4-4#3-2$2-1!1-3;2-0|ah/C:0+0+2/D:content_1/E:content+3@4+2&3+0#1+0/F:in_1/G:3_3/H:7=5@3=4|NONE/I:12=8/J:59+44-6
-s^ah-d+ax=n@3_1/A:1_0_4/B:1-1-3@1-3&4-4#3-2$2-1!1-3;2-0|ah/C:0+0+2/D:content_1/E:content+3@4+2&3+0#1+0/F:in_1/G:3_3/H:7=5@3=4|NONE/I:12=8/J:59+44-6
-ah^d-ax+n=l@1_2/A:1_1_3/B:0-0-2@2-2&5-3#4-2$3-1!1-2;1-0|ax/C:0+0+2/D:content_1/E:content+3@4+2&3+0#1+0/F:in_1/G:3_3/H:7=5@3=4|NONE/I:12=8/J:59+44-6
-d^ax-n+l=iy@2_1/A:1_1_3/B:0-0-2@2-2&5-3#4-2$3-1!1-2;1-0|ax/C:0+0+2/D:content_1/E:content+3@4+2&3+0#1+0/F:in_1/G:3_3/H:7=5@3=4|NONE/I:12=8/J:59+44-6
-ax^n-l+iy=d@1_2/A:0_0_2/B:0-0-2@3-1&6-2#4-2$3-1!2-1;2-0|iy/C:1+0+3/D:content_1/E:content+3@4+2&3+0#1+0/F:in_1/G:3_3/H:7=5@3=4|NONE/I:12=8/J:59+44-6
-n^l-iy+d=aw@2_1/A:0_0_2/B:0-0-2@3-1&6-2#4-2$3-1!2-1;2-0|iy/C:1+0+3/D:content_1/E:content+3@4+2&3+0#1+0/F:in_1/G:3_3/H:7=5@3=4|NONE/I:12=8/J:59+44-6
-l^iy-d+aw=n@1_3/A:0_0_2/B:1-0-3@1-1&7-1#4-1$3-1!3-0;3-0|aw/C:1+0+2/D:content_3/E:in+1@5+1&4+0#1+0/F:content_1/G:3_3/H:7=5@3=4|NONE/I:12=8/J:59+44-6
-iy^d-aw+n=pau@2_2/A:0_0_2/B:1-0-3@1-1&7-1#4-1$3-1!3-0;3-0|aw/C:1+0+2/D:content_3/E:in+1@5+1&4+0#1+0/F:content_1/G:3_3/H:7=5@3=4|NONE/I:12=8/J:59+44-6
-d^aw-n+pau=s@3_1/A:0_0_2/B:1-0-3@1-1&7-1#4-1$3-1!3-0;3-0|aw/C:1+0+2/D:content_3/E:in+1@5+1&4+0#1+0/F:content_1/G:3_3/H:7=5@3=4|NONE/I:12=8/J:59+44-6
-aw^n-pau+s=ow@x_x/A:1_0_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:in_1/E:x+x@x+x&x+x#x+x/F:content_1/G:7_5/H:x=x@1=6|0/I:12=8/J:59+44-6
-n^pau-s+ow=s@1_2/A:1_0_3/B:1-0-2@1-1&1-12#1-7$1-5!0-1;0-1|ow/C:1+1+3/D:in_1/E:content+1@1+8&1+4#0+1/F:content_3/G:7_5/H:12=8@4=3|L-L%/I:8=5/J:59+44-6
-pau^s-ow+s=ah@2_1/A:1_0_3/B:1-0-2@1-1&1-12#1-7$1-5!0-1;0-1|ow/C:1+1+3/D:in_1/E:content+1@1+8&1+4#0+1/F:content_3/G:7_5/H:12=8@4=3|L-L%/I:8=5/J:59+44-6
-s^ow-s+ah=d@1_3/A:1_0_2/B:1-1-3@1-3&2-11#1-6$1-4!1-3;0-4|ah/C:0+0+2/D:content_1/E:content+3@2+7&2+3#1+2/F:in_1/G:7_5/H:12=8@4=3|L-L%/I:8=5/J:59+44-6
-ow^s-ah+d=ax@2_2/A:1_0_2/B:1-1-3@1-3&2-11#1-6$1-4!1-3;0-4|ah/C:0+0+2/D:content_1/E:content+3@2+7&2+3#1+2/F:in_1/G:7_5/H:12=8@4=3|L-L%/I:8=5/J:59+44-6
-s^ah-d+ax=n@3_1/A:1_0_2/B:1-1-3@1-3&2-11#1-6$1-4!1-3;0-4|ah/C:0+0+2/D:content_1/E:content+3@2+7&2+3#1+2/F:in_1/G:7_5/H:12=8@4=3|L-L%/I:8=5/J:59+44-6
-ah^d-ax+n=l@1_2/A:1_1_3/B:0-0-2@2-2&3-10#2-6$2-4!1-2;1-3|ax/C:0+0+2/D:content_1/E:content+3@2+7&2+3#1+2/F:in_1/G:7_5/H:12=8@4=3|L-L%/I:8=5/J:59+44-6
-d^ax-n+l=iy@2_1/A:1_1_3/B:0-0-2@2-2&3-10#2-6$2-4!1-2;1-3|ax/C:0+0+2/D:content_1/E:content+3@2+7&2+3#1+2/F:in_1/G:7_5/H:12=8@4=3|L-L%/I:8=5/J:59+44-6
-ax^n-l+iy=dh@1_2/A:0_0_2/B:0-0-2@3-1&4-9#2-6$2-4!2-1;2-2|iy/C:1+0+3/D:content_1/E:content+3@2+7&2+3#1+2/F:in_1/G:7_5/H:12=8@4=3|L-L%/I:8=5/J:59+44-6
-n^l-iy+dh=ae@2_1/A:0_0_2/B:0-0-2@3-1&4-9#2-6$2-4!2-1;2-2|iy/C:1+0+3/D:content_1/E:content+3@2+7&2+3#1+2/F:in_1/G:7_5/H:12=8@4=3|L-L%/I:8=5/J:59+44-6
-l^iy-dh+ae=t@1_3/A:0_0_2/B:1-0-3@1-1&5-8#2-5$2-4!3-1;3-1|ae/C:1+1+2/D:content_3/E:in+1@3+6&3+3#1+1/F:content_2/G:7_5/H:12=8@4=3|L-L%/I:8=5/J:59+44-6
-iy^dh-ae+t=ae@2_2/A:0_0_2/B:1-0-3@1-1&5-8#2-5$2-4!3-1;3-1|ae/C:1+1+2/D:content_3/E:in+1@3+6&3+3#1+1/F:content_2/G:7_5/H:12=8@4=3|L-L%/I:8=5/J:59+44-6
-dh^ae-t+ae=l@3_1/A:0_0_2/B:1-0-3@1-1&5-8#2-5$2-4!3-1;3-1|ae/C:1+1+2/D:content_3/E:in+1@3+6&3+3#1+1/F:content_2/G:7_5/H:12=8@4=3|L-L%/I:8=5/J:59+44-6
-ae^t-ae+l=ax@1_2/A:1_0_3/B:1-1-2@1-2&6-7#3-4$2-3!1-2;4-3|ae/C:0+0+2/D:in_1/E:content+2@4+5&3+2#2+2/F:aux_1/G:7_5/H:12=8@4=3|L-L%/I:8=5/J:59+44-6
-t^ae-l+ax=s@2_1/A:1_0_3/B:1-1-2@1-2&6-7#3-4$2-3!1-2;4-3|ae/C:0+0+2/D:in_1/E:content+2@4+5&3+2#2+2/F:aux_1/G:7_5/H:12=8@4=3|L-L%/I:8=5/J:59+44-6
-ae^l-ax+s=hh@1_2/A:1_1_2/B:0-0-2@2-1&7-6#4-4$3-3!1-1;1-2|ax/C:1+0+3/D:in_1/E:content+2@4+5&3+2#2+2/F:aux_1/G:7_5/H:12=8@4=3|L-L%/I:8=5/J:59+44-6
-l^ax-s+hh=ae@2_1/A:1_1_2/B:0-0-2@2-1&7-6#4-4$3-3!1-1;1-2|ax/C:1+0+3/D:in_1/E:content+2@4+5&3+2#2+2/F:aux_1/G:7_5/H:12=8@4=3|L-L%/I:8=5/J:59+44-6
-ax^s-hh+ae=d@1_3/A:0_0_2/B:1-0-3@1-1&8-5#4-3$3-3!2-1;2-1|ae/C:1+1+3/D:content_2/E:aux+1@5+4&4+2#1+1/F:content_1/G:7_5/H:12=8@4=3|L-L%/I:8=5/J:59+44-6
-s^hh-ae+d=n@2_2/A:0_0_2/B:1-0-3@1-1&8-5#4-3$3-3!2-1;2-1|ae/C:1+1+3/D:content_2/E:aux+1@5+4&4+2#1+1/F:content_1/G:7_5/H:12=8@4=3|L-L%/I:8=5/J:59+44-6
-hh^ae-d+n=aa@3_1/A:0_0_2/B:1-0-3@1-1&8-5#4-3$3-3!2-1;2-1|ae/C:1+1+3/D:content_2/E:aux+1@5+4&4+2#1+1/F:content_1/G:7_5/H:12=8@4=3|L-L%/I:8=5/J:59+44-6
-ae^d-n+aa=t@1_3/A:1_0_3/B:1-1-3@1-1&9-4#5-2$3-2!1-2;3-3|aa/C:0+0+1/D:aux_1/E:content+1@6+3&4+1#2+2/F:det_1/G:7_5/H:12=8@4=3|L-L%/I:8=5/J:59+44-6
-d^n-aa+t=ax@2_2/A:1_0_3/B:1-1-3@1-1&9-4#5-2$3-2!1-2;3-3|aa/C:0+0+1/D:aux_1/E:content+1@6+3&4+1#2+2/F:det_1/G:7_5/H:12=8@4=3|L-L%/I:8=5/J:59+44-6
-n^aa-t+ax=m@3_1/A:1_0_3/B:1-1-3@1-1&9-4#5-2$3-2!1-2;3-3|aa/C:0+0+1/D:aux_1/E:content+1@6+3&4+1#2+2/F:det_1/G:7_5/H:12=8@4=3|L-L%/I:8=5/J:59+44-6
-aa^t-ax+m=ow@1_1/A:1_1_3/B:0-0-1@1-1&10-3#6-2$4-2!1-1;1-2|ax/C:1+0+3/D:content_1/E:det+1@7+2&5+1#1+1/F:content_2/G:7_5/H:12=8@4=3|L-L%/I:8=5/J:59+44-6
-t^ax-m+ow=m@1_3/A:0_0_1/B:1-0-3@1-2&11-2#6-1$4-2!2-0;2-1|ow/C:0+1+3/D:det_1/E:content+2@8+1&5+0#2+0/F:to_1/G:7_5/H:12=8@4=3|L-L%/I:8=5/J:59+44-6
-ax^m-ow+m=ax@2_2/A:0_0_1/B:1-0-3@1-2&11-2#6-1$4-2!2-0;2-1|ow/C:0+1+3/D:det_1/E:content+2@8+1&5+0#2+0/F:to_1/G:7_5/H:12=8@4=3|L-L%/I:8=5/J:59+44-6
-m^ow-m+ax=n@3_1/A:0_0_1/B:1-0-3@1-2&11-2#6-1$4-2!2-0;2-1|ow/C:0+1+3/D:det_1/E:content+2@8+1&5+0#2+0/F:to_1/G:7_5/H:12=8@4=3|L-L%/I:8=5/J:59+44-6
-ow^m-ax+n=t@1_3/A:1_0_3/B:0-1-3@2-1&12-1#7-1$4-1!1-0;3-0|ax/C:0+0+2/D:det_1/E:content+2@8+1&5+0#2+0/F:to_1/G:7_5/H:12=8@4=3|L-L%/I:8=5/J:59+44-6
-m^ax-n+t=pau@2_2/A:1_0_3/B:0-1-3@2-1&12-1#7-1$4-1!1-0;3-0|ax/C:0+0+2/D:det_1/E:content+2@8+1&5+0#2+0/F:to_1/G:7_5/H:12=8@4=3|L-L%/I:8=5/J:59+44-6
-ax^n-t+pau=t@3_1/A:1_0_3/B:0-1-3@2-1&12-1#7-1$4-1!1-0;3-0|ax/C:0+0+2/D:det_1/E:content+2@8+1&5+0#2+0/F:to_1/G:7_5/H:12=8@4=3|L-L%/I:8=5/J:59+44-6
-n^t-pau+t=ax@x_x/A:0_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+2/D:content_2/E:x+x@x+x&x+x#x+x/F:to_1/G:12_8/H:x=x@1=6|0/I:8=5/J:59+44-6
-t^pau-t+ax=th@1_2/A:0_1_3/B:0-0-2@1-1&1-8#1-5$1-4!0-1;0-1|ax/C:1+1+4/D:content_2/E:to+1@1+5&1+3#0+1/F:content_1/G:12_8/H:8=5@5=2|L-L%/I:18=14/J:59+44-6
-pau^t-ax+th=ih@2_1/A:0_1_3/B:0-0-2@1-1&1-8#1-5$1-4!0-1;0-1|ax/C:1+1+4/D:content_2/E:to+1@1+5&1+3#0+1/F:content_1/G:12_8/H:8=5@5=2|L-L%/I:18=14/J:59+44-6
-t^ax-th+ih=ng@1_4/A:0_0_2/B:1-1-4@1-1&2-7#1-4$1-3!0-2;0-3|ih/C:0+0+2/D:to_1/E:content+1@2+4&1+2#0+2/F:in_2/G:12_8/H:8=5@5=2|L-L%/I:18=14/J:59+44-6
-ax^th-ih+ng=k@2_3/A:0_0_2/B:1-1-4@1-1&2-7#1-4$1-3!0-2;0-3|ih/C:0+0+2/D:to_1/E:content+1@2+4&1+2#0+2/F:in_2/G:12_8/H:8=5@5=2|L-L%/I:18=14/J:59+44-6
-th^ih-ng+k=ax@3_2/A:0_0_2/B:1-1-4@1-1&2-7#1-4$1-3!0-2;0-3|ih/C:0+0+2/D:to_1/E:content+1@2+4&1+2#0+2/F:in_2/G:12_8/H:8=5@5=2|L-L%/I:18=14/J:59+44-6
-ih^ng-k+ax=b@4_1/A:0_0_2/B:1-1-4@1-1&2-7#1-4$1-3!0-2;0-3|ih/C:0+0+2/D:to_1/E:content+1@2+4&1+2#0+2/F:in_2/G:12_8/H:8=5@5=2|L-L%/I:18=14/J:59+44-6
-ng^k-ax+b=aw@1_2/A:1_1_4/B:0-0-2@1-2&3-6#2-4$2-3!1-1;1-2|ax/C:1+0+2/D:content_1/E:in+2@3+3&2+2#1+1/F:content_2/G:12_8/H:8=5@5=2|L-L%/I:18=14/J:59+44-6
-k^ax-b+aw=t@2_1/A:1_1_4/B:0-0-2@1-2&3-6#2-4$2-3!1-1;1-2|ax/C:1+0+2/D:content_1/E:in+2@3+3&2+2#1+1/F:content_2/G:12_8/H:8=5@5=2|L-L%/I:18=14/J:59+44-6
-ax^b-aw+t=s@1_2/A:0_0_2/B:1-0-2@2-1&4-5#2-3$2-3!2-1;2-1|aw/C:1+1+4/D:content_1/E:in+2@3+3&2+2#1+1/F:content_2/G:12_8/H:8=5@5=2|L-L%/I:18=14/J:59+44-6
-b^aw-t+s=t@2_1/A:0_0_2/B:1-0-2@2-1&4-5#2-3$2-3!2-1;2-1|aw/C:1+1+4/D:content_1/E:in+2@3+3&2+2#1+1/F:content_2/G:12_8/H:8=5@5=2|L-L%/I:18=14/J:59+44-6
-aw^t-s+t=aa@1_4/A:1_0_2/B:1-1-4@1-2&5-4#3-2$2-2!1-3;3-3|aa/C:0+0+2/D:in_2/E:content+2@4+2&2+1#2+1/F:content_2/G:12_8/H:8=5@5=2|L-L%/I:18=14/J:59+44-6
-t^s-t+aa=p@2_3/A:1_0_2/B:1-1-4@1-2&5-4#3-2$2-2!1-3;3-3|aa/C:0+0+2/D:in_2/E:content+2@4+2&2+1#2+1/F:content_2/G:12_8/H:8=5@5=2|L-L%/I:18=14/J:59+44-6
-s^t-aa+p=ih@3_2/A:1_0_2/B:1-1-4@1-2&5-4#3-2$2-2!1-3;3-3|aa/C:0+0+2/D:in_2/E:content+2@4+2&2+1#2+1/F:content_2/G:12_8/H:8=5@5=2|L-L%/I:18=14/J:59+44-6
-t^aa-p+ih=ng@4_1/A:1_0_2/B:1-1-4@1-2&5-4#3-2$2-2!1-3;3-3|aa/C:0+0+2/D:in_2/E:content+2@4+2&2+1#2+1/F:content_2/G:12_8/H:8=5@5=2|L-L%/I:18=14/J:59+44-6
-aa^p-ih+ng=hh@1_2/A:1_1_4/B:0-0-2@2-1&6-3#4-2$3-2!1-2;1-2|ih/C:0+0+3/D:in_2/E:content+2@4+2&2+1#2+1/F:content_2/G:12_8/H:8=5@5=2|L-L%/I:18=14/J:59+44-6
-p^ih-ng+hh=er@2_1/A:1_1_4/B:0-0-2@2-1&6-3#4-2$3-2!1-2;1-2|ih/C:0+0+3/D:in_2/E:content+2@4+2&2+1#2+1/F:content_2/G:12_8/H:8=5@5=2|L-L%/I:18=14/J:59+44-6
-ih^ng-hh+er=s@1_3/A:0_0_2/B:0-0-3@1-2&7-2#4-2$3-2!2-1;2-1|er/C:1+1+3/D:content_2/E:content+2@5+1&3+0#1+0/F:in_2/G:12_8/H:8=5@5=2|L-L%/I:18=14/J:59+44-6
-ng^hh-er+s=eh@2_2/A:0_0_2/B:0-0-3@1-2&7-2#4-2$3-2!2-1;2-1|er/C:1+1+3/D:content_2/E:content+2@5+1&3+0#1+0/F:in_2/G:12_8/H:8=5@5=2|L-L%/I:18=14/J:59+44-6
-hh^er-s+eh=l@3_1/A:0_0_2/B:0-0-3@1-2&7-2#4-2$3-2!2-1;2-1|er/C:1+1+3/D:content_2/E:content+2@5+1&3+0#1+0/F:in_2/G:12_8/H:8=5@5=2|L-L%/I:18=14/J:59+44-6
-er^s-eh+l=f@1_3/A:0_0_3/B:1-1-3@2-1&8-1#4-1$3-1!3-0;3-0|eh/C:0+0+2/D:content_2/E:content+2@5+1&3+0#1+0/F:in_2/G:12_8/H:8=5@5=2|L-L%/I:18=14/J:59+44-6
-s^eh-l+f=pau@2_2/A:0_0_3/B:1-1-3@2-1&8-1#4-1$3-1!3-0;3-0|eh/C:0+0+2/D:content_2/E:content+2@5+1&3+0#1+0/F:in_2/G:12_8/H:8=5@5=2|L-L%/I:18=14/J:59+44-6
-eh^l-f+pau=b@3_1/A:0_0_3/B:1-1-3@2-1&8-1#4-1$3-1!3-0;3-0|eh/C:0+0+2/D:content_2/E:content+2@5+1&3+0#1+0/F:in_2/G:12_8/H:8=5@5=2|L-L%/I:18=14/J:59+44-6
-l^f-pau+b=iy@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+2/D:content_2/E:x+x@x+x&x+x#x+x/F:in_2/G:8_5/H:x=x@1=6|0/I:18=14/J:59+44-6
-f^pau-b+iy=f@1_2/A:1_1_3/B:0-0-2@1-2&1-18#1-13$1-4!0-1;0-3|iy/C:1+0+3/D:content_2/E:in+2@1+14&1+8#0+1/F:content_1/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-pau^b-iy+f=ao@2_1/A:1_1_3/B:0-0-2@1-2&1-18#1-13$1-4!0-1;0-3|iy/C:1+0+3/D:content_2/E:in+2@1+14&1+8#0+1/F:content_1/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-b^iy-f+ao=r@1_3/A:0_0_2/B:1-0-3@2-1&2-17#1-12$1-4!0-1;0-2|ao/C:1+0+2/D:content_2/E:in+2@1+14&1+8#0+1/F:content_1/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-iy^f-ao+r=sh@2_2/A:0_0_2/B:1-0-3@2-1&2-17#1-12$1-4!0-1;0-2|ao/C:1+0+2/D:content_2/E:in+2@1+14&1+8#0+1/F:content_1/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-f^ao-r+sh=iy@3_1/A:0_0_2/B:1-0-3@2-1&2-17#1-12$1-4!0-1;0-2|ao/C:1+0+2/D:content_2/E:in+2@1+14&1+8#0+1/F:content_1/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-ao^r-sh+iy=f@1_2/A:1_0_3/B:1-0-2@1-1&3-16#2-11$1-4!1-1;0-1|iy/C:1+1+4/D:in_2/E:content+1@2+13&1+7#0+1/F:content_1/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-r^sh-iy+f=aw@2_1/A:1_0_3/B:1-0-2@1-1&3-16#2-11$1-4!1-1;0-1|iy/C:1+1+4/D:in_2/E:content+1@2+13&1+7#0+1/F:content_1/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-sh^iy-f+aw=n@1_4/A:1_0_2/B:1-1-4@1-1&4-15#3-10$1-3!1-2;0-11|aw/C:0+0+3/D:content_1/E:content+1@3+12&2+6#1+1/F:content_2/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-iy^f-aw+n=d@2_3/A:1_0_2/B:1-1-4@1-1&4-15#3-10$1-3!1-2;0-11|aw/C:0+0+3/D:content_1/E:content+1@3+12&2+6#1+1/F:content_2/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-f^aw-n+d=hh@3_2/A:1_0_2/B:1-1-4@1-1&4-15#3-10$1-3!1-2;0-11|aw/C:0+0+3/D:content_1/E:content+1@3+12&2+6#1+1/F:content_2/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-aw^n-d+hh=er@4_1/A:1_0_2/B:1-1-4@1-1&4-15#3-10$1-3!1-2;0-11|aw/C:0+0+3/D:content_1/E:content+1@3+12&2+6#1+1/F:content_2/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-n^d-hh+er=s@1_3/A:1_1_4/B:0-0-3@1-2&5-14#4-10$2-3!1-1;1-10|er/C:1+0+3/D:content_1/E:content+2@4+11&3+5#1+1/F:content_2/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-d^hh-er+s=eh@2_2/A:1_1_4/B:0-0-3@1-2&5-14#4-10$2-3!1-1;1-10|er/C:1+0+3/D:content_1/E:content+2@4+11&3+5#1+1/F:content_2/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-hh^er-s+eh=l@3_1/A:1_1_4/B:0-0-3@1-2&5-14#4-10$2-3!1-1;1-10|er/C:1+0+3/D:content_1/E:content+2@4+11&3+5#1+1/F:content_2/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-er^s-eh+l=f@1_3/A:0_0_3/B:1-0-3@2-1&6-13#4-9$2-3!2-1;2-9|eh/C:1+0+3/D:content_1/E:content+2@4+11&3+5#1+1/F:content_2/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-s^eh-l+f=f@2_2/A:0_0_3/B:1-0-3@2-1&6-13#4-9$2-3!2-1;2-9|eh/C:1+0+3/D:content_1/E:content+2@4+11&3+5#1+1/F:content_2/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-eh^l-f+f=ao@3_1/A:0_0_3/B:1-0-3@2-1&6-13#4-9$2-3!2-1;2-9|eh/C:1+0+3/D:content_1/E:content+2@4+11&3+5#1+1/F:content_2/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-l^f-f+ao=l@1_3/A:1_0_3/B:1-0-3@1-2&7-12#5-8$2-3!1-2;3-8|ao/C:0+0+2/D:content_2/E:content+2@5+10&4+4#1+3/F:in_1/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-f^f-ao+l=ih@2_2/A:1_0_3/B:1-0-3@1-2&7-12#5-8$2-3!1-2;3-8|ao/C:0+0+2/D:content_2/E:content+2@5+10&4+4#1+3/F:in_1/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-f^ao-l+ih=ng@3_1/A:1_0_3/B:1-0-3@1-2&7-12#5-8$2-3!1-2;3-8|ao/C:0+0+2/D:content_2/E:content+2@5+10&4+4#1+3/F:in_1/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-ao^l-ih+ng=d@1_2/A:1_0_3/B:0-0-2@2-1&8-11#6-8$2-3!1-1;4-7|ih/C:1+0+3/D:content_2/E:content+2@5+10&4+4#1+3/F:in_1/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-l^ih-ng+d=aw@2_1/A:1_0_3/B:0-0-2@2-1&8-11#6-8$2-3!1-1;4-7|ih/C:1+0+3/D:content_2/E:content+2@5+10&4+4#1+3/F:in_1/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-ih^ng-d+aw=n@1_3/A:0_0_2/B:1-0-3@1-1&9-10#6-7$2-3!2-1;5-6|aw/C:1+0+3/D:content_2/E:in+1@6+9&5+4#1+2/F:wp_1/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-ng^d-aw+n=w@2_2/A:0_0_2/B:1-0-3@1-1&9-10#6-7$2-3!2-1;5-6|aw/C:1+0+3/D:content_2/E:in+1@6+9&5+4#1+2/F:wp_1/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-d^aw-n+w=ah@3_1/A:0_0_2/B:1-0-3@1-1&9-10#6-7$2-3!2-1;5-6|aw/C:1+0+3/D:content_2/E:in+1@6+9&5+4#1+2/F:wp_1/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-aw^n-w+ah=t@1_3/A:1_0_3/B:1-0-3@1-1&10-9#7-6$2-3!1-1;6-5|ah/C:1+0+4/D:in_1/E:wp+1@7+8&5+4#2+1/F:content_1/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-n^w-ah+t=s@2_2/A:1_0_3/B:1-0-3@1-1&10-9#7-6$2-3!1-1;6-5|ah/C:1+0+4/D:in_1/E:wp+1@7+8&5+4#2+1/F:content_1/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-w^ah-t+s=iy@3_1/A:1_0_3/B:1-0-3@1-1&10-9#7-6$2-3!1-1;6-5|ah/C:1+0+4/D:in_1/E:wp+1@7+8&5+4#2+1/F:content_1/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-ah^t-s+iy=m@1_4/A:1_0_3/B:1-0-4@1-1&11-8#8-5$2-3!1-2;7-4|iy/C:0+0+2/D:wp_1/E:content+1@8+7&5+3#3+4/F:to_1/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-t^s-iy+m=d@2_3/A:1_0_3/B:1-0-4@1-1&11-8#8-5$2-3!1-2;7-4|iy/C:0+0+2/D:wp_1/E:content+1@8+7&5+3#3+4/F:to_1/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-s^iy-m+d=t@3_2/A:1_0_3/B:1-0-4@1-1&11-8#8-5$2-3!1-2;7-4|iy/C:0+0+2/D:wp_1/E:content+1@8+7&5+3#3+4/F:to_1/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-iy^m-d+t=ax@4_1/A:1_0_3/B:1-0-4@1-1&11-8#8-5$2-3!1-2;7-4|iy/C:0+0+2/D:wp_1/E:content+1@8+7&5+3#3+4/F:to_1/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-m^d-t+ax=b@1_2/A:1_0_4/B:0-0-2@1-1&12-7#9-5$2-3!1-1;8-3|ax/C:1+0+2/D:content_1/E:to+1@9+6&6+3#1+3/F:aux_1/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-d^t-ax+b=iy@2_1/A:1_0_4/B:0-0-2@1-1&12-7#9-5$2-3!1-1;8-3|ax/C:1+0+2/D:content_1/E:to+1@9+6&6+3#1+3/F:aux_1/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-t^ax-b+iy=ax@1_2/A:0_0_2/B:1-0-2@1-1&13-6#9-4$2-3!2-2;9-2|iy/C:0+0+1/D:to_1/E:aux+1@10+5&6+3#2+2/F:det_1/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-ax^b-iy+ax=v@2_1/A:0_0_2/B:1-0-2@1-1&13-6#9-4$2-3!2-2;9-2|iy/C:0+0+1/D:to_1/E:aux+1@10+5&6+3#2+2/F:det_1/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-b^iy-ax+v=eh@1_1/A:1_0_2/B:0-0-1@1-1&14-5#10-4$2-3!1-1;10-1|ax/C:1+1+3/D:aux_1/E:det+1@11+4&6+3#3+1/F:content_2/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-iy^ax-v+eh=r@1_3/A:0_0_1/B:1-1-3@1-2&15-4#10-3$2-2!2-2;11-3|eh/C:0+0+1/D:det_1/E:content+2@12+3&6+2#4+1/F:content_1/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-ax^v-eh+r=iy@2_2/A:0_0_1/B:1-1-3@1-2&15-4#10-3$2-2!2-2;11-3|eh/C:0+0+1/D:det_1/E:content+2@12+3&6+2#4+1/F:content_1/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-v^eh-r+iy=d@3_1/A:0_0_1/B:1-1-3@1-2&15-4#10-3$2-2!2-2;11-3|eh/C:0+0+1/D:det_1/E:content+2@12+3&6+2#4+1/F:content_1/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-eh^r-iy+d=iy@1_1/A:1_1_3/B:0-0-1@2-1&16-3#11-3$3-2!1-1;1-2|iy/C:1+0+3/D:det_1/E:content+2@12+3&6+2#4+1/F:content_1/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-r^iy-d+iy=p@1_3/A:0_0_1/B:1-0-3@1-1&17-2#11-2$3-2!2-1;2-1|iy/C:1+1+3/D:content_2/E:content+1@13+2&7+1#1+1/F:content_1/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-iy^d-iy+p=w@2_2/A:0_0_1/B:1-0-3@1-1&17-2#11-2$3-2!2-1;2-1|iy/C:1+1+3/D:content_2/E:content+1@13+2&7+1#1+1/F:content_1/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-d^iy-p+w=eh@3_1/A:0_0_1/B:1-0-3@1-1&17-2#11-2$3-2!2-1;2-1|iy/C:1+1+3/D:content_2/E:content+1@13+2&7+1#1+1/F:content_1/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-iy^p-w+eh=l@1_3/A:1_0_3/B:1-1-3@1-1&18-1#12-1$3-1!1-0;3-0|eh/C:0+0+0/D:content_1/E:content+1@14+1&8+0#1+0/F:0_0/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-p^w-eh+l=pau@2_2/A:1_0_3/B:1-1-3@1-1&18-1#12-1$3-1!1-0;3-0|eh/C:0+0+0/D:content_1/E:content+1@14+1&8+0#1+0/F:0_0/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-w^eh-l+pau=x@3_1/A:1_0_3/B:1-1-3@1-1&18-1#12-1$3-1!1-0;3-0|eh/C:0+0+0/D:content_1/E:content+1@14+1&8+0#1+0/F:0_0/G:8_5/H:18=14@6=1|L-L%/I:0=0/J:59+44-6
-eh^l-pau+x=x@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:content_1/E:x+x@x+x&x+x#x+x/F:0_0/G:18_14/H:x=x@1=6|0/I:0=0/J:59+44-6
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice06.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice06.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice06.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice06.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,114 +0,0 @@
-x^x-pau+iy=dh@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+2/D:0_0/E:x+x@x+x&x+x#x+x/F:content_2/G:0_0/H:x=x@1=6|0/I:8=6/J:43+34-6
-x^pau-iy+dh=er@1_2/A:0_0_0/B:1-1-2@1-2&1-8#1-5$1-4!0-3;0-3|iy/C:0+0+1/D:0_0/E:content+2@1+6&1+3#0+2/F:det_1/G:0_0/H:8=6@1=6|L-H%/I:7=5/J:43+34-6
-pau^iy-dh+er=dh@2_1/A:0_0_0/B:1-1-2@1-2&1-8#1-5$1-4!0-3;0-3|iy/C:0+0+1/D:0_0/E:content+2@1+6&1+3#0+2/F:det_1/G:0_0/H:8=6@1=6|L-H%/I:7=5/J:43+34-6
-iy^dh-er+dh=ax@1_1/A:1_1_2/B:0-0-1@2-1&2-7#1-5$1-4!1-2;1-2|er/C:0+0+2/D:0_0/E:content+2@1+6&1+3#0+2/F:det_1/G:0_0/H:8=6@1=6|L-H%/I:7=5/J:43+34-6
-dh^er-dh+ax=w@1_2/A:0_0_1/B:0-0-2@1-1&3-6#1-5$1-4!2-1;2-1|ax/C:1+1+3/D:content_2/E:det+1@2+5&2+3#1+1/F:content_1/G:0_0/H:8=6@1=6|L-H%/I:7=5/J:43+34-6
-er^dh-ax+w=eh@2_1/A:0_0_1/B:0-0-2@1-1&3-6#1-5$1-4!2-1;2-1|ax/C:1+1+3/D:content_2/E:det+1@2+5&2+3#1+1/F:content_1/G:0_0/H:8=6@1=6|L-H%/I:7=5/J:43+34-6
-dh^ax-w+eh=l@1_3/A:0_0_2/B:1-1-3@1-1&4-5#1-4$1-3!3-1;3-2|eh/C:1+0+3/D:det_1/E:content+1@3+4&2+2#2+2/F:aux_1/G:0_0/H:8=6@1=6|L-H%/I:7=5/J:43+34-6
-ax^w-eh+l=w@2_2/A:0_0_2/B:1-1-3@1-1&4-5#1-4$1-3!3-1;3-2|eh/C:1+0+3/D:det_1/E:content+1@3+4&2+2#2+2/F:aux_1/G:0_0/H:8=6@1=6|L-H%/I:7=5/J:43+34-6
-w^eh-l+w=aa@3_1/A:0_0_2/B:1-1-3@1-1&4-5#1-4$1-3!3-1;3-2|eh/C:1+0+3/D:det_1/E:content+1@3+4&2+2#2+2/F:aux_1/G:0_0/H:8=6@1=6|L-H%/I:7=5/J:43+34-6
-eh^l-w+aa=z@1_3/A:1_1_3/B:1-0-3@1-1&5-4#2-3$2-3!1-1;1-1|aa/C:1+1+3/D:content_1/E:aux+1@4+3&3+2#1+1/F:content_2/G:0_0/H:8=6@1=6|L-H%/I:7=5/J:43+34-6
-l^w-aa+z=v@2_2/A:1_1_3/B:1-0-3@1-1&5-4#2-3$2-3!1-1;1-1|aa/C:1+1+3/D:content_1/E:aux+1@4+3&3+2#1+1/F:content_2/G:0_0/H:8=6@1=6|L-H%/I:7=5/J:43+34-6
-w^aa-z+v=eh@3_1/A:1_1_3/B:1-0-3@1-1&5-4#2-3$2-3!1-1;1-1|aa/C:1+1+3/D:content_1/E:aux+1@4+3&3+2#1+1/F:content_2/G:0_0/H:8=6@1=6|L-H%/I:7=5/J:43+34-6
-aa^z-v+eh=r@1_3/A:1_0_3/B:1-1-3@1-2&6-3#3-2$2-2!1-2;2-2|eh/C:0+0+1/D:aux_1/E:content+2@5+2&3+1#2+1/F:content_1/G:0_0/H:8=6@1=6|L-H%/I:7=5/J:43+34-6
-z^v-eh+r=iy@2_2/A:1_0_3/B:1-1-3@1-2&6-3#3-2$2-2!1-2;2-2|eh/C:0+0+1/D:aux_1/E:content+2@5+2&3+1#2+1/F:content_1/G:0_0/H:8=6@1=6|L-H%/I:7=5/J:43+34-6
-v^eh-r+iy=d@3_1/A:1_0_3/B:1-1-3@1-2&6-3#3-2$2-2!1-2;2-2|eh/C:0+0+1/D:aux_1/E:content+2@5+2&3+1#2+1/F:content_1/G:0_0/H:8=6@1=6|L-H%/I:7=5/J:43+34-6
-eh^r-iy+d=iy@1_1/A:1_1_3/B:0-0-1@2-1&7-2#4-2$3-2!1-1;1-1|iy/C:1+1+3/D:aux_1/E:content+2@5+2&3+1#2+1/F:content_1/G:0_0/H:8=6@1=6|L-H%/I:7=5/J:43+34-6
-r^iy-d+iy=p@1_3/A:0_0_1/B:1-1-3@1-1&8-1#4-1$3-1!2-0;2-0|iy/C:1+0+2/D:content_2/E:content+1@6+1&4+0#1+0/F:cc_1/G:0_0/H:8=6@1=6|L-H%/I:7=5/J:43+34-6
-iy^d-iy+p=pau@2_2/A:0_0_1/B:1-1-3@1-1&8-1#4-1$3-1!2-0;2-0|iy/C:1+0+2/D:content_2/E:content+1@6+1&4+0#1+0/F:cc_1/G:0_0/H:8=6@1=6|L-H%/I:7=5/J:43+34-6
-d^iy-p+pau=ao@3_1/A:0_0_1/B:1-1-3@1-1&8-1#4-1$3-1!2-0;2-0|iy/C:1+0+2/D:content_2/E:content+1@6+1&4+0#1+0/F:cc_1/G:0_0/H:8=6@1=6|L-H%/I:7=5/J:43+34-6
-iy^p-pau+ao=r@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:content_1/E:x+x@x+x&x+x#x+x/F:cc_1/G:8_6/H:x=x@1=6|0/I:7=5/J:43+34-6
-p^pau-ao+r=sh@1_2/A:1_1_3/B:1-0-2@1-1&1-7#1-5$1-4!0-1;0-1|ao/C:1+1+2/D:content_1/E:cc+1@1+5&1+4#0+1/F:content_1/G:8_6/H:7=5@2=5|L-L%/I:7=6/J:43+34-6
-pau^ao-r+sh=iy@2_1/A:1_1_3/B:1-0-2@1-1&1-7#1-5$1-4!0-1;0-1|ao/C:1+1+2/D:content_1/E:cc+1@1+5&1+4#0+1/F:content_1/G:8_6/H:7=5@2=5|L-L%/I:7=6/J:43+34-6
-ao^r-sh+iy=f@1_2/A:1_0_2/B:1-1-2@1-1&2-6#1-4$1-3!1-1;0-2|iy/C:1+0+3/D:cc_1/E:content+1@2+4&1+3#0+1/F:content_1/G:8_6/H:7=5@2=5|L-L%/I:7=6/J:43+34-6
-r^sh-iy+f=eh@2_1/A:1_0_2/B:1-1-2@1-1&2-6#1-4$1-3!1-1;0-2|iy/C:1+0+3/D:cc_1/E:content+1@2+4&1+3#0+1/F:content_1/G:8_6/H:7=5@2=5|L-L%/I:7=6/J:43+34-6
-sh^iy-f+eh=l@1_3/A:1_1_2/B:1-0-3@1-1&3-5#2-3$2-3!1-1;1-1|eh/C:1+1+3/D:content_1/E:content+1@3+3&2+2#1+1/F:content_2/G:8_6/H:7=5@2=5|L-L%/I:7=6/J:43+34-6
-iy^f-eh+l=v@2_2/A:1_1_2/B:1-0-3@1-1&3-5#2-3$2-3!1-1;1-1|eh/C:1+1+3/D:content_1/E:content+1@3+3&2+2#1+1/F:content_2/G:8_6/H:7=5@2=5|L-L%/I:7=6/J:43+34-6
-f^eh-l+v=eh@3_1/A:1_1_2/B:1-0-3@1-1&3-5#2-3$2-3!1-1;1-1|eh/C:1+1+3/D:content_1/E:content+1@3+3&2+2#1+1/F:content_2/G:8_6/H:7=5@2=5|L-L%/I:7=6/J:43+34-6
-eh^l-v+eh=r@1_3/A:1_0_3/B:1-1-3@1-2&4-4#3-2$2-2!1-2;2-3|eh/C:0+0+1/D:content_1/E:content+2@4+2&3+1#1+1/F:content_2/G:8_6/H:7=5@2=5|L-L%/I:7=6/J:43+34-6
-l^v-eh+r=iy@2_2/A:1_0_3/B:1-1-3@1-2&4-4#3-2$2-2!1-2;2-3|eh/C:0+0+1/D:content_1/E:content+2@4+2&3+1#1+1/F:content_2/G:8_6/H:7=5@2=5|L-L%/I:7=6/J:43+34-6
-v^eh-r+iy=s@3_1/A:1_0_3/B:1-1-3@1-2&4-4#3-2$2-2!1-2;2-3|eh/C:0+0+1/D:content_1/E:content+2@4+2&3+1#1+1/F:content_2/G:8_6/H:7=5@2=5|L-L%/I:7=6/J:43+34-6
-eh^r-iy+s=l@1_1/A:1_1_3/B:0-0-1@2-1&5-3#4-2$3-2!1-1;1-2|iy/C:1+0+4/D:content_1/E:content+2@4+2&3+1#1+1/F:content_2/G:8_6/H:7=5@2=5|L-L%/I:7=6/J:43+34-6
-r^iy-s+l=ow@1_4/A:0_0_1/B:1-0-4@1-2&6-2#4-1$3-2!2-0;2-1|ow/C:0+1+1/D:content_2/E:content+2@5+1&4+0#1+0/F:in_1/G:8_6/H:7=5@2=5|L-L%/I:7=6/J:43+34-6
-iy^s-l+ow=l@2_3/A:0_0_1/B:1-0-4@1-2&6-2#4-1$3-2!2-0;2-1|ow/C:0+1+1/D:content_2/E:content+2@5+1&4+0#1+0/F:in_1/G:8_6/H:7=5@2=5|L-L%/I:7=6/J:43+34-6
-s^l-ow+l=iy@3_2/A:0_0_1/B:1-0-4@1-2&6-2#4-1$3-2!2-0;2-1|ow/C:0+1+1/D:content_2/E:content+2@5+1&4+0#1+0/F:in_1/G:8_6/H:7=5@2=5|L-L%/I:7=6/J:43+34-6
-l^ow-l+iy=pau@4_1/A:0_0_1/B:1-0-4@1-2&6-2#4-1$3-2!2-0;2-1|ow/C:0+1+1/D:content_2/E:content+2@5+1&4+0#1+0/F:in_1/G:8_6/H:7=5@2=5|L-L%/I:7=6/J:43+34-6
-ow^l-iy+pau=f@1_1/A:1_0_4/B:0-1-1@2-1&7-1#5-1$3-1!1-0;3-0|iy/C:1+0+3/D:content_2/E:content+2@5+1&4+0#1+0/F:in_1/G:8_6/H:7=5@2=5|L-L%/I:7=6/J:43+34-6
-l^iy-pau+f=ao@x_x/A:0_1_1/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_2/E:x+x@x+x&x+x#x+x/F:in_1/G:7_5/H:x=x@1=6|0/I:7=6/J:43+34-6
-iy^pau-f+ao=r@1_3/A:0_1_1/B:1-0-3@1-1&1-7#1-6$1-4!0-1;0-1|ao/C:1+1+2/D:content_2/E:in+1@1+6&1+3#0+1/F:content_1/G:7_5/H:7=6@3=4|L-L%/I:9=8/J:43+34-6
-pau^f-ao+r=sh@2_2/A:0_1_1/B:1-0-3@1-1&1-7#1-6$1-4!0-1;0-1|ao/C:1+1+2/D:content_2/E:in+1@1+6&1+3#0+1/F:content_1/G:7_5/H:7=6@3=4|L-L%/I:9=8/J:43+34-6
-f^ao-r+sh=iy@3_1/A:0_1_1/B:1-0-3@1-1&1-7#1-6$1-4!0-1;0-1|ao/C:1+1+2/D:content_2/E:in+1@1+6&1+3#0+1/F:content_1/G:7_5/H:7=6@3=4|L-L%/I:9=8/J:43+34-6
-ao^r-sh+iy=hh@1_2/A:1_0_3/B:1-1-2@1-1&2-6#1-5$1-3!1-1;0-2|iy/C:1+0+3/D:in_1/E:content+1@2+5&1+2#0+2/F:aux_1/G:7_5/H:7=6@3=4|L-L%/I:9=8/J:43+34-6
-r^sh-iy+hh=ae@2_1/A:1_0_3/B:1-1-2@1-1&2-6#1-5$1-3!1-1;0-2|iy/C:1+0+3/D:in_1/E:content+1@2+5&1+2#0+2/F:aux_1/G:7_5/H:7=6@3=4|L-L%/I:9=8/J:43+34-6
-sh^iy-hh+ae=d@1_3/A:1_1_2/B:1-0-3@1-1&3-5#2-4$2-3!1-1;1-1|ae/C:1+1+5/D:content_1/E:aux+1@3+4&2+2#1+1/F:content_2/G:7_5/H:7=6@3=4|L-L%/I:9=8/J:43+34-6
-iy^hh-ae+d=p@2_2/A:1_1_2/B:1-0-3@1-1&3-5#2-4$2-3!1-1;1-1|ae/C:1+1+5/D:content_1/E:aux+1@3+4&2+2#1+1/F:content_2/G:7_5/H:7=6@3=4|L-L%/I:9=8/J:43+34-6
-hh^ae-d+p=l@3_1/A:1_1_2/B:1-0-3@1-1&3-5#2-4$2-3!1-1;1-1|ae/C:1+1+5/D:content_1/E:aux+1@3+4&2+2#1+1/F:content_2/G:7_5/H:7=6@3=4|L-L%/I:9=8/J:43+34-6
-ae^d-p+l=eh@1_5/A:1_0_3/B:1-1-5@1-2&4-4#3-3$2-2!1-2;2-3|eh/C:0+0+1/D:aux_1/E:content+2@4+3&2+1#2+2/F:in_1/G:7_5/H:7=6@3=4|L-L%/I:9=8/J:43+34-6
-d^p-l+eh=n@2_4/A:1_0_3/B:1-1-5@1-2&4-4#3-3$2-2!1-2;2-3|eh/C:0+0+1/D:aux_1/E:content+2@4+3&2+1#2+2/F:in_1/G:7_5/H:7=6@3=4|L-L%/I:9=8/J:43+34-6
-p^l-eh+n=t@3_3/A:1_0_3/B:1-1-5@1-2&4-4#3-3$2-2!1-2;2-3|eh/C:0+0+1/D:aux_1/E:content+2@4+3&2+1#2+2/F:in_1/G:7_5/H:7=6@3=4|L-L%/I:9=8/J:43+34-6
-l^eh-n+t=iy@4_2/A:1_0_3/B:1-1-5@1-2&4-4#3-3$2-2!1-2;2-3|eh/C:0+0+1/D:aux_1/E:content+2@4+3&2+1#2+2/F:in_1/G:7_5/H:7=6@3=4|L-L%/I:9=8/J:43+34-6
-eh^n-t+iy=ah@5_1/A:1_0_3/B:1-1-5@1-2&4-4#3-3$2-2!1-2;2-3|eh/C:0+0+1/D:aux_1/E:content+2@4+3&2+1#2+2/F:in_1/G:7_5/H:7=6@3=4|L-L%/I:9=8/J:43+34-6
-n^t-iy+ah=v@1_1/A:1_1_5/B:0-0-1@2-1&5-3#4-3$3-2!1-1;1-2|iy/C:1+0+2/D:aux_1/E:content+2@4+3&2+1#2+2/F:in_1/G:7_5/H:7=6@3=4|L-L%/I:9=8/J:43+34-6
-t^iy-ah+v=t@1_2/A:0_0_1/B:1-0-2@1-1&6-2#4-2$3-2!2-1;2-1|ah/C:1+1+3/D:content_2/E:in+1@5+2&3+1#1+1/F:content_1/G:7_5/H:7=6@3=4|L-L%/I:9=8/J:43+34-6
-iy^ah-v+t=ay@2_1/A:0_0_1/B:1-0-2@1-1&6-2#4-2$3-2!2-1;2-1|ah/C:1+1+3/D:content_2/E:in+1@5+2&3+1#1+1/F:content_1/G:7_5/H:7=6@3=4|L-L%/I:9=8/J:43+34-6
-ah^v-t+ay=m@1_3/A:1_0_2/B:1-1-3@1-1&7-1#5-1$3-1!1-0;3-0|ay/C:1+0+2/D:in_1/E:content+1@6+1&3+0#2+0/F:in_1/G:7_5/H:7=6@3=4|L-L%/I:9=8/J:43+34-6
-v^t-ay+m=pau@2_2/A:1_0_2/B:1-1-3@1-1&7-1#5-1$3-1!1-0;3-0|ay/C:1+0+2/D:in_1/E:content+1@6+1&3+0#2+0/F:in_1/G:7_5/H:7=6@3=4|L-L%/I:9=8/J:43+34-6
-t^ay-m+pau=ae@3_1/A:1_0_2/B:1-1-3@1-1&7-1#5-1$3-1!1-0;3-0|ay/C:1+0+2/D:in_1/E:content+1@6+1&3+0#2+0/F:in_1/G:7_5/H:7=6@3=4|L-L%/I:9=8/J:43+34-6
-ay^m-pau+ae=z@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:content_1/E:x+x@x+x&x+x#x+x/F:in_1/G:7_6/H:x=x@1=6|0/I:9=8/J:43+34-6
-m^pau-ae+z=sh@1_2/A:1_1_3/B:1-0-2@1-1&1-9#1-6$1-4!0-1;0-1|ae/C:1+1+2/D:content_1/E:in+1@1+8&1+3#0+1/F:content_1/G:7_6/H:9=8@4=3|L-L%/I:4=3/J:43+34-6
-pau^ae-z+sh=iy@2_1/A:1_1_3/B:1-0-2@1-1&1-9#1-6$1-4!0-1;0-1|ae/C:1+1+2/D:content_1/E:in+1@1+8&1+3#0+1/F:content_1/G:7_6/H:9=8@4=3|L-L%/I:4=3/J:43+34-6
-ae^z-sh+iy=w@1_2/A:1_0_2/B:1-1-2@1-1&2-8#1-5$1-3!1-1;0-1|iy/C:1+1+4/D:in_1/E:content+1@2+7&1+2#0+1/F:content_1/G:7_6/H:9=8@4=3|L-L%/I:4=3/J:43+34-6
-z^sh-iy+w=eh@2_1/A:1_0_2/B:1-1-2@1-1&2-8#1-5$1-3!1-1;0-1|iy/C:1+1+4/D:in_1/E:content+1@2+7&1+2#0+1/F:content_1/G:7_6/H:9=8@4=3|L-L%/I:4=3/J:43+34-6
-sh^iy-w+eh=n@1_4/A:1_1_2/B:1-1-4@1-1&3-7#2-4$2-2!1-1;1-6|eh/C:1+0+3/D:content_1/E:content+1@3+6&2+1#1+3/F:in_1/G:7_6/H:9=8@4=3|L-L%/I:4=3/J:43+34-6
-iy^w-eh+n=t@2_3/A:1_1_2/B:1-1-4@1-1&3-7#2-4$2-2!1-1;1-6|eh/C:1+0+3/D:content_1/E:content+1@3+6&2+1#1+3/F:in_1/G:7_6/H:9=8@4=3|L-L%/I:4=3/J:43+34-6
-w^eh-n+t=d@3_2/A:1_1_2/B:1-1-4@1-1&3-7#2-4$2-2!1-1;1-6|eh/C:1+0+3/D:content_1/E:content+1@3+6&2+1#1+3/F:in_1/G:7_6/H:9=8@4=3|L-L%/I:4=3/J:43+34-6
-eh^n-t+d=aw@4_1/A:1_1_2/B:1-1-4@1-1&3-7#2-4$2-2!1-1;1-6|eh/C:1+0+3/D:content_1/E:content+1@3+6&2+1#1+3/F:in_1/G:7_6/H:9=8@4=3|L-L%/I:4=3/J:43+34-6
-n^t-d+aw=n@1_3/A:1_1_4/B:1-0-3@1-1&4-6#3-3$3-2!1-2;1-5|aw/C:0+0+2/D:content_1/E:in+1@4+5&3+1#1+2/F:to_1/G:7_6/H:9=8@4=3|L-L%/I:4=3/J:43+34-6
-t^d-aw+n=t@2_2/A:1_1_4/B:1-0-3@1-1&4-6#3-3$3-2!1-2;1-5|aw/C:0+0+2/D:content_1/E:in+1@4+5&3+1#1+2/F:to_1/G:7_6/H:9=8@4=3|L-L%/I:4=3/J:43+34-6
-d^aw-n+t=ax@3_1/A:1_1_4/B:1-0-3@1-1&4-6#3-3$3-2!1-2;1-5|aw/C:0+0+2/D:content_1/E:in+1@4+5&3+1#1+2/F:to_1/G:7_6/H:9=8@4=3|L-L%/I:4=3/J:43+34-6
-aw^n-t+ax=l@1_2/A:1_0_3/B:0-0-2@1-1&5-5#4-3$3-2!1-1;2-4|ax/C:1+0+3/D:in_1/E:to+1@5+4&3+1#2+1/F:content_1/G:7_6/H:9=8@4=3|L-L%/I:4=3/J:43+34-6
-n^t-ax+l=uh@2_1/A:1_0_3/B:0-0-2@1-1&5-5#4-3$3-2!1-1;2-4|ax/C:1+0+3/D:in_1/E:to+1@5+4&3+1#2+1/F:content_1/G:7_6/H:9=8@4=3|L-L%/I:4=3/J:43+34-6
-t^ax-l+uh=k@1_3/A:0_0_2/B:1-0-3@1-1&6-4#4-2$3-2!2-2;3-3|uh/C:0+0+2/D:to_1/E:content+1@6+3&3+0#3+0/F:in_2/G:7_6/H:9=8@4=3|L-L%/I:4=3/J:43+34-6
-ax^l-uh+k=ax@2_2/A:0_0_2/B:1-0-3@1-1&6-4#4-2$3-2!2-2;3-3|uh/C:0+0+2/D:to_1/E:content+1@6+3&3+0#3+0/F:in_2/G:7_6/H:9=8@4=3|L-L%/I:4=3/J:43+34-6
-l^uh-k+ax=b@3_1/A:0_0_2/B:1-0-3@1-1&6-4#4-2$3-2!2-2;3-3|uh/C:0+0+2/D:to_1/E:content+1@6+3&3+0#3+0/F:in_2/G:7_6/H:9=8@4=3|L-L%/I:4=3/J:43+34-6
-uh^k-ax+b=aw@1_2/A:1_0_3/B:0-0-2@1-2&7-3#5-2$3-2!1-1;4-2|ax/C:1+0+2/D:content_1/E:in+2@7+2&4+0#1+0/F:pps_1/G:7_6/H:9=8@4=3|L-L%/I:4=3/J:43+34-6
-k^ax-b+aw=t@2_1/A:1_0_3/B:0-0-2@1-2&7-3#5-2$3-2!1-1;4-2|ax/C:1+0+2/D:content_1/E:in+2@7+2&4+0#1+0/F:pps_1/G:7_6/H:9=8@4=3|L-L%/I:4=3/J:43+34-6
-ax^b-aw+t=hh@1_2/A:0_0_2/B:1-0-2@2-1&8-2#5-1$3-2!2-0;5-1|aw/C:0+1+2/D:content_1/E:in+2@7+2&4+0#1+0/F:pps_1/G:7_6/H:9=8@4=3|L-L%/I:4=3/J:43+34-6
-b^aw-t+hh=er@2_1/A:0_0_2/B:1-0-2@2-1&8-2#5-1$3-2!2-0;5-1|aw/C:0+1+2/D:content_1/E:in+2@7+2&4+0#1+0/F:pps_1/G:7_6/H:9=8@4=3|L-L%/I:4=3/J:43+34-6
-aw^t-hh+er=pau@1_2/A:1_0_2/B:0-1-2@1-1&9-1#6-1$3-1!1-0;6-0|er/C:1+0+3/D:in_2/E:pps+1@8+1&4+0#2+0/F:cc_1/G:7_6/H:9=8@4=3|L-L%/I:4=3/J:43+34-6
-t^hh-er+pau=ae@2_1/A:1_0_2/B:0-1-2@1-1&9-1#6-1$3-1!1-0;6-0|er/C:1+0+3/D:in_2/E:pps+1@8+1&4+0#2+0/F:cc_1/G:7_6/H:9=8@4=3|L-L%/I:4=3/J:43+34-6
-hh^er-pau+ae=n@x_x/A:0_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:pps_1/E:x+x@x+x&x+x#x+x/F:cc_1/G:9_8/H:x=x@1=6|0/I:4=3/J:43+34-6
-er^pau-ae+n=d@1_3/A:0_1_2/B:1-0-3@1-1&1-4#1-2$1-3!0-2;0-2|ae/C:0+0+2/D:pps_1/E:cc+1@1+3&1+1#0+2/F:to_1/G:9_8/H:4=3@5=2|L-L%/I:8=6/J:43+34-6
-pau^ae-n+d=t@2_2/A:0_1_2/B:1-0-3@1-1&1-4#1-2$1-3!0-2;0-2|ae/C:0+0+2/D:pps_1/E:cc+1@1+3&1+1#0+2/F:to_1/G:9_8/H:4=3@5=2|L-L%/I:8=6/J:43+34-6
-ae^n-d+t=ax@3_1/A:0_1_2/B:1-0-3@1-1&1-4#1-2$1-3!0-2;0-2|ae/C:0+0+2/D:pps_1/E:cc+1@1+3&1+1#0+2/F:to_1/G:9_8/H:4=3@5=2|L-L%/I:8=6/J:43+34-6
-n^d-t+ax=w@1_2/A:1_0_3/B:0-0-2@1-1&2-3#1-2$1-3!1-1;0-1|ax/C:1+1+4/D:cc_1/E:to+1@2+2&1+1#0+1/F:content_2/G:9_8/H:4=3@5=2|L-L%/I:8=6/J:43+34-6
-d^t-ax+w=ah@2_1/A:1_0_3/B:0-0-2@1-1&2-3#1-2$1-3!1-1;0-1|ax/C:1+1+4/D:cc_1/E:to+1@2+2&1+1#0+1/F:content_2/G:9_8/H:4=3@5=2|L-L%/I:8=6/J:43+34-6
-t^ax-w+ah=n@1_4/A:0_0_2/B:1-1-4@1-2&3-2#1-1$1-2!2-0;0-1|ah/C:0+1+1/D:to_1/E:content+2@3+1&1+0#0+0/F:wp_1/G:9_8/H:4=3@5=2|L-L%/I:8=6/J:43+34-6
-ax^w-ah+n=d@2_3/A:0_0_2/B:1-1-4@1-2&3-2#1-1$1-2!2-0;0-1|ah/C:0+1+1/D:to_1/E:content+2@3+1&1+0#0+0/F:wp_1/G:9_8/H:4=3@5=2|L-L%/I:8=6/J:43+34-6
-w^ah-n+d=er@3_2/A:0_0_2/B:1-1-4@1-2&3-2#1-1$1-2!2-0;0-1|ah/C:0+1+1/D:to_1/E:content+2@3+1&1+0#0+0/F:wp_1/G:9_8/H:4=3@5=2|L-L%/I:8=6/J:43+34-6
-ah^n-d+er=pau@4_1/A:0_0_2/B:1-1-4@1-2&3-2#1-1$1-2!2-0;0-1|ah/C:0+1+1/D:to_1/E:content+2@3+1&1+0#0+0/F:wp_1/G:9_8/H:4=3@5=2|L-L%/I:8=6/J:43+34-6
-n^d-er+pau=w@1_1/A:1_1_4/B:0-1-1@2-1&4-1#2-1$2-1!1-0;1-0|er/C:1+0+3/D:to_1/E:content+2@3+1&1+0#0+0/F:wp_1/G:9_8/H:4=3@5=2|L-L%/I:8=6/J:43+34-6
-d^er-pau+w=ah@x_x/A:0_1_1/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_2/E:x+x@x+x&x+x#x+x/F:wp_1/G:4_3/H:x=x@1=6|0/I:8=6/J:43+34-6
-er^pau-w+ah=t@1_3/A:0_1_1/B:1-0-3@1-1&1-8#1-5$1-4!0-1;0-2|ah/C:1+0+3/D:content_2/E:wp+1@1+6&1+3#0+2/F:aux_1/G:4_3/H:8=6@6=1|L-L%/I:0=0/J:43+34-6
-pau^w-ah+t=w@2_2/A:0_1_1/B:1-0-3@1-1&1-8#1-5$1-4!0-1;0-2|ah/C:1+0+3/D:content_2/E:wp+1@1+6&1+3#0+2/F:aux_1/G:4_3/H:8=6@6=1|L-L%/I:0=0/J:43+34-6
-w^ah-t+w=aa@3_1/A:0_1_1/B:1-0-3@1-1&1-8#1-5$1-4!0-1;0-2|ah/C:1+0+3/D:content_2/E:wp+1@1+6&1+3#0+2/F:aux_1/G:4_3/H:8=6@6=1|L-L%/I:0=0/J:43+34-6
-ah^t-w+aa=z@1_3/A:1_0_3/B:1-0-3@1-1&2-7#1-4$1-4!1-1;0-1|aa/C:1+1+2/D:wp_1/E:aux+1@2+5&1+3#0+1/F:content_2/G:4_3/H:8=6@6=1|L-L%/I:0=0/J:43+34-6
-t^w-aa+z=g@2_2/A:1_0_3/B:1-0-3@1-1&2-7#1-4$1-4!1-1;0-1|aa/C:1+1+2/D:wp_1/E:aux+1@2+5&1+3#0+1/F:content_2/G:4_3/H:8=6@6=1|L-L%/I:0=0/J:43+34-6
-w^aa-z+g=ow@3_1/A:1_0_3/B:1-0-3@1-1&2-7#1-4$1-4!1-1;0-1|aa/C:1+1+2/D:wp_1/E:aux+1@2+5&1+3#0+1/F:content_2/G:4_3/H:8=6@6=1|L-L%/I:0=0/J:43+34-6
-aa^z-g+ow=ih@1_2/A:1_0_3/B:1-1-2@1-2&3-6#2-3$1-3!1-3;0-3|ow/C:0+0+2/D:aux_1/E:content+2@3+4&1+2#0+2/F:to_1/G:4_3/H:8=6@6=1|L-L%/I:0=0/J:43+34-6
-z^g-ow+ih=ng@2_1/A:1_0_3/B:1-1-2@1-2&3-6#2-3$1-3!1-3;0-3|ow/C:0+0+2/D:aux_1/E:content+2@3+4&1+2#0+2/F:to_1/G:4_3/H:8=6@6=1|L-L%/I:0=0/J:43+34-6
-g^ow-ih+ng=t@1_2/A:1_1_2/B:0-0-2@2-1&4-5#3-3$2-3!1-2;1-2|ih/C:0+0+2/D:aux_1/E:content+2@3+4&1+2#0+2/F:to_1/G:4_3/H:8=6@6=1|L-L%/I:0=0/J:43+34-6
-ow^ih-ng+t=ax@2_1/A:1_1_2/B:0-0-2@2-1&4-5#3-3$2-3!1-2;1-2|ih/C:0+0+2/D:aux_1/E:content+2@3+4&1+2#0+2/F:to_1/G:4_3/H:8=6@6=1|L-L%/I:0=0/J:43+34-6
-ih^ng-t+ax=hh@1_2/A:0_0_2/B:0-0-2@1-1&5-4#3-3$2-3!2-1;2-1|ax/C:1+1+3/D:content_2/E:to+1@4+3&2+2#1+1/F:content_2/G:4_3/H:8=6@6=1|L-L%/I:0=0/J:43+34-6
-ng^t-ax+hh=ae@2_1/A:0_0_2/B:0-0-2@1-1&5-4#3-3$2-3!2-1;2-1|ax/C:1+1+3/D:content_2/E:to+1@4+3&2+2#1+1/F:content_2/G:4_3/H:8=6@6=1|L-L%/I:0=0/J:43+34-6
-t^ax-hh+ae=p@1_3/A:0_0_2/B:1-1-3@1-2&6-3#3-2$2-2!3-2;3-2|ae/C:0+0+2/D:to_1/E:content+2@5+2&2+1#2+1/F:content_1/G:4_3/H:8=6@6=1|L-L%/I:0=0/J:43+34-6
-ax^hh-ae+p=ax@2_2/A:0_0_2/B:1-1-3@1-2&6-3#3-2$2-2!3-2;3-2|ae/C:0+0+2/D:to_1/E:content+2@5+2&2+1#2+1/F:content_1/G:4_3/H:8=6@6=1|L-L%/I:0=0/J:43+34-6
-hh^ae-p+ax=n@3_1/A:0_0_2/B:1-1-3@1-2&6-3#3-2$2-2!3-2;3-2|ae/C:0+0+2/D:to_1/E:content+2@5+2&2+1#2+1/F:content_1/G:4_3/H:8=6@6=1|L-L%/I:0=0/J:43+34-6
-ae^p-ax+n=n@1_2/A:1_1_3/B:0-0-2@2-1&7-2#4-2$3-2!1-1;1-1|ax/C:1+1+5/D:to_1/E:content+2@5+2&2+1#2+1/F:content_1/G:4_3/H:8=6@6=1|L-L%/I:0=0/J:43+34-6
-p^ax-n+n=eh@2_1/A:1_1_3/B:0-0-2@2-1&7-2#4-2$3-2!1-1;1-1|ax/C:1+1+5/D:to_1/E:content+2@5+2&2+1#2+1/F:content_1/G:4_3/H:8=6@6=1|L-L%/I:0=0/J:43+34-6
-ax^n-n+eh=k@1_5/A:0_0_2/B:1-1-5@1-1&8-1#4-1$3-1!2-0;2-0|eh/C:0+0+0/D:content_2/E:content+1@6+1&3+0#1+0/F:0_0/G:4_3/H:8=6@6=1|L-L%/I:0=0/J:43+34-6
-n^n-eh+k=s@2_4/A:0_0_2/B:1-1-5@1-1&8-1#4-1$3-1!2-0;2-0|eh/C:0+0+0/D:content_2/E:content+1@6+1&3+0#1+0/F:0_0/G:4_3/H:8=6@6=1|L-L%/I:0=0/J:43+34-6
-n^eh-k+s=t@3_3/A:0_0_2/B:1-1-5@1-1&8-1#4-1$3-1!2-0;2-0|eh/C:0+0+0/D:content_2/E:content+1@6+1&3+0#1+0/F:0_0/G:4_3/H:8=6@6=1|L-L%/I:0=0/J:43+34-6
-eh^k-s+t=pau@4_2/A:0_0_2/B:1-1-5@1-1&8-1#4-1$3-1!2-0;2-0|eh/C:0+0+0/D:content_2/E:content+1@6+1&3+0#1+0/F:0_0/G:4_3/H:8=6@6=1|L-L%/I:0=0/J:43+34-6
-k^s-t+pau=x@5_1/A:0_0_2/B:1-1-5@1-1&8-1#4-1$3-1!2-0;2-0|eh/C:0+0+0/D:content_2/E:content+1@6+1&3+0#1+0/F:0_0/G:4_3/H:8=6@6=1|L-L%/I:0=0/J:43+34-6
-s^t-pau+x=x@x_x/A:1_1_5/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:content_1/E:x+x@x+x&x+x#x+x/F:0_0/G:8_6/H:x=x@1=6|0/I:0=0/J:43+34-6
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice07.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice07.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice07.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice07.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,175 +0,0 @@
-x^x-pau+f=er@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+4/D:0_0/E:x+x@x+x&x+x#x+x/F:content_1/G:0_0/H:x=x@1=8|0/I:6=6/J:60+53-8
-x^pau-f+er=s@1_4/A:0_0_0/B:1-1-4@1-1&1-6#1-5$1-3!0-1;0-1|er/C:1+1+2/D:0_0/E:content+1@1+6&1+3#0+1/F:content_1/G:0_0/H:6=6@1=8|NONE/I:9=8/J:60+53-8
-pau^f-er+s=t@2_3/A:0_0_0/B:1-1-4@1-1&1-6#1-5$1-3!0-1;0-1|er/C:1+1+2/D:0_0/E:content+1@1+6&1+3#0+1/F:content_1/G:0_0/H:6=6@1=8|NONE/I:9=8/J:60+53-8
-f^er-s+t=sh@3_2/A:0_0_0/B:1-1-4@1-1&1-6#1-5$1-3!0-1;0-1|er/C:1+1+2/D:0_0/E:content+1@1+6&1+3#0+1/F:content_1/G:0_0/H:6=6@1=8|NONE/I:9=8/J:60+53-8
-er^s-t+sh=iy@4_1/A:0_0_0/B:1-1-4@1-1&1-6#1-5$1-3!0-1;0-1|er/C:1+1+2/D:0_0/E:content+1@1+6&1+3#0+1/F:content_1/G:0_0/H:6=6@1=8|NONE/I:9=8/J:60+53-8
-s^t-sh+iy=t@1_2/A:1_1_4/B:1-1-2@1-1&2-5#1-4$1-2!1-1;1-1|iy/C:1+1+4/D:content_1/E:content+1@2+5&2+2#1+1/F:content_1/G:0_0/H:6=6@1=8|NONE/I:9=8/J:60+53-8
-t^sh-iy+t=r@2_1/A:1_1_4/B:1-1-2@1-1&2-5#1-4$1-2!1-1;1-1|iy/C:1+1+4/D:content_1/E:content+1@2+5&2+2#1+1/F:content_1/G:0_0/H:6=6@1=8|NONE/I:9=8/J:60+53-8
-sh^iy-t+r=ay@1_4/A:1_1_2/B:1-1-4@1-1&3-4#2-3$2-1!1-2;1-0|ay/C:0+0+2/D:content_1/E:content+1@3+4&3+1#1+2/F:to_1/G:0_0/H:6=6@1=8|NONE/I:9=8/J:60+53-8
-iy^t-r+ay=d@2_3/A:1_1_2/B:1-1-4@1-1&3-4#2-3$2-1!1-2;1-0|ay/C:0+0+2/D:content_1/E:content+1@3+4&3+1#1+2/F:to_1/G:0_0/H:6=6@1=8|NONE/I:9=8/J:60+53-8
-t^r-ay+d=t@3_2/A:1_1_2/B:1-1-4@1-1&3-4#2-3$2-1!1-2;1-0|ay/C:0+0+2/D:content_1/E:content+1@3+4&3+1#1+2/F:to_1/G:0_0/H:6=6@1=8|NONE/I:9=8/J:60+53-8
-r^ay-d+t=ax@4_1/A:1_1_2/B:1-1-4@1-1&3-4#2-3$2-1!1-2;1-0|ay/C:0+0+2/D:content_1/E:content+1@3+4&3+1#1+2/F:to_1/G:0_0/H:6=6@1=8|NONE/I:9=8/J:60+53-8
-ay^d-t+ax=l@1_2/A:1_1_4/B:0-0-2@1-1&4-3#3-3$3-1!1-1;1-0|ax/C:1+0+3/D:content_1/E:to+1@4+3&4+1#1+1/F:content_1/G:0_0/H:6=6@1=8|NONE/I:9=8/J:60+53-8
-d^t-ax+l=uh@2_1/A:1_1_4/B:0-0-2@1-1&4-3#3-3$3-1!1-1;1-0|ax/C:1+0+3/D:content_1/E:to+1@4+3&4+1#1+1/F:content_1/G:0_0/H:6=6@1=8|NONE/I:9=8/J:60+53-8
-t^ax-l+uh=k@1_3/A:0_0_2/B:1-0-3@1-1&5-2#3-2$3-1!2-1;2-0|uh/C:1+0+3/D:to_1/E:content+1@5+2&4+0#2+0/F:in_1/G:0_0/H:6=6@1=8|NONE/I:9=8/J:60+53-8
-ax^l-uh+k=d@2_2/A:0_0_2/B:1-0-3@1-1&5-2#3-2$3-1!2-1;2-0|uh/C:1+0+3/D:to_1/E:content+1@5+2&4+0#2+0/F:in_1/G:0_0/H:6=6@1=8|NONE/I:9=8/J:60+53-8
-l^uh-k+d=aw@3_1/A:0_0_2/B:1-0-3@1-1&5-2#3-2$3-1!2-1;2-0|uh/C:1+0+3/D:to_1/E:content+1@5+2&4+0#2+0/F:in_1/G:0_0/H:6=6@1=8|NONE/I:9=8/J:60+53-8
-uh^k-d+aw=n@1_3/A:1_0_3/B:1-0-3@1-1&6-1#4-1$3-1!1-0;3-0|aw/C:1+0+3/D:content_1/E:in+1@6+1&5+0#1+0/F:cc_1/G:0_0/H:6=6@1=8|NONE/I:9=8/J:60+53-8
-k^d-aw+n=pau@2_2/A:1_0_3/B:1-0-3@1-1&6-1#4-1$3-1!1-0;3-0|aw/C:1+0+3/D:content_1/E:in+1@6+1&5+0#1+0/F:cc_1/G:0_0/H:6=6@1=8|NONE/I:9=8/J:60+53-8
-d^aw-n+pau=ae@3_1/A:1_0_3/B:1-0-3@1-1&6-1#4-1$3-1!1-0;3-0|aw/C:1+0+3/D:content_1/E:in+1@6+1&5+0#1+0/F:cc_1/G:0_0/H:6=6@1=8|NONE/I:9=8/J:60+53-8
-aw^n-pau+ae=n@x_x/A:1_0_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:in_1/E:x+x@x+x&x+x#x+x/F:cc_1/G:6_6/H:x=x@1=8|0/I:9=8/J:60+53-8
-n^pau-ae+n=d@1_3/A:1_0_3/B:1-0-3@1-1&1-9#1-7$1-4!0-1;0-1|ae/C:1+1+3/D:in_1/E:cc+1@1+8&1+4#0+1/F:content_1/G:6_6/H:9=8@2=7|L-L%/I:10=8/J:60+53-8
-pau^ae-n+d=m@2_2/A:1_0_3/B:1-0-3@1-1&1-9#1-7$1-4!0-1;0-1|ae/C:1+1+3/D:in_1/E:cc+1@1+8&1+4#0+1/F:content_1/G:6_6/H:9=8@2=7|L-L%/I:10=8/J:60+53-8
-ae^n-d+m=ey@3_1/A:1_0_3/B:1-0-3@1-1&1-9#1-7$1-4!0-1;0-1|ae/C:1+1+3/D:in_1/E:cc+1@1+8&1+4#0+1/F:content_1/G:6_6/H:9=8@2=7|L-L%/I:10=8/J:60+53-8
-n^d-m+ey=k@1_3/A:1_0_3/B:1-1-3@1-1&2-8#1-6$1-3!1-1;0-5|ey/C:1+0+2/D:cc_1/E:content+1@2+7&1+3#0+1/F:content_1/G:6_6/H:9=8@2=7|L-L%/I:10=8/J:60+53-8
-d^m-ey+k=aw@2_2/A:1_0_3/B:1-1-3@1-1&2-8#1-6$1-3!1-1;0-5|ey/C:1+0+2/D:cc_1/E:content+1@2+7&1+3#0+1/F:content_1/G:6_6/H:9=8@2=7|L-L%/I:10=8/J:60+53-8
-m^ey-k+aw=t@3_1/A:1_0_3/B:1-1-3@1-1&2-8#1-6$1-3!1-1;0-5|ey/C:1+0+2/D:cc_1/E:content+1@2+7&1+3#0+1/F:content_1/G:6_6/H:9=8@2=7|L-L%/I:10=8/J:60+53-8
-ey^k-aw+t=w@1_2/A:1_1_3/B:1-0-2@1-1&3-7#2-5$2-3!1-1;1-4|aw/C:1+0+3/D:content_1/E:content+1@3+6&2+2#1+2/F:wp_1/G:6_6/H:9=8@2=7|L-L%/I:10=8/J:60+53-8
-k^aw-t+w=ah@2_1/A:1_1_3/B:1-0-2@1-1&3-7#2-5$2-3!1-1;1-4|aw/C:1+0+3/D:content_1/E:content+1@3+6&2+2#1+2/F:wp_1/G:6_6/H:9=8@2=7|L-L%/I:10=8/J:60+53-8
-aw^t-w+ah=t@1_3/A:1_0_2/B:1-0-3@1-1&4-6#3-4$2-3!1-1;2-3|ah/C:1+0+2/D:content_1/E:wp+1@4+5&3+2#1+1/F:content_1/G:6_6/H:9=8@2=7|L-L%/I:10=8/J:60+53-8
-t^w-ah+t=sh@2_2/A:1_0_2/B:1-0-3@1-1&4-6#3-4$2-3!1-1;2-3|ah/C:1+0+2/D:content_1/E:wp+1@4+5&3+2#1+1/F:content_1/G:6_6/H:9=8@2=7|L-L%/I:10=8/J:60+53-8
-w^ah-t+sh=iy@3_1/A:1_0_2/B:1-0-3@1-1&4-6#3-4$2-3!1-1;2-3|ah/C:1+0+2/D:content_1/E:wp+1@4+5&3+2#1+1/F:content_1/G:6_6/H:9=8@2=7|L-L%/I:10=8/J:60+53-8
-ah^t-sh+iy=w@1_2/A:1_0_3/B:1-0-2@1-1&5-5#4-3$2-3!1-1;3-2|iy/C:1+0+3/D:wp_1/E:content+1@5+4&3+1#2+2/F:aux_1/G:6_6/H:9=8@2=7|L-L%/I:10=8/J:60+53-8
-t^sh-iy+w=aa@2_1/A:1_0_3/B:1-0-2@1-1&5-5#4-3$2-3!1-1;3-2|iy/C:1+0+3/D:wp_1/E:content+1@5+4&3+1#2+2/F:aux_1/G:6_6/H:9=8@2=7|L-L%/I:10=8/J:60+53-8
-sh^iy-w+aa=z@1_3/A:1_0_2/B:1-0-3@1-1&6-4#5-2$2-3!1-1;4-1|aa/C:1+1+3/D:content_1/E:aux+1@6+3&4+1#1+1/F:content_2/G:6_6/H:9=8@2=7|L-L%/I:10=8/J:60+53-8
-iy^w-aa+z=k@2_2/A:1_0_2/B:1-0-3@1-1&6-4#5-2$2-3!1-1;4-1|aa/C:1+1+3/D:content_1/E:aux+1@6+3&4+1#1+1/F:content_2/G:6_6/H:9=8@2=7|L-L%/I:10=8/J:60+53-8
-w^aa-z+k=ah@3_1/A:1_0_2/B:1-0-3@1-1&6-4#5-2$2-3!1-1;4-1|aa/C:1+1+3/D:content_1/E:aux+1@6+3&4+1#1+1/F:content_2/G:6_6/H:9=8@2=7|L-L%/I:10=8/J:60+53-8
-aa^z-k+ah=m@1_3/A:1_0_3/B:1-1-3@1-2&7-3#6-1$2-2!1-0;5-2|ah/C:0+0+2/D:aux_1/E:content+2@7+2&4+0#2+0/F:to_1/G:6_6/H:9=8@2=7|L-L%/I:10=8/J:60+53-8
-z^k-ah+m=ih@2_2/A:1_0_3/B:1-1-3@1-2&7-3#6-1$2-2!1-0;5-2|ah/C:0+0+2/D:aux_1/E:content+2@7+2&4+0#2+0/F:to_1/G:6_6/H:9=8@2=7|L-L%/I:10=8/J:60+53-8
-k^ah-m+ih=ng@3_1/A:1_0_3/B:1-1-3@1-2&7-3#6-1$2-2!1-0;5-2|ah/C:0+0+2/D:aux_1/E:content+2@7+2&4+0#2+0/F:to_1/G:6_6/H:9=8@2=7|L-L%/I:10=8/J:60+53-8
-ah^m-ih+ng=t@1_2/A:1_1_3/B:0-0-2@2-1&8-2#7-1$3-2!1-0;1-1|ih/C:0+1+2/D:aux_1/E:content+2@7+2&4+0#2+0/F:to_1/G:6_6/H:9=8@2=7|L-L%/I:10=8/J:60+53-8
-m^ih-ng+t=ax@2_1/A:1_1_3/B:0-0-2@2-1&8-2#7-1$3-2!1-0;1-1|ih/C:0+1+2/D:aux_1/E:content+2@7+2&4+0#2+0/F:to_1/G:6_6/H:9=8@2=7|L-L%/I:10=8/J:60+53-8
-ih^ng-t+ax=pau@1_2/A:0_0_2/B:0-1-2@1-1&9-1#7-1$3-1!2-0;2-0|ax/C:1+0+3/D:content_2/E:to+1@8+1&5+0#1+0/F:cc_1/G:6_6/H:9=8@2=7|L-L%/I:10=8/J:60+53-8
-ng^t-ax+pau=b@2_1/A:0_0_2/B:0-1-2@1-1&9-1#7-1$3-1!2-0;2-0|ax/C:1+0+3/D:content_2/E:to+1@8+1&5+0#1+0/F:cc_1/G:6_6/H:9=8@2=7|L-L%/I:10=8/J:60+53-8
-t^ax-pau+b=ah@x_x/A:0_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:to_1/E:x+x@x+x&x+x#x+x/F:cc_1/G:9_8/H:x=x@1=8|0/I:10=8/J:60+53-8
-ax^pau-b+ah=t@1_3/A:0_1_2/B:1-0-3@1-1&1-10#1-8$1-4!0-1;0-1|ah/C:1+1+2/D:to_1/E:cc+1@1+8&1+5#0+1/F:content_1/G:9_8/H:10=8@3=6|L-L%/I:9=9/J:60+53-8
-pau^b-ah+t=ih@2_2/A:0_1_2/B:1-0-3@1-1&1-10#1-8$1-4!0-1;0-1|ah/C:1+1+2/D:to_1/E:cc+1@1+8&1+5#0+1/F:content_1/G:9_8/H:10=8@3=6|L-L%/I:9=9/J:60+53-8
-b^ah-t+ih=t@3_1/A:0_1_2/B:1-0-3@1-1&1-10#1-8$1-4!0-1;0-1|ah/C:1+1+2/D:to_1/E:cc+1@1+8&1+5#0+1/F:content_1/G:9_8/H:10=8@3=6|L-L%/I:9=9/J:60+53-8
-ah^t-ih+t=w@1_2/A:1_0_3/B:1-1-2@1-1&2-9#1-7$1-3!1-1;0-6|ih/C:1+0+3/D:cc_1/E:content+1@2+7&1+4#0+2/F:aux_1/G:9_8/H:10=8@3=6|L-L%/I:9=9/J:60+53-8
-t^ih-t+w=aa@2_1/A:1_0_3/B:1-1-2@1-1&2-9#1-7$1-3!1-1;0-6|ih/C:1+0+3/D:cc_1/E:content+1@2+7&1+4#0+2/F:aux_1/G:9_8/H:10=8@3=6|L-L%/I:9=9/J:60+53-8
-ih^t-w+aa=z@1_3/A:1_1_2/B:1-0-3@1-1&3-8#2-6$2-3!1-1;1-5|aa/C:1+0+2/D:content_1/E:aux+1@3+6&2+4#1+1/F:content_1/G:9_8/H:10=8@3=6|L-L%/I:9=9/J:60+53-8
-t^w-aa+z=t@2_2/A:1_1_2/B:1-0-3@1-1&3-8#2-6$2-3!1-1;1-5|aa/C:1+0+2/D:content_1/E:aux+1@3+6&2+4#1+1/F:content_1/G:9_8/H:10=8@3=6|L-L%/I:9=9/J:60+53-8
-w^aa-z+t=uw@3_1/A:1_1_2/B:1-0-3@1-1&3-8#2-6$2-3!1-1;1-5|aa/C:1+0+2/D:content_1/E:aux+1@3+6&2+4#1+1/F:content_1/G:9_8/H:10=8@3=6|L-L%/I:9=9/J:60+53-8
-aa^z-t+uw=d@1_2/A:1_0_3/B:1-0-2@1-1&4-7#3-5$2-3!1-1;2-4|uw/C:1+0+4/D:aux_1/E:content+1@4+5&2+3#2+1/F:content_1/G:9_8/H:10=8@3=6|L-L%/I:9=9/J:60+53-8
-z^t-uw+d=aa@2_1/A:1_0_3/B:1-0-2@1-1&4-7#3-5$2-3!1-1;2-4|uw/C:1+0+4/D:aux_1/E:content+1@4+5&2+3#2+1/F:content_1/G:9_8/H:10=8@3=6|L-L%/I:9=9/J:60+53-8
-t^uw-d+aa=r@1_4/A:1_0_2/B:1-0-4@1-1&5-6#4-4$2-3!1-2;3-3|aa/C:0+0+2/D:content_1/E:content+1@5+4&3+2#1+2/F:to_1/G:9_8/H:10=8@3=6|L-L%/I:9=9/J:60+53-8
-uw^d-aa+r=k@2_3/A:1_0_2/B:1-0-4@1-1&5-6#4-4$2-3!1-2;3-3|aa/C:0+0+2/D:content_1/E:content+1@5+4&3+2#1+2/F:to_1/G:9_8/H:10=8@3=6|L-L%/I:9=9/J:60+53-8
-d^aa-r+k=t@3_2/A:1_0_2/B:1-0-4@1-1&5-6#4-4$2-3!1-2;3-3|aa/C:0+0+2/D:content_1/E:content+1@5+4&3+2#1+2/F:to_1/G:9_8/H:10=8@3=6|L-L%/I:9=9/J:60+53-8
-aa^r-k+t=ax@4_1/A:1_0_2/B:1-0-4@1-1&5-6#4-4$2-3!1-2;3-3|aa/C:0+0+2/D:content_1/E:content+1@5+4&3+2#1+2/F:to_1/G:9_8/H:10=8@3=6|L-L%/I:9=9/J:60+53-8
-r^k-t+ax=s@1_2/A:1_0_4/B:0-0-2@1-1&6-5#5-4$2-3!1-1;4-2|ax/C:1+0+2/D:content_1/E:to+1@6+3&4+2#1+1/F:content_1/G:9_8/H:10=8@3=6|L-L%/I:9=9/J:60+53-8
-k^t-ax+s=iy@2_1/A:1_0_4/B:0-0-2@1-1&6-5#5-4$2-3!1-1;4-2|ax/C:1+0+2/D:content_1/E:to+1@6+3&4+2#1+1/F:content_1/G:9_8/H:10=8@3=6|L-L%/I:9=9/J:60+53-8
-t^ax-s+iy=eh@1_2/A:0_0_2/B:1-0-2@1-1&7-4#5-3$2-3!2-1;5-1|iy/C:1+1+2/D:to_1/E:content+1@7+2&4+1#2+1/F:content_3/G:9_8/H:10=8@3=6|L-L%/I:9=9/J:60+53-8
-ax^s-iy+eh=n@2_1/A:0_0_2/B:1-0-2@1-1&7-4#5-3$2-3!2-1;5-1|iy/C:1+1+2/D:to_1/E:content+1@7+2&4+1#2+1/F:content_3/G:9_8/H:10=8@3=6|L-L%/I:9=9/J:60+53-8
-s^iy-eh+n=iy@1_2/A:1_0_2/B:1-1-2@1-3&8-3#6-2$2-2!1-2;6-2|eh/C:0+0+2/D:content_1/E:content+3@8+1&5+0#1+0/F:content_1/G:9_8/H:10=8@3=6|L-L%/I:9=9/J:60+53-8
-iy^eh-n+iy=th@2_1/A:1_0_2/B:1-1-2@1-3&8-3#6-2$2-2!1-2;6-2|eh/C:0+0+2/D:content_1/E:content+3@8+1&5+0#1+0/F:content_1/G:9_8/H:10=8@3=6|L-L%/I:9=9/J:60+53-8
-eh^n-iy+th=ih@1_2/A:1_1_2/B:0-0-2@2-2&9-2#7-2$3-2!1-1;1-1|iy/C:1+1+2/D:content_1/E:content+3@8+1&5+0#1+0/F:content_1/G:9_8/H:10=8@3=6|L-L%/I:9=9/J:60+53-8
-n^iy-th+ih=ng@2_1/A:1_1_2/B:0-0-2@2-2&9-2#7-2$3-2!1-1;1-1|iy/C:1+1+2/D:content_1/E:content+3@8+1&5+0#1+0/F:content_1/G:9_8/H:10=8@3=6|L-L%/I:9=9/J:60+53-8
-iy^th-ih+ng=pau@1_2/A:0_0_2/B:1-1-2@3-1&10-1#7-1$3-1!2-0;2-0|ih/C:1+0+3/D:content_1/E:content+3@8+1&5+0#1+0/F:content_1/G:9_8/H:10=8@3=6|L-L%/I:9=9/J:60+53-8
-th^ih-ng+pau=dh@2_1/A:0_0_2/B:1-1-2@3-1&10-1#7-1$3-1!2-0;2-0|ih/C:1+0+3/D:content_1/E:content+3@8+1&5+0#1+0/F:content_1/G:9_8/H:10=8@3=6|L-L%/I:9=9/J:60+53-8
-ih^ng-pau+dh=eh@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_3/E:x+x@x+x&x+x#x+x/F:content_1/G:10_8/H:x=x@1=8|0/I:9=9/J:60+53-8
-ng^pau-dh+eh=n@1_3/A:1_1_2/B:1-0-3@1-1&1-9#1-7$1-3!0-1;0-1|eh/C:1+1+2/D:content_3/E:content+1@1+9&1+4#0+1/F:content_1/G:10_8/H:9=9@4=5|L-L%/I:10=8/J:60+53-8
-pau^dh-eh+n=sh@2_2/A:1_1_2/B:1-0-3@1-1&1-9#1-7$1-3!0-1;0-1|eh/C:1+1+2/D:content_3/E:content+1@1+9&1+4#0+1/F:content_1/G:10_8/H:9=9@4=5|L-L%/I:10=8/J:60+53-8
-dh^eh-n+sh=iy@3_1/A:1_1_2/B:1-0-3@1-1&1-9#1-7$1-3!0-1;0-1|eh/C:1+1+2/D:content_3/E:content+1@1+9&1+4#0+1/F:content_1/G:10_8/H:9=9@4=5|L-L%/I:10=8/J:60+53-8
-eh^n-sh+iy=l@1_2/A:1_0_3/B:1-1-2@1-1&2-8#1-6$1-2!1-1;0-7|iy/C:1+0+4/D:content_1/E:content+1@2+8&2+3#1+1/F:content_1/G:10_8/H:9=9@4=5|L-L%/I:10=8/J:60+53-8
-n^sh-iy+l=uh@2_1/A:1_0_3/B:1-1-2@1-1&2-8#1-6$1-2!1-1;0-7|iy/C:1+0+4/D:content_1/E:content+1@2+8&2+3#1+1/F:content_1/G:10_8/H:9=9@4=5|L-L%/I:10=8/J:60+53-8
-sh^iy-l+uh=k@1_4/A:1_1_2/B:1-0-4@1-1&3-7#2-5$2-2!1-1;1-6|uh/C:1+0+2/D:content_1/E:content+1@3+7&3+2#1+3/F:in_1/G:10_8/H:9=9@4=5|L-L%/I:10=8/J:60+53-8
-iy^l-uh+k=t@2_3/A:1_1_2/B:1-0-4@1-1&3-7#2-5$2-2!1-1;1-6|uh/C:1+0+2/D:content_1/E:content+1@3+7&3+2#1+3/F:in_1/G:10_8/H:9=9@4=5|L-L%/I:10=8/J:60+53-8
-l^uh-k+t=ae@3_2/A:1_1_2/B:1-0-4@1-1&3-7#2-5$2-2!1-1;1-6|uh/C:1+0+2/D:content_1/E:content+1@3+7&3+2#1+3/F:in_1/G:10_8/H:9=9@4=5|L-L%/I:10=8/J:60+53-8
-uh^k-t+ae=t@4_1/A:1_1_2/B:1-0-4@1-1&3-7#2-5$2-2!1-1;1-6|uh/C:1+0+2/D:content_1/E:content+1@3+7&3+2#1+3/F:in_1/G:10_8/H:9=9@4=5|L-L%/I:10=8/J:60+53-8
-k^t-ae+t=dh@1_2/A:1_0_4/B:1-0-2@1-1&4-6#3-4$2-2!1-2;2-5|ae/C:0+0+2/D:content_1/E:in+1@4+6&4+2#1+2/F:det_1/G:10_8/H:9=9@4=5|L-L%/I:10=8/J:60+53-8
-t^ae-t+dh=ax@2_1/A:1_0_4/B:1-0-2@1-1&4-6#3-4$2-2!1-2;2-5|ae/C:0+0+2/D:content_1/E:in+1@4+6&4+2#1+2/F:det_1/G:10_8/H:9=9@4=5|L-L%/I:10=8/J:60+53-8
-ae^t-dh+ax=s@1_2/A:1_0_2/B:0-0-2@1-1&5-5#4-4$2-2!1-1;3-4|ax/C:1+0+4/D:in_1/E:det+1@5+5&4+2#2+1/F:content_1/G:10_8/H:9=9@4=5|L-L%/I:10=8/J:60+53-8
-t^dh-ax+s=ay@2_1/A:1_0_2/B:0-0-2@1-1&5-5#4-4$2-2!1-1;3-4|ax/C:1+0+4/D:in_1/E:det+1@5+5&4+2#2+1/F:content_1/G:10_8/H:9=9@4=5|L-L%/I:10=8/J:60+53-8
-dh^ax-s+ay=d@1_4/A:0_0_2/B:1-0-4@1-1&6-4#4-3$2-2!2-1;4-3|ay/C:1+0+2/D:det_1/E:content+1@6+4&4+1#3+3/F:in_1/G:10_8/H:9=9@4=5|L-L%/I:10=8/J:60+53-8
-ax^s-ay+d=z@2_3/A:0_0_2/B:1-0-4@1-1&6-4#4-3$2-2!2-1;4-3|ay/C:1+0+2/D:det_1/E:content+1@6+4&4+1#3+3/F:in_1/G:10_8/H:9=9@4=5|L-L%/I:10=8/J:60+53-8
-s^ay-d+z=ah@3_2/A:0_0_2/B:1-0-4@1-1&6-4#4-3$2-2!2-1;4-3|ay/C:1+0+2/D:det_1/E:content+1@6+4&4+1#3+3/F:in_1/G:10_8/H:9=9@4=5|L-L%/I:10=8/J:60+53-8
-ay^d-z+ah=v@4_1/A:0_0_2/B:1-0-4@1-1&6-4#4-3$2-2!2-1;4-3|ay/C:1+0+2/D:det_1/E:content+1@6+4&4+1#3+3/F:in_1/G:10_8/H:9=9@4=5|L-L%/I:10=8/J:60+53-8
-d^z-ah+v=dh@1_2/A:1_0_4/B:1-0-2@1-1&7-3#5-2$2-2!1-2;5-2|ah/C:0+0+2/D:content_1/E:in+1@7+3&5+1#1+2/F:det_1/G:10_8/H:9=9@4=5|L-L%/I:10=8/J:60+53-8
-z^ah-v+dh=ax@2_1/A:1_0_4/B:1-0-2@1-1&7-3#5-2$2-2!1-2;5-2|ah/C:0+0+2/D:content_1/E:in+1@7+3&5+1#1+2/F:det_1/G:10_8/H:9=9@4=5|L-L%/I:10=8/J:60+53-8
-ah^v-dh+ax=w@1_2/A:1_0_2/B:0-0-2@1-1&8-2#6-2$2-2!1-1;6-1|ax/C:1+1+3/D:in_1/E:det+1@8+2&5+1#2+1/F:content_1/G:10_8/H:9=9@4=5|L-L%/I:10=8/J:60+53-8
-v^dh-ax+w=eh@2_1/A:1_0_2/B:0-0-2@1-1&8-2#6-2$2-2!1-1;6-1|ax/C:1+1+3/D:in_1/E:det+1@8+2&5+1#2+1/F:content_1/G:10_8/H:9=9@4=5|L-L%/I:10=8/J:60+53-8
-dh^ax-w+eh=l@1_3/A:0_0_2/B:1-1-3@1-1&9-1#6-1$2-1!2-0;7-0|eh/C:1+0+3/D:det_1/E:content+1@9+1&5+0#3+0/F:cc_1/G:10_8/H:9=9@4=5|L-L%/I:10=8/J:60+53-8
-ax^w-eh+l=pau@2_2/A:0_0_2/B:1-1-3@1-1&9-1#6-1$2-1!2-0;7-0|eh/C:1+0+3/D:det_1/E:content+1@9+1&5+0#3+0/F:cc_1/G:10_8/H:9=9@4=5|L-L%/I:10=8/J:60+53-8
-w^eh-l+pau=ae@3_1/A:0_0_2/B:1-1-3@1-1&9-1#6-1$2-1!2-0;7-0|eh/C:1+0+3/D:det_1/E:content+1@9+1&5+0#3+0/F:cc_1/G:10_8/H:9=9@4=5|L-L%/I:10=8/J:60+53-8
-eh^l-pau+ae=n@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:cc_1/G:9_9/H:x=x@1=8|0/I:10=8/J:60+53-8
-l^pau-ae+n=d@1_3/A:1_1_3/B:1-0-3@1-1&1-10#1-7$1-4!0-1;0-1|ae/C:1+1+3/D:content_1/E:cc+1@1+8&1+4#0+1/F:content_2/G:9_9/H:10=8@5=4|L-L%/I:3=3/J:60+53-8
-pau^ae-n+d=n@2_2/A:1_1_3/B:1-0-3@1-1&1-10#1-7$1-4!0-1;0-1|ae/C:1+1+3/D:content_1/E:cc+1@1+8&1+4#0+1/F:content_2/G:9_9/H:10=8@5=4|L-L%/I:3=3/J:60+53-8
-ae^n-d+n=ow@3_1/A:1_1_3/B:1-0-3@1-1&1-10#1-7$1-4!0-1;0-1|ae/C:1+1+3/D:content_1/E:cc+1@1+8&1+4#0+1/F:content_2/G:9_9/H:10=8@5=4|L-L%/I:3=3/J:60+53-8
-n^d-n+ow=t@1_3/A:1_0_3/B:1-1-3@1-2&2-9#1-6$1-3!1-2;0-3|ow/C:0+0+3/D:cc_1/E:content+2@2+7&1+3#0+2/F:in_1/G:9_9/H:10=8@5=4|L-L%/I:3=3/J:60+53-8
-d^n-ow+t=ax@2_2/A:1_0_3/B:1-1-3@1-2&2-9#1-6$1-3!1-2;0-3|ow/C:0+0+3/D:cc_1/E:content+2@2+7&1+3#0+2/F:in_1/G:9_9/H:10=8@5=4|L-L%/I:3=3/J:60+53-8
-n^ow-t+ax=s@3_1/A:1_0_3/B:1-1-3@1-2&2-9#1-6$1-3!1-2;0-3|ow/C:0+0+3/D:cc_1/E:content+2@2+7&1+3#0+2/F:in_1/G:9_9/H:10=8@5=4|L-L%/I:3=3/J:60+53-8
-ow^t-ax+s=t@1_3/A:1_1_3/B:0-0-3@2-1&3-8#2-6$2-3!1-1;1-2|ax/C:1+0+3/D:cc_1/E:content+2@2+7&1+3#0+2/F:in_1/G:9_9/H:10=8@5=4|L-L%/I:3=3/J:60+53-8
-t^ax-s+t=dh@2_2/A:1_1_3/B:0-0-3@2-1&3-8#2-6$2-3!1-1;1-2|ax/C:1+0+3/D:cc_1/E:content+2@2+7&1+3#0+2/F:in_1/G:9_9/H:10=8@5=4|L-L%/I:3=3/J:60+53-8
-ax^s-t+dh=ae@3_1/A:1_1_3/B:0-0-3@2-1&3-8#2-6$2-3!1-1;1-2|ax/C:1+0+3/D:cc_1/E:content+2@2+7&1+3#0+2/F:in_1/G:9_9/H:10=8@5=4|L-L%/I:3=3/J:60+53-8
-s^t-dh+ae=t@1_3/A:0_0_3/B:1-0-3@1-1&4-7#2-5$2-3!2-1;2-1|ae/C:1+1+2/D:content_2/E:in+1@3+6&2+3#1+1/F:content_1/G:9_9/H:10=8@5=4|L-L%/I:3=3/J:60+53-8
-t^dh-ae+t=dh@2_2/A:0_0_3/B:1-0-3@1-1&4-7#2-5$2-3!2-1;2-1|ae/C:1+1+2/D:content_2/E:in+1@3+6&2+3#1+1/F:content_1/G:9_9/H:10=8@5=4|L-L%/I:3=3/J:60+53-8
-dh^ae-t+dh=ey@3_1/A:0_0_3/B:1-0-3@1-1&4-7#2-5$2-3!2-1;2-1|ae/C:1+1+2/D:content_2/E:in+1@3+6&2+3#1+1/F:content_1/G:9_9/H:10=8@5=4|L-L%/I:3=3/J:60+53-8
-ae^t-dh+ey=w@1_2/A:1_0_3/B:1-1-2@1-1&5-6#3-4$2-2!1-2;3-5|ey/C:0+0+2/D:in_1/E:content+1@4+5&2+2#2+2/F:aux_1/G:9_9/H:10=8@5=4|L-L%/I:3=3/J:60+53-8
-t^dh-ey+w=er@2_1/A:1_0_3/B:1-1-2@1-1&5-6#3-4$2-2!1-2;3-5|ey/C:0+0+2/D:in_1/E:content+1@4+5&2+2#2+2/F:aux_1/G:9_9/H:10=8@5=4|L-L%/I:3=3/J:60+53-8
-dh^ey-w+er=f@1_2/A:1_1_2/B:0-0-2@1-1&6-5#4-4$3-2!1-1;1-4|er/C:1+0+4/D:content_1/E:aux+1@5+4&3+2#1+1/F:content_1/G:9_9/H:10=8@5=4|L-L%/I:3=3/J:60+53-8
-ey^w-er+f=ih@2_1/A:1_1_2/B:0-0-2@1-1&6-5#4-4$3-2!1-1;1-4|er/C:1+0+4/D:content_1/E:aux+1@5+4&3+2#1+1/F:content_1/G:9_9/H:10=8@5=4|L-L%/I:3=3/J:60+53-8
-w^er-f+ih=l@1_4/A:0_0_2/B:1-0-4@1-1&7-4#4-3$3-2!2-1;2-3|ih/C:1+0+3/D:aux_1/E:content+1@6+3&3+1#2+2/F:in_1/G:9_9/H:10=8@5=4|L-L%/I:3=3/J:60+53-8
-er^f-ih+l=d@2_3/A:0_0_2/B:1-0-4@1-1&7-4#4-3$3-2!2-1;2-3|ih/C:1+0+3/D:aux_1/E:content+1@6+3&3+1#2+2/F:in_1/G:9_9/H:10=8@5=4|L-L%/I:3=3/J:60+53-8
-f^ih-l+d=w@3_2/A:0_0_2/B:1-0-4@1-1&7-4#4-3$3-2!2-1;2-3|ih/C:1+0+3/D:aux_1/E:content+1@6+3&3+1#2+2/F:in_1/G:9_9/H:10=8@5=4|L-L%/I:3=3/J:60+53-8
-ih^l-d+w=ih@4_1/A:0_0_2/B:1-0-4@1-1&7-4#4-3$3-2!2-1;2-3|ih/C:1+0+3/D:aux_1/E:content+1@6+3&3+1#2+2/F:in_1/G:9_9/H:10=8@5=4|L-L%/I:3=3/J:60+53-8
-l^d-w+ih=dh@1_3/A:1_0_4/B:1-0-3@1-1&8-3#5-2$3-2!1-1;3-2|ih/C:1+0+3/D:content_1/E:in+1@7+2&4+1#1+1/F:content_2/G:9_9/H:10=8@5=4|L-L%/I:3=3/J:60+53-8
-d^w-ih+dh=k@2_2/A:1_0_4/B:1-0-3@1-1&8-3#5-2$3-2!1-1;3-2|ih/C:1+0+3/D:content_1/E:in+1@7+2&4+1#1+1/F:content_2/G:9_9/H:10=8@5=4|L-L%/I:3=3/J:60+53-8
-w^ih-dh+k=ah@3_1/A:1_0_4/B:1-0-3@1-1&8-3#5-2$3-2!1-1;3-2|ih/C:1+0+3/D:content_1/E:in+1@7+2&4+1#1+1/F:content_2/G:9_9/H:10=8@5=4|L-L%/I:3=3/J:60+53-8
-ih^dh-k+ah=b@1_3/A:1_0_3/B:1-0-3@1-2&9-2#6-1$3-2!1-0;4-1|ah/C:0+1+3/D:in_1/E:content+2@8+1&4+0#2+0/F:cc_1/G:9_9/H:10=8@5=4|L-L%/I:3=3/J:60+53-8
-dh^k-ah+b=er@2_2/A:1_0_3/B:1-0-3@1-2&9-2#6-1$3-2!1-0;4-1|ah/C:0+1+3/D:in_1/E:content+2@8+1&4+0#2+0/F:cc_1/G:9_9/H:10=8@5=4|L-L%/I:3=3/J:60+53-8
-k^ah-b+er=d@3_1/A:1_0_3/B:1-0-3@1-2&9-2#6-1$3-2!1-0;4-1|ah/C:0+1+3/D:in_1/E:content+2@8+1&4+0#2+0/F:cc_1/G:9_9/H:10=8@5=4|L-L%/I:3=3/J:60+53-8
-ah^b-er+d=z@1_3/A:1_0_3/B:0-1-3@2-1&10-1#7-1$3-1!1-0;5-0|er/C:1+0+3/D:in_1/E:content+2@8+1&4+0#2+0/F:cc_1/G:9_9/H:10=8@5=4|L-L%/I:3=3/J:60+53-8
-b^er-d+z=pau@2_2/A:1_0_3/B:0-1-3@2-1&10-1#7-1$3-1!1-0;5-0|er/C:1+0+3/D:in_1/E:content+2@8+1&4+0#2+0/F:cc_1/G:9_9/H:10=8@5=4|L-L%/I:3=3/J:60+53-8
-er^d-z+pau=ae@3_1/A:1_0_3/B:0-1-3@2-1&10-1#7-1$3-1!1-0;5-0|er/C:1+0+3/D:in_1/E:content+2@8+1&4+0#2+0/F:cc_1/G:9_9/H:10=8@5=4|L-L%/I:3=3/J:60+53-8
-d^z-pau+ae=n@x_x/A:0_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_2/E:x+x@x+x&x+x#x+x/F:cc_1/G:10_8/H:x=x@1=8|0/I:3=3/J:60+53-8
-z^pau-ae+n=d@1_3/A:0_1_3/B:1-0-3@1-1&1-3#1-3$1-3!0-1;0-1|ae/C:1+1+3/D:content_2/E:cc+1@1+3&1+2#0+1/F:content_1/G:10_8/H:3=3@6=3|L-L%/I:6=6/J:60+53-8
-pau^ae-n+d=b@2_2/A:0_1_3/B:1-0-3@1-1&1-3#1-3$1-3!0-1;0-1|ae/C:1+1+3/D:content_2/E:cc+1@1+3&1+2#0+1/F:content_1/G:10_8/H:3=3@6=3|L-L%/I:6=6/J:60+53-8
-ae^n-d+b=uh@3_1/A:0_1_3/B:1-0-3@1-1&1-3#1-3$1-3!0-1;0-1|ae/C:1+1+3/D:content_2/E:cc+1@1+3&1+2#0+1/F:content_1/G:10_8/H:3=3@6=3|L-L%/I:6=6/J:60+53-8
-n^d-b+uh=k@1_3/A:1_0_3/B:1-1-3@1-1&2-2#1-2$1-2!1-1;0-1|uh/C:1+1+5/D:cc_1/E:content+1@2+2&1+1#0+1/F:content_1/G:10_8/H:3=3@6=3|L-L%/I:6=6/J:60+53-8
-d^b-uh+k=sh@2_2/A:1_0_3/B:1-1-3@1-1&2-2#1-2$1-2!1-1;0-1|uh/C:1+1+5/D:cc_1/E:content+1@2+2&1+1#0+1/F:content_1/G:10_8/H:3=3@6=3|L-L%/I:6=6/J:60+53-8
-b^uh-k+sh=eh@3_1/A:1_0_3/B:1-1-3@1-1&2-2#1-2$1-2!1-1;0-1|uh/C:1+1+5/D:cc_1/E:content+1@2+2&1+1#0+1/F:content_1/G:10_8/H:3=3@6=3|L-L%/I:6=6/J:60+53-8
-uh^k-sh+eh=l@1_5/A:1_1_3/B:1-1-5@1-1&3-1#2-1$2-1!1-0;1-0|eh/C:1+0+3/D:content_1/E:content+1@3+1&2+0#1+0/F:content_1/G:10_8/H:3=3@6=3|L-L%/I:6=6/J:60+53-8
-k^sh-eh+l=v@2_4/A:1_1_3/B:1-1-5@1-1&3-1#2-1$2-1!1-0;1-0|eh/C:1+0+3/D:content_1/E:content+1@3+1&2+0#1+0/F:content_1/G:10_8/H:3=3@6=3|L-L%/I:6=6/J:60+53-8
-sh^eh-l+v=z@3_3/A:1_1_3/B:1-1-5@1-1&3-1#2-1$2-1!1-0;1-0|eh/C:1+0+3/D:content_1/E:content+1@3+1&2+0#1+0/F:content_1/G:10_8/H:3=3@6=3|L-L%/I:6=6/J:60+53-8
-eh^l-v+z=pau@4_2/A:1_1_3/B:1-1-5@1-1&3-1#2-1$2-1!1-0;1-0|eh/C:1+0+3/D:content_1/E:content+1@3+1&2+0#1+0/F:content_1/G:10_8/H:3=3@6=3|L-L%/I:6=6/J:60+53-8
-l^v-z+pau=hh@5_1/A:1_1_3/B:1-1-5@1-1&3-1#2-1$2-1!1-0;1-0|eh/C:1+0+3/D:content_1/E:content+1@3+1&2+0#1+0/F:content_1/G:10_8/H:3=3@6=3|L-L%/I:6=6/J:60+53-8
-v^z-pau+hh=ih@x_x/A:1_1_5/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:content_1/G:3_3/H:x=x@1=8|0/I:6=6/J:60+53-8
-z^pau-hh+ih=r@1_3/A:1_1_5/B:1-0-3@1-1&1-6#1-6$1-3!0-1;0-2|ih/C:1+0+3/D:content_1/E:content+1@1+6&1+4#0+2/F:cc_1/G:3_3/H:6=6@7=2|L-L%/I:7=5/J:60+53-8
-pau^hh-ih+r=ae@2_2/A:1_1_5/B:1-0-3@1-1&1-6#1-6$1-3!0-1;0-2|ih/C:1+0+3/D:content_1/E:content+1@1+6&1+4#0+2/F:cc_1/G:3_3/H:6=6@7=2|L-L%/I:7=5/J:60+53-8
-hh^ih-r+ae=n@3_1/A:1_1_5/B:1-0-3@1-1&1-6#1-6$1-3!0-1;0-2|ih/C:1+0+3/D:content_1/E:content+1@1+6&1+4#0+2/F:cc_1/G:3_3/H:6=6@7=2|L-L%/I:7=5/J:60+53-8
-ih^r-ae+n=d@1_3/A:1_0_3/B:1-0-3@1-1&2-5#1-5$1-3!1-1;0-1|ae/C:1+1+3/D:content_1/E:cc+1@2+5&2+4#1+1/F:content_1/G:3_3/H:6=6@7=2|L-L%/I:7=5/J:60+53-8
-r^ae-n+d=dh@2_2/A:1_0_3/B:1-0-3@1-1&2-5#1-5$1-3!1-1;0-1|ae/C:1+1+3/D:content_1/E:cc+1@2+5&2+4#1+1/F:content_1/G:3_3/H:6=6@7=2|L-L%/I:7=5/J:60+53-8
-ae^n-d+dh=eh@3_1/A:1_0_3/B:1-0-3@1-1&2-5#1-5$1-3!1-1;0-1|ae/C:1+1+3/D:content_1/E:cc+1@2+5&2+4#1+1/F:content_1/G:3_3/H:6=6@7=2|L-L%/I:7=5/J:60+53-8
-n^d-dh+eh=r@1_3/A:1_0_3/B:1-1-3@1-1&3-4#2-4$1-2!1-1;0-3|eh/C:1+0+2/D:cc_1/E:content+1@3+4&2+3#2+1/F:content_1/G:3_3/H:6=6@7=2|L-L%/I:7=5/J:60+53-8
-d^dh-eh+r=sh@2_2/A:1_0_3/B:1-1-3@1-1&3-4#2-4$1-2!1-1;0-3|eh/C:1+0+2/D:cc_1/E:content+1@3+4&2+3#2+1/F:content_1/G:3_3/H:6=6@7=2|L-L%/I:7=5/J:60+53-8
-dh^eh-r+sh=iy@3_1/A:1_0_3/B:1-1-3@1-1&3-4#2-4$1-2!1-1;0-3|eh/C:1+0+2/D:cc_1/E:content+1@3+4&2+3#2+1/F:content_1/G:3_3/H:6=6@7=2|L-L%/I:7=5/J:60+53-8
-eh^r-sh+iy=s@1_2/A:1_1_3/B:1-0-2@1-1&4-3#3-3$2-2!1-1;1-2|iy/C:1+0+2/D:content_1/E:content+1@4+3&3+2#1+1/F:content_1/G:3_3/H:6=6@7=2|L-L%/I:7=5/J:60+53-8
-r^sh-iy+s=ao@2_1/A:1_1_3/B:1-0-2@1-1&4-3#3-3$2-2!1-1;1-2|iy/C:1+0+2/D:content_1/E:content+1@4+3&3+2#1+1/F:content_1/G:3_3/H:6=6@7=2|L-L%/I:7=5/J:60+53-8
-sh^iy-s+ao=m@1_2/A:1_0_2/B:1-0-2@1-1&5-2#4-2$2-2!1-1;2-1|ao/C:1+1+4/D:content_1/E:content+1@5+2&4+1#1+1/F:content_1/G:3_3/H:6=6@7=2|L-L%/I:7=5/J:60+53-8
-iy^s-ao+m=ae@2_1/A:1_0_2/B:1-0-2@1-1&5-2#4-2$2-2!1-1;2-1|ao/C:1+1+4/D:content_1/E:content+1@5+2&4+1#1+1/F:content_1/G:3_3/H:6=6@7=2|L-L%/I:7=5/J:60+53-8
-s^ao-m+ae=p@1_4/A:1_0_2/B:1-1-4@1-1&6-1#5-1$2-1!1-0;3-0|ae/C:1+0+3/D:content_1/E:content+1@6+1&5+0#1+0/F:cc_1/G:3_3/H:6=6@7=2|L-L%/I:7=5/J:60+53-8
-ao^m-ae+p=s@2_3/A:1_0_2/B:1-1-4@1-1&6-1#5-1$2-1!1-0;3-0|ae/C:1+0+3/D:content_1/E:content+1@6+1&5+0#1+0/F:cc_1/G:3_3/H:6=6@7=2|L-L%/I:7=5/J:60+53-8
-m^ae-p+s=pau@3_2/A:1_0_2/B:1-1-4@1-1&6-1#5-1$2-1!1-0;3-0|ae/C:1+0+3/D:content_1/E:content+1@6+1&5+0#1+0/F:cc_1/G:3_3/H:6=6@7=2|L-L%/I:7=5/J:60+53-8
-ae^p-s+pau=ae@4_1/A:1_0_2/B:1-1-4@1-1&6-1#5-1$2-1!1-0;3-0|ae/C:1+0+3/D:content_1/E:content+1@6+1&5+0#1+0/F:cc_1/G:3_3/H:6=6@7=2|L-L%/I:7=5/J:60+53-8
-p^s-pau+ae=n@x_x/A:1_1_4/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:cc_1/G:6_6/H:x=x@1=8|0/I:7=5/J:60+53-8
-s^pau-ae+n=d@1_3/A:1_1_4/B:1-0-3@1-1&1-7#1-5$1-3!0-1;0-1|ae/C:1+1+3/D:content_1/E:cc+1@1+5&1+4#0+1/F:content_2/G:6_6/H:7=5@8=1|L-L%/I:0=0/J:60+53-8
-pau^ae-n+d=p@2_2/A:1_1_4/B:1-0-3@1-1&1-7#1-5$1-3!0-1;0-1|ae/C:1+1+3/D:content_1/E:cc+1@1+5&1+4#0+1/F:content_2/G:6_6/H:7=5@8=1|L-L%/I:0=0/J:60+53-8
-ae^n-d+p=ih@3_1/A:1_1_4/B:1-0-3@1-1&1-7#1-5$1-3!0-1;0-1|ae/C:1+1+3/D:content_1/E:cc+1@1+5&1+4#0+1/F:content_2/G:6_6/H:7=5@8=1|L-L%/I:0=0/J:60+53-8
-n^d-p+ih=k@1_3/A:1_0_3/B:1-1-3@1-2&2-6#1-4$1-2!1-2;0-5|ih/C:0+0+3/D:cc_1/E:content+2@2+4&1+3#0+1/F:content_1/G:6_6/H:7=5@8=1|L-L%/I:0=0/J:60+53-8
-d^p-ih+k=ch@2_2/A:1_0_3/B:1-1-3@1-2&2-6#1-4$1-2!1-2;0-5|ih/C:0+0+3/D:cc_1/E:content+2@2+4&1+3#0+1/F:content_1/G:6_6/H:7=5@8=1|L-L%/I:0=0/J:60+53-8
-p^ih-k+ch=er@3_1/A:1_0_3/B:1-1-3@1-2&2-6#1-4$1-2!1-2;0-5|ih/C:0+0+3/D:cc_1/E:content+2@2+4&1+3#0+1/F:content_1/G:6_6/H:7=5@8=1|L-L%/I:0=0/J:60+53-8
-ih^k-ch+er=z@1_3/A:1_1_3/B:0-0-3@2-1&3-5#2-4$2-2!1-1;1-4|er/C:1+0+3/D:cc_1/E:content+2@2+4&1+3#0+1/F:content_1/G:6_6/H:7=5@8=1|L-L%/I:0=0/J:60+53-8
-k^ch-er+z=hh@2_2/A:1_1_3/B:0-0-3@2-1&3-5#2-4$2-2!1-1;1-4|er/C:1+0+3/D:cc_1/E:content+2@2+4&1+3#0+1/F:content_1/G:6_6/H:7=5@8=1|L-L%/I:0=0/J:60+53-8
-ch^er-z+hh=ah@3_1/A:1_1_3/B:0-0-3@2-1&3-5#2-4$2-2!1-1;1-4|er/C:1+0+3/D:cc_1/E:content+2@2+4&1+3#0+1/F:content_1/G:6_6/H:7=5@8=1|L-L%/I:0=0/J:60+53-8
-er^z-hh+ah=ng@1_3/A:0_0_3/B:1-0-3@1-1&4-4#2-3$2-2!2-2;2-3|ah/C:0+0+2/D:content_2/E:content+1@3+3&2+2#1+1/F:content_2/G:6_6/H:7=5@8=1|L-L%/I:0=0/J:60+53-8
-z^hh-ah+ng=ax@2_2/A:0_0_3/B:1-0-3@1-1&4-4#2-3$2-2!2-2;2-3|ah/C:0+0+2/D:content_2/E:content+1@3+3&2+2#1+1/F:content_2/G:6_6/H:7=5@8=1|L-L%/I:0=0/J:60+53-8
-hh^ah-ng+ax=p@3_1/A:0_0_3/B:1-0-3@1-1&4-4#2-3$2-2!2-2;2-3|ah/C:0+0+2/D:content_2/E:content+1@3+3&2+2#1+1/F:content_2/G:6_6/H:7=5@8=1|L-L%/I:0=0/J:60+53-8
-ah^ng-ax+p=aa@1_2/A:1_0_3/B:0-0-2@1-2&5-3#3-3$2-2!1-1;3-2|ax/C:1+0+2/D:content_1/E:content+2@4+2&3+1#1+1/F:content_1/G:6_6/H:7=5@8=1|L-L%/I:0=0/J:60+53-8
-ng^ax-p+aa=n@2_1/A:1_0_3/B:0-0-2@1-2&5-3#3-3$2-2!1-1;3-2|ax/C:1+0+2/D:content_1/E:content+2@4+2&3+1#1+1/F:content_1/G:6_6/H:7=5@8=1|L-L%/I:0=0/J:60+53-8
-ax^p-aa+n=p@1_2/A:0_0_2/B:1-0-2@2-1&6-2#3-2$2-2!2-1;4-1|aa/C:1+1+4/D:content_1/E:content+2@4+2&3+1#1+1/F:content_1/G:6_6/H:7=5@8=1|L-L%/I:0=0/J:60+53-8
-p^aa-n+p=eh@2_1/A:0_0_2/B:1-0-2@2-1&6-2#3-2$2-2!2-1;4-1|aa/C:1+1+4/D:content_1/E:content+2@4+2&3+1#1+1/F:content_1/G:6_6/H:7=5@8=1|L-L%/I:0=0/J:60+53-8
-aa^n-p+eh=g@1_4/A:1_0_2/B:1-1-4@1-1&7-1#4-1$2-1!1-0;5-0|eh/C:0+0+0/D:content_2/E:content+1@5+1&4+0#1+0/F:0_0/G:6_6/H:7=5@8=1|L-L%/I:0=0/J:60+53-8
-n^p-eh+g=z@2_3/A:1_0_2/B:1-1-4@1-1&7-1#4-1$2-1!1-0;5-0|eh/C:0+0+0/D:content_2/E:content+1@5+1&4+0#1+0/F:0_0/G:6_6/H:7=5@8=1|L-L%/I:0=0/J:60+53-8
-p^eh-g+z=pau@3_2/A:1_0_2/B:1-1-4@1-1&7-1#4-1$2-1!1-0;5-0|eh/C:0+0+0/D:content_2/E:content+1@5+1&4+0#1+0/F:0_0/G:6_6/H:7=5@8=1|L-L%/I:0=0/J:60+53-8
-eh^g-z+pau=x@4_1/A:1_0_2/B:1-1-4@1-1&7-1#4-1$2-1!1-0;5-0|eh/C:0+0+0/D:content_2/E:content+1@5+1&4+0#1+0/F:0_0/G:6_6/H:7=5@8=1|L-L%/I:0=0/J:60+53-8
-g^z-pau+x=x@x_x/A:1_1_4/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:content_1/E:x+x@x+x&x+x#x+x/F:0_0/G:7_5/H:x=x@1=8|0/I:0=0/J:60+53-8
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice08.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice08.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice08.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice08.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,199 +0,0 @@
-x^x-pau+sh=iy@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+2/D:0_0/E:x+x@x+x&x+x#x+x/F:content_1/G:0_0/H:x=x@1=11|0/I:5=5/J:71+55-11
-x^pau-sh+iy=t@1_2/A:0_0_0/B:1-1-2@1-1&1-5#1-4$1-3!0-1;0-1|iy/C:1+1+3/D:0_0/E:content+1@1+5&1+2#0+1/F:content_1/G:0_0/H:5=5@1=11|L-L%/I:5=5/J:71+55-11
-pau^sh-iy+t=uh@2_1/A:0_0_0/B:1-1-2@1-1&1-5#1-4$1-3!0-1;0-1|iy/C:1+1+3/D:0_0/E:content+1@1+5&1+2#0+1/F:content_1/G:0_0/H:5=5@1=11|L-L%/I:5=5/J:71+55-11
-sh^iy-t+uh=k@1_3/A:1_1_2/B:1-1-3@1-1&2-4#1-3$1-2!1-1;1-3|uh/C:1+0+3/D:content_1/E:content+1@2+4&2+1#1+3/F:in_1/G:0_0/H:5=5@1=11|L-L%/I:5=5/J:71+55-11
-iy^t-uh+k=d@2_2/A:1_1_2/B:1-1-3@1-1&2-4#1-3$1-2!1-1;1-3|uh/C:1+0+3/D:content_1/E:content+1@2+4&2+1#1+3/F:in_1/G:0_0/H:5=5@1=11|L-L%/I:5=5/J:71+55-11
-t^uh-k+d=aw@3_1/A:1_1_2/B:1-1-3@1-1&2-4#1-3$1-2!1-1;1-3|uh/C:1+0+3/D:content_1/E:content+1@2+4&2+1#1+3/F:in_1/G:0_0/H:5=5@1=11|L-L%/I:5=5/J:71+55-11
-uh^k-d+aw=n@1_3/A:1_1_3/B:1-0-3@1-1&3-3#2-2$2-2!1-2;1-2|aw/C:0+0+1/D:content_1/E:in+1@3+3&3+1#1+2/F:det_1/G:0_0/H:5=5@1=11|L-L%/I:5=5/J:71+55-11
-k^d-aw+n=ax@2_2/A:1_1_3/B:1-0-3@1-1&3-3#2-2$2-2!1-2;1-2|aw/C:0+0+1/D:content_1/E:in+1@3+3&3+1#1+2/F:det_1/G:0_0/H:5=5@1=11|L-L%/I:5=5/J:71+55-11
-d^aw-n+ax=jh@3_1/A:1_1_3/B:1-0-3@1-1&3-3#2-2$2-2!1-2;1-2|aw/C:0+0+1/D:content_1/E:in+1@3+3&3+1#1+2/F:det_1/G:0_0/H:5=5@1=11|L-L%/I:5=5/J:71+55-11
-aw^n-ax+jh=aa@1_1/A:1_0_3/B:0-0-1@1-1&4-2#3-2$2-2!1-1;2-1|ax/C:1+1+3/D:in_1/E:det+1@4+2&3+1#2+1/F:content_1/G:0_0/H:5=5@1=11|L-L%/I:5=5/J:71+55-11
-n^ax-jh+aa=r@1_3/A:0_0_1/B:1-1-3@1-1&5-1#3-1$2-1!2-0;3-0|aa/C:1+0+4/D:det_1/E:content+1@5+1&3+0#3+0/F:in_1/G:0_0/H:5=5@1=11|L-L%/I:5=5/J:71+55-11
-ax^jh-aa+r=pau@2_2/A:0_0_1/B:1-1-3@1-1&5-1#3-1$2-1!2-0;3-0|aa/C:1+0+4/D:det_1/E:content+1@5+1&3+0#3+0/F:in_1/G:0_0/H:5=5@1=11|L-L%/I:5=5/J:71+55-11
-jh^aa-r+pau=f@3_1/A:0_0_1/B:1-1-3@1-1&5-1#3-1$2-1!2-0;3-0|aa/C:1+0+4/D:det_1/E:content+1@5+1&3+0#3+0/F:in_1/G:0_0/H:5=5@1=11|L-L%/I:5=5/J:71+55-11
-aa^r-pau+f=r@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+4/D:content_1/E:x+x@x+x&x+x#x+x/F:in_1/G:5_5/H:x=x@1=11|0/I:5=5/J:71+55-11
-r^pau-f+r=ah@1_4/A:1_1_3/B:1-0-4@1-1&1-5#1-4$1-3!0-1;0-1|ah/C:1+1+3/D:content_1/E:in+1@1+5&1+2#0+1/F:content_1/G:5_5/H:5=5@2=10|L-L%/I:3=3/J:71+55-11
-pau^f-r+ah=m@2_3/A:1_1_3/B:1-0-4@1-1&1-5#1-4$1-3!0-1;0-1|ah/C:1+1+3/D:content_1/E:in+1@1+5&1+2#0+1/F:content_1/G:5_5/H:5=5@2=10|L-L%/I:3=3/J:71+55-11
-f^r-ah+m=w@3_2/A:1_1_3/B:1-0-4@1-1&1-5#1-4$1-3!0-1;0-1|ah/C:1+1+3/D:content_1/E:in+1@1+5&1+2#0+1/F:content_1/G:5_5/H:5=5@2=10|L-L%/I:3=3/J:71+55-11
-r^ah-m+w=ah@4_1/A:1_1_3/B:1-0-4@1-1&1-5#1-4$1-3!0-1;0-1|ah/C:1+1+3/D:content_1/E:in+1@1+5&1+2#0+1/F:content_1/G:5_5/H:5=5@2=10|L-L%/I:3=3/J:71+55-11
-ah^m-w+ah=n@1_3/A:1_0_4/B:1-1-3@1-1&2-4#1-3$1-2!1-1;0-3|ah/C:1+0+2/D:in_1/E:content+1@2+4&1+1#0+3/F:in_1/G:5_5/H:5=5@2=10|L-L%/I:3=3/J:71+55-11
-m^w-ah+n=ah@2_2/A:1_0_4/B:1-1-3@1-1&2-4#1-3$1-2!1-1;0-3|ah/C:1+0+2/D:in_1/E:content+1@2+4&1+1#0+3/F:in_1/G:5_5/H:5=5@2=10|L-L%/I:3=3/J:71+55-11
-w^ah-n+ah=v@3_1/A:1_0_4/B:1-1-3@1-1&2-4#1-3$1-2!1-1;0-3|ah/C:1+0+2/D:in_1/E:content+1@2+4&1+1#0+3/F:in_1/G:5_5/H:5=5@2=10|L-L%/I:3=3/J:71+55-11
-ah^n-ah+v=dh@1_2/A:1_1_3/B:1-0-2@1-1&3-3#2-2$2-2!1-2;1-2|ah/C:0+0+2/D:content_1/E:in+1@3+3&2+1#1+2/F:det_1/G:5_5/H:5=5@2=10|L-L%/I:3=3/J:71+55-11
-n^ah-v+dh=ax@2_1/A:1_1_3/B:1-0-2@1-1&3-3#2-2$2-2!1-2;1-2|ah/C:0+0+2/D:content_1/E:in+1@3+3&2+1#1+2/F:det_1/G:5_5/H:5=5@2=10|L-L%/I:3=3/J:71+55-11
-ah^v-dh+ax=sh@1_2/A:1_0_2/B:0-0-2@1-1&4-2#3-2$2-2!1-1;2-1|ax/C:1+1+5/D:in_1/E:det+1@4+2&2+1#2+1/F:content_1/G:5_5/H:5=5@2=10|L-L%/I:3=3/J:71+55-11
-v^dh-ax+sh=eh@2_1/A:1_0_2/B:0-0-2@1-1&4-2#3-2$2-2!1-1;2-1|ax/C:1+1+5/D:in_1/E:det+1@4+2&2+1#2+1/F:content_1/G:5_5/H:5=5@2=10|L-L%/I:3=3/J:71+55-11
-dh^ax-sh+eh=l@1_5/A:0_0_2/B:1-1-5@1-1&5-1#3-1$2-1!2-0;3-0|eh/C:1+0+2/D:det_1/E:content+1@5+1&2+0#3+0/F:in_1/G:5_5/H:5=5@2=10|L-L%/I:3=3/J:71+55-11
-ax^sh-eh+l=v@2_4/A:0_0_2/B:1-1-5@1-1&5-1#3-1$2-1!2-0;3-0|eh/C:1+0+2/D:det_1/E:content+1@5+1&2+0#3+0/F:in_1/G:5_5/H:5=5@2=10|L-L%/I:3=3/J:71+55-11
-sh^eh-l+v=z@3_3/A:0_0_2/B:1-1-5@1-1&5-1#3-1$2-1!2-0;3-0|eh/C:1+0+2/D:det_1/E:content+1@5+1&2+0#3+0/F:in_1/G:5_5/H:5=5@2=10|L-L%/I:3=3/J:71+55-11
-eh^l-v+z=pau@4_2/A:0_0_2/B:1-1-5@1-1&5-1#3-1$2-1!2-0;3-0|eh/C:1+0+2/D:det_1/E:content+1@5+1&2+0#3+0/F:in_1/G:5_5/H:5=5@2=10|L-L%/I:3=3/J:71+55-11
-l^v-z+pau=ae@5_1/A:0_0_2/B:1-1-5@1-1&5-1#3-1$2-1!2-0;3-0|eh/C:1+0+2/D:det_1/E:content+1@5+1&2+0#3+0/F:in_1/G:5_5/H:5=5@2=10|L-L%/I:3=3/J:71+55-11
-v^z-pau+ae=z@x_x/A:1_1_5/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:content_1/E:x+x@x+x&x+x#x+x/F:in_1/G:5_5/H:x=x@1=11|0/I:3=3/J:71+55-11
-z^pau-ae+z=sh@1_2/A:1_1_5/B:1-0-2@1-1&1-3#1-3$1-3!0-1;0-1|ae/C:1+1+2/D:content_1/E:in+1@1+3&1+2#0+1/F:content_1/G:5_5/H:3=3@3=9|L-L%/I:9=5/J:71+55-11
-pau^ae-z+sh=iy@2_1/A:1_1_5/B:1-0-2@1-1&1-3#1-3$1-3!0-1;0-1|ae/C:1+1+2/D:content_1/E:in+1@1+3&1+2#0+1/F:content_1/G:5_5/H:3=3@3=9|L-L%/I:9=5/J:71+55-11
-ae^z-sh+iy=p@1_2/A:1_0_2/B:1-1-2@1-1&2-2#1-2$1-2!1-1;0-1|iy/C:1+1+4/D:in_1/E:content+1@2+2&1+1#0+1/F:content_1/G:5_5/H:3=3@3=9|L-L%/I:9=5/J:71+55-11
-z^sh-iy+p=ae@2_1/A:1_0_2/B:1-1-2@1-1&2-2#1-2$1-2!1-1;0-1|iy/C:1+1+4/D:in_1/E:content+1@2+2&1+1#0+1/F:content_1/G:5_5/H:3=3@3=9|L-L%/I:9=5/J:71+55-11
-sh^iy-p+ae=s@1_4/A:1_1_2/B:1-1-4@1-1&3-1#2-1$2-1!1-0;1-0|ae/C:1+0+2/D:content_1/E:content+1@3+1&2+0#1+0/F:content_1/G:5_5/H:3=3@3=9|L-L%/I:9=5/J:71+55-11
-iy^p-ae+s=t@2_3/A:1_1_2/B:1-1-4@1-1&3-1#2-1$2-1!1-0;1-0|ae/C:1+0+2/D:content_1/E:content+1@3+1&2+0#1+0/F:content_1/G:5_5/H:3=3@3=9|L-L%/I:9=5/J:71+55-11
-p^ae-s+t=pau@3_2/A:1_1_2/B:1-1-4@1-1&3-1#2-1$2-1!1-0;1-0|ae/C:1+0+2/D:content_1/E:content+1@3+1&2+0#1+0/F:content_1/G:5_5/H:3=3@3=9|L-L%/I:9=5/J:71+55-11
-ae^s-t+pau=ih@4_1/A:1_1_2/B:1-1-4@1-1&3-1#2-1$2-1!1-0;1-0|ae/C:1+0+2/D:content_1/E:content+1@3+1&2+0#1+0/F:content_1/G:5_5/H:3=3@3=9|L-L%/I:9=5/J:71+55-11
-s^t-pau+ih=t@x_x/A:1_1_4/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:content_1/E:x+x@x+x&x+x#x+x/F:content_1/G:3_3/H:x=x@1=11|0/I:9=5/J:71+55-11
-t^pau-ih+t=w@1_2/A:1_1_4/B:1-0-2@1-1&1-9#1-6$1-3!0-1;0-2|ih/C:1+0+3/D:content_1/E:content+1@1+5&1+3#0+2/F:aux_1/G:3_3/H:9=5@4=8|L-L%/I:8=5/J:71+55-11
-pau^ih-t+w=aa@2_1/A:1_1_4/B:1-0-2@1-1&1-9#1-6$1-3!0-1;0-2|ih/C:1+0+3/D:content_1/E:content+1@1+5&1+3#0+2/F:aux_1/G:3_3/H:9=5@4=8|L-L%/I:8=5/J:71+55-11
-ih^t-w+aa=z@1_3/A:1_0_2/B:1-0-3@1-1&2-8#1-5$1-3!1-1;0-1|aa/C:1+1+3/D:content_1/E:aux+1@2+4&2+3#1+1/F:content_2/G:3_3/H:9=5@4=8|L-L%/I:8=5/J:71+55-11
-t^w-aa+z=l@2_2/A:1_0_2/B:1-0-3@1-1&2-8#1-5$1-3!1-1;0-1|aa/C:1+1+3/D:content_1/E:aux+1@2+4&2+3#1+1/F:content_2/G:3_3/H:9=5@4=8|L-L%/I:8=5/J:71+55-11
-w^aa-z+l=ey@3_1/A:1_0_2/B:1-0-3@1-1&2-8#1-5$1-3!1-1;0-1|aa/C:1+1+3/D:content_1/E:aux+1@2+4&2+3#1+1/F:content_2/G:3_3/H:9=5@4=8|L-L%/I:8=5/J:71+55-11
-aa^z-l+ey=b@1_3/A:1_0_3/B:1-1-3@1-2&3-7#2-4$1-2!1-2;0-6|ey/C:0+0+3/D:aux_1/E:content+2@3+3&2+2#2+1/F:content_2/G:3_3/H:9=5@4=8|L-L%/I:8=5/J:71+55-11
-z^l-ey+b=ax@2_2/A:1_0_3/B:1-1-3@1-2&3-7#2-4$1-2!1-2;0-6|ey/C:0+0+3/D:aux_1/E:content+2@3+3&2+2#2+1/F:content_2/G:3_3/H:9=5@4=8|L-L%/I:8=5/J:71+55-11
-l^ey-b+ax=l@3_1/A:1_0_3/B:1-1-3@1-2&3-7#2-4$1-2!1-2;0-6|ey/C:0+0+3/D:aux_1/E:content+2@3+3&2+2#2+1/F:content_2/G:3_3/H:9=5@4=8|L-L%/I:8=5/J:71+55-11
-ey^b-ax+l=d@1_3/A:1_1_3/B:0-0-3@2-1&4-6#3-4$2-2!1-1;1-5|ax/C:1+0+2/D:aux_1/E:content+2@3+3&2+2#2+1/F:content_2/G:3_3/H:9=5@4=8|L-L%/I:8=5/J:71+55-11
-b^ax-l+d=ao@2_2/A:1_1_3/B:0-0-3@2-1&4-6#3-4$2-2!1-1;1-5|ax/C:1+0+2/D:aux_1/E:content+2@3+3&2+2#2+1/F:content_2/G:3_3/H:9=5@4=8|L-L%/I:8=5/J:71+55-11
-ax^l-d+ao=r@3_1/A:1_1_3/B:0-0-3@2-1&4-6#3-4$2-2!1-1;1-5|ax/C:1+0+2/D:aux_1/E:content+2@3+3&2+2#2+1/F:content_2/G:3_3/H:9=5@4=8|L-L%/I:8=5/J:71+55-11
-l^d-ao+r=ax@1_2/A:0_0_3/B:1-0-2@1-2&5-5#3-3$2-2!2-2;2-4|ao/C:0+0+3/D:content_2/E:content+2@4+2&3+1#1+1/F:content_3/G:3_3/H:9=5@4=8|L-L%/I:8=5/J:71+55-11
-d^ao-r+ax=n@2_1/A:0_0_3/B:1-0-2@1-2&5-5#3-3$2-2!2-2;2-4|ao/C:0+0+3/D:content_2/E:content+2@4+2&3+1#1+1/F:content_3/G:3_3/H:9=5@4=8|L-L%/I:8=5/J:71+55-11
-ao^r-ax+n=jh@1_3/A:1_0_2/B:0-0-3@2-1&6-4#4-3$2-2!1-1;3-3|ax/C:1+0+3/D:content_2/E:content+2@4+2&3+1#1+1/F:content_3/G:3_3/H:9=5@4=8|L-L%/I:8=5/J:71+55-11
-r^ax-n+jh=m@2_2/A:1_0_2/B:0-0-3@2-1&6-4#4-3$2-2!1-1;3-3|ax/C:1+0+3/D:content_2/E:content+2@4+2&3+1#1+1/F:content_3/G:3_3/H:9=5@4=8|L-L%/I:8=5/J:71+55-11
-ax^n-jh+m=aa@3_1/A:1_0_2/B:0-0-3@2-1&6-4#4-3$2-2!1-1;3-3|ax/C:1+0+3/D:content_2/E:content+2@4+2&3+1#1+1/F:content_3/G:3_3/H:9=5@4=8|L-L%/I:8=5/J:71+55-11
-n^jh-m+aa=r@1_3/A:0_0_3/B:1-0-3@1-3&7-3#4-2$2-2!2-2;4-2|aa/C:0+0+3/D:content_2/E:content+3@5+1&4+0#1+0/F:cc_1/G:3_3/H:9=5@4=8|L-L%/I:8=5/J:71+55-11
-jh^m-aa+r=m@2_2/A:0_0_3/B:1-0-3@1-3&7-3#4-2$2-2!2-2;4-2|aa/C:0+0+3/D:content_2/E:content+3@5+1&4+0#1+0/F:cc_1/G:3_3/H:9=5@4=8|L-L%/I:8=5/J:71+55-11
-m^aa-r+m=ax@3_1/A:0_0_3/B:1-0-3@1-3&7-3#4-2$2-2!2-2;4-2|aa/C:0+0+3/D:content_2/E:content+3@5+1&4+0#1+0/F:cc_1/G:3_3/H:9=5@4=8|L-L%/I:8=5/J:71+55-11
-aa^r-m+ax=l@1_3/A:1_0_3/B:0-0-3@2-2&8-2#5-2$2-2!1-1;5-1|ax/C:1+1+2/D:content_2/E:content+3@5+1&4+0#1+0/F:cc_1/G:3_3/H:9=5@4=8|L-L%/I:8=5/J:71+55-11
-r^m-ax+l=ey@2_2/A:1_0_3/B:0-0-3@2-2&8-2#5-2$2-2!1-1;5-1|ax/C:1+1+2/D:content_2/E:content+3@5+1&4+0#1+0/F:cc_1/G:3_3/H:9=5@4=8|L-L%/I:8=5/J:71+55-11
-m^ax-l+ey=d@3_1/A:1_0_3/B:0-0-3@2-2&8-2#5-2$2-2!1-1;5-1|ax/C:1+1+2/D:content_2/E:content+3@5+1&4+0#1+0/F:cc_1/G:3_3/H:9=5@4=8|L-L%/I:8=5/J:71+55-11
-ax^l-ey+d=pau@1_2/A:0_0_3/B:1-1-2@3-1&9-1#5-1$2-1!2-0;6-0|ey/C:1+0+3/D:content_2/E:content+3@5+1&4+0#1+0/F:cc_1/G:3_3/H:9=5@4=8|L-L%/I:8=5/J:71+55-11
-l^ey-d+pau=b@2_1/A:0_0_3/B:1-1-2@3-1&9-1#5-1$2-1!2-0;6-0|ey/C:1+0+3/D:content_2/E:content+3@5+1&4+0#1+0/F:cc_1/G:3_3/H:9=5@4=8|L-L%/I:8=5/J:71+55-11
-ey^d-pau+b=ah@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_3/E:x+x@x+x&x+x#x+x/F:cc_1/G:9_5/H:x=x@1=11|0/I:8=5/J:71+55-11
-d^pau-b+ah=t@1_3/A:1_1_2/B:1-0-3@1-1&1-8#1-4$1-4!0-3;0-3|ah/C:0+0+2/D:content_3/E:cc+1@1+5&1+2#0+3/F:to_1/G:9_5/H:8=5@5=7|L-L%/I:4=3/J:71+55-11
-pau^b-ah+t=t@2_2/A:1_1_2/B:1-0-3@1-1&1-8#1-4$1-4!0-3;0-3|ah/C:0+0+2/D:content_3/E:cc+1@1+5&1+2#0+3/F:to_1/G:9_5/H:8=5@5=7|L-L%/I:4=3/J:71+55-11
-b^ah-t+t=ax@3_1/A:1_1_2/B:1-0-3@1-1&1-8#1-4$1-4!0-3;0-3|ah/C:0+0+2/D:content_3/E:cc+1@1+5&1+2#0+3/F:to_1/G:9_5/H:8=5@5=7|L-L%/I:4=3/J:71+55-11
-ah^t-t+ax=hh@1_2/A:1_0_3/B:0-0-2@1-1&2-7#1-4$1-4!1-2;0-2|ax/C:0+0+2/D:cc_1/E:to+1@2+4&1+2#0+2/F:pps_1/G:9_5/H:8=5@5=7|L-L%/I:4=3/J:71+55-11
-t^t-ax+hh=er@2_1/A:1_0_3/B:0-0-2@1-1&2-7#1-4$1-4!1-2;0-2|ax/C:0+0+2/D:cc_1/E:to+1@2+4&1+2#0+2/F:pps_1/G:9_5/H:8=5@5=7|L-L%/I:4=3/J:71+55-11
-t^ax-hh+er=g@1_2/A:0_0_2/B:0-0-2@1-1&3-6#1-4$1-4!2-1;0-1|er/C:1+1+4/D:to_1/E:pps+1@3+3&1+2#0+1/F:content_1/G:9_5/H:8=5@5=7|L-L%/I:4=3/J:71+55-11
-ax^hh-er+g=r@2_1/A:0_0_2/B:0-0-2@1-1&3-6#1-4$1-4!2-1;0-1|er/C:1+1+4/D:to_1/E:pps+1@3+3&1+2#0+1/F:content_1/G:9_5/H:8=5@5=7|L-L%/I:4=3/J:71+55-11
-hh^er-g+r=ey@1_4/A:0_0_2/B:1-1-4@1-1&4-5#1-3$1-3!3-1;0-1|ey/C:1+1+3/D:pps_1/E:content+1@4+2&1+1#0+1/F:content_4/G:9_5/H:8=5@5=7|L-L%/I:4=3/J:71+55-11
-er^g-r+ey=t@2_3/A:0_0_2/B:1-1-4@1-1&4-5#1-3$1-3!3-1;0-1|ey/C:1+1+3/D:pps_1/E:content+1@4+2&1+1#0+1/F:content_4/G:9_5/H:8=5@5=7|L-L%/I:4=3/J:71+55-11
-g^r-ey+t=d@3_2/A:0_0_2/B:1-1-4@1-1&4-5#1-3$1-3!3-1;0-1|ey/C:1+1+3/D:pps_1/E:content+1@4+2&1+1#0+1/F:content_4/G:9_5/H:8=5@5=7|L-L%/I:4=3/J:71+55-11
-r^ey-t+d=ih@4_1/A:0_0_2/B:1-1-4@1-1&4-5#1-3$1-3!3-1;0-1|ey/C:1+1+3/D:pps_1/E:content+1@4+2&1+1#0+1/F:content_4/G:9_5/H:8=5@5=7|L-L%/I:4=3/J:71+55-11
-ey^t-d+ih=s@1_3/A:1_1_4/B:1-1-3@1-4&5-4#2-2$2-2!1-2;1-3|ih/C:0+0+2/D:content_1/E:content+4@5+1&2+0#1+0/F:content_1/G:9_5/H:8=5@5=7|L-L%/I:4=3/J:71+55-11
-t^d-ih+s=ax@2_2/A:1_1_4/B:1-1-3@1-4&5-4#2-2$2-2!1-2;1-3|ih/C:0+0+2/D:content_1/E:content+4@5+1&2+0#1+0/F:content_1/G:9_5/H:8=5@5=7|L-L%/I:4=3/J:71+55-11
-d^ih-s+ax=p@3_1/A:1_1_4/B:1-1-3@1-4&5-4#2-2$2-2!1-2;1-3|ih/C:0+0+2/D:content_1/E:content+4@5+1&2+0#1+0/F:content_1/G:9_5/H:8=5@5=7|L-L%/I:4=3/J:71+55-11
-ih^s-ax+p=oy@1_2/A:1_1_3/B:0-0-2@2-3&6-3#3-2$3-2!1-1;1-2|ax/C:1+0+3/D:content_1/E:content+4@5+1&2+0#1+0/F:content_1/G:9_5/H:8=5@5=7|L-L%/I:4=3/J:71+55-11
-s^ax-p+oy=n@2_1/A:1_1_3/B:0-0-2@2-3&6-3#3-2$3-2!1-1;1-2|ax/C:1+0+3/D:content_1/E:content+4@5+1&2+0#1+0/F:content_1/G:9_5/H:8=5@5=7|L-L%/I:4=3/J:71+55-11
-ax^p-oy+n=t@1_3/A:0_0_2/B:1-0-3@3-2&7-2#3-1$3-2!2-0;2-1|oy/C:0+1+4/D:content_1/E:content+4@5+1&2+0#1+0/F:content_1/G:9_5/H:8=5@5=7|L-L%/I:4=3/J:71+55-11
-p^oy-n+t=m@2_2/A:0_0_2/B:1-0-3@3-2&7-2#3-1$3-2!2-0;2-1|oy/C:0+1+4/D:content_1/E:content+4@5+1&2+0#1+0/F:content_1/G:9_5/H:8=5@5=7|L-L%/I:4=3/J:71+55-11
-oy^n-t+m=ax@3_1/A:0_0_2/B:1-0-3@3-2&7-2#3-1$3-2!2-0;2-1|oy/C:0+1+4/D:content_1/E:content+4@5+1&2+0#1+0/F:content_1/G:9_5/H:8=5@5=7|L-L%/I:4=3/J:71+55-11
-n^t-m+ax=n@1_4/A:1_0_3/B:0-1-4@4-1&8-1#4-1$3-1!1-0;3-0|ax/C:1+0+2/D:content_1/E:content+4@5+1&2+0#1+0/F:content_1/G:9_5/H:8=5@5=7|L-L%/I:4=3/J:71+55-11
-t^m-ax+n=t@2_3/A:1_0_3/B:0-1-4@4-1&8-1#4-1$3-1!1-0;3-0|ax/C:1+0+2/D:content_1/E:content+4@5+1&2+0#1+0/F:content_1/G:9_5/H:8=5@5=7|L-L%/I:4=3/J:71+55-11
-m^ax-n+t=pau@3_2/A:1_0_3/B:0-1-4@4-1&8-1#4-1$3-1!1-0;3-0|ax/C:1+0+2/D:content_1/E:content+4@5+1&2+0#1+0/F:content_1/G:9_5/H:8=5@5=7|L-L%/I:4=3/J:71+55-11
-ax^n-t+pau=ih@4_1/A:1_0_3/B:0-1-4@4-1&8-1#4-1$3-1!1-0;3-0|ax/C:1+0+2/D:content_1/E:content+4@5+1&2+0#1+0/F:content_1/G:9_5/H:8=5@5=7|L-L%/I:4=3/J:71+55-11
-n^t-pau+ih=t@x_x/A:0_1_4/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:content_4/E:x+x@x+x&x+x#x+x/F:content_1/G:8_5/H:x=x@1=11|0/I:4=3/J:71+55-11
-t^pau-ih+t=w@1_2/A:0_1_4/B:1-0-2@1-1&1-4#1-3$1-3!0-1;0-2|ih/C:1+0+3/D:content_4/E:content+1@1+3&1+1#0+2/F:aux_1/G:8_5/H:4=3@6=6|L-L%/I:8=8/J:71+55-11
-pau^ih-t+w=aa@2_1/A:0_1_4/B:1-0-2@1-1&1-4#1-3$1-3!0-1;0-2|ih/C:1+0+3/D:content_4/E:content+1@1+3&1+1#0+2/F:aux_1/G:8_5/H:4=3@6=6|L-L%/I:8=8/J:71+55-11
-ih^t-w+aa=z@1_3/A:1_0_2/B:1-0-3@1-1&2-3#1-2$1-3!1-1;0-1|aa/C:1+1+3/D:content_1/E:aux+1@2+2&2+1#1+1/F:content_2/G:8_5/H:4=3@6=6|L-L%/I:8=8/J:71+55-11
-t^w-aa+z=eh@2_2/A:1_0_2/B:1-0-3@1-1&2-3#1-2$1-3!1-1;0-1|aa/C:1+1+3/D:content_1/E:aux+1@2+2&2+1#1+1/F:content_2/G:8_5/H:4=3@6=6|L-L%/I:8=8/J:71+55-11
-w^aa-z+eh=m@3_1/A:1_0_2/B:1-0-3@1-1&2-3#1-2$1-3!1-1;0-1|aa/C:1+1+3/D:content_1/E:aux+1@2+2&2+1#1+1/F:content_2/G:8_5/H:4=3@6=6|L-L%/I:8=8/J:71+55-11
-aa^z-eh+m=p@1_3/A:1_0_3/B:1-1-3@1-2&3-2#2-1$1-2!1-0;0-1|eh/C:0+1+2/D:aux_1/E:content+2@3+1&2+0#2+0/F:content_1/G:8_5/H:4=3@6=6|L-L%/I:8=8/J:71+55-11
-z^eh-m+p=t@2_2/A:1_0_3/B:1-1-3@1-2&3-2#2-1$1-2!1-0;0-1|eh/C:0+1+2/D:aux_1/E:content+2@3+1&2+0#2+0/F:content_1/G:8_5/H:4=3@6=6|L-L%/I:8=8/J:71+55-11
-eh^m-p+t=iy@3_1/A:1_0_3/B:1-1-3@1-2&3-2#2-1$1-2!1-0;0-1|eh/C:0+1+2/D:aux_1/E:content+2@3+1&2+0#2+0/F:content_1/G:8_5/H:4=3@6=6|L-L%/I:8=8/J:71+55-11
-m^p-t+iy=pau@1_2/A:1_1_3/B:0-1-2@2-1&4-1#3-1$2-1!1-0;1-0|iy/C:1+0+2/D:aux_1/E:content+2@3+1&2+0#2+0/F:content_1/G:8_5/H:4=3@6=6|L-L%/I:8=8/J:71+55-11
-p^t-iy+pau=sh@2_1/A:1_1_3/B:0-1-2@2-1&4-1#3-1$2-1!1-0;1-0|iy/C:1+0+2/D:aux_1/E:content+2@3+1&2+0#2+0/F:content_1/G:8_5/H:4=3@6=6|L-L%/I:8=8/J:71+55-11
-t^iy-pau+sh=iy@x_x/A:0_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:content_2/E:x+x@x+x&x+x#x+x/F:content_1/G:4_3/H:x=x@1=11|0/I:8=8/J:71+55-11
-iy^pau-sh+iy=d@1_2/A:0_1_2/B:1-0-2@1-1&1-8#1-6$1-5!0-1;0-1|iy/C:1+1+3/D:content_2/E:content+1@1+8&1+5#0+1/F:content_1/G:4_3/H:8=8@7=5|L-L%/I:11=6/J:71+55-11
-pau^sh-iy+d=ih@2_1/A:0_1_2/B:1-0-2@1-1&1-8#1-6$1-5!0-1;0-1|iy/C:1+1+3/D:content_2/E:content+1@1+8&1+5#0+1/F:content_1/G:4_3/H:8=8@7=5|L-L%/I:11=6/J:71+55-11
-sh^iy-d+ih=d@1_3/A:1_0_2/B:1-1-3@1-1&2-7#1-5$1-4!1-1;0-1|ih/C:1+1+3/D:content_1/E:content+1@2+7&2+4#1+1/F:content_1/G:4_3/H:8=8@7=5|L-L%/I:11=6/J:71+55-11
-iy^d-ih+d=n@2_2/A:1_0_2/B:1-1-3@1-1&2-7#1-5$1-4!1-1;0-1|ih/C:1+1+3/D:content_1/E:content+1@2+7&2+4#1+1/F:content_1/G:4_3/H:8=8@7=5|L-L%/I:11=6/J:71+55-11
-d^ih-d+n=aa@3_1/A:1_0_2/B:1-1-3@1-1&2-7#1-5$1-4!1-1;0-1|ih/C:1+1+3/D:content_1/E:content+1@2+7&2+4#1+1/F:content_1/G:4_3/H:8=8@7=5|L-L%/I:11=6/J:71+55-11
-ih^d-n+aa=t@1_3/A:1_1_3/B:1-1-3@1-1&3-6#2-4$2-3!1-1;1-1|aa/C:1+1+3/D:content_1/E:content+1@3+6&3+3#1+1/F:content_1/G:4_3/H:8=8@7=5|L-L%/I:11=6/J:71+55-11
-d^n-aa+t=l@2_2/A:1_1_3/B:1-1-3@1-1&3-6#2-4$2-3!1-1;1-1|aa/C:1+1+3/D:content_1/E:content+1@3+6&3+3#1+1/F:content_1/G:4_3/H:8=8@7=5|L-L%/I:11=6/J:71+55-11
-n^aa-t+l=ay@3_1/A:1_1_3/B:1-1-3@1-1&3-6#2-4$2-3!1-1;1-1|aa/C:1+1+3/D:content_1/E:content+1@3+6&3+3#1+1/F:content_1/G:4_3/H:8=8@7=5|L-L%/I:11=6/J:71+55-11
-aa^t-l+ay=k@1_3/A:1_1_3/B:1-1-3@1-1&4-5#3-3$3-2!1-2;1-4|ay/C:0+0+2/D:content_1/E:content+1@4+5&4+2#1+2/F:to_1/G:4_3/H:8=8@7=5|L-L%/I:11=6/J:71+55-11
-t^l-ay+k=t@2_2/A:1_1_3/B:1-1-3@1-1&4-5#3-3$3-2!1-2;1-4|ay/C:0+0+2/D:content_1/E:content+1@4+5&4+2#1+2/F:to_1/G:4_3/H:8=8@7=5|L-L%/I:11=6/J:71+55-11
-l^ay-k+t=ax@3_1/A:1_1_3/B:1-1-3@1-1&4-5#3-3$3-2!1-2;1-4|ay/C:0+0+2/D:content_1/E:content+1@4+5&4+2#1+2/F:to_1/G:4_3/H:8=8@7=5|L-L%/I:11=6/J:71+55-11
-ay^k-t+ax=d@1_2/A:1_1_3/B:0-0-2@1-1&5-4#4-3$4-2!1-1;1-3|ax/C:1+0+4/D:content_1/E:to+1@5+4&5+2#1+1/F:content_1/G:4_3/H:8=8@7=5|L-L%/I:11=6/J:71+55-11
-k^t-ax+d=r@2_1/A:1_1_3/B:0-0-2@1-1&5-4#4-3$4-2!1-1;1-3|ax/C:1+0+4/D:content_1/E:to+1@5+4&5+2#1+1/F:content_1/G:4_3/H:8=8@7=5|L-L%/I:11=6/J:71+55-11
-t^ax-d+r=aa@1_4/A:0_0_2/B:1-0-4@1-1&6-3#4-2$4-2!2-2;2-2|aa/C:0+0+2/D:to_1/E:content+1@6+3&5+1#2+2/F:det_1/G:4_3/H:8=8@7=5|L-L%/I:11=6/J:71+55-11
-ax^d-r+aa=p@2_3/A:0_0_2/B:1-0-4@1-1&6-3#4-2$4-2!2-2;2-2|aa/C:0+0+2/D:to_1/E:content+1@6+3&5+1#2+2/F:det_1/G:4_3/H:8=8@7=5|L-L%/I:11=6/J:71+55-11
-d^r-aa+p=dh@3_2/A:0_0_2/B:1-0-4@1-1&6-3#4-2$4-2!2-2;2-2|aa/C:0+0+2/D:to_1/E:content+1@6+3&5+1#2+2/F:det_1/G:4_3/H:8=8@7=5|L-L%/I:11=6/J:71+55-11
-r^aa-p+dh=ax@4_1/A:0_0_2/B:1-0-4@1-1&6-3#4-2$4-2!2-2;2-2|aa/C:0+0+2/D:to_1/E:content+1@6+3&5+1#2+2/F:det_1/G:4_3/H:8=8@7=5|L-L%/I:11=6/J:71+55-11
-aa^p-dh+ax=jh@1_2/A:1_0_4/B:0-0-2@1-1&7-2#5-2$4-2!1-1;3-1|ax/C:1+1+3/D:content_1/E:det+1@7+2&6+1#1+1/F:content_1/G:4_3/H:8=8@7=5|L-L%/I:11=6/J:71+55-11
-p^dh-ax+jh=aa@2_1/A:1_0_4/B:0-0-2@1-1&7-2#5-2$4-2!1-1;3-1|ax/C:1+1+3/D:content_1/E:det+1@7+2&6+1#1+1/F:content_1/G:4_3/H:8=8@7=5|L-L%/I:11=6/J:71+55-11
-dh^ax-jh+aa=r@1_3/A:0_0_2/B:1-1-3@1-1&8-1#5-1$4-1!2-0;4-0|aa/C:1+0+3/D:det_1/E:content+1@8+1&6+0#2+0/F:in_1/G:4_3/H:8=8@7=5|L-L%/I:11=6/J:71+55-11
-ax^jh-aa+r=pau@2_2/A:0_0_2/B:1-1-3@1-1&8-1#5-1$4-1!2-0;4-0|aa/C:1+0+3/D:det_1/E:content+1@8+1&6+0#2+0/F:in_1/G:4_3/H:8=8@7=5|L-L%/I:11=6/J:71+55-11
-jh^aa-r+pau=f@3_1/A:0_0_2/B:1-1-3@1-1&8-1#5-1$4-1!2-0;4-0|aa/C:1+0+3/D:det_1/E:content+1@8+1&6+0#2+0/F:in_1/G:4_3/H:8=8@7=5|L-L%/I:11=6/J:71+55-11
-aa^r-pau+f=ao@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:in_1/G:8_8/H:x=x@1=11|0/I:11=6/J:71+55-11
-r^pau-f+ao=r@1_3/A:1_1_3/B:1-0-3@1-1&1-11#1-8$1-5!0-1;0-1|ao/C:1+1+3/D:content_1/E:in+1@1+6&1+4#0+1/F:content_1/G:8_8/H:11=6@8=4|L-L%/I:6=5/J:71+55-11
-pau^f-ao+r=f@2_2/A:1_1_3/B:1-0-3@1-1&1-11#1-8$1-5!0-1;0-1|ao/C:1+1+3/D:content_1/E:in+1@1+6&1+4#0+1/F:content_1/G:8_8/H:11=6@8=4|L-L%/I:6=5/J:71+55-11
-f^ao-r+f=ih@3_1/A:1_1_3/B:1-0-3@1-1&1-11#1-8$1-5!0-1;0-1|ao/C:1+1+3/D:content_1/E:in+1@1+6&1+4#0+1/F:content_1/G:8_8/H:11=6@8=4|L-L%/I:6=5/J:71+55-11
-ao^r-f+ih=r@1_3/A:1_0_3/B:1-1-3@1-1&2-10#1-7$1-4!1-1;0-5|ih/C:1+0+2/D:in_1/E:content+1@2+5&1+3#0+2/F:in_1/G:8_8/H:11=6@8=4|L-L%/I:6=5/J:71+55-11
-r^f-ih+r=ah@2_2/A:1_0_3/B:1-1-3@1-1&2-10#1-7$1-4!1-1;0-5|ih/C:1+0+2/D:in_1/E:content+1@2+5&1+3#0+2/F:in_1/G:8_8/H:11=6@8=4|L-L%/I:6=5/J:71+55-11
-f^ih-r+ah=v@3_1/A:1_0_3/B:1-1-3@1-1&2-10#1-7$1-4!1-1;0-5|ih/C:1+0+2/D:in_1/E:content+1@2+5&1+3#0+2/F:in_1/G:8_8/H:11=6@8=4|L-L%/I:6=5/J:71+55-11
-ih^r-ah+v=k@1_2/A:1_1_3/B:1-0-2@1-1&3-9#2-6$2-4!1-1;1-4|ah/C:1+0+3/D:content_1/E:in+1@3+4&2+3#1+1/F:content_2/G:8_8/H:11=6@8=4|L-L%/I:6=5/J:71+55-11
-r^ah-v+k=ih@2_1/A:1_1_3/B:1-0-2@1-1&3-9#2-6$2-4!1-1;1-4|ah/C:1+0+3/D:content_1/E:in+1@3+4&2+3#1+1/F:content_2/G:8_8/H:11=6@8=4|L-L%/I:6=5/J:71+55-11
-ah^v-k+ih=l@1_3/A:1_0_2/B:1-0-3@1-2&4-8#3-5$2-4!1-2;2-3|ih/C:0+0+2/D:in_1/E:content+2@4+3&2+2#2+1/F:content_3/G:8_8/H:11=6@8=4|L-L%/I:6=5/J:71+55-11
-v^k-ih+l=ih@2_2/A:1_0_2/B:1-0-3@1-2&4-8#3-5$2-4!1-2;2-3|ih/C:0+0+2/D:in_1/E:content+2@4+3&2+2#2+1/F:content_3/G:8_8/H:11=6@8=4|L-L%/I:6=5/J:71+55-11
-k^ih-l+ih=ng@3_1/A:1_0_2/B:1-0-3@1-2&4-8#3-5$2-4!1-2;2-3|ih/C:0+0+2/D:in_1/E:content+2@4+3&2+2#2+1/F:content_3/G:8_8/H:11=6@8=4|L-L%/I:6=5/J:71+55-11
-ih^l-ih+ng=s@1_2/A:1_0_3/B:0-0-2@2-1&5-7#4-5$2-4!1-1;3-2|ih/C:1+0+4/D:in_1/E:content+2@4+3&2+2#2+1/F:content_3/G:8_8/H:11=6@8=4|L-L%/I:6=5/J:71+55-11
-l^ih-ng+s=ah@2_1/A:1_0_3/B:0-0-2@2-1&5-7#4-5$2-4!1-1;3-2|ih/C:1+0+4/D:in_1/E:content+2@4+3&2+2#2+1/F:content_3/G:8_8/H:11=6@8=4|L-L%/I:6=5/J:71+55-11
-ih^ng-s+ah=m@1_4/A:0_0_2/B:1-0-4@1-3&6-6#4-4$2-4!2-1;4-1|ah/C:1+1+2/D:content_2/E:content+3@5+2&3+1#1+1/F:content_3/G:8_8/H:11=6@8=4|L-L%/I:6=5/J:71+55-11
-ng^s-ah+m=b@2_3/A:0_0_2/B:1-0-4@1-3&6-6#4-4$2-4!2-1;4-1|ah/C:1+1+2/D:content_2/E:content+3@5+2&3+1#1+1/F:content_3/G:8_8/H:11=6@8=4|L-L%/I:6=5/J:71+55-11
-s^ah-m+b=aa@3_2/A:0_0_2/B:1-0-4@1-3&6-6#4-4$2-4!2-1;4-1|ah/C:1+1+2/D:content_2/E:content+3@5+2&3+1#1+1/F:content_3/G:8_8/H:11=6@8=4|L-L%/I:6=5/J:71+55-11
-ah^m-b+aa=d@4_1/A:0_0_2/B:1-0-4@1-3&6-6#4-4$2-4!2-1;4-1|ah/C:1+1+2/D:content_2/E:content+3@5+2&3+1#1+1/F:content_3/G:8_8/H:11=6@8=4|L-L%/I:6=5/J:71+55-11
-m^b-aa+d=iy@1_2/A:1_0_4/B:1-1-2@2-2&7-5#5-3$2-3!1-2;5-2|aa/C:0+0+1/D:content_2/E:content+3@5+2&3+1#1+1/F:content_3/G:8_8/H:11=6@8=4|L-L%/I:6=5/J:71+55-11
-b^aa-d+iy=ah@2_1/A:1_0_4/B:1-1-2@2-2&7-5#5-3$2-3!1-2;5-2|aa/C:0+0+1/D:content_2/E:content+3@5+2&3+1#1+1/F:content_3/G:8_8/H:11=6@8=4|L-L%/I:6=5/J:71+55-11
-aa^d-iy+ah=n@1_1/A:1_1_2/B:0-0-1@3-1&8-4#6-3$3-3!1-1;1-1|iy/C:1+1+3/D:content_2/E:content+3@5+2&3+1#1+1/F:content_3/G:8_8/H:11=6@8=4|L-L%/I:6=5/J:71+55-11
-d^iy-ah+n=d@1_3/A:0_0_1/B:1-1-3@1-3&9-3#6-2$3-2!2-2;2-2|ah/C:0+0+2/D:content_3/E:content+3@6+1&4+0#1+0/F:content_1/G:8_8/H:11=6@8=4|L-L%/I:6=5/J:71+55-11
-iy^ah-n+d=er@2_2/A:0_0_1/B:1-1-3@1-3&9-3#6-2$3-2!2-2;2-2|ah/C:0+0+2/D:content_3/E:content+3@6+1&4+0#1+0/F:content_1/G:8_8/H:11=6@8=4|L-L%/I:6=5/J:71+55-11
-ah^n-d+er=n@3_1/A:0_0_1/B:1-1-3@1-3&9-3#6-2$3-2!2-2;2-2|ah/C:0+0+2/D:content_3/E:content+3@6+1&4+0#1+0/F:content_1/G:8_8/H:11=6@8=4|L-L%/I:6=5/J:71+55-11
-n^d-er+n=iy@1_2/A:1_1_3/B:0-0-2@2-2&10-2#7-2$4-2!1-1;1-1|er/C:1+1+2/D:content_3/E:content+3@6+1&4+0#1+0/F:content_1/G:8_8/H:11=6@8=4|L-L%/I:6=5/J:71+55-11
-d^er-n+iy=th@2_1/A:1_1_3/B:0-0-2@2-2&10-2#7-2$4-2!1-1;1-1|er/C:1+1+2/D:content_3/E:content+3@6+1&4+0#1+0/F:content_1/G:8_8/H:11=6@8=4|L-L%/I:6=5/J:71+55-11
-er^n-iy+th=pau@1_2/A:0_0_2/B:1-1-2@3-1&11-1#7-1$4-1!2-0;2-0|iy/C:1+0+2/D:content_3/E:content+3@6+1&4+0#1+0/F:content_1/G:8_8/H:11=6@8=4|L-L%/I:6=5/J:71+55-11
-n^iy-th+pau=s@2_1/A:0_0_2/B:1-1-2@3-1&11-1#7-1$4-1!2-0;2-0|iy/C:1+0+2/D:content_3/E:content+3@6+1&4+0#1+0/F:content_1/G:8_8/H:11=6@8=4|L-L%/I:6=5/J:71+55-11
-iy^th-pau+s=ow@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:content_3/E:x+x@x+x&x+x#x+x/F:content_1/G:11_6/H:x=x@1=11|0/I:6=5/J:71+55-11
-th^pau-s+ow=m@1_2/A:1_1_2/B:1-0-2@1-1&1-6#1-4$1-3!0-1;0-1|ow/C:1+1+3/D:content_3/E:content+1@1+5&1+3#0+1/F:content_2/G:11_6/H:6=5@9=3|L-L%/I:7=5/J:71+55-11
-pau^s-ow+m=ae@2_1/A:1_1_2/B:1-0-2@1-1&1-6#1-4$1-3!0-1;0-1|ow/C:1+1+3/D:content_3/E:content+1@1+5&1+3#0+1/F:content_2/G:11_6/H:6=5@9=3|L-L%/I:7=5/J:71+55-11
-s^ow-m+ae=n@1_3/A:1_0_2/B:1-1-3@1-2&2-5#1-3$1-2!1-3;0-4|ae/C:0+0+3/D:content_1/E:content+2@2+4&2+2#1+2/F:to_1/G:11_6/H:6=5@9=3|L-L%/I:7=5/J:71+55-11
-ow^m-ae+n=ax@2_2/A:1_0_2/B:1-1-3@1-2&2-5#1-3$1-2!1-3;0-4|ae/C:0+0+3/D:content_1/E:content+2@2+4&2+2#1+2/F:to_1/G:11_6/H:6=5@9=3|L-L%/I:7=5/J:71+55-11
-m^ae-n+ax=jh@3_1/A:1_0_2/B:1-1-3@1-2&2-5#1-3$1-2!1-3;0-4|ae/C:0+0+3/D:content_1/E:content+2@2+4&2+2#1+2/F:to_1/G:11_6/H:6=5@9=3|L-L%/I:7=5/J:71+55-11
-ae^n-ax+jh=d@1_3/A:1_1_3/B:0-0-3@2-1&3-4#2-3$2-2!1-2;1-3|ax/C:0+0+2/D:content_1/E:content+2@2+4&2+2#1+2/F:to_1/G:11_6/H:6=5@9=3|L-L%/I:7=5/J:71+55-11
-n^ax-jh+d=t@2_2/A:1_1_3/B:0-0-3@2-1&3-4#2-3$2-2!1-2;1-3|ax/C:0+0+2/D:content_1/E:content+2@2+4&2+2#1+2/F:to_1/G:11_6/H:6=5@9=3|L-L%/I:7=5/J:71+55-11
-ax^jh-d+t=ax@3_1/A:1_1_3/B:0-0-3@2-1&3-4#2-3$2-2!1-2;1-3|ax/C:0+0+2/D:content_1/E:content+2@2+4&2+2#1+2/F:to_1/G:11_6/H:6=5@9=3|L-L%/I:7=5/J:71+55-11
-jh^d-t+ax=p@1_2/A:0_0_3/B:0-0-2@1-1&4-3#2-3$2-2!2-1;2-2|ax/C:1+0+3/D:content_2/E:to+1@3+3&3+2#1+1/F:content_1/G:11_6/H:6=5@9=3|L-L%/I:7=5/J:71+55-11
-d^t-ax+p=uh@2_1/A:0_0_3/B:0-0-2@1-1&4-3#2-3$2-2!2-1;2-2|ax/C:1+0+3/D:content_2/E:to+1@3+3&3+2#1+1/F:content_1/G:11_6/H:6=5@9=3|L-L%/I:7=5/J:71+55-11
-t^ax-p+uh=t@1_3/A:0_0_2/B:1-0-3@1-1&5-2#2-2$2-2!3-1;3-1|uh/C:1+1+2/D:to_1/E:content+1@4+2&3+1#2+1/F:content_1/G:11_6/H:6=5@9=3|L-L%/I:7=5/J:71+55-11
-ax^p-uh+t=ih@2_2/A:0_0_2/B:1-0-3@1-1&5-2#2-2$2-2!3-1;3-1|uh/C:1+1+2/D:to_1/E:content+1@4+2&3+1#2+1/F:content_1/G:11_6/H:6=5@9=3|L-L%/I:7=5/J:71+55-11
-p^uh-t+ih=t@3_1/A:0_0_2/B:1-0-3@1-1&5-2#2-2$2-2!3-1;3-1|uh/C:1+1+2/D:to_1/E:content+1@4+2&3+1#2+1/F:content_1/G:11_6/H:6=5@9=3|L-L%/I:7=5/J:71+55-11
-uh^t-ih+t=pau@1_2/A:1_0_3/B:1-1-2@1-1&6-1#3-1$2-1!1-0;4-0|ih/C:0+0+3/D:content_1/E:content+1@5+1&4+0#1+0/F:in_2/G:11_6/H:6=5@9=3|L-L%/I:7=5/J:71+55-11
-t^ih-t+pau=ih@2_1/A:1_0_3/B:1-1-2@1-1&6-1#3-1$2-1!1-0;4-0|ih/C:0+0+3/D:content_1/E:content+1@5+1&4+0#1+0/F:in_2/G:11_6/H:6=5@9=3|L-L%/I:7=5/J:71+55-11
-ih^t-pau+ih=n@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:in_2/G:6_5/H:x=x@1=11|0/I:7=5/J:71+55-11
-t^pau-ih+n=t@1_3/A:1_1_2/B:0-0-3@1-2&1-7#1-5$1-4!0-1;0-2|ih/C:1+0+1/D:content_1/E:in+2@1+5&1+2#0+1/F:content_1/G:6_5/H:7=5@10=2|L-L%/I:5=5/J:71+55-11
-pau^ih-n+t=uw@2_2/A:1_1_2/B:0-0-3@1-2&1-7#1-5$1-4!0-1;0-2|ih/C:1+0+1/D:content_1/E:in+2@1+5&1+2#0+1/F:content_1/G:6_5/H:7=5@10=2|L-L%/I:5=5/J:71+55-11
-ih^n-t+uw=w@3_1/A:1_1_2/B:0-0-3@1-2&1-7#1-5$1-4!0-1;0-2|ih/C:1+0+1/D:content_1/E:in+2@1+5&1+2#0+1/F:content_1/G:6_5/H:7=5@10=2|L-L%/I:5=5/J:71+55-11
-n^t-uw+w=ah@1_1/A:0_0_3/B:1-0-1@2-1&2-6#1-4$1-4!0-1;0-1|uw/C:1+1+3/D:content_1/E:in+2@1+5&1+2#0+1/F:content_1/G:6_5/H:7=5@10=2|L-L%/I:5=5/J:71+55-11
-t^uw-w+ah=n@1_3/A:1_0_1/B:1-1-3@1-1&3-5#2-3$1-3!1-1;0-3|ah/C:1+0+2/D:in_2/E:content+1@2+4&1+1#0+3/F:in_1/G:6_5/H:7=5@10=2|L-L%/I:5=5/J:71+55-11
-uw^w-ah+n=ah@2_2/A:1_0_1/B:1-1-3@1-1&3-5#2-3$1-3!1-1;0-3|ah/C:1+0+2/D:in_2/E:content+1@2+4&1+1#0+3/F:in_1/G:6_5/H:7=5@10=2|L-L%/I:5=5/J:71+55-11
-w^ah-n+ah=v@3_1/A:1_0_1/B:1-1-3@1-1&3-5#2-3$1-3!1-1;0-3|ah/C:1+0+2/D:in_2/E:content+1@2+4&1+1#0+3/F:in_1/G:6_5/H:7=5@10=2|L-L%/I:5=5/J:71+55-11
-ah^n-ah+v=dh@1_2/A:1_1_3/B:1-0-2@1-1&4-4#3-2$2-3!1-2;1-2|ah/C:0+0+2/D:content_1/E:in+1@3+3&2+1#1+2/F:det_1/G:6_5/H:7=5@10=2|L-L%/I:5=5/J:71+55-11
-n^ah-v+dh=ax@2_1/A:1_1_3/B:1-0-2@1-1&4-4#3-2$2-3!1-2;1-2|ah/C:0+0+2/D:content_1/E:in+1@3+3&2+1#1+2/F:det_1/G:6_5/H:7=5@10=2|L-L%/I:5=5/J:71+55-11
-ah^v-dh+ax=k@1_2/A:1_0_2/B:0-0-2@1-1&5-3#4-2$2-3!1-1;2-1|ax/C:1+1+3/D:in_1/E:det+1@4+2&2+1#2+1/F:content_2/G:6_5/H:7=5@10=2|L-L%/I:5=5/J:71+55-11
-v^dh-ax+k=ah@2_1/A:1_0_2/B:0-0-2@1-1&5-3#4-2$2-3!1-1;2-1|ax/C:1+1+3/D:in_1/E:det+1@4+2&2+1#2+1/F:content_2/G:6_5/H:7=5@10=2|L-L%/I:5=5/J:71+55-11
-dh^ax-k+ah=b@1_3/A:0_0_2/B:1-1-3@1-2&6-2#4-1$2-2!2-0;3-1|ah/C:0+1+3/D:det_1/E:content+2@5+1&2+0#3+0/F:in_1/G:6_5/H:7=5@10=2|L-L%/I:5=5/J:71+55-11
-ax^k-ah+b=er@2_2/A:0_0_2/B:1-1-3@1-2&6-2#4-1$2-2!2-0;3-1|ah/C:0+1+3/D:det_1/E:content+2@5+1&2+0#3+0/F:in_1/G:6_5/H:7=5@10=2|L-L%/I:5=5/J:71+55-11
-k^ah-b+er=d@3_1/A:0_0_2/B:1-1-3@1-2&6-2#4-1$2-2!2-0;3-1|ah/C:0+1+3/D:det_1/E:content+2@5+1&2+0#3+0/F:in_1/G:6_5/H:7=5@10=2|L-L%/I:5=5/J:71+55-11
-ah^b-er+d=z@1_3/A:1_1_3/B:0-1-3@2-1&7-1#5-1$3-1!1-0;1-0|er/C:1+0+2/D:det_1/E:content+2@5+1&2+0#3+0/F:in_1/G:6_5/H:7=5@10=2|L-L%/I:5=5/J:71+55-11
-b^er-d+z=pau@2_2/A:1_1_3/B:0-1-3@2-1&7-1#5-1$3-1!1-0;1-0|er/C:1+0+2/D:det_1/E:content+2@5+1&2+0#3+0/F:in_1/G:6_5/H:7=5@10=2|L-L%/I:5=5/J:71+55-11
-er^d-z+pau=ae@3_1/A:1_1_3/B:0-1-3@2-1&7-1#5-1$3-1!1-0;1-0|er/C:1+0+2/D:det_1/E:content+2@5+1&2+0#3+0/F:in_1/G:6_5/H:7=5@10=2|L-L%/I:5=5/J:71+55-11
-d^z-pau+ae=z@x_x/A:0_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:content_2/E:x+x@x+x&x+x#x+x/F:in_1/G:7_5/H:x=x@1=11|0/I:5=5/J:71+55-11
-z^pau-ae+z=sh@1_2/A:0_1_3/B:1-0-2@1-1&1-5#1-5$1-4!0-1;0-1|ae/C:1+1+2/D:content_2/E:in+1@1+5&1+4#0+1/F:content_1/G:7_5/H:5=5@11=1|L-L%/I:0=0/J:71+55-11
-pau^ae-z+sh=iy@2_1/A:0_1_3/B:1-0-2@1-1&1-5#1-5$1-4!0-1;0-1|ae/C:1+1+2/D:content_2/E:in+1@1+5&1+4#0+1/F:content_1/G:7_5/H:5=5@11=1|L-L%/I:0=0/J:71+55-11
-ae^z-sh+iy=f@1_2/A:1_0_2/B:1-1-2@1-1&2-4#1-4$1-3!1-1;0-1|iy/C:1+1+3/D:in_1/E:content+1@2+4&1+3#0+1/F:content_1/G:7_5/H:5=5@11=1|L-L%/I:0=0/J:71+55-11
-z^sh-iy+f=eh@2_1/A:1_0_2/B:1-1-2@1-1&2-4#1-4$1-3!1-1;0-1|iy/C:1+1+3/D:in_1/E:content+1@2+4&1+3#0+1/F:content_1/G:7_5/H:5=5@11=1|L-L%/I:0=0/J:71+55-11
-sh^iy-f+eh=l@1_3/A:1_1_2/B:1-1-3@1-1&3-3#2-3$2-2!1-1;1-2|eh/C:1+0+4/D:content_1/E:content+1@3+3&2+2#1+1/F:content_1/G:7_5/H:5=5@11=1|L-L%/I:0=0/J:71+55-11
-iy^f-eh+l=p@2_2/A:1_1_2/B:1-1-3@1-1&3-3#2-3$2-2!1-1;1-2|eh/C:1+0+4/D:content_1/E:content+1@3+3&2+2#1+1/F:content_1/G:7_5/H:5=5@11=1|L-L%/I:0=0/J:71+55-11
-f^eh-l+p=ae@3_1/A:1_1_2/B:1-1-3@1-1&3-3#2-3$2-2!1-1;1-2|eh/C:1+0+4/D:content_1/E:content+1@3+3&2+2#1+1/F:content_1/G:7_5/H:5=5@11=1|L-L%/I:0=0/J:71+55-11
-eh^l-p+ae=s@1_4/A:1_1_3/B:1-0-4@1-1&4-2#3-2$3-2!1-1;1-1|ae/C:1+1+2/D:content_1/E:content+1@4+2&3+1#1+1/F:content_1/G:7_5/H:5=5@11=1|L-L%/I:0=0/J:71+55-11
-l^p-ae+s=t@2_3/A:1_1_3/B:1-0-4@1-1&4-2#3-2$3-2!1-1;1-1|ae/C:1+1+2/D:content_1/E:content+1@4+2&3+1#1+1/F:content_1/G:7_5/H:5=5@11=1|L-L%/I:0=0/J:71+55-11
-p^ae-s+t=ih@3_2/A:1_1_3/B:1-0-4@1-1&4-2#3-2$3-2!1-1;1-1|ae/C:1+1+2/D:content_1/E:content+1@4+2&3+1#1+1/F:content_1/G:7_5/H:5=5@11=1|L-L%/I:0=0/J:71+55-11
-ae^s-t+ih=t@4_1/A:1_1_3/B:1-0-4@1-1&4-2#3-2$3-2!1-1;1-1|ae/C:1+1+2/D:content_1/E:content+1@4+2&3+1#1+1/F:content_1/G:7_5/H:5=5@11=1|L-L%/I:0=0/J:71+55-11
-s^t-ih+t=pau@1_2/A:1_0_4/B:1-1-2@1-1&5-1#4-1$3-1!1-0;2-0|ih/C:0+0+0/D:content_1/E:content+1@5+1&4+0#1+0/F:0_0/G:7_5/H:5=5@11=1|L-L%/I:0=0/J:71+55-11
-t^ih-t+pau=x@2_1/A:1_0_4/B:1-1-2@1-1&5-1#4-1$3-1!1-0;2-0|ih/C:0+0+0/D:content_1/E:content+1@5+1&4+0#1+0/F:0_0/G:7_5/H:5=5@11=1|L-L%/I:0=0/J:71+55-11
-ih^t-pau+x=x@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:content_1/E:x+x@x+x&x+x#x+x/F:0_0/G:5_5/H:x=x@1=11|0/I:0=0/J:71+55-11
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice09.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice09.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice09.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice09.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,21 +0,0 @@
-x^x-pau+w=eh@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+3/D:0_0/E:x+x@x+x&x+x#x+x/F:content_1/G:0_0/H:x=x@1=2|0/I:1=1/J:7+5-2
-x^pau-w+eh=l@1_3/A:0_0_0/B:1-1-3@1-1&1-1#1-1$1-1!0-0;0-0|eh/C:1+0+3/D:0_0/E:content+1@1+1&1+0#0+0/F:content_1/G:0_0/H:1=1@1=2|L-H%/I:6=4/J:7+5-2
-pau^w-eh+l=pau@2_2/A:0_0_0/B:1-1-3@1-1&1-1#1-1$1-1!0-0;0-0|eh/C:1+0+3/D:0_0/E:content+1@1+1&1+0#0+0/F:content_1/G:0_0/H:1=1@1=2|L-H%/I:6=4/J:7+5-2
-w^eh-l+pau=th@3_1/A:0_0_0/B:1-1-3@1-1&1-1#1-1$1-1!0-0;0-0|eh/C:1+0+3/D:0_0/E:content+1@1+1&1+0#0+0/F:content_1/G:0_0/H:1=1@1=2|L-H%/I:6=4/J:7+5-2
-eh^l-pau+th=ao@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:content_1/G:1_1/H:x=x@1=2|0/I:6=4/J:7+5-2
-l^pau-th+ao=t@1_3/A:1_1_3/B:1-0-3@1-1&1-6#1-3$1-3!0-1;0-1|ao/C:1+1+2/D:content_1/E:content+1@1+4&1+2#0+1/F:content_2/G:1_1/H:6=4@2=1|L-L%/I:0=0/J:7+5-2
-pau^th-ao+t=ae@2_2/A:1_1_3/B:1-0-3@1-1&1-6#1-3$1-3!0-1;0-1|ao/C:1+1+2/D:content_1/E:content+1@1+4&1+2#0+1/F:content_2/G:1_1/H:6=4@2=1|L-L%/I:0=0/J:7+5-2
-th^ao-t+ae=l@3_1/A:1_1_3/B:1-0-3@1-1&1-6#1-3$1-3!0-1;0-1|ao/C:1+1+2/D:content_1/E:content+1@1+4&1+2#0+1/F:content_2/G:1_1/H:6=4@2=1|L-L%/I:0=0/J:7+5-2
-ao^t-ae+l=ax@1_2/A:1_0_3/B:1-1-2@1-2&2-5#1-2$1-2!1-4;0-4|ae/C:0+0+2/D:content_1/E:content+2@2+3&2+1#1+2/F:to_1/G:1_1/H:6=4@2=1|L-L%/I:0=0/J:7+5-2
-t^ae-l+ax=s@2_1/A:1_0_3/B:1-1-2@1-2&2-5#1-2$1-2!1-4;0-4|ae/C:0+0+2/D:content_1/E:content+2@2+3&2+1#1+2/F:to_1/G:1_1/H:6=4@2=1|L-L%/I:0=0/J:7+5-2
-ae^l-ax+s=t@1_2/A:1_1_2/B:0-0-2@2-1&3-4#2-2$2-2!1-3;1-3|ax/C:0+0+2/D:content_1/E:content+2@2+3&2+1#1+2/F:to_1/G:1_1/H:6=4@2=1|L-L%/I:0=0/J:7+5-2
-l^ax-s+t=ax@2_1/A:1_1_2/B:0-0-2@2-1&3-4#2-2$2-2!1-3;1-3|ax/C:0+0+2/D:content_1/E:content+2@2+3&2+1#1+2/F:to_1/G:1_1/H:6=4@2=1|L-L%/I:0=0/J:7+5-2
-ax^s-t+ax=hh@1_2/A:0_0_2/B:0-0-2@1-1&4-3#2-2$2-2!2-2;2-2|ax/C:0+0+3/D:content_2/E:to+1@3+2&3+1#1+1/F:content_2/G:1_1/H:6=4@2=1|L-L%/I:0=0/J:7+5-2
-s^t-ax+hh=er@2_1/A:0_0_2/B:0-0-2@1-1&4-3#2-2$2-2!2-2;2-2|ax/C:0+0+3/D:content_2/E:to+1@3+2&3+1#1+1/F:content_2/G:1_1/H:6=4@2=1|L-L%/I:0=0/J:7+5-2
-t^ax-hh+er=s@1_3/A:0_0_2/B:0-0-3@1-2&5-2#2-2$2-2!3-1;3-1|er/C:1+1+3/D:to_1/E:content+2@4+1&3+0#2+0/F:0_0/G:1_1/H:6=4@2=1|L-L%/I:0=0/J:7+5-2
-ax^hh-er+s=eh@2_2/A:0_0_2/B:0-0-3@1-2&5-2#2-2$2-2!3-1;3-1|er/C:1+1+3/D:to_1/E:content+2@4+1&3+0#2+0/F:0_0/G:1_1/H:6=4@2=1|L-L%/I:0=0/J:7+5-2
-hh^er-s+eh=l@3_1/A:0_0_2/B:0-0-3@1-2&5-2#2-2$2-2!3-1;3-1|er/C:1+1+3/D:to_1/E:content+2@4+1&3+0#2+0/F:0_0/G:1_1/H:6=4@2=1|L-L%/I:0=0/J:7+5-2
-er^s-eh+l=f@1_3/A:0_0_3/B:1-1-3@2-1&6-1#2-1$2-1!4-0;4-0|eh/C:0+0+0/D:to_1/E:content+2@4+1&3+0#2+0/F:0_0/G:1_1/H:6=4@2=1|L-L%/I:0=0/J:7+5-2
-s^eh-l+f=pau@2_2/A:0_0_3/B:1-1-3@2-1&6-1#2-1$2-1!4-0;4-0|eh/C:0+0+0/D:to_1/E:content+2@4+1&3+0#2+0/F:0_0/G:1_1/H:6=4@2=1|L-L%/I:0=0/J:7+5-2
-eh^l-f+pau=x@3_1/A:0_0_3/B:1-1-3@2-1&6-1#2-1$2-1!4-0;4-0|eh/C:0+0+0/D:to_1/E:content+2@4+1&3+0#2+0/F:0_0/G:1_1/H:6=4@2=1|L-L%/I:0=0/J:7+5-2
-l^f-pau+x=x@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:content_2/E:x+x@x+x&x+x#x+x/F:0_0/G:6_4/H:x=x@1=2|0/I:0=0/J:7+5-2
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice10.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice10.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice10.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice10.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,51 +0,0 @@
-x^x-pau+ae=f@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:0_0/E:x+x@x+x&x+x#x+x/F:in_2/G:0_0/H:x=x@1=3|0/I:5=4/J:18+14-3
-x^pau-ae+f=t@1_2/A:0_0_0/B:1-0-2@1-2&1-5#1-3$1-3!0-2;0-2|ae/C:0+0+2/D:0_0/E:in+2@1+4&1+2#0+1/F:content_1/G:0_0/H:5=4@1=3|L-L%/I:7=6/J:18+14-3
-pau^ae-f+t=er@2_1/A:0_0_0/B:1-0-2@1-2&1-5#1-3$1-3!0-2;0-2|ae/C:0+0+2/D:0_0/E:in+2@1+4&1+2#0+1/F:content_1/G:0_0/H:5=4@1=3|L-L%/I:7=6/J:18+14-3
-ae^f-t+er=s@1_2/A:1_0_2/B:0-0-2@2-1&2-4#1-3$1-3!1-1;0-1|er/C:1+1+3/D:0_0/E:in+2@1+4&1+2#0+1/F:content_1/G:0_0/H:5=4@1=3|L-L%/I:7=6/J:18+14-3
-f^t-er+s=ah@2_1/A:1_0_2/B:0-0-2@2-1&2-4#1-3$1-3!1-1;0-1|er/C:1+1+3/D:0_0/E:in+2@1+4&1+2#0+1/F:content_1/G:0_0/H:5=4@1=3|L-L%/I:7=6/J:18+14-3
-t^er-s+ah=ch@1_3/A:0_0_2/B:1-1-3@1-1&3-3#1-2$1-2!2-2;0-2|ah/C:0+0+1/D:in_2/E:content+1@2+3&1+1#0+2/F:det_1/G:0_0/H:5=4@1=3|L-L%/I:7=6/J:18+14-3
-er^s-ah+ch=ax@2_2/A:0_0_2/B:1-1-3@1-1&3-3#1-2$1-2!2-2;0-2|ah/C:0+0+1/D:in_2/E:content+1@2+3&1+1#0+2/F:det_1/G:0_0/H:5=4@1=3|L-L%/I:7=6/J:18+14-3
-s^ah-ch+ax=f@3_1/A:0_0_2/B:1-1-3@1-1&3-3#1-2$1-2!2-2;0-2|ah/C:0+0+1/D:in_2/E:content+1@2+3&1+1#0+2/F:det_1/G:0_0/H:5=4@1=3|L-L%/I:7=6/J:18+14-3
-ah^ch-ax+f=ao@1_1/A:1_1_3/B:0-0-1@1-1&4-2#2-2$2-2!1-1;1-1|ax/C:1+1+3/D:content_1/E:det+1@3+2&2+1#1+1/F:content_1/G:0_0/H:5=4@1=3|L-L%/I:7=6/J:18+14-3
-ch^ax-f+ao=l@1_3/A:0_0_1/B:1-1-3@1-1&5-1#2-1$2-1!2-0;2-0|ao/C:1+0+2/D:det_1/E:content+1@4+1&2+0#2+0/F:in_1/G:0_0/H:5=4@1=3|L-L%/I:7=6/J:18+14-3
-ax^f-ao+l=pau@2_2/A:0_0_1/B:1-1-3@1-1&5-1#2-1$2-1!2-0;2-0|ao/C:1+0+2/D:det_1/E:content+1@4+1&2+0#2+0/F:in_1/G:0_0/H:5=4@1=3|L-L%/I:7=6/J:18+14-3
-f^ao-l+pau=ae@3_1/A:0_0_1/B:1-1-3@1-1&5-1#2-1$2-1!2-0;2-0|ao/C:1+0+2/D:det_1/E:content+1@4+1&2+0#2+0/F:in_1/G:0_0/H:5=4@1=3|L-L%/I:7=6/J:18+14-3
-ao^l-pau+ae=z@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:content_1/E:x+x@x+x&x+x#x+x/F:in_1/G:5_4/H:x=x@1=3|0/I:7=6/J:18+14-3
-l^pau-ae+z=dh@1_2/A:1_1_3/B:1-0-2@1-1&1-7#1-6$1-3!0-1;0-2|ae/C:1+0+3/D:content_1/E:in+1@1+6&1+4#0+2/F:det_1/G:5_4/H:7=6@2=2|L-L%/I:6=4/J:18+14-3
-pau^ae-z+dh=ih@2_1/A:1_1_3/B:1-0-2@1-1&1-7#1-6$1-3!0-1;0-2|ae/C:1+0+3/D:content_1/E:in+1@1+6&1+4#0+2/F:det_1/G:5_4/H:7=6@2=2|L-L%/I:6=4/J:18+14-3
-ae^z-dh+ih=s@1_3/A:1_0_2/B:1-0-3@1-1&2-6#1-5$1-3!1-1;0-1|ih/C:1+1+1/D:in_1/E:det+1@2+5&1+4#0+1/F:content_1/G:5_4/H:7=6@2=2|L-L%/I:6=4/J:18+14-3
-z^dh-ih+s=ay@2_2/A:1_0_2/B:1-0-3@1-1&2-6#1-5$1-3!1-1;0-1|ih/C:1+1+1/D:in_1/E:det+1@2+5&1+4#0+1/F:content_1/G:5_4/H:7=6@2=2|L-L%/I:6=4/J:18+14-3
-dh^ih-s+ay=sh@3_1/A:1_0_2/B:1-0-3@1-1&2-6#1-5$1-3!1-1;0-1|ih/C:1+1+1/D:in_1/E:det+1@2+5&1+4#0+1/F:content_1/G:5_4/H:7=6@2=2|L-L%/I:6=4/J:18+14-3
-ih^s-ay+sh=ae@1_1/A:1_0_3/B:1-1-1@1-1&3-5#2-4$1-2!1-1;0-4|ay/C:1+0+3/D:det_1/E:content+1@3+4&1+3#0+1/F:content_1/G:5_4/H:7=6@2=2|L-L%/I:6=4/J:18+14-3
-s^ay-sh+ae=l@1_3/A:1_1_1/B:1-0-3@1-1&4-4#3-3$2-2!1-1;1-3|ae/C:1+0+4/D:content_1/E:content+1@4+3&2+2#1+1/F:content_1/G:5_4/H:7=6@2=2|L-L%/I:6=4/J:18+14-3
-ay^sh-ae+l=th@2_2/A:1_1_1/B:1-0-3@1-1&4-4#3-3$2-2!1-1;1-3|ae/C:1+0+4/D:content_1/E:content+1@4+3&2+2#1+1/F:content_1/G:5_4/H:7=6@2=2|L-L%/I:6=4/J:18+14-3
-sh^ae-l+th=ih@3_1/A:1_1_1/B:1-0-3@1-1&4-4#3-3$2-2!1-1;1-3|ae/C:1+0+4/D:content_1/E:content+1@4+3&2+2#1+1/F:content_1/G:5_4/H:7=6@2=2|L-L%/I:6=4/J:18+14-3
-ae^l-th+ih=ng@1_4/A:1_0_3/B:1-0-4@1-1&5-3#4-2$2-2!1-1;2-2|ih/C:1+0+3/D:content_1/E:content+1@5+2&3+1#1+1/F:content_2/G:5_4/H:7=6@2=2|L-L%/I:6=4/J:18+14-3
-l^th-ih+ng=k@2_3/A:1_0_3/B:1-0-4@1-1&5-3#4-2$2-2!1-1;2-2|ih/C:1+0+3/D:content_1/E:content+1@5+2&3+1#1+1/F:content_2/G:5_4/H:7=6@2=2|L-L%/I:6=4/J:18+14-3
-th^ih-ng+k=n@3_2/A:1_0_3/B:1-0-4@1-1&5-3#4-2$2-2!1-1;2-2|ih/C:1+0+3/D:content_1/E:content+1@5+2&3+1#1+1/F:content_2/G:5_4/H:7=6@2=2|L-L%/I:6=4/J:18+14-3
-ih^ng-k+n=ah@4_1/A:1_0_3/B:1-0-4@1-1&5-3#4-2$2-2!1-1;2-2|ih/C:1+0+3/D:content_1/E:content+1@5+2&3+1#1+1/F:content_2/G:5_4/H:7=6@2=2|L-L%/I:6=4/J:18+14-3
-ng^k-n+ah=th@1_3/A:1_0_4/B:1-0-3@1-2&6-2#5-1$2-2!1-0;3-1|ah/C:0+1+2/D:content_1/E:content+2@6+1&4+0#1+0/F:in_1/G:5_4/H:7=6@2=2|L-L%/I:6=4/J:18+14-3
-k^n-ah+th=ih@2_2/A:1_0_4/B:1-0-3@1-2&6-2#5-1$2-2!1-0;3-1|ah/C:0+1+2/D:content_1/E:content+2@6+1&4+0#1+0/F:in_1/G:5_4/H:7=6@2=2|L-L%/I:6=4/J:18+14-3
-n^ah-th+ih=ng@3_1/A:1_0_4/B:1-0-3@1-2&6-2#5-1$2-2!1-0;3-1|ah/C:0+1+2/D:content_1/E:content+2@6+1&4+0#1+0/F:in_1/G:5_4/H:7=6@2=2|L-L%/I:6=4/J:18+14-3
-ah^th-ih+ng=pau@1_2/A:1_0_3/B:0-1-2@2-1&7-1#6-1$2-1!1-0;4-0|ih/C:1+0+2/D:content_1/E:content+2@6+1&4+0#1+0/F:in_1/G:5_4/H:7=6@2=2|L-L%/I:6=4/J:18+14-3
-th^ih-ng+pau=ah@2_1/A:1_0_3/B:0-1-2@2-1&7-1#6-1$2-1!1-0;4-0|ih/C:1+0+2/D:content_1/E:content+2@6+1&4+0#1+0/F:in_1/G:5_4/H:7=6@2=2|L-L%/I:6=4/J:18+14-3
-ih^ng-pau+ah=v@x_x/A:0_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:content_2/E:x+x@x+x&x+x#x+x/F:in_1/G:7_6/H:x=x@1=3|0/I:6=4/J:18+14-3
-ng^pau-ah+v=t@1_2/A:0_1_2/B:1-0-2@1-1&1-6#1-4$1-3!0-1;0-1|ah/C:1+1+4/D:content_2/E:in+1@1+4&1+2#0+1/F:content_3/G:7_6/H:6=4@3=1|L-L%/I:0=0/J:18+14-3
-pau^ah-v+t=ah@2_1/A:0_1_2/B:1-0-2@1-1&1-6#1-4$1-3!0-1;0-1|ah/C:1+1+4/D:content_2/E:in+1@1+4&1+2#0+1/F:content_3/G:7_6/H:6=4@3=1|L-L%/I:0=0/J:18+14-3
-ah^v-t+ah=m@1_4/A:1_0_2/B:1-1-4@1-3&2-5#1-3$1-2!1-3;0-4|ah/C:0+0+2/D:in_1/E:content+3@2+3&1+1#0+2/F:in_1/G:7_6/H:6=4@3=1|L-L%/I:0=0/J:18+14-3
-v^t-ah+m=b@2_3/A:1_0_2/B:1-1-4@1-3&2-5#1-3$1-2!1-3;0-4|ah/C:0+0+2/D:in_1/E:content+3@2+3&1+1#0+2/F:in_1/G:7_6/H:6=4@3=1|L-L%/I:0=0/J:18+14-3
-t^ah-m+b=ax@3_2/A:1_0_2/B:1-1-4@1-3&2-5#1-3$1-2!1-3;0-4|ah/C:0+0+2/D:in_1/E:content+3@2+3&1+1#0+2/F:in_1/G:7_6/H:6=4@3=1|L-L%/I:0=0/J:18+14-3
-ah^m-b+ax=l@4_1/A:1_0_2/B:1-1-4@1-3&2-5#1-3$1-2!1-3;0-4|ah/C:0+0+2/D:in_1/E:content+3@2+3&1+1#0+2/F:in_1/G:7_6/H:6=4@3=1|L-L%/I:0=0/J:18+14-3
-m^b-ax+l=ih@1_2/A:1_1_4/B:0-0-2@2-2&3-4#2-3$2-2!1-2;1-3|ax/C:0+0+2/D:in_1/E:content+3@2+3&1+1#0+2/F:in_1/G:7_6/H:6=4@3=1|L-L%/I:0=0/J:18+14-3
-b^ax-l+ih=ng@2_1/A:1_1_4/B:0-0-2@2-2&3-4#2-3$2-2!1-2;1-3|ax/C:0+0+2/D:in_1/E:content+3@2+3&1+1#0+2/F:in_1/G:7_6/H:6=4@3=1|L-L%/I:0=0/J:18+14-3
-ax^l-ih+ng=d@1_2/A:0_0_2/B:0-0-2@3-1&4-3#2-3$2-2!2-1;2-2|ih/C:1+0+3/D:in_1/E:content+3@2+3&1+1#0+2/F:in_1/G:7_6/H:6=4@3=1|L-L%/I:0=0/J:18+14-3
-l^ih-ng+d=aw@2_1/A:0_0_2/B:0-0-2@3-1&4-3#2-3$2-2!2-1;2-2|ih/C:1+0+3/D:in_1/E:content+3@2+3&1+1#0+2/F:in_1/G:7_6/H:6=4@3=1|L-L%/I:0=0/J:18+14-3
-ih^ng-d+aw=n@1_3/A:0_0_2/B:1-0-3@1-1&5-2#2-2$2-2!3-1;3-1|aw/C:1+1+5/D:content_3/E:in+1@3+2&2+1#1+1/F:content_1/G:7_6/H:6=4@3=1|L-L%/I:0=0/J:18+14-3
-ng^d-aw+n=s@2_2/A:0_0_2/B:1-0-3@1-1&5-2#2-2$2-2!3-1;3-1|aw/C:1+1+5/D:content_3/E:in+1@3+2&2+1#1+1/F:content_1/G:7_6/H:6=4@3=1|L-L%/I:0=0/J:18+14-3
-d^aw-n+s=t@3_1/A:0_0_2/B:1-0-3@1-1&5-2#2-2$2-2!3-1;3-1|aw/C:1+1+5/D:content_3/E:in+1@3+2&2+1#1+1/F:content_1/G:7_6/H:6=4@3=1|L-L%/I:0=0/J:18+14-3
-aw^n-s+t=eh@1_5/A:1_0_3/B:1-1-5@1-1&6-1#3-1$2-1!1-0;4-0|eh/C:0+0+0/D:in_1/E:content+1@4+1&2+0#2+0/F:0_0/G:7_6/H:6=4@3=1|L-L%/I:0=0/J:18+14-3
-n^s-t+eh=r@2_4/A:1_0_3/B:1-1-5@1-1&6-1#3-1$2-1!1-0;4-0|eh/C:0+0+0/D:in_1/E:content+1@4+1&2+0#2+0/F:0_0/G:7_6/H:6=4@3=1|L-L%/I:0=0/J:18+14-3
-s^t-eh+r=z@3_3/A:1_0_3/B:1-1-5@1-1&6-1#3-1$2-1!1-0;4-0|eh/C:0+0+0/D:in_1/E:content+1@4+1&2+0#2+0/F:0_0/G:7_6/H:6=4@3=1|L-L%/I:0=0/J:18+14-3
-t^eh-r+z=pau@4_2/A:1_0_3/B:1-1-5@1-1&6-1#3-1$2-1!1-0;4-0|eh/C:0+0+0/D:in_1/E:content+1@4+1&2+0#2+0/F:0_0/G:7_6/H:6=4@3=1|L-L%/I:0=0/J:18+14-3
-eh^r-z+pau=x@5_1/A:1_0_3/B:1-1-5@1-1&6-1#3-1$2-1!1-0;4-0|eh/C:0+0+0/D:in_1/E:content+1@4+1&2+0#2+0/F:0_0/G:7_6/H:6=4@3=1|L-L%/I:0=0/J:18+14-3
-r^z-pau+x=x@x_x/A:1_1_5/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:content_1/E:x+x@x+x&x+x#x+x/F:0_0/G:6_4/H:x=x@1=3|0/I:0=0/J:18+14-3
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice11.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice11.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice11.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice11.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,24 +0,0 @@
-x^x-pau+hh=aw@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:0_0/E:x+x@x+x&x+x#x+x/F:wp_1/G:0_0/H:x=x@1=1|0/I:8=8/J:8+8-1
-x^pau-hh+aw=b@1_2/A:0_0_0/B:1-0-2@1-1&1-8#1-8$1-4!0-1;0-1|aw/C:1+1+4/D:0_0/E:wp+1@1+8&1+5#0+1/F:content_1/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-pau^hh-aw+b=r@2_1/A:0_0_0/B:1-0-2@1-1&1-8#1-8$1-4!0-1;0-1|aw/C:1+1+4/D:0_0/E:wp+1@1+8&1+5#0+1/F:content_1/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-hh^aw-b+r=ey@1_4/A:1_0_2/B:1-1-4@1-1&2-7#1-7$1-3!1-1;0-1|ey/C:1+1+3/D:wp_1/E:content+1@2+7&1+4#0+1/F:content_1/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-aw^b-r+ey=v@2_3/A:1_0_2/B:1-1-4@1-1&2-7#1-7$1-3!1-1;0-1|ey/C:1+1+3/D:wp_1/E:content+1@2+7&1+4#0+1/F:content_1/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-b^r-ey+v=dh@3_2/A:1_0_2/B:1-1-4@1-1&2-7#1-7$1-3!1-1;0-1|ey/C:1+1+3/D:wp_1/E:content+1@2+7&1+4#0+1/F:content_1/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-r^ey-v+dh=eh@4_1/A:1_0_2/B:1-1-4@1-1&2-7#1-7$1-3!1-1;0-1|ey/C:1+1+3/D:wp_1/E:content+1@2+7&1+4#0+1/F:content_1/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-ey^v-dh+eh=l@1_3/A:1_1_4/B:1-1-3@1-1&3-6#2-6$2-2!1-1;1-5|eh/C:1+0+2/D:content_1/E:content+1@3+6&2+3#1+2/F:det_1/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-v^dh-eh+l=ao@2_2/A:1_1_4/B:1-1-3@1-1&3-6#2-6$2-2!1-1;1-5|eh/C:1+0+2/D:content_1/E:content+1@3+6&2+3#1+2/F:det_1/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-dh^eh-l+ao=l@3_1/A:1_1_4/B:1-1-3@1-1&3-6#2-6$2-2!1-1;1-5|eh/C:1+0+2/D:content_1/E:content+1@3+6&2+3#1+2/F:det_1/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-eh^l-ao+l=th@1_2/A:1_1_3/B:1-0-2@1-1&4-5#3-5$3-2!1-1;1-4|ao/C:1+0+4/D:content_1/E:det+1@4+5&3+3#1+1/F:content_1/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-l^ao-l+th=ih@2_1/A:1_1_3/B:1-0-2@1-1&4-5#3-5$3-2!1-1;1-4|ao/C:1+0+4/D:content_1/E:det+1@4+5&3+3#1+1/F:content_1/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-ao^l-th+ih=ng@1_4/A:1_0_2/B:1-0-4@1-1&5-4#4-4$3-2!1-1;2-3|ih/C:1+0+2/D:det_1/E:content+1@5+4&3+2#2+1/F:content_1/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-l^th-ih+ng=k@2_3/A:1_0_2/B:1-0-4@1-1&5-4#4-4$3-2!1-1;2-3|ih/C:1+0+2/D:det_1/E:content+1@5+4&3+2#2+1/F:content_1/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-th^ih-ng+k=m@3_2/A:1_0_2/B:1-0-4@1-1&5-4#4-4$3-2!1-1;2-3|ih/C:1+0+2/D:det_1/E:content+1@5+4&3+2#2+1/F:content_1/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-ih^ng-k+m=iy@4_1/A:1_0_2/B:1-0-4@1-1&5-4#4-4$3-2!1-1;2-3|ih/C:1+0+2/D:det_1/E:content+1@5+4&3+2#2+1/F:content_1/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-ng^k-m+iy=ae@1_2/A:1_0_4/B:1-0-2@1-1&6-3#5-3$3-2!1-1;3-2|iy/C:1+0+2/D:content_1/E:content+1@6+3&4+1#1+2/F:in_1/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-k^m-iy+ae=t@2_1/A:1_0_4/B:1-0-2@1-1&6-3#5-3$3-2!1-1;3-2|iy/C:1+0+2/D:content_1/E:content+1@6+3&4+1#1+2/F:in_1/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-m^iy-ae+t=hh@1_2/A:1_0_2/B:1-0-2@1-1&7-2#6-2$3-2!1-1;4-1|ae/C:1+1+3/D:content_1/E:in+1@7+2&5+1#1+1/F:content_1/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-iy^ae-t+hh=ow@2_1/A:1_0_2/B:1-0-2@1-1&7-2#6-2$3-2!1-1;4-1|ae/C:1+1+3/D:content_1/E:in+1@7+2&5+1#1+1/F:content_1/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-ae^t-hh+ow=m@1_3/A:1_0_2/B:1-1-3@1-1&8-1#7-1$3-1!1-0;5-0|ow/C:0+0+0/D:in_1/E:content+1@8+1&5+0#2+0/F:0_0/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-t^hh-ow+m=pau@2_2/A:1_0_2/B:1-1-3@1-1&8-1#7-1$3-1!1-0;5-0|ow/C:0+0+0/D:in_1/E:content+1@8+1&5+0#2+0/F:0_0/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-hh^ow-m+pau=x@3_1/A:1_0_2/B:1-1-3@1-1&8-1#7-1$3-1!1-0;5-0|ow/C:0+0+0/D:in_1/E:content+1@8+1&5+0#2+0/F:0_0/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-ow^m-pau+x=x@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:content_1/E:x+x@x+x&x+x#x+x/F:0_0/G:8_8/H:x=x@1=1|0/I:0=0/J:8+8-1
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice12.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice12.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice12.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice12.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,50 +0,0 @@
-x^x-pau+w=ay@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+2/D:0_0/E:x+x@x+x&x+x#x+x/F:content_1/G:0_0/H:x=x@1=3|0/I:3=3/J:21+17-3
-x^pau-w+ay=ay@1_2/A:0_0_0/B:1-1-2@1-1&1-3#1-3$1-3!0-1;0-1|ay/C:1+1+1/D:0_0/E:content+1@1+3&1+2#0+1/F:content_1/G:0_0/H:3=3@1=3|L-H%/I:7=4/J:21+17-3
-pau^w-ay+ay=w@2_1/A:0_0_0/B:1-1-2@1-1&1-3#1-3$1-3!0-1;0-1|ay/C:1+1+1/D:0_0/E:content+1@1+3&1+2#0+1/F:content_1/G:0_0/H:3=3@1=3|L-H%/I:7=4/J:21+17-3
-w^ay-ay+w=uh@1_1/A:1_1_2/B:1-1-1@1-1&2-2#1-2$1-2!1-1;1-1|ay/C:1+1+5/D:content_1/E:content+1@2+2&2+1#1+1/F:content_1/G:0_0/H:3=3@1=3|L-H%/I:7=4/J:21+17-3
-ay^ay-w+uh=d@1_5/A:1_1_1/B:1-1-5@1-1&3-1#2-1$2-1!1-0;1-0|uh/C:1+0+2/D:content_1/E:content+1@3+1&3+0#1+0/F:content_1/G:0_0/H:3=3@1=3|L-H%/I:7=4/J:21+17-3
-ay^w-uh+d=n@2_4/A:1_1_1/B:1-1-5@1-1&3-1#2-1$2-1!1-0;1-0|uh/C:1+0+2/D:content_1/E:content+1@3+1&3+0#1+0/F:content_1/G:0_0/H:3=3@1=3|L-H%/I:7=4/J:21+17-3
-w^uh-d+n=t@3_3/A:1_1_1/B:1-1-5@1-1&3-1#2-1$2-1!1-0;1-0|uh/C:1+0+2/D:content_1/E:content+1@3+1&3+0#1+0/F:content_1/G:0_0/H:3=3@1=3|L-H%/I:7=4/J:21+17-3
-uh^d-n+t=pau@4_2/A:1_1_1/B:1-1-5@1-1&3-1#2-1$2-1!1-0;1-0|uh/C:1+0+2/D:content_1/E:content+1@3+1&3+0#1+0/F:content_1/G:0_0/H:3=3@1=3|L-H%/I:7=4/J:21+17-3
-d^n-t+pau=s@5_1/A:1_1_1/B:1-1-5@1-1&3-1#2-1$2-1!1-0;1-0|uh/C:1+0+2/D:content_1/E:content+1@3+1&3+0#1+0/F:content_1/G:0_0/H:3=3@1=3|L-H%/I:7=4/J:21+17-3
-n^t-pau+s=ey@x_x/A:1_1_5/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:content_1/E:x+x@x+x&x+x#x+x/F:content_1/G:3_3/H:x=x@1=3|0/I:7=4/J:21+17-3
-t^pau-s+ey=eh@1_2/A:1_1_5/B:1-0-2@1-1&1-7#1-5$1-3!0-1;0-1|ey/C:1+1+2/D:content_1/E:content+1@1+4&1+2#0+1/F:content_3/G:3_3/H:7=4@2=2|L-L%/I:11=10/J:21+17-3
-pau^s-ey+eh=n@2_1/A:1_1_5/B:1-0-2@1-1&1-7#1-5$1-3!0-1;0-1|ey/C:1+1+2/D:content_1/E:content+1@1+4&1+2#0+1/F:content_3/G:3_3/H:7=4@2=2|L-L%/I:11=10/J:21+17-3
-s^ey-eh+n=iy@1_2/A:1_0_2/B:1-1-2@1-3&2-6#1-4$1-2!1-2;0-5|eh/C:0+0+2/D:content_1/E:content+3@2+3&2+1#1+2/F:in_2/G:3_3/H:7=4@2=2|L-L%/I:11=10/J:21+17-3
-ey^eh-n+iy=th@2_1/A:1_0_2/B:1-1-2@1-3&2-6#1-4$1-2!1-2;0-5|eh/C:0+0+2/D:content_1/E:content+3@2+3&2+1#1+2/F:in_2/G:3_3/H:7=4@2=2|L-L%/I:11=10/J:21+17-3
-eh^n-iy+th=ih@1_2/A:1_1_2/B:0-0-2@2-2&3-5#2-4$2-2!1-1;1-4|iy/C:1+0+2/D:content_1/E:content+3@2+3&2+1#1+2/F:in_2/G:3_3/H:7=4@2=2|L-L%/I:11=10/J:21+17-3
-n^iy-th+ih=ng@2_1/A:1_1_2/B:0-0-2@2-2&3-5#2-4$2-2!1-1;1-4|iy/C:1+0+2/D:content_1/E:content+3@2+3&2+1#1+2/F:in_2/G:3_3/H:7=4@2=2|L-L%/I:11=10/J:21+17-3
-iy^th-ih+ng=ax@1_2/A:0_0_2/B:1-0-2@3-1&4-4#2-3$2-2!2-2;2-3|ih/C:0+0+2/D:content_1/E:content+3@2+3&2+1#1+2/F:in_2/G:3_3/H:7=4@2=2|L-L%/I:11=10/J:21+17-3
-th^ih-ng+ax=b@2_1/A:0_0_2/B:1-0-2@3-1&4-4#2-3$2-2!2-2;2-3|ih/C:0+0+2/D:content_1/E:content+3@2+3&2+1#1+2/F:in_2/G:3_3/H:7=4@2=2|L-L%/I:11=10/J:21+17-3
-ih^ng-ax+b=aw@1_2/A:1_0_2/B:0-0-2@1-2&5-3#3-3$2-2!1-1;3-2|ax/C:1+0+2/D:content_3/E:in+2@3+2&3+1#1+1/F:content_1/G:3_3/H:7=4@2=2|L-L%/I:11=10/J:21+17-3
-ng^ax-b+aw=t@2_1/A:1_0_2/B:0-0-2@1-2&5-3#3-3$2-2!1-1;3-2|ax/C:1+0+2/D:content_3/E:in+2@3+2&3+1#1+1/F:content_1/G:3_3/H:7=4@2=2|L-L%/I:11=10/J:21+17-3
-ax^b-aw+t=ih@1_2/A:0_0_2/B:1-0-2@2-1&6-2#3-2$2-2!2-1;4-1|aw/C:1+1+2/D:content_3/E:in+2@3+2&3+1#1+1/F:content_1/G:3_3/H:7=4@2=2|L-L%/I:11=10/J:21+17-3
-b^aw-t+ih=t@2_1/A:0_0_2/B:1-0-2@2-1&6-2#3-2$2-2!2-1;4-1|aw/C:1+1+2/D:content_3/E:in+2@3+2&3+1#1+1/F:content_1/G:3_3/H:7=4@2=2|L-L%/I:11=10/J:21+17-3
-aw^t-ih+t=pau@1_2/A:1_0_2/B:1-1-2@1-1&7-1#4-1$2-1!1-0;5-0|ih/C:1+1+2/D:in_2/E:content+1@4+1&3+0#2+0/F:content_2/G:3_3/H:7=4@2=2|L-L%/I:11=10/J:21+17-3
-t^ih-t+pau=iy@2_1/A:1_0_2/B:1-1-2@1-1&7-1#4-1$2-1!1-0;5-0|ih/C:1+1+2/D:in_2/E:content+1@4+1&3+0#2+0/F:content_2/G:3_3/H:7=4@2=2|L-L%/I:11=10/J:21+17-3
-ih^t-pau+iy=v@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+2/D:content_1/E:x+x@x+x&x+x#x+x/F:content_2/G:7_4/H:x=x@1=3|0/I:11=10/J:21+17-3
-t^pau-iy+v=ax@1_2/A:1_1_2/B:1-1-2@1-2&1-11#1-8$1-2!0-2;0-10|iy/C:0+0+2/D:content_1/E:content+2@1+10&1+5#0+2/F:in_1/G:7_4/H:11=10@3=1|L-L%/I:0=0/J:21+17-3
-pau^iy-v+ax=n@2_1/A:1_1_2/B:1-1-2@1-2&1-11#1-8$1-2!0-2;0-10|iy/C:0+0+2/D:content_1/E:content+2@1+10&1+5#0+2/F:in_1/G:7_4/H:11=10@3=1|L-L%/I:0=0/J:21+17-3
-iy^v-ax+n=ih@1_2/A:1_1_2/B:0-0-2@2-1&2-10#1-8$1-2!1-1;1-9|ax/C:1+0+2/D:content_1/E:content+2@1+10&1+5#0+2/F:in_1/G:7_4/H:11=10@3=1|L-L%/I:0=0/J:21+17-3
-v^ax-n+ih=f@2_1/A:1_1_2/B:0-0-2@2-1&2-10#1-8$1-2!1-1;1-9|ax/C:1+0+2/D:content_1/E:content+2@1+10&1+5#0+2/F:in_1/G:7_4/H:11=10@3=1|L-L%/I:0=0/J:21+17-3
-ax^n-ih+f=ay@1_2/A:0_0_2/B:1-0-2@1-1&3-9#1-7$1-2!2-1;2-8|ih/C:1+0+1/D:content_2/E:in+1@2+9&2+5#1+1/F:content_1/G:7_4/H:11=10@3=1|L-L%/I:0=0/J:21+17-3
-n^ih-f+ay=f@2_1/A:0_0_2/B:1-0-2@1-1&3-9#1-7$1-2!2-1;2-8|ih/C:1+0+1/D:content_2/E:in+1@2+9&2+5#1+1/F:content_1/G:7_4/H:11=10@3=1|L-L%/I:0=0/J:21+17-3
-ih^f-ay+f=eh@1_1/A:1_0_2/B:1-0-1@1-1&4-8#2-6$1-2!1-1;3-7|ay/C:1+0+3/D:in_1/E:content+1@3+8&2+4#2+1/F:content_1/G:7_4/H:11=10@3=1|L-L%/I:0=0/J:21+17-3
-f^ay-f+eh=l@1_3/A:1_0_1/B:1-0-3@1-1&5-7#3-5$1-2!1-1;4-6|eh/C:1+0+2/D:content_1/E:content+1@4+7&3+3#1+1/F:content_1/G:7_4/H:11=10@3=1|L-L%/I:0=0/J:21+17-3
-ay^f-eh+l=ao@2_2/A:1_0_1/B:1-0-3@1-1&5-7#3-5$1-2!1-1;4-6|eh/C:1+0+2/D:content_1/E:content+1@4+7&3+3#1+1/F:content_1/G:7_4/H:11=10@3=1|L-L%/I:0=0/J:21+17-3
-f^eh-l+ao=f@3_1/A:1_0_1/B:1-0-3@1-1&5-7#3-5$1-2!1-1;4-6|eh/C:1+0+2/D:content_1/E:content+1@4+7&3+3#1+1/F:content_1/G:7_4/H:11=10@3=1|L-L%/I:0=0/J:21+17-3
-eh^l-ao+f=dh@1_2/A:1_0_3/B:1-0-2@1-1&6-6#4-4$1-2!1-2;5-5|ao/C:0+0+2/D:content_1/E:content+1@5+6&4+2#1+2/F:det_1/G:7_4/H:11=10@3=1|L-L%/I:0=0/J:21+17-3
-l^ao-f+dh=ax@2_1/A:1_0_3/B:1-0-2@1-1&6-6#4-4$1-2!1-2;5-5|ao/C:0+0+2/D:content_1/E:content+1@5+6&4+2#1+2/F:det_1/G:7_4/H:11=10@3=1|L-L%/I:0=0/J:21+17-3
-ao^f-dh+ax=t@1_2/A:1_0_2/B:0-0-2@1-1&7-5#5-4$1-2!1-1;6-4|ax/C:1+0+3/D:content_1/E:det+1@6+5&5+2#1+1/F:content_1/G:7_4/H:11=10@3=1|L-L%/I:0=0/J:21+17-3
-f^dh-ax+t=aa@2_1/A:1_0_2/B:0-0-2@1-1&7-5#5-4$1-2!1-1;6-4|ax/C:1+0+3/D:content_1/E:det+1@6+5&5+2#1+1/F:content_1/G:7_4/H:11=10@3=1|L-L%/I:0=0/J:21+17-3
-dh^ax-t+aa=p@1_3/A:0_0_2/B:1-0-3@1-1&8-4#5-3$1-2!2-1;7-3|aa/C:1+0+2/D:det_1/E:content+1@7+4&5+1#2+3/F:in_1/G:7_4/H:11=10@3=1|L-L%/I:0=0/J:21+17-3
-ax^t-aa+p=ah@2_2/A:0_0_2/B:1-0-3@1-1&8-4#5-3$1-2!2-1;7-3|aa/C:1+0+2/D:det_1/E:content+1@7+4&5+1#2+3/F:in_1/G:7_4/H:11=10@3=1|L-L%/I:0=0/J:21+17-3
-t^aa-p+ah=v@3_1/A:0_0_2/B:1-0-3@1-1&8-4#5-3$1-2!2-1;7-3|aa/C:1+0+2/D:det_1/E:content+1@7+4&5+1#2+3/F:in_1/G:7_4/H:11=10@3=1|L-L%/I:0=0/J:21+17-3
-aa^p-ah+v=dh@1_2/A:1_0_3/B:1-0-2@1-1&9-3#6-2$1-2!1-2;8-2|ah/C:0+0+2/D:content_1/E:in+1@8+3&6+1#1+2/F:det_1/G:7_4/H:11=10@3=1|L-L%/I:0=0/J:21+17-3
-p^ah-v+dh=ax@2_1/A:1_0_3/B:1-0-2@1-1&9-3#6-2$1-2!1-2;8-2|ah/C:0+0+2/D:content_1/E:in+1@8+3&6+1#1+2/F:det_1/G:7_4/H:11=10@3=1|L-L%/I:0=0/J:21+17-3
-ah^v-dh+ax=hh@1_2/A:1_0_2/B:0-0-2@1-1&10-2#7-2$1-2!1-1;9-1|ax/C:1+1+3/D:in_1/E:det+1@9+2&6+1#2+1/F:content_1/G:7_4/H:11=10@3=1|L-L%/I:0=0/J:21+17-3
-v^dh-ax+hh=aw@2_1/A:1_0_2/B:0-0-2@1-1&10-2#7-2$1-2!1-1;9-1|ax/C:1+1+3/D:in_1/E:det+1@9+2&6+1#2+1/F:content_1/G:7_4/H:11=10@3=1|L-L%/I:0=0/J:21+17-3
-dh^ax-hh+aw=s@1_3/A:0_0_2/B:1-1-3@1-1&11-1#7-1$1-1!2-0;10-0|aw/C:0+0+0/D:det_1/E:content+1@10+1&6+0#3+0/F:0_0/G:7_4/H:11=10@3=1|L-L%/I:0=0/J:21+17-3
-ax^hh-aw+s=pau@2_2/A:0_0_2/B:1-1-3@1-1&11-1#7-1$1-1!2-0;10-0|aw/C:0+0+0/D:det_1/E:content+1@10+1&6+0#3+0/F:0_0/G:7_4/H:11=10@3=1|L-L%/I:0=0/J:21+17-3
-hh^aw-s+pau=x@3_1/A:0_0_2/B:1-1-3@1-1&11-1#7-1$1-1!2-0;10-0|aw/C:0+0+0/D:det_1/E:content+1@10+1&6+0#3+0/F:0_0/G:7_4/H:11=10@3=1|L-L%/I:0=0/J:21+17-3
-aw^s-pau+x=x@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:content_1/E:x+x@x+x&x+x#x+x/F:0_0/G:11_10/H:x=x@1=3|0/I:0=0/J:21+17-3
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice13.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice13.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice13.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice13.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,11 +0,0 @@
-x^x-pau+d=aw@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:0_0/E:x+x@x+x&x+x#x+x/F:in_1/G:0_0/H:x=x@1=1|0/I:3=3/J:3+3-1
-x^pau-d+aw=n@1_3/A:0_0_0/B:1-0-3@1-1&1-3#1-3$1-1!0-1;0-0|aw/C:1+0+3/D:0_0/E:in+1@1+3&1+0#0+0/F:in_1/G:0_0/H:3=3@1=1|NONE/I:0=0/J:3+3-1
-pau^d-aw+n=d@2_2/A:0_0_0/B:1-0-3@1-1&1-3#1-3$1-1!0-1;0-0|aw/C:1+0+3/D:0_0/E:in+1@1+3&1+0#0+0/F:in_1/G:0_0/H:3=3@1=1|NONE/I:0=0/J:3+3-1
-d^aw-n+d=aw@3_1/A:0_0_0/B:1-0-3@1-1&1-3#1-3$1-1!0-1;0-0|aw/C:1+0+3/D:0_0/E:in+1@1+3&1+0#0+0/F:in_1/G:0_0/H:3=3@1=1|NONE/I:0=0/J:3+3-1
-aw^n-d+aw=n@1_3/A:1_0_3/B:1-0-3@1-1&2-2#1-2$1-1!1-1;0-0|aw/C:1+0+3/D:in_1/E:in+1@2+2&1+0#0+0/F:in_1/G:0_0/H:3=3@1=1|NONE/I:0=0/J:3+3-1
-n^d-aw+n=d@2_2/A:1_0_3/B:1-0-3@1-1&2-2#1-2$1-1!1-1;0-0|aw/C:1+0+3/D:in_1/E:in+1@2+2&1+0#0+0/F:in_1/G:0_0/H:3=3@1=1|NONE/I:0=0/J:3+3-1
-d^aw-n+d=aw@3_1/A:1_0_3/B:1-0-3@1-1&2-2#1-2$1-1!1-1;0-0|aw/C:1+0+3/D:in_1/E:in+1@2+2&1+0#0+0/F:in_1/G:0_0/H:3=3@1=1|NONE/I:0=0/J:3+3-1
-aw^n-d+aw=n@1_3/A:1_0_3/B:1-0-3@1-1&3-1#2-1$1-1!1-0;0-0|aw/C:0+0+0/D:in_1/E:in+1@3+1&1+0#0+0/F:0_0/G:0_0/H:3=3@1=1|NONE/I:0=0/J:3+3-1
-n^d-aw+n=pau@2_2/A:1_0_3/B:1-0-3@1-1&3-1#2-1$1-1!1-0;0-0|aw/C:0+0+0/D:in_1/E:in+1@3+1&1+0#0+0/F:0_0/G:0_0/H:3=3@1=1|NONE/I:0=0/J:3+3-1
-d^aw-n+pau=x@3_1/A:1_0_3/B:1-0-3@1-1&3-1#2-1$1-1!1-0;0-0|aw/C:0+0+0/D:in_1/E:in+1@3+1&1+0#0+0/F:0_0/G:0_0/H:3=3@1=1|NONE/I:0=0/J:3+3-1
-aw^n-pau+x=x@x_x/A:1_0_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:in_1/E:x+x@x+x&x+x#x+x/F:0_0/G:3_3/H:x=x@1=1|0/I:0=0/J:3+3-1
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice14.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice14.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice14.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice14.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,24 +0,0 @@
-x^x-pau+w=uh@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+3/D:0_0/E:x+x@x+x&x+x#x+x/F:md_1/G:0_0/H:x=x@1=1|0/I:9=8/J:9+8-1
-x^pau-w+uh=d@1_3/A:0_0_0/B:1-1-3@1-1&1-9#1-6$1-3!0-2;0-2|uh/C:0+0+2/D:0_0/E:md+1@1+8&1+4#0+2/F:det_1/G:0_0/H:9=8@1=1|L-L%/I:0=0/J:9+8-1
-pau^w-uh+d=dh@2_2/A:0_0_0/B:1-1-3@1-1&1-9#1-6$1-3!0-2;0-2|uh/C:0+0+2/D:0_0/E:md+1@1+8&1+4#0+2/F:det_1/G:0_0/H:9=8@1=1|L-L%/I:0=0/J:9+8-1
-w^uh-d+dh=ax@3_1/A:0_0_0/B:1-1-3@1-1&1-9#1-6$1-3!0-2;0-2|uh/C:0+0+2/D:0_0/E:md+1@1+8&1+4#0+2/F:det_1/G:0_0/H:9=8@1=1|L-L%/I:0=0/J:9+8-1
-uh^d-dh+ax=f@1_2/A:1_1_3/B:0-0-2@1-1&2-8#1-6$1-3!1-1;1-1|ax/C:1+1+3/D:md_1/E:det+1@2+7&1+4#0+1/F:content_1/G:0_0/H:9=8@1=1|L-L%/I:0=0/J:9+8-1
-d^dh-ax+f=ao@2_1/A:1_1_3/B:0-0-2@1-1&2-8#1-6$1-3!1-1;1-1|ax/C:1+1+3/D:md_1/E:det+1@2+7&1+4#0+1/F:content_1/G:0_0/H:9=8@1=1|L-L%/I:0=0/J:9+8-1
-dh^ax-f+ao=l@1_3/A:0_0_2/B:1-1-3@1-1&3-7#1-5$1-2!2-1;2-6|ao/C:1+0+3/D:det_1/E:content+1@3+6&1+3#0+1/F:content_2/G:0_0/H:9=8@1=1|L-L%/I:0=0/J:9+8-1
-ax^f-ao+l=n@2_2/A:0_0_2/B:1-1-3@1-1&3-7#1-5$1-2!2-1;2-6|ao/C:1+0+3/D:det_1/E:content+1@3+6&1+3#0+1/F:content_2/G:0_0/H:9=8@1=1|L-L%/I:0=0/J:9+8-1
-f^ao-l+n=eh@3_1/A:0_0_2/B:1-1-3@1-1&3-7#1-5$1-2!2-1;2-6|ao/C:1+0+3/D:det_1/E:content+1@3+6&1+3#0+1/F:content_2/G:0_0/H:9=8@1=1|L-L%/I:0=0/J:9+8-1
-ao^l-n+eh=v@1_3/A:1_1_3/B:1-0-3@1-2&4-6#2-4$2-2!1-2;1-5|eh/C:0+0+1/D:content_1/E:content+2@4+5&2+2#1+1/F:content_1/G:0_0/H:9=8@1=1|L-L%/I:0=0/J:9+8-1
-l^n-eh+v=er@2_2/A:1_1_3/B:1-0-3@1-2&4-6#2-4$2-2!1-2;1-5|eh/C:0+0+1/D:content_1/E:content+2@4+5&2+2#1+1/F:content_1/G:0_0/H:9=8@1=1|L-L%/I:0=0/J:9+8-1
-n^eh-v+er=k@3_1/A:1_1_3/B:1-0-3@1-2&4-6#2-4$2-2!1-2;1-5|eh/C:0+0+1/D:content_1/E:content+2@4+5&2+2#1+1/F:content_1/G:0_0/H:9=8@1=1|L-L%/I:0=0/J:9+8-1
-eh^v-er+k=ah@1_1/A:1_0_3/B:0-0-1@2-1&5-5#3-4$2-2!1-1;2-4|er/C:1+0+3/D:content_1/E:content+2@4+5&2+2#1+1/F:content_1/G:0_0/H:9=8@1=1|L-L%/I:0=0/J:9+8-1
-v^er-k+ah=m@1_3/A:0_0_1/B:1-0-3@1-1&6-4#3-3$2-2!2-2;3-3|ah/C:0+0+2/D:content_2/E:content+1@5+4&3+1#1+3/F:to_1/G:0_0/H:9=8@1=1|L-L%/I:0=0/J:9+8-1
-er^k-ah+m=t@2_2/A:0_0_1/B:1-0-3@1-1&6-4#3-3$2-2!2-2;3-3|ah/C:0+0+2/D:content_2/E:content+1@5+4&3+1#1+3/F:to_1/G:0_0/H:9=8@1=1|L-L%/I:0=0/J:9+8-1
-k^ah-m+t=ax@3_1/A:0_0_1/B:1-0-3@1-1&6-4#3-3$2-2!2-2;3-3|ah/C:0+0+2/D:content_2/E:content+1@5+4&3+1#1+3/F:to_1/G:0_0/H:9=8@1=1|L-L%/I:0=0/J:9+8-1
-ah^m-t+ax=ae@1_2/A:1_0_3/B:0-0-2@1-1&7-3#4-3$2-2!1-1;4-2|ax/C:1+0+2/D:content_1/E:to+1@6+3&4+1#1+2/F:det_1/G:0_0/H:9=8@1=1|L-L%/I:0=0/J:9+8-1
-m^t-ax+ae=n@2_1/A:1_0_3/B:0-0-2@1-1&7-3#4-3$2-2!1-1;4-2|ax/C:1+0+2/D:content_1/E:to+1@6+3&4+1#1+2/F:det_1/G:0_0/H:9=8@1=1|L-L%/I:0=0/J:9+8-1
-t^ax-ae+n=eh@1_2/A:0_0_2/B:1-0-2@1-1&8-2#4-2$2-2!2-1;5-1|ae/C:1+1+3/D:to_1/E:det+1@7+2&4+1#2+1/F:content_1/G:0_0/H:9=8@1=1|L-L%/I:0=0/J:9+8-1
-ax^ae-n+eh=n@2_1/A:0_0_2/B:1-0-2@1-1&8-2#4-2$2-2!2-1;5-1|ae/C:1+1+3/D:to_1/E:det+1@7+2&4+1#2+1/F:content_1/G:0_0/H:9=8@1=1|L-L%/I:0=0/J:9+8-1
-ae^n-eh+n=d@1_3/A:1_0_2/B:1-1-3@1-1&9-1#5-1$2-1!1-0;6-0|eh/C:0+0+0/D:det_1/E:content+1@8+1&4+0#3+0/F:0_0/G:0_0/H:9=8@1=1|L-L%/I:0=0/J:9+8-1
-n^eh-n+d=pau@2_2/A:1_0_2/B:1-1-3@1-1&9-1#5-1$2-1!1-0;6-0|eh/C:0+0+0/D:det_1/E:content+1@8+1&4+0#3+0/F:0_0/G:0_0/H:9=8@1=1|L-L%/I:0=0/J:9+8-1
-eh^n-d+pau=x@3_1/A:1_0_2/B:1-1-3@1-1&9-1#5-1$2-1!1-0;6-0|eh/C:0+0+0/D:det_1/E:content+1@8+1&4+0#3+0/F:0_0/G:0_0/H:9=8@1=1|L-L%/I:0=0/J:9+8-1
-n^d-pau+x=x@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:content_1/E:x+x@x+x&x+x#x+x/F:0_0/G:9_8/H:x=x@1=1|0/I:0=0/J:9+8-1
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice15.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice15.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice15.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice15.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,45 +0,0 @@
-x^x-pau+ay=w@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+1/D:0_0/E:x+x@x+x&x+x#x+x/F:content_1/G:0_0/H:x=x@1=4|0/I:3=2/J:17+13-4
-x^pau-ay+w=ah@1_1/A:0_0_0/B:1-1-1@1-1&1-3#1-2$1-3!0-1;0-1|ay/C:1+1+4/D:0_0/E:content+1@1+2&1+1#0+1/F:content_2/G:0_0/H:3=2@1=4|L-H%/I:4=3/J:17+13-4
-pau^ay-w+ah=n@1_4/A:1_1_1/B:1-1-4@1-2&2-2#1-1$1-2!1-0;1-1|ah/C:0+1+1/D:content_1/E:content+2@2+1&2+0#1+0/F:wp_1/G:0_0/H:3=2@1=4|L-H%/I:4=3/J:17+13-4
-ay^w-ah+n=d@2_3/A:1_1_1/B:1-1-4@1-2&2-2#1-1$1-2!1-0;1-1|ah/C:0+1+1/D:content_1/E:content+2@2+1&2+0#1+0/F:wp_1/G:0_0/H:3=2@1=4|L-H%/I:4=3/J:17+13-4
-w^ah-n+d=er@3_2/A:1_1_1/B:1-1-4@1-2&2-2#1-1$1-2!1-0;1-1|ah/C:0+1+1/D:content_1/E:content+2@2+1&2+0#1+0/F:wp_1/G:0_0/H:3=2@1=4|L-H%/I:4=3/J:17+13-4
-ah^n-d+er=pau@4_1/A:1_1_1/B:1-1-4@1-2&2-2#1-1$1-2!1-0;1-1|ah/C:0+1+1/D:content_1/E:content+2@2+1&2+0#1+0/F:wp_1/G:0_0/H:3=2@1=4|L-H%/I:4=3/J:17+13-4
-n^d-er+pau=hh@1_1/A:1_1_4/B:0-1-1@2-1&3-1#2-1$2-1!1-0;1-0|er/C:1+0+2/D:content_1/E:content+2@2+1&2+0#1+0/F:wp_1/G:0_0/H:3=2@1=4|L-H%/I:4=3/J:17+13-4
-d^er-pau+hh=aw@x_x/A:0_1_1/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:content_2/E:x+x@x+x&x+x#x+x/F:wp_1/G:3_2/H:x=x@1=4|0/I:4=3/J:17+13-4
-er^pau-hh+aw=m@1_2/A:0_1_1/B:1-0-2@1-1&1-4#1-3$1-2!0-1;0-3|aw/C:1+0+3/D:content_2/E:wp+1@1+3&1+1#0+2/F:det_2/G:3_2/H:4=3@2=3|L-L%/I:6=5/J:17+13-4
-pau^hh-aw+m=eh@2_1/A:0_1_1/B:1-0-2@1-1&1-4#1-3$1-2!0-1;0-3|aw/C:1+0+3/D:content_2/E:wp+1@1+3&1+1#0+2/F:det_2/G:3_2/H:4=3@2=3|L-L%/I:6=5/J:17+13-4
-hh^aw-m+eh=n@1_3/A:1_0_2/B:1-0-3@1-2&2-3#1-2$1-2!1-2;0-2|eh/C:0+0+1/D:wp_1/E:det+2@2+2&1+1#0+1/F:content_1/G:3_2/H:4=3@2=3|L-L%/I:6=5/J:17+13-4
-aw^m-eh+n=iy@2_2/A:1_0_2/B:1-0-3@1-2&2-3#1-2$1-2!1-2;0-2|eh/C:0+0+1/D:wp_1/E:det+2@2+2&1+1#0+1/F:content_1/G:3_2/H:4=3@2=3|L-L%/I:6=5/J:17+13-4
-m^eh-n+iy=m@3_1/A:1_0_2/B:1-0-3@1-2&2-3#1-2$1-2!1-2;0-2|eh/C:0+0+1/D:wp_1/E:det+2@2+2&1+1#0+1/F:content_1/G:3_2/H:4=3@2=3|L-L%/I:6=5/J:17+13-4
-eh^n-iy+m=ay@1_1/A:1_0_3/B:0-0-1@2-1&3-2#2-2$1-2!1-1;0-1|iy/C:1+1+4/D:wp_1/E:det+2@2+2&1+1#0+1/F:content_1/G:3_2/H:4=3@2=3|L-L%/I:6=5/J:17+13-4
-n^iy-m+ay=l@1_4/A:0_0_1/B:1-1-4@1-1&4-1#2-1$1-1!2-0;0-0|ay/C:1+0+2/D:det_2/E:content+1@3+1&1+0#0+0/F:content_1/G:3_2/H:4=3@2=3|L-L%/I:6=5/J:17+13-4
-iy^m-ay+l=z@2_3/A:0_0_1/B:1-1-4@1-1&4-1#2-1$1-1!2-0;0-0|ay/C:1+0+2/D:det_2/E:content+1@3+1&1+0#0+0/F:content_1/G:3_2/H:4=3@2=3|L-L%/I:6=5/J:17+13-4
-m^ay-l+z=pau@3_2/A:0_0_1/B:1-1-4@1-1&4-1#2-1$1-1!2-0;0-0|ay/C:1+0+2/D:det_2/E:content+1@3+1&1+0#0+0/F:content_1/G:3_2/H:4=3@2=3|L-L%/I:6=5/J:17+13-4
-ay^l-z+pau=ay@4_1/A:0_0_1/B:1-1-4@1-1&4-1#2-1$1-1!2-0;0-0|ay/C:1+0+2/D:det_2/E:content+1@3+1&1+0#0+0/F:content_1/G:3_2/H:4=3@2=3|L-L%/I:6=5/J:17+13-4
-l^z-pau+ay=v@x_x/A:1_1_4/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:content_1/E:x+x@x+x&x+x#x+x/F:content_1/G:4_3/H:x=x@1=4|0/I:6=5/J:17+13-4
-z^pau-ay+v=f@1_2/A:1_1_4/B:1-0-2@1-1&1-6#1-5$1-3!0-1;0-1|ay/C:1+1+3/D:content_1/E:content+1@1+5&1+2#0+1/F:content_2/G:4_3/H:6=5@3=2|L-L%/I:4=3/J:17+13-4
-pau^ay-v+f=ao@2_1/A:1_1_4/B:1-0-2@1-1&1-6#1-5$1-3!0-1;0-1|ay/C:1+1+3/D:content_1/E:content+1@1+5&1+2#0+1/F:content_2/G:4_3/H:6=5@3=2|L-L%/I:4=3/J:17+13-4
-ay^v-f+ao=l@1_3/A:1_0_2/B:1-1-3@1-2&2-5#1-4$1-2!1-2;0-4|ao/C:0+0+2/D:content_1/E:content+2@2+4&2+1#1+3/F:in_1/G:4_3/H:6=5@3=2|L-L%/I:4=3/J:17+13-4
-v^f-ao+l=ax@2_2/A:1_0_2/B:1-1-3@1-2&2-5#1-4$1-2!1-2;0-4|ao/C:0+0+2/D:content_1/E:content+2@2+4&2+1#1+3/F:in_1/G:4_3/H:6=5@3=2|L-L%/I:4=3/J:17+13-4
-f^ao-l+ax=n@3_1/A:1_0_2/B:1-1-3@1-2&2-5#1-4$1-2!1-2;0-4|ao/C:0+0+2/D:content_1/E:content+2@2+4&2+1#1+3/F:in_1/G:4_3/H:6=5@3=2|L-L%/I:4=3/J:17+13-4
-ao^l-ax+n=b@1_2/A:1_1_3/B:0-0-2@2-1&3-4#2-4$2-2!1-1;1-3|ax/C:1+0+2/D:content_1/E:content+2@2+4&2+1#1+3/F:in_1/G:4_3/H:6=5@3=2|L-L%/I:4=3/J:17+13-4
-l^ax-n+b=ay@2_1/A:1_1_3/B:0-0-2@2-1&3-4#2-4$2-2!1-1;1-3|ax/C:1+0+2/D:content_1/E:content+2@2+4&2+1#1+3/F:in_1/G:4_3/H:6=5@3=2|L-L%/I:4=3/J:17+13-4
-ax^n-b+ay=dh@1_2/A:0_0_2/B:1-0-2@1-1&4-3#2-3$2-2!2-1;2-2|ay/C:1+0+3/D:content_2/E:in+1@3+3&3+1#1+2/F:det_1/G:4_3/H:6=5@3=2|L-L%/I:4=3/J:17+13-4
-n^b-ay+dh=ih@2_1/A:0_0_2/B:1-0-2@1-1&4-3#2-3$2-2!2-1;2-2|ay/C:1+0+3/D:content_2/E:in+1@3+3&3+1#1+2/F:det_1/G:4_3/H:6=5@3=2|L-L%/I:4=3/J:17+13-4
-b^ay-dh+ih=s@1_3/A:1_0_2/B:1-0-3@1-1&5-2#3-2$2-2!1-1;3-1|ih/C:1+1+3/D:in_1/E:det+1@4+2&3+1#2+1/F:content_1/G:4_3/H:6=5@3=2|L-L%/I:4=3/J:17+13-4
-ay^dh-ih+s=t@2_2/A:1_0_2/B:1-0-3@1-1&5-2#3-2$2-2!1-1;3-1|ih/C:1+1+3/D:in_1/E:det+1@4+2&3+1#2+1/F:content_1/G:4_3/H:6=5@3=2|L-L%/I:4=3/J:17+13-4
-dh^ih-s+t=ay@3_1/A:1_0_2/B:1-0-3@1-1&5-2#3-2$2-2!1-1;3-1|ih/C:1+1+3/D:in_1/E:det+1@4+2&3+1#2+1/F:content_1/G:4_3/H:6=5@3=2|L-L%/I:4=3/J:17+13-4
-ih^s-t+ay=m@1_3/A:1_0_3/B:1-1-3@1-1&6-1#4-1$2-1!1-0;4-0|ay/C:1+1+2/D:det_1/E:content+1@5+1&3+0#3+0/F:content_1/G:4_3/H:6=5@3=2|L-L%/I:4=3/J:17+13-4
-s^t-ay+m=pau@2_2/A:1_0_3/B:1-1-3@1-1&6-1#4-1$2-1!1-0;4-0|ay/C:1+1+2/D:det_1/E:content+1@5+1&3+0#3+0/F:content_1/G:4_3/H:6=5@3=2|L-L%/I:4=3/J:17+13-4
-t^ay-m+pau=sh@3_1/A:1_0_3/B:1-1-3@1-1&6-1#4-1$2-1!1-0;4-0|ay/C:1+1+2/D:det_1/E:content+1@5+1&3+0#3+0/F:content_1/G:4_3/H:6=5@3=2|L-L%/I:4=3/J:17+13-4
-ay^m-pau+sh=iy@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+2/D:content_1/E:x+x@x+x&x+x#x+x/F:content_1/G:6_5/H:x=x@1=4|0/I:4=3/J:17+13-4
-m^pau-sh+iy=s@1_2/A:1_1_3/B:1-1-2@1-1&1-4#1-3$1-3!0-1;0-1|iy/C:1+1+3/D:content_1/E:content+1@1+3&1+2#0+1/F:content_1/G:6_5/H:4=3@1=4|L-L%/I:0=0/J:17+13-4
-pau^sh-iy+s=eh@2_1/A:1_1_3/B:1-1-2@1-1&1-4#1-3$1-3!0-1;0-1|iy/C:1+1+3/D:content_1/E:content+1@1+3&1+2#0+1/F:content_1/G:6_5/H:4=3@1=4|L-L%/I:0=0/J:17+13-4
-sh^iy-s+eh=d@1_3/A:1_1_2/B:1-1-3@1-1&2-3#1-2$1-2!1-2;1-2|eh/C:0+0+2/D:content_1/E:content+1@2+2&2+1#1+1/F:content_2/G:6_5/H:4=3@1=4|L-L%/I:0=0/J:17+13-4
-iy^s-eh+d=ax@2_2/A:1_1_2/B:1-1-3@1-1&2-3#1-2$1-2!1-2;1-2|eh/C:0+0+2/D:content_1/E:content+1@2+2&2+1#1+1/F:content_2/G:6_5/H:4=3@1=4|L-L%/I:0=0/J:17+13-4
-s^eh-d+ax=l@3_1/A:1_1_2/B:1-1-3@1-1&2-3#1-2$1-2!1-2;1-2|eh/C:0+0+2/D:content_1/E:content+1@2+2&2+1#1+1/F:content_2/G:6_5/H:4=3@1=4|L-L%/I:0=0/J:17+13-4
-eh^d-ax+l=aw@1_2/A:1_1_3/B:0-0-2@1-2&3-2#2-2$2-2!1-1;1-1|ax/C:1+1+2/D:content_1/E:content+2@3+1&3+0#1+0/F:0_0/G:6_5/H:4=3@1=4|L-L%/I:0=0/J:17+13-4
-d^ax-l+aw=d@2_1/A:1_1_3/B:0-0-2@1-2&3-2#2-2$2-2!1-1;1-1|ax/C:1+1+2/D:content_1/E:content+2@3+1&3+0#1+0/F:0_0/G:6_5/H:4=3@1=4|L-L%/I:0=0/J:17+13-4
-ax^l-aw+d=pau@1_2/A:0_0_2/B:1-1-2@2-1&4-1#2-1$2-1!2-0;2-0|aw/C:0+0+0/D:content_1/E:content+2@3+1&3+0#1+0/F:0_0/G:6_5/H:4=3@1=4|L-L%/I:0=0/J:17+13-4
-l^aw-d+pau=x@2_1/A:0_0_2/B:1-1-2@2-1&4-1#2-1$2-1!2-0;2-0|aw/C:0+0+0/D:content_1/E:content+2@3+1&3+0#1+0/F:0_0/G:6_5/H:4=3@1=4|L-L%/I:0=0/J:17+13-4
-aw^d-pau+x=x@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:content_2/E:x+x@x+x&x+x#x+x/F:0_0/G:4_3/H:x=x@1=4|0/I:0=0/J:17+13-4
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice16.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice16.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice16.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice16.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,37 +0,0 @@
-x^x-pau+ay=m@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+1/D:0_0/E:x+x@x+x&x+x#x+x/F:content_1/G:0_0/H:x=x@1=2|0/I:7=5/J:14+11-2
-x^pau-ay+m=ah@1_1/A:0_0_0/B:1-1-1@1-1&1-7#1-6$1-3!0-1;0-3|ay/C:1+0+4/D:0_0/E:content+1@1+5&1+2#0+3/F:md_1/G:0_0/H:7=5@1=2|L-L%/I:7=6/J:14+11-2
-pau^ay-m+ah=s@1_4/A:1_1_1/B:1-0-4@1-1&2-6#1-5$1-3!1-1;1-2|ah/C:1+0+2/D:content_1/E:md+1@2+4&2+2#1+2/F:aux_1/G:0_0/H:7=5@1=2|L-L%/I:7=6/J:14+11-2
-ay^m-ah+s=t@2_3/A:1_1_1/B:1-0-4@1-1&2-6#1-5$1-3!1-1;1-2|ah/C:1+0+2/D:content_1/E:md+1@2+4&2+2#1+2/F:aux_1/G:0_0/H:7=5@1=2|L-L%/I:7=6/J:14+11-2
-m^ah-s+t=b@3_2/A:1_1_1/B:1-0-4@1-1&2-6#1-5$1-3!1-1;1-2|ah/C:1+0+2/D:content_1/E:md+1@2+4&2+2#1+2/F:aux_1/G:0_0/H:7=5@1=2|L-L%/I:7=6/J:14+11-2
-ah^s-t+b=iy@4_1/A:1_1_1/B:1-0-4@1-1&2-6#1-5$1-3!1-1;1-2|ah/C:1+0+2/D:content_1/E:md+1@2+4&2+2#1+2/F:aux_1/G:0_0/H:7=5@1=2|L-L%/I:7=6/J:14+11-2
-s^t-b+iy=g@1_2/A:1_0_4/B:1-0-2@1-1&3-5#2-4$1-3!1-1;2-1|iy/C:1+1+3/D:md_1/E:aux+1@3+3&2+2#2+1/F:content_2/G:0_0/H:7=5@1=2|L-L%/I:7=6/J:14+11-2
-t^b-iy+g=eh@2_1/A:1_0_4/B:1-0-2@1-1&3-5#2-4$1-3!1-1;2-1|iy/C:1+1+3/D:md_1/E:aux+1@3+3&2+2#2+1/F:content_2/G:0_0/H:7=5@1=2|L-L%/I:7=6/J:14+11-2
-b^iy-g+eh=t@1_3/A:1_0_2/B:1-1-3@1-2&4-4#3-3$1-2!1-2;3-3|eh/C:0+0+2/D:aux_1/E:content+2@4+2&2+1#3+1/F:content_2/G:0_0/H:7=5@1=2|L-L%/I:7=6/J:14+11-2
-iy^g-eh+t=ih@2_2/A:1_0_2/B:1-1-3@1-2&4-4#3-3$1-2!1-2;3-3|eh/C:0+0+2/D:aux_1/E:content+2@4+2&2+1#3+1/F:content_2/G:0_0/H:7=5@1=2|L-L%/I:7=6/J:14+11-2
-g^eh-t+ih=ng@3_1/A:1_0_2/B:1-1-3@1-2&4-4#3-3$1-2!1-2;3-3|eh/C:0+0+2/D:aux_1/E:content+2@4+2&2+1#3+1/F:content_2/G:0_0/H:7=5@1=2|L-L%/I:7=6/J:14+11-2
-eh^t-ih+ng=s@1_2/A:1_1_3/B:0-0-2@2-1&5-3#4-3$2-2!1-1;1-2|ih/C:1+0+4/D:aux_1/E:content+2@4+2&2+1#3+1/F:content_2/G:0_0/H:7=5@1=2|L-L%/I:7=6/J:14+11-2
-t^ih-ng+s=ah@2_1/A:1_1_3/B:0-0-2@2-1&5-3#4-3$2-2!1-1;1-2|ih/C:1+0+4/D:aux_1/E:content+2@4+2&2+1#3+1/F:content_2/G:0_0/H:7=5@1=2|L-L%/I:7=6/J:14+11-2
-ih^ng-s+ah=m@1_4/A:0_0_2/B:1-0-4@1-2&6-2#4-2$2-2!2-1;2-1|ah/C:1+1+2/D:content_2/E:content+2@5+1&3+0#1+0/F:content_1/G:0_0/H:7=5@1=2|L-L%/I:7=6/J:14+11-2
-ng^s-ah+m=w@2_3/A:0_0_2/B:1-0-4@1-2&6-2#4-2$2-2!2-1;2-1|ah/C:1+1+2/D:content_2/E:content+2@5+1&3+0#1+0/F:content_1/G:0_0/H:7=5@1=2|L-L%/I:7=6/J:14+11-2
-s^ah-m+w=eh@3_2/A:0_0_2/B:1-0-4@1-2&6-2#4-2$2-2!2-1;2-1|ah/C:1+1+2/D:content_2/E:content+2@5+1&3+0#1+0/F:content_1/G:0_0/H:7=5@1=2|L-L%/I:7=6/J:14+11-2
-ah^m-w+eh=r@4_1/A:0_0_2/B:1-0-4@1-2&6-2#4-2$2-2!2-1;2-1|ah/C:1+1+2/D:content_2/E:content+2@5+1&3+0#1+0/F:content_1/G:0_0/H:7=5@1=2|L-L%/I:7=6/J:14+11-2
-m^w-eh+r=pau@1_2/A:1_0_4/B:1-1-2@2-1&7-1#5-1$2-1!1-0;3-0|eh/C:1+0+3/D:content_2/E:content+2@5+1&3+0#1+0/F:content_1/G:0_0/H:7=5@1=2|L-L%/I:7=6/J:14+11-2
-w^eh-r+pau=n@2_1/A:1_0_4/B:1-1-2@2-1&7-1#5-1$2-1!1-0;3-0|eh/C:1+0+3/D:content_2/E:content+2@5+1&3+0#1+0/F:content_1/G:0_0/H:7=5@1=2|L-L%/I:7=6/J:14+11-2
-eh^r-pau+n=ih@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_2/E:x+x@x+x&x+x#x+x/F:content_1/G:7_5/H:x=x@1=2|0/I:7=6/J:14+11-2
-r^pau-n+ih=r@1_3/A:1_1_2/B:1-0-3@1-1&1-7#1-4$1-3!0-2;0-2|ih/C:0+0+2/D:content_2/E:content+1@1+6&1+2#0+2/F:det_1/G:7_5/H:7=6@2=1|L-L%/I:0=0/J:14+11-2
-pau^n-ih+r=dh@2_2/A:1_1_2/B:1-0-3@1-1&1-7#1-4$1-3!0-2;0-2|ih/C:0+0+2/D:content_2/E:content+1@1+6&1+2#0+2/F:det_1/G:7_5/H:7=6@2=1|L-L%/I:0=0/J:14+11-2
-n^ih-r+dh=ax@3_1/A:1_1_2/B:1-0-3@1-1&1-7#1-4$1-3!0-2;0-2|ih/C:0+0+2/D:content_2/E:content+1@1+6&1+2#0+2/F:det_1/G:7_5/H:7=6@2=1|L-L%/I:0=0/J:14+11-2
-ih^r-dh+ax=s@1_2/A:1_0_3/B:0-0-2@1-1&2-6#1-4$1-3!1-1;0-1|ax/C:1+1+4/D:content_1/E:det+1@2+5&2+2#1+1/F:content_2/G:7_5/H:7=6@2=1|L-L%/I:0=0/J:14+11-2
-r^dh-ax+s=eh@2_1/A:1_0_3/B:0-0-2@1-1&2-6#1-4$1-3!1-1;0-1|ax/C:1+1+4/D:content_1/E:det+1@2+5&2+2#1+1/F:content_2/G:7_5/H:7=6@2=1|L-L%/I:0=0/J:14+11-2
-dh^ax-s+eh=n@1_4/A:0_0_2/B:1-1-4@1-2&3-5#1-3$1-2!2-2;0-4|eh/C:0+0+1/D:det_1/E:content+2@3+4&2+1#2+3/F:in_1/G:7_5/H:7=6@2=1|L-L%/I:0=0/J:14+11-2
-ax^s-eh+n=t@2_3/A:0_0_2/B:1-1-4@1-2&3-5#1-3$1-2!2-2;0-4|eh/C:0+0+1/D:det_1/E:content+2@3+4&2+1#2+3/F:in_1/G:7_5/H:7=6@2=1|L-L%/I:0=0/J:14+11-2
-s^eh-n+t=er@3_2/A:0_0_2/B:1-1-4@1-2&3-5#1-3$1-2!2-2;0-4|eh/C:0+0+1/D:det_1/E:content+2@3+4&2+1#2+3/F:in_1/G:7_5/H:7=6@2=1|L-L%/I:0=0/J:14+11-2
-eh^n-t+er=ah@4_1/A:0_0_2/B:1-1-4@1-2&3-5#1-3$1-2!2-2;0-4|eh/C:0+0+1/D:det_1/E:content+2@3+4&2+1#2+3/F:in_1/G:7_5/H:7=6@2=1|L-L%/I:0=0/J:14+11-2
-n^t-er+ah=v@1_1/A:1_1_4/B:0-0-1@2-1&4-4#2-3$2-2!1-1;1-3|er/C:1+0+2/D:det_1/E:content+2@3+4&2+1#2+3/F:in_1/G:7_5/H:7=6@2=1|L-L%/I:0=0/J:14+11-2
-t^er-ah+v=dh@1_2/A:0_0_1/B:1-0-2@1-1&5-3#2-2$2-2!2-2;2-2|ah/C:0+0+2/D:content_2/E:in+1@4+3&3+1#1+2/F:det_1/G:7_5/H:7=6@2=1|L-L%/I:0=0/J:14+11-2
-er^ah-v+dh=ax@2_1/A:0_0_1/B:1-0-2@1-1&5-3#2-2$2-2!2-2;2-2|ah/C:0+0+2/D:content_2/E:in+1@4+3&3+1#1+2/F:det_1/G:7_5/H:7=6@2=1|L-L%/I:0=0/J:14+11-2
-ah^v-dh+ax=er@1_2/A:1_0_2/B:0-0-2@1-1&6-2#3-2$2-2!1-1;3-1|ax/C:1+1+2/D:in_1/E:det+1@5+2&3+1#2+1/F:content_1/G:7_5/H:7=6@2=1|L-L%/I:0=0/J:14+11-2
-v^dh-ax+er=th@2_1/A:1_0_2/B:0-0-2@1-1&6-2#3-2$2-2!1-1;3-1|ax/C:1+1+2/D:in_1/E:det+1@5+2&3+1#2+1/F:content_1/G:7_5/H:7=6@2=1|L-L%/I:0=0/J:14+11-2
-dh^ax-er+th=pau@1_2/A:0_0_2/B:1-1-2@1-1&7-1#3-1$2-1!2-0;4-0|er/C:0+0+0/D:det_1/E:content+1@6+1&3+0#3+0/F:0_0/G:7_5/H:7=6@2=1|L-L%/I:0=0/J:14+11-2
-ax^er-th+pau=x@2_1/A:0_0_2/B:1-1-2@1-1&7-1#3-1$2-1!2-0;4-0|er/C:0+0+0/D:det_1/E:content+1@6+1&3+0#3+0/F:0_0/G:7_5/H:7=6@2=1|L-L%/I:0=0/J:14+11-2
-er^th-pau+x=x@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:content_1/E:x+x@x+x&x+x#x+x/F:0_0/G:7_6/H:x=x@1=2|0/I:0=0/J:14+11-2
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice17.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice17.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice17.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice17.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,40 +0,0 @@
-x^x-pau+l=eh@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+3/D:0_0/E:x+x@x+x&x+x#x+x/F:content_1/G:0_0/H:x=x@1=3|0/I:3=3/J:13+12-3
-x^pau-l+eh=t@1_3/A:0_0_0/B:1-1-3@1-1&1-3#1-3$1-3!0-1;0-1|eh/C:1+1+2/D:0_0/E:content+1@1+3&1+2#0+1/F:content_1/G:0_0/H:3=3@1=3|L-H%/I:8=7/J:13+12-3
-pau^l-eh+t=m@2_2/A:0_0_0/B:1-1-3@1-1&1-3#1-3$1-3!0-1;0-1|eh/C:1+1+2/D:0_0/E:content+1@1+3&1+2#0+1/F:content_1/G:0_0/H:3=3@1=3|L-H%/I:8=7/J:13+12-3
-l^eh-t+m=iy@3_1/A:0_0_0/B:1-1-3@1-1&1-3#1-3$1-3!0-1;0-1|eh/C:1+1+2/D:0_0/E:content+1@1+3&1+2#0+1/F:content_1/G:0_0/H:3=3@1=3|L-H%/I:8=7/J:13+12-3
-eh^t-m+iy=s@1_2/A:1_1_3/B:1-1-2@1-1&2-2#1-2$1-2!1-1;1-1|iy/C:1+1+2/D:content_1/E:content+1@2+2&2+1#1+1/F:content_1/G:0_0/H:3=3@1=3|L-H%/I:8=7/J:13+12-3
-t^m-iy+s=iy@2_1/A:1_1_3/B:1-1-2@1-1&2-2#1-2$1-2!1-1;1-1|iy/C:1+1+2/D:content_1/E:content+1@2+2&2+1#1+1/F:content_1/G:0_0/H:3=3@1=3|L-H%/I:8=7/J:13+12-3
-m^iy-s+iy=pau@1_2/A:1_1_2/B:1-1-2@1-1&3-1#2-1$2-1!1-0;1-0|iy/C:1+0+3/D:content_1/E:content+1@3+1&3+0#1+0/F:in_1/G:0_0/H:3=3@1=3|L-H%/I:8=7/J:13+12-3
-iy^s-iy+pau=dh@2_1/A:1_1_2/B:1-1-2@1-1&3-1#2-1$2-1!1-0;1-0|iy/C:1+0+3/D:content_1/E:content+1@3+1&3+0#1+0/F:in_1/G:0_0/H:3=3@1=3|L-H%/I:8=7/J:13+12-3
-s^iy-pau+dh=ae@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:in_1/G:3_3/H:x=x@1=3|0/I:8=7/J:13+12-3
-iy^pau-dh+ae=t@1_3/A:1_1_2/B:1-0-3@1-1&1-8#1-7$1-2!0-1;0-4|ae/C:1+0+3/D:content_1/E:in+1@1+7&1+3#0+3/F:md_1/G:3_3/H:8=7@2=2|NONE/I:2=2/J:13+12-3
-pau^dh-ae+t=w@2_2/A:1_1_2/B:1-0-3@1-1&1-8#1-7$1-2!0-1;0-4|ae/C:1+0+3/D:content_1/E:in+1@1+7&1+3#0+3/F:md_1/G:3_3/H:8=7@2=2|NONE/I:2=2/J:13+12-3
-dh^ae-t+w=uh@3_1/A:1_1_2/B:1-0-3@1-1&1-8#1-7$1-2!0-1;0-4|ae/C:1+0+3/D:content_1/E:in+1@1+7&1+3#0+3/F:md_1/G:3_3/H:8=7@2=2|NONE/I:2=2/J:13+12-3
-ae^t-w+uh=d@1_3/A:1_0_3/B:1-0-3@1-1&2-7#1-6$1-2!1-1;0-3|uh/C:1+0+2/D:in_1/E:md+1@2+6&1+3#0+2/F:aux_1/G:3_3/H:8=7@2=2|NONE/I:2=2/J:13+12-3
-t^w-uh+d=b@2_2/A:1_0_3/B:1-0-3@1-1&2-7#1-6$1-2!1-1;0-3|uh/C:1+0+2/D:in_1/E:md+1@2+6&1+3#0+2/F:aux_1/G:3_3/H:8=7@2=2|NONE/I:2=2/J:13+12-3
-w^uh-d+b=iy@3_1/A:1_0_3/B:1-0-3@1-1&2-7#1-6$1-2!1-1;0-3|uh/C:1+0+2/D:in_1/E:md+1@2+6&1+3#0+2/F:aux_1/G:3_3/H:8=7@2=2|NONE/I:2=2/J:13+12-3
-uh^d-b+iy=f@1_2/A:1_0_3/B:1-0-2@1-1&3-6#2-5$1-2!1-1;0-2|iy/C:1+0+3/D:md_1/E:aux+1@3+5&1+3#0+1/F:content_1/G:3_3/H:8=7@2=2|NONE/I:2=2/J:13+12-3
-d^b-iy+f=ao@2_1/A:1_0_3/B:1-0-2@1-1&3-6#2-5$1-2!1-1;0-2|iy/C:1+0+3/D:md_1/E:aux+1@3+5&1+3#0+1/F:content_1/G:3_3/H:8=7@2=2|NONE/I:2=2/J:13+12-3
-b^iy-f+ao=r@1_3/A:1_0_2/B:1-0-3@1-1&4-5#3-4$1-2!1-1;0-1|ao/C:1+1+3/D:aux_1/E:content+1@4+4&1+2#0+1/F:content_2/G:3_3/H:8=7@2=2|NONE/I:2=2/J:13+12-3
-iy^f-ao+r=th@2_2/A:1_0_2/B:1-0-3@1-1&4-5#3-4$1-2!1-1;0-1|ao/C:1+1+3/D:aux_1/E:content+1@4+4&1+2#0+1/F:content_2/G:3_3/H:8=7@2=2|NONE/I:2=2/J:13+12-3
-f^ao-r+th=aw@3_1/A:1_0_2/B:1-0-3@1-1&4-5#3-4$1-2!1-1;0-1|ao/C:1+1+3/D:aux_1/E:content+1@4+4&1+2#0+1/F:content_2/G:3_3/H:8=7@2=2|NONE/I:2=2/J:13+12-3
-ao^r-th+aw=z@1_3/A:1_0_3/B:1-1-3@1-2&5-4#4-3$1-1!1-2;0-0|aw/C:0+0+3/D:content_1/E:content+2@5+3&2+1#1+1/F:content_1/G:3_3/H:8=7@2=2|NONE/I:2=2/J:13+12-3
-r^th-aw+z=ax@2_2/A:1_0_3/B:1-1-3@1-2&5-4#4-3$1-1!1-2;0-0|aw/C:0+0+3/D:content_1/E:content+2@5+3&2+1#1+1/F:content_1/G:3_3/H:8=7@2=2|NONE/I:2=2/J:13+12-3
-th^aw-z+ax=n@3_1/A:1_0_3/B:1-1-3@1-2&5-4#4-3$1-1!1-2;0-0|aw/C:0+0+3/D:content_1/E:content+2@5+3&2+1#1+1/F:content_1/G:3_3/H:8=7@2=2|NONE/I:2=2/J:13+12-3
-aw^z-ax+n=d@1_3/A:1_1_3/B:0-0-3@2-1&6-3#5-3$2-1!1-1;1-0|ax/C:1+0+4/D:content_1/E:content+2@5+3&2+1#1+1/F:content_1/G:3_3/H:8=7@2=2|NONE/I:2=2/J:13+12-3
-z^ax-n+d=m@2_2/A:1_1_3/B:0-0-3@2-1&6-3#5-3$2-1!1-1;1-0|ax/C:1+0+4/D:content_1/E:content+2@5+3&2+1#1+1/F:content_1/G:3_3/H:8=7@2=2|NONE/I:2=2/J:13+12-3
-ax^n-d+m=ay@3_1/A:1_1_3/B:0-0-3@2-1&6-3#5-3$2-1!1-1;1-0|ax/C:1+0+4/D:content_1/E:content+2@5+3&2+1#1+1/F:content_1/G:3_3/H:8=7@2=2|NONE/I:2=2/J:13+12-3
-n^d-m+ay=l@1_4/A:0_0_3/B:1-0-4@1-1&7-2#5-2$2-1!2-1;2-0|ay/C:1+0+3/D:content_2/E:content+1@6+2&3+0#1+0/F:in_1/G:3_3/H:8=7@2=2|NONE/I:2=2/J:13+12-3
-d^m-ay+l=z@2_3/A:0_0_3/B:1-0-4@1-1&7-2#5-2$2-1!2-1;2-0|ay/C:1+0+3/D:content_2/E:content+1@6+2&3+0#1+0/F:in_1/G:3_3/H:8=7@2=2|NONE/I:2=2/J:13+12-3
-m^ay-l+z=d@3_2/A:0_0_3/B:1-0-4@1-1&7-2#5-2$2-1!2-1;2-0|ay/C:1+0+3/D:content_2/E:content+1@6+2&3+0#1+0/F:in_1/G:3_3/H:8=7@2=2|NONE/I:2=2/J:13+12-3
-ay^l-z+d=aw@4_1/A:0_0_3/B:1-0-4@1-1&7-2#5-2$2-1!2-1;2-0|ay/C:1+0+3/D:content_2/E:content+1@6+2&3+0#1+0/F:in_1/G:3_3/H:8=7@2=2|NONE/I:2=2/J:13+12-3
-l^z-d+aw=n@1_3/A:1_0_4/B:1-0-3@1-1&8-1#6-1$2-1!1-0;3-0|aw/C:1+0+1/D:content_1/E:in+1@7+1&4+0#1+0/F:content_1/G:3_3/H:8=7@2=2|NONE/I:2=2/J:13+12-3
-z^d-aw+n=pau@2_2/A:1_0_4/B:1-0-3@1-1&8-1#6-1$2-1!1-0;3-0|aw/C:1+0+1/D:content_1/E:in+1@7+1&4+0#1+0/F:content_1/G:3_3/H:8=7@2=2|NONE/I:2=2/J:13+12-3
-d^aw-n+pau=ay@3_1/A:1_0_4/B:1-0-3@1-1&8-1#6-1$2-1!1-0;3-0|aw/C:1+0+1/D:content_1/E:in+1@7+1&4+0#1+0/F:content_1/G:3_3/H:8=7@2=2|NONE/I:2=2/J:13+12-3
-aw^n-pau+ay=th@x_x/A:1_0_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+1/D:in_1/E:x+x@x+x&x+x#x+x/F:content_1/G:8_7/H:x=x@1=3|0/I:2=2/J:13+12-3
-n^pau-ay+th=ih@1_1/A:1_0_3/B:1-0-1@1-1&1-2#1-2$1-2!0-1;0-1|ay/C:1+1+4/D:in_1/E:content+1@1+2&1+1#0+1/F:content_1/G:8_7/H:2=2@3=1|L-L%/I:0=0/J:13+12-3
-pau^ay-th+ih=ng@1_4/A:1_0_1/B:1-1-4@1-1&2-1#1-1$1-1!1-0;0-0|ih/C:0+0+0/D:content_1/E:content+1@2+1&2+0#1+0/F:0_0/G:8_7/H:2=2@3=1|L-L%/I:0=0/J:13+12-3
-ay^th-ih+ng=k@2_3/A:1_0_1/B:1-1-4@1-1&2-1#1-1$1-1!1-0;0-0|ih/C:0+0+0/D:content_1/E:content+1@2+1&2+0#1+0/F:0_0/G:8_7/H:2=2@3=1|L-L%/I:0=0/J:13+12-3
-th^ih-ng+k=pau@3_2/A:1_0_1/B:1-1-4@1-1&2-1#1-1$1-1!1-0;0-0|ih/C:0+0+0/D:content_1/E:content+1@2+1&2+0#1+0/F:0_0/G:8_7/H:2=2@3=1|L-L%/I:0=0/J:13+12-3
-ih^ng-k+pau=x@4_1/A:1_0_1/B:1-1-4@1-1&2-1#1-1$1-1!1-0;0-0|ih/C:0+0+0/D:content_1/E:content+1@2+1&2+0#1+0/F:0_0/G:8_7/H:2=2@3=1|L-L%/I:0=0/J:13+12-3
-ng^k-pau+x=x@x_x/A:1_1_4/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:content_1/E:x+x@x+x&x+x#x+x/F:0_0/G:2_2/H:x=x@1=3|0/I:0=0/J:13+12-3
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice18.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice18.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice18.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice18.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,167 +0,0 @@
-x^x-pau+f=ao@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:0_0/E:x+x@x+x&x+x#x+x/F:in_1/G:0_0/H:x=x@1=9|0/I:3=3/J:63+49-9
-x^pau-f+ao=r@1_3/A:0_0_0/B:1-0-3@1-1&1-3#1-3$1-3!0-1;0-1|ao/C:1+1+2/D:0_0/E:in+1@1+3&1+2#0+1/F:content_1/G:0_0/H:3=3@1=9|L-H%/I:10=8/J:63+49-9
-pau^f-ao+r=y@2_2/A:0_0_0/B:1-0-3@1-1&1-3#1-3$1-3!0-1;0-1|ao/C:1+1+2/D:0_0/E:in+1@1+3&1+2#0+1/F:content_1/G:0_0/H:3=3@1=9|L-H%/I:10=8/J:63+49-9
-f^ao-r+y=uw@3_1/A:0_0_0/B:1-0-3@1-1&1-3#1-3$1-3!0-1;0-1|ao/C:1+1+2/D:0_0/E:in+1@1+3&1+2#0+1/F:content_1/G:0_0/H:3=3@1=9|L-H%/I:10=8/J:63+49-9
-ao^r-y+uw=s@1_2/A:1_0_3/B:1-1-2@1-1&2-2#1-2$1-2!1-1;0-1|uw/C:1+1+2/D:in_1/E:content+1@2+2&1+1#0+1/F:content_1/G:0_0/H:3=3@1=9|L-H%/I:10=8/J:63+49-9
-r^y-uw+s=iy@2_1/A:1_0_3/B:1-1-2@1-1&2-2#1-2$1-2!1-1;0-1|uw/C:1+1+2/D:in_1/E:content+1@2+2&1+1#0+1/F:content_1/G:0_0/H:3=3@1=9|L-H%/I:10=8/J:63+49-9
-y^uw-s+iy=pau@1_2/A:1_1_2/B:1-1-2@1-1&3-1#2-1$2-1!1-0;1-0|iy/C:1+1+2/D:content_1/E:content+1@3+1&2+0#1+0/F:content_2/G:0_0/H:3=3@1=9|L-H%/I:10=8/J:63+49-9
-uw^s-iy+pau=ae@2_1/A:1_1_2/B:1-1-2@1-1&3-1#2-1$2-1!1-0;1-0|iy/C:1+1+2/D:content_1/E:content+1@3+1&2+0#1+0/F:content_2/G:0_0/H:3=3@1=9|L-H%/I:10=8/J:63+49-9
-s^iy-pau+ae=l@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+2/D:content_1/E:x+x@x+x&x+x#x+x/F:content_2/G:3_3/H:x=x@1=9|0/I:10=8/J:63+49-9
-iy^pau-ae+l=ax@1_2/A:1_1_2/B:1-1-2@1-2&1-10#1-8$1-2!0-2;0-9|ae/C:0+0+2/D:content_1/E:content+2@1+8&1+4#0+2/F:aux_1/G:3_3/H:10=8@2=8|L-L%/I:8=6/J:63+49-9
-pau^ae-l+ax=s@2_1/A:1_1_2/B:1-1-2@1-2&1-10#1-8$1-2!0-2;0-9|ae/C:0+0+2/D:content_1/E:content+2@1+8&1+4#0+2/F:aux_1/G:3_3/H:10=8@2=8|L-L%/I:8=6/J:63+49-9
-ae^l-ax+s=hh@1_2/A:1_1_2/B:0-0-2@2-1&2-9#1-8$1-2!1-1;1-8|ax/C:1+0+3/D:content_1/E:content+2@1+8&1+4#0+2/F:aux_1/G:3_3/H:10=8@2=8|L-L%/I:8=6/J:63+49-9
-l^ax-s+hh=ae@2_1/A:1_1_2/B:0-0-2@2-1&2-9#1-8$1-2!1-1;1-8|ax/C:1+0+3/D:content_1/E:content+2@1+8&1+4#0+2/F:aux_1/G:3_3/H:10=8@2=8|L-L%/I:8=6/J:63+49-9
-ax^s-hh+ae=d@1_3/A:0_0_2/B:1-0-3@1-1&3-8#1-7$1-2!2-1;2-7|ae/C:1+0+4/D:content_2/E:aux+1@2+7&2+4#1+1/F:content_1/G:3_3/H:10=8@2=8|L-L%/I:8=6/J:63+49-9
-s^hh-ae+d=l@2_2/A:0_0_2/B:1-0-3@1-1&3-8#1-7$1-2!2-1;2-7|ae/C:1+0+4/D:content_2/E:aux+1@2+7&2+4#1+1/F:content_1/G:3_3/H:10=8@2=8|L-L%/I:8=6/J:63+49-9
-hh^ae-d+l=er@3_1/A:0_0_2/B:1-0-3@1-1&3-8#1-7$1-2!2-1;2-7|ae/C:1+0+4/D:content_2/E:aux+1@2+7&2+4#1+1/F:content_1/G:3_3/H:10=8@2=8|L-L%/I:8=6/J:63+49-9
-ae^d-l+er=n@1_4/A:1_0_3/B:1-0-4@1-1&4-7#2-6$1-2!1-1;3-6|er/C:1+0+3/D:aux_1/E:content+1@3+6&2+3#2+1/F:content_2/G:3_3/H:10=8@2=8|L-L%/I:8=6/J:63+49-9
-d^l-er+n=t@2_3/A:1_0_3/B:1-0-4@1-1&4-7#2-6$1-2!1-1;3-6|er/C:1+0+3/D:aux_1/E:content+1@3+6&2+3#2+1/F:content_2/G:3_3/H:10=8@2=8|L-L%/I:8=6/J:63+49-9
-l^er-n+t=s@3_2/A:1_0_3/B:1-0-4@1-1&4-7#2-6$1-2!1-1;3-6|er/C:1+0+3/D:aux_1/E:content+1@3+6&2+3#2+1/F:content_2/G:3_3/H:10=8@2=8|L-L%/I:8=6/J:63+49-9
-er^n-t+s=eh@4_1/A:1_0_3/B:1-0-4@1-1&4-7#2-6$1-2!1-1;3-6|er/C:1+0+3/D:aux_1/E:content+1@3+6&2+3#2+1/F:content_2/G:3_3/H:10=8@2=8|L-L%/I:8=6/J:63+49-9
-n^t-s+eh=v@1_3/A:1_0_4/B:1-0-3@1-2&5-6#3-5$1-2!1-2;4-5|eh/C:0+0+3/D:content_1/E:content+2@4+5&3+2#1+1/F:content_1/G:3_3/H:10=8@2=8|L-L%/I:8=6/J:63+49-9
-t^s-eh+v=r@2_2/A:1_0_4/B:1-0-3@1-2&5-6#3-5$1-2!1-2;4-5|eh/C:0+0+3/D:content_1/E:content+2@4+5&3+2#1+1/F:content_1/G:3_3/H:10=8@2=8|L-L%/I:8=6/J:63+49-9
-s^eh-v+r=ax@3_1/A:1_0_4/B:1-0-3@1-2&5-6#3-5$1-2!1-2;4-5|eh/C:0+0+3/D:content_1/E:content+2@4+5&3+2#1+1/F:content_1/G:3_3/H:10=8@2=8|L-L%/I:8=6/J:63+49-9
-eh^v-r+ax=l@1_3/A:1_0_3/B:0-0-3@2-1&6-5#4-5$1-2!1-1;5-4|ax/C:1+0+4/D:content_1/E:content+2@4+5&3+2#1+1/F:content_1/G:3_3/H:10=8@2=8|L-L%/I:8=6/J:63+49-9
-v^r-ax+l=th@2_2/A:1_0_3/B:0-0-3@2-1&6-5#4-5$1-2!1-1;5-4|ax/C:1+0+4/D:content_1/E:content+2@4+5&3+2#1+1/F:content_1/G:3_3/H:10=8@2=8|L-L%/I:8=6/J:63+49-9
-r^ax-l+th=ih@3_1/A:1_0_3/B:0-0-3@2-1&6-5#4-5$1-2!1-1;5-4|ax/C:1+0+4/D:content_1/E:content+2@4+5&3+2#1+1/F:content_1/G:3_3/H:10=8@2=8|L-L%/I:8=6/J:63+49-9
-ax^l-th+ih=ng@1_4/A:0_0_3/B:1-0-4@1-1&7-4#4-4$1-2!2-1;6-3|ih/C:1+0+2/D:content_2/E:content+1@5+4&4+1#1+3/F:in_1/G:3_3/H:10=8@2=8|L-L%/I:8=6/J:63+49-9
-l^th-ih+ng=z@2_3/A:0_0_3/B:1-0-4@1-1&7-4#4-4$1-2!2-1;6-3|ih/C:1+0+2/D:content_2/E:content+1@5+4&4+1#1+3/F:in_1/G:3_3/H:10=8@2=8|L-L%/I:8=6/J:63+49-9
-th^ih-ng+z=ah@3_2/A:0_0_3/B:1-0-4@1-1&7-4#4-4$1-2!2-1;6-3|ih/C:1+0+2/D:content_2/E:content+1@5+4&4+1#1+3/F:in_1/G:3_3/H:10=8@2=8|L-L%/I:8=6/J:63+49-9
-ih^ng-z+ah=v@4_1/A:0_0_3/B:1-0-4@1-1&7-4#4-4$1-2!2-1;6-3|ih/C:1+0+2/D:content_2/E:content+1@5+4&4+1#1+3/F:in_1/G:3_3/H:10=8@2=8|L-L%/I:8=6/J:63+49-9
-ng^z-ah+v=dh@1_2/A:1_0_4/B:1-0-2@1-1&8-3#5-3$1-2!1-1;7-2|ah/C:1+0+3/D:content_1/E:in+1@6+3&5+1#1+2/F:det_1/G:3_3/H:10=8@2=8|L-L%/I:8=6/J:63+49-9
-z^ah-v+dh=ih@2_1/A:1_0_4/B:1-0-2@1-1&8-3#5-3$1-2!1-1;7-2|ah/C:1+0+3/D:content_1/E:in+1@6+3&5+1#1+2/F:det_1/G:3_3/H:10=8@2=8|L-L%/I:8=6/J:63+49-9
-ah^v-dh+ih=s@1_3/A:1_0_2/B:1-0-3@1-1&9-2#6-2$1-2!1-1;8-1|ih/C:1+1+4/D:in_1/E:det+1@7+2&5+1#2+1/F:content_1/G:3_3/H:10=8@2=8|L-L%/I:8=6/J:63+49-9
-v^dh-ih+s=s@2_2/A:1_0_2/B:1-0-3@1-1&9-2#6-2$1-2!1-1;8-1|ih/C:1+1+4/D:in_1/E:det+1@7+2&5+1#2+1/F:content_1/G:3_3/H:10=8@2=8|L-L%/I:8=6/J:63+49-9
-dh^ih-s+s=ao@3_1/A:1_0_2/B:1-0-3@1-1&9-2#6-2$1-2!1-1;8-1|ih/C:1+1+4/D:in_1/E:det+1@7+2&5+1#2+1/F:content_1/G:3_3/H:10=8@2=8|L-L%/I:8=6/J:63+49-9
-ih^s-s+ao=r@1_4/A:1_0_3/B:1-1-4@1-1&10-1#7-1$1-1!1-0;9-0|ao/C:0+0+2/D:det_1/E:content+1@8+1&5+0#3+0/F:in_1/G:3_3/H:10=8@2=8|L-L%/I:8=6/J:63+49-9
-s^s-ao+r=t@2_3/A:1_0_3/B:1-1-4@1-1&10-1#7-1$1-1!1-0;9-0|ao/C:0+0+2/D:det_1/E:content+1@8+1&5+0#3+0/F:in_1/G:3_3/H:10=8@2=8|L-L%/I:8=6/J:63+49-9
-s^ao-r+t=pau@3_2/A:1_0_3/B:1-1-4@1-1&10-1#7-1$1-1!1-0;9-0|ao/C:0+0+2/D:det_1/E:content+1@8+1&5+0#3+0/F:in_1/G:3_3/H:10=8@2=8|L-L%/I:8=6/J:63+49-9
-ao^r-t+pau=ih@4_1/A:1_0_3/B:1-1-4@1-1&10-1#7-1$1-1!1-0;9-0|ao/C:0+0+2/D:det_1/E:content+1@8+1&5+0#3+0/F:in_1/G:3_3/H:10=8@2=8|L-L%/I:8=6/J:63+49-9
-r^t-pau+ih=n@x_x/A:1_1_4/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+2/D:content_1/E:x+x@x+x&x+x#x+x/F:in_1/G:10_8/H:x=x@1=9|0/I:8=6/J:63+49-9
-t^pau-ih+n=hh@1_2/A:1_1_4/B:0-0-2@1-1&1-8#1-4$1-4!0-2;0-2|ih/C:0+0+2/D:content_1/E:in+1@1+6&1+2#0+2/F:pps_1/G:10_8/H:8=6@3=7|L-L%/I:14=9/J:63+49-9
-pau^ih-n+hh=er@2_1/A:1_1_4/B:0-0-2@1-1&1-8#1-4$1-4!0-2;0-2|ih/C:0+0+2/D:content_1/E:in+1@1+6&1+2#0+2/F:pps_1/G:10_8/H:8=6@3=7|L-L%/I:14=9/J:63+49-9
-ih^n-hh+er=l@1_2/A:0_0_2/B:0-0-2@1-1&2-7#1-4$1-4!0-1;0-1|er/C:1+1+3/D:in_1/E:pps+1@2+5&1+2#0+1/F:content_2/G:10_8/H:8=6@3=7|L-L%/I:14=9/J:63+49-9
-n^hh-er+l=eh@2_1/A:0_0_2/B:0-0-2@1-1&2-7#1-4$1-4!0-1;0-1|er/C:1+1+3/D:in_1/E:pps+1@2+5&1+2#0+1/F:content_2/G:10_8/H:8=6@3=7|L-L%/I:14=9/J:63+49-9
-hh^er-l+eh=s@1_3/A:0_0_2/B:1-1-3@1-2&3-6#1-3$1-3!0-4;0-4|eh/C:0+0+3/D:pps_1/E:content+2@3+4&1+1#0+3/F:in_1/G:10_8/H:8=6@3=7|L-L%/I:14=9/J:63+49-9
-er^l-eh+s=ax@2_2/A:0_0_2/B:1-1-3@1-2&3-6#1-3$1-3!0-4;0-4|eh/C:0+0+3/D:pps_1/E:content+2@3+4&1+1#0+3/F:in_1/G:10_8/H:8=6@3=7|L-L%/I:14=9/J:63+49-9
-l^eh-s+ax=n@3_1/A:0_0_2/B:1-1-3@1-2&3-6#1-3$1-3!0-4;0-4|eh/C:0+0+3/D:pps_1/E:content+2@3+4&1+1#0+3/F:in_1/G:10_8/H:8=6@3=7|L-L%/I:14=9/J:63+49-9
-eh^s-ax+n=z@1_3/A:1_1_3/B:0-0-3@2-1&4-5#2-3$2-3!1-3;1-3|ax/C:0+0+2/D:pps_1/E:content+2@3+4&1+1#0+3/F:in_1/G:10_8/H:8=6@3=7|L-L%/I:14=9/J:63+49-9
-s^ax-n+z=ih@2_2/A:1_1_3/B:0-0-3@2-1&4-5#2-3$2-3!1-3;1-3|ax/C:0+0+2/D:pps_1/E:content+2@3+4&1+1#0+3/F:in_1/G:10_8/H:8=6@3=7|L-L%/I:14=9/J:63+49-9
-ax^n-z+ih=n@3_1/A:1_1_3/B:0-0-3@2-1&4-5#2-3$2-3!1-3;1-3|ax/C:0+0+2/D:pps_1/E:content+2@3+4&1+1#0+3/F:in_1/G:10_8/H:8=6@3=7|L-L%/I:14=9/J:63+49-9
-n^z-ih+n=dh@1_2/A:0_0_3/B:0-0-2@1-1&5-4#2-3$2-3!2-2;2-2|ih/C:0+0+2/D:content_2/E:in+1@4+3&2+1#1+2/F:det_1/G:10_8/H:8=6@3=7|L-L%/I:14=9/J:63+49-9
-z^ih-n+dh=ax@2_1/A:0_0_3/B:0-0-2@1-1&5-4#2-3$2-3!2-2;2-2|ih/C:0+0+2/D:content_2/E:in+1@4+3&2+1#1+2/F:det_1/G:10_8/H:8=6@3=7|L-L%/I:14=9/J:63+49-9
-ih^n-dh+ax=s@1_2/A:0_0_2/B:0-0-2@1-1&6-3#2-3$2-3!3-1;3-1|ax/C:1+1+5/D:in_1/E:det+1@5+2&2+1#2+1/F:content_2/G:10_8/H:8=6@3=7|L-L%/I:14=9/J:63+49-9
-n^dh-ax+s=k@2_1/A:0_0_2/B:0-0-2@1-1&6-3#2-3$2-3!3-1;3-1|ax/C:1+1+5/D:in_1/E:det+1@5+2&2+1#2+1/F:content_2/G:10_8/H:8=6@3=7|L-L%/I:14=9/J:63+49-9
-dh^ax-s+k=uw@1_5/A:0_0_2/B:1-1-5@1-2&7-2#2-2$2-2!4-1;4-1|uw/C:1+1+2/D:det_1/E:content+2@6+1&2+0#3+0/F:cc_1/G:10_8/H:8=6@3=7|L-L%/I:14=9/J:63+49-9
-ax^s-k+uw=l@2_4/A:0_0_2/B:1-1-5@1-2&7-2#2-2$2-2!4-1;4-1|uw/C:1+1+2/D:det_1/E:content+2@6+1&2+0#3+0/F:cc_1/G:10_8/H:8=6@3=7|L-L%/I:14=9/J:63+49-9
-s^k-uw+l=r@3_3/A:0_0_2/B:1-1-5@1-2&7-2#2-2$2-2!4-1;4-1|uw/C:1+1+2/D:det_1/E:content+2@6+1&2+0#3+0/F:cc_1/G:10_8/H:8=6@3=7|L-L%/I:14=9/J:63+49-9
-k^uw-l+r=uw@4_2/A:0_0_2/B:1-1-5@1-2&7-2#2-2$2-2!4-1;4-1|uw/C:1+1+2/D:det_1/E:content+2@6+1&2+0#3+0/F:cc_1/G:10_8/H:8=6@3=7|L-L%/I:14=9/J:63+49-9
-uw^l-r+uw=m@5_1/A:0_0_2/B:1-1-5@1-2&7-2#2-2$2-2!4-1;4-1|uw/C:1+1+2/D:det_1/E:content+2@6+1&2+0#3+0/F:cc_1/G:10_8/H:8=6@3=7|L-L%/I:14=9/J:63+49-9
-l^r-uw+m=pau@1_2/A:1_1_5/B:1-1-2@2-1&8-1#3-1$3-1!1-0;1-0|uw/C:1+0+3/D:det_1/E:content+2@6+1&2+0#3+0/F:cc_1/G:10_8/H:8=6@3=7|L-L%/I:14=9/J:63+49-9
-r^uw-m+pau=ae@2_1/A:1_1_5/B:1-1-2@2-1&8-1#3-1$3-1!1-0;1-0|uw/C:1+0+3/D:det_1/E:content+2@6+1&2+0#3+0/F:cc_1/G:10_8/H:8=6@3=7|L-L%/I:14=9/J:63+49-9
-uw^m-pau+ae=n@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_2/E:x+x@x+x&x+x#x+x/F:cc_1/G:8_6/H:x=x@1=9|0/I:14=9/J:63+49-9
-m^pau-ae+n=d@1_3/A:1_1_2/B:1-0-3@1-1&1-14#1-9$1-5!0-1;0-1|ae/C:1+1+2/D:content_2/E:cc+1@1+9&1+5#0+1/F:content_1/G:8_6/H:14=9@4=6|L-L%/I:7=5/J:63+49-9
-pau^ae-n+d=dh@2_2/A:1_1_2/B:1-0-3@1-1&1-14#1-9$1-5!0-1;0-1|ae/C:1+1+2/D:content_2/E:cc+1@1+9&1+5#0+1/F:content_1/G:8_6/H:14=9@4=6|L-L%/I:7=5/J:63+49-9
-ae^n-d+dh=ow@3_1/A:1_1_2/B:1-0-3@1-1&1-14#1-9$1-5!0-1;0-1|ae/C:1+1+2/D:content_2/E:cc+1@1+9&1+5#0+1/F:content_1/G:8_6/H:14=9@4=6|L-L%/I:7=5/J:63+49-9
-n^d-dh+ow=dh@1_2/A:1_0_3/B:1-1-2@1-1&2-13#1-8$1-4!1-1;0-8|ow/C:1+0+3/D:cc_1/E:content+1@2+8&1+4#0+3/F:det_1/G:8_6/H:14=9@4=6|L-L%/I:7=5/J:63+49-9
-d^dh-ow+dh=ih@2_1/A:1_0_3/B:1-1-2@1-1&2-13#1-8$1-4!1-1;0-8|ow/C:1+0+3/D:cc_1/E:content+1@2+8&1+4#0+3/F:det_1/G:8_6/H:14=9@4=6|L-L%/I:7=5/J:63+49-9
-dh^ow-dh+ih=s@1_3/A:1_1_2/B:1-0-3@1-1&3-12#2-7$2-4!1-1;1-7|ih/C:1+0+3/D:content_1/E:det+1@3+7&2+4#1+2/F:aux_1/G:8_6/H:14=9@4=6|L-L%/I:7=5/J:63+49-9
-ow^dh-ih+s=w@2_2/A:1_1_2/B:1-0-3@1-1&3-12#2-7$2-4!1-1;1-7|ih/C:1+0+3/D:content_1/E:det+1@3+7&2+4#1+2/F:aux_1/G:8_6/H:14=9@4=6|L-L%/I:7=5/J:63+49-9
-dh^ih-s+w=aa@3_1/A:1_1_2/B:1-0-3@1-1&3-12#2-7$2-4!1-1;1-7|ih/C:1+0+3/D:content_1/E:det+1@3+7&2+4#1+2/F:aux_1/G:8_6/H:14=9@4=6|L-L%/I:7=5/J:63+49-9
-ih^s-w+aa=z@1_3/A:1_0_3/B:1-0-3@1-1&4-11#3-6$2-4!1-1;2-6|aa/C:1+0+3/D:det_1/E:aux+1@4+6&2+4#2+1/F:content_1/G:8_6/H:14=9@4=6|L-L%/I:7=5/J:63+49-9
-s^w-aa+z=n@2_2/A:1_0_3/B:1-0-3@1-1&4-11#3-6$2-4!1-1;2-6|aa/C:1+0+3/D:det_1/E:aux+1@4+6&2+4#2+1/F:content_1/G:8_6/H:14=9@4=6|L-L%/I:7=5/J:63+49-9
-w^aa-z+n=aa@3_1/A:1_0_3/B:1-0-3@1-1&4-11#3-6$2-4!1-1;2-6|aa/C:1+0+3/D:det_1/E:aux+1@4+6&2+4#2+1/F:content_1/G:8_6/H:14=9@4=6|L-L%/I:7=5/J:63+49-9
-aa^z-n+aa=t@1_3/A:1_0_3/B:1-0-3@1-1&5-10#4-5$2-4!1-2;3-5|aa/C:0+0+1/D:aux_1/E:content+1@5+5&2+3#3+2/F:det_1/G:8_6/H:14=9@4=6|L-L%/I:7=5/J:63+49-9
-z^n-aa+t=ax@2_2/A:1_0_3/B:1-0-3@1-1&5-10#4-5$2-4!1-2;3-5|aa/C:0+0+1/D:aux_1/E:content+1@5+5&2+3#3+2/F:det_1/G:8_6/H:14=9@4=6|L-L%/I:7=5/J:63+49-9
-n^aa-t+ax=v@3_1/A:1_0_3/B:1-0-3@1-1&5-10#4-5$2-4!1-2;3-5|aa/C:0+0+1/D:aux_1/E:content+1@5+5&2+3#3+2/F:det_1/G:8_6/H:14=9@4=6|L-L%/I:7=5/J:63+49-9
-aa^t-ax+v=eh@1_1/A:1_0_3/B:0-0-1@1-1&6-9#5-5$2-4!1-1;4-4|ax/C:1+0+3/D:content_1/E:det+1@6+4&3+3#1+1/F:content_2/G:8_6/H:14=9@4=6|L-L%/I:7=5/J:63+49-9
-t^ax-v+eh=r@1_3/A:0_0_1/B:1-0-3@1-2&7-8#5-4$2-4!2-2;5-3|eh/C:0+0+1/D:det_1/E:content+2@7+3&3+2#2+1/F:content_1/G:8_6/H:14=9@4=6|L-L%/I:7=5/J:63+49-9
-ax^v-eh+r=iy@2_2/A:0_0_1/B:1-0-3@1-2&7-8#5-4$2-4!2-2;5-3|eh/C:0+0+1/D:det_1/E:content+2@7+3&3+2#2+1/F:content_1/G:8_6/H:14=9@4=6|L-L%/I:7=5/J:63+49-9
-v^eh-r+iy=g@3_1/A:0_0_1/B:1-0-3@1-2&7-8#5-4$2-4!2-2;5-3|eh/C:0+0+1/D:det_1/E:content+2@7+3&3+2#2+1/F:content_1/G:8_6/H:14=9@4=6|L-L%/I:7=5/J:63+49-9
-eh^r-iy+g=uh@1_1/A:1_0_3/B:0-0-1@2-1&8-7#6-4$2-4!1-1;6-2|iy/C:1+0+3/D:det_1/E:content+2@7+3&3+2#2+1/F:content_1/G:8_6/H:14=9@4=6|L-L%/I:7=5/J:63+49-9
-r^iy-g+uh=d@1_3/A:0_0_1/B:1-0-3@1-1&9-6#6-3$2-4!2-1;7-1|uh/C:1+1+2/D:content_2/E:content+1@8+2&4+1#1+1/F:content_5/G:8_6/H:14=9@4=6|L-L%/I:7=5/J:63+49-9
-iy^g-uh+d=aa@2_2/A:0_0_1/B:1-0-3@1-1&9-6#6-3$2-4!2-1;7-1|uh/C:1+1+2/D:content_2/E:content+1@8+2&4+1#1+1/F:content_5/G:8_6/H:14=9@4=6|L-L%/I:7=5/J:63+49-9
-g^uh-d+aa=p@3_1/A:0_0_1/B:1-0-3@1-1&9-6#6-3$2-4!2-1;7-1|uh/C:1+1+2/D:content_2/E:content+1@8+2&4+1#1+1/F:content_5/G:8_6/H:14=9@4=6|L-L%/I:7=5/J:63+49-9
-uh^d-aa+p=er@1_2/A:1_0_3/B:1-1-2@1-5&10-5#7-2$2-3!1-2;8-2|aa/C:0+0+2/D:content_1/E:content+5@9+1&5+0#1+0/F:in_1/G:8_6/H:14=9@4=6|L-L%/I:7=5/J:63+49-9
-d^aa-p+er=t@2_1/A:1_0_3/B:1-1-2@1-5&10-5#7-2$2-3!1-2;8-2|aa/C:0+0+2/D:content_1/E:content+5@9+1&5+0#1+0/F:in_1/G:8_6/H:14=9@4=6|L-L%/I:7=5/J:63+49-9
-aa^p-er+t=uw@1_2/A:1_1_2/B:0-0-2@2-4&11-4#8-2$3-3!1-1;1-1|er/C:1+1+2/D:content_1/E:content+5@9+1&5+0#1+0/F:in_1/G:8_6/H:14=9@4=6|L-L%/I:7=5/J:63+49-9
-p^er-t+uw=n@2_1/A:1_1_2/B:0-0-2@2-4&11-4#8-2$3-3!1-1;1-1|er/C:1+1+2/D:content_1/E:content+5@9+1&5+0#1+0/F:in_1/G:8_6/H:14=9@4=6|L-L%/I:7=5/J:63+49-9
-er^t-uw+n=ax@1_2/A:0_0_2/B:1-1-2@3-3&12-3#8-1$3-2!2-0;2-2|uw/C:0+0+2/D:content_1/E:content+5@9+1&5+0#1+0/F:in_1/G:8_6/H:14=9@4=6|L-L%/I:7=5/J:63+49-9
-t^uw-n+ax=t@2_1/A:0_0_2/B:1-1-2@3-3&12-3#8-1$3-2!2-0;2-2|uw/C:0+0+2/D:content_1/E:content+5@9+1&5+0#1+0/F:in_1/G:8_6/H:14=9@4=6|L-L%/I:7=5/J:63+49-9
-uw^n-ax+t=iy@1_2/A:1_1_2/B:0-0-2@4-2&13-2#9-1$4-2!1-0;1-1|ax/C:0+1+1/D:content_1/E:content+5@9+1&5+0#1+0/F:in_1/G:8_6/H:14=9@4=6|L-L%/I:7=5/J:63+49-9
-n^ax-t+iy=pau@2_1/A:1_1_2/B:0-0-2@4-2&13-2#9-1$4-2!1-0;1-1|ax/C:0+1+1/D:content_1/E:content+5@9+1&5+0#1+0/F:in_1/G:8_6/H:14=9@4=6|L-L%/I:7=5/J:63+49-9
-ax^t-iy+pau=f@1_1/A:0_0_2/B:0-1-1@5-1&14-1#9-1$4-1!2-0;2-0|iy/C:1+0+3/D:content_1/E:content+5@9+1&5+0#1+0/F:in_1/G:8_6/H:14=9@4=6|L-L%/I:7=5/J:63+49-9
-t^iy-pau+f=ao@x_x/A:0_1_1/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_5/E:x+x@x+x&x+x#x+x/F:in_1/G:14_9/H:x=x@1=9|0/I:7=5/J:63+49-9
-iy^pau-f+ao=r@1_3/A:0_1_1/B:1-0-3@1-1&1-7#1-4$1-3!0-1;0-1|ao/C:1+1+2/D:content_5/E:in+1@1+5&1+3#0+1/F:content_2/G:14_9/H:7=5@5=5|L-L%/I:5=5/J:63+49-9
-pau^f-ao+r=sh@2_2/A:0_1_1/B:1-0-3@1-1&1-7#1-4$1-3!0-1;0-1|ao/C:1+1+2/D:content_5/E:in+1@1+5&1+3#0+1/F:content_2/G:14_9/H:7=5@5=5|L-L%/I:5=5/J:63+49-9
-f^ao-r+sh=ow@3_1/A:0_1_1/B:1-0-3@1-1&1-7#1-4$1-3!0-1;0-1|ao/C:1+1+2/D:content_5/E:in+1@1+5&1+3#0+1/F:content_2/G:14_9/H:7=5@5=5|L-L%/I:5=5/J:63+49-9
-ao^r-sh+ow=ih@1_2/A:1_0_3/B:1-1-2@1-2&2-6#1-3$1-2!1-2;0-5|ow/C:0+0+2/D:in_1/E:content+2@2+4&1+2#0+1/F:content_1/G:14_9/H:7=5@5=5|L-L%/I:5=5/J:63+49-9
-r^sh-ow+ih=ng@2_1/A:1_0_3/B:1-1-2@1-2&2-6#1-3$1-2!1-2;0-5|ow/C:0+0+2/D:in_1/E:content+2@2+4&1+2#0+1/F:content_1/G:14_9/H:7=5@5=5|L-L%/I:5=5/J:63+49-9
-sh^ow-ih+ng=ao@1_2/A:1_1_2/B:0-0-2@2-1&3-5#2-3$2-2!1-1;1-4|ih/C:1+0+2/D:in_1/E:content+2@2+4&1+2#0+1/F:content_1/G:14_9/H:7=5@5=5|L-L%/I:5=5/J:63+49-9
-ow^ih-ng+ao=f@2_1/A:1_1_2/B:0-0-2@2-1&3-5#2-3$2-2!1-1;1-4|ih/C:1+0+2/D:in_1/E:content+2@2+4&1+2#0+1/F:content_1/G:14_9/H:7=5@5=5|L-L%/I:5=5/J:63+49-9
-ih^ng-ao+f=hh@1_2/A:0_0_2/B:1-0-2@1-1&4-4#2-2$2-2!2-2;2-3|ao/C:0+0+2/D:content_2/E:content+1@3+3&2+1#1+2/F:pps_1/G:14_9/H:7=5@5=5|L-L%/I:5=5/J:63+49-9
-ng^ao-f+hh=er@2_1/A:0_0_2/B:1-0-2@1-1&4-4#2-2$2-2!2-2;2-3|ao/C:0+0+2/D:content_2/E:content+1@3+3&2+1#1+2/F:pps_1/G:14_9/H:7=5@5=5|L-L%/I:5=5/J:63+49-9
-ao^f-hh+er=n@1_2/A:1_0_2/B:0-0-2@1-1&5-3#3-2$2-2!1-1;3-2|er/C:1+0+3/D:content_1/E:pps+1@4+2&3+1#1+1/F:content_2/G:14_9/H:7=5@5=5|L-L%/I:5=5/J:63+49-9
-f^hh-er+n=aa@2_1/A:1_0_2/B:0-0-2@1-1&5-3#3-2$2-2!1-1;3-2|er/C:1+0+3/D:content_1/E:pps+1@4+2&3+1#1+1/F:content_2/G:14_9/H:7=5@5=5|L-L%/I:5=5/J:63+49-9
-hh^er-n+aa=l@1_3/A:0_0_2/B:1-0-3@1-2&6-2#3-1$2-2!2-0;4-1|aa/C:0+1+2/D:pps_1/E:content+2@5+1&3+0#2+0/F:in_1/G:14_9/H:7=5@5=5|L-L%/I:5=5/J:63+49-9
-er^n-aa+l=ax@2_2/A:0_0_2/B:1-0-3@1-2&6-2#3-1$2-2!2-0;4-1|aa/C:0+1+2/D:pps_1/E:content+2@5+1&3+0#2+0/F:in_1/G:14_9/H:7=5@5=5|L-L%/I:5=5/J:63+49-9
-n^aa-l+ax=jh@3_1/A:0_0_2/B:1-0-3@1-2&6-2#3-1$2-2!2-0;4-1|aa/C:0+1+2/D:pps_1/E:content+2@5+1&3+0#2+0/F:in_1/G:14_9/H:7=5@5=5|L-L%/I:5=5/J:63+49-9
-aa^l-ax+jh=pau@1_2/A:1_0_3/B:0-1-2@2-1&7-1#4-1$2-1!1-0;5-0|ax/C:1+0+2/D:pps_1/E:content+2@5+1&3+0#2+0/F:in_1/G:14_9/H:7=5@5=5|L-L%/I:5=5/J:63+49-9
-l^ax-jh+pau=ae@2_1/A:1_0_3/B:0-1-2@2-1&7-1#4-1$2-1!1-0;5-0|ax/C:1+0+2/D:pps_1/E:content+2@5+1&3+0#2+0/F:in_1/G:14_9/H:7=5@5=5|L-L%/I:5=5/J:63+49-9
-ax^jh-pau+ae=z@x_x/A:0_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:content_2/E:x+x@x+x&x+x#x+x/F:in_1/G:7_5/H:x=x@1=9|0/I:5=5/J:63+49-9
-jh^pau-ae+z=dh@1_2/A:0_1_2/B:1-0-2@1-1&1-5#1-5$1-3!0-1;0-1|ae/C:1+1+3/D:content_2/E:in+1@1+5&1+2#0+1/F:content_1/G:7_5/H:5=5@6=4|L-L%/I:5=4/J:63+49-9
-pau^ae-z+dh=eh@2_1/A:0_1_2/B:1-0-2@1-1&1-5#1-5$1-3!0-1;0-1|ae/C:1+1+3/D:content_2/E:in+1@1+5&1+2#0+1/F:content_1/G:7_5/H:5=5@6=4|L-L%/I:5=4/J:63+49-9
-ae^z-dh+eh=r@1_3/A:1_0_2/B:1-1-3@1-1&2-4#1-4$1-2!1-1;0-3|eh/C:1+0+3/D:in_1/E:content+1@2+4&1+1#0+3/F:aux_1/G:7_5/H:5=5@6=4|L-L%/I:5=4/J:63+49-9
-z^dh-eh+r=w@2_2/A:1_0_2/B:1-1-3@1-1&2-4#1-4$1-2!1-1;0-3|eh/C:1+0+3/D:in_1/E:content+1@2+4&1+1#0+3/F:aux_1/G:7_5/H:5=5@6=4|L-L%/I:5=4/J:63+49-9
-dh^eh-r+w=aa@3_1/A:1_0_2/B:1-1-3@1-1&2-4#1-4$1-2!1-1;0-3|eh/C:1+0+3/D:in_1/E:content+1@2+4&1+1#0+3/F:aux_1/G:7_5/H:5=5@6=4|L-L%/I:5=4/J:63+49-9
-eh^r-w+aa=z@1_3/A:1_1_3/B:1-0-3@1-1&3-3#2-3$2-2!1-1;1-2|aa/C:1+0+2/D:content_1/E:aux+1@3+3&2+1#1+2/F:det_1/G:7_5/H:5=5@6=4|L-L%/I:5=4/J:63+49-9
-r^w-aa+z=n@2_2/A:1_1_3/B:1-0-3@1-1&3-3#2-3$2-2!1-1;1-2|aa/C:1+0+2/D:content_1/E:aux+1@3+3&2+1#1+2/F:det_1/G:7_5/H:5=5@6=4|L-L%/I:5=4/J:63+49-9
-w^aa-z+n=ow@3_1/A:1_1_3/B:1-0-3@1-1&3-3#2-3$2-2!1-1;1-2|aa/C:1+0+2/D:content_1/E:aux+1@3+3&2+1#1+2/F:det_1/G:7_5/H:5=5@6=4|L-L%/I:5=4/J:63+49-9
-aa^z-n+ow=w@1_2/A:1_0_3/B:1-0-2@1-1&4-2#3-2$2-2!1-1;2-1|ow/C:1+1+3/D:aux_1/E:det+1@4+2&2+1#2+1/F:content_1/G:7_5/H:5=5@6=4|L-L%/I:5=4/J:63+49-9
-z^n-ow+w=ah@2_1/A:1_0_3/B:1-0-2@1-1&4-2#3-2$2-2!1-1;2-1|ow/C:1+1+3/D:aux_1/E:det+1@4+2&2+1#2+1/F:content_1/G:7_5/H:5=5@6=4|L-L%/I:5=4/J:63+49-9
-n^ow-w+ah=n@1_3/A:1_0_2/B:1-1-3@1-1&5-1#4-1$2-1!1-0;3-0|ah/C:0+0+2/D:det_1/E:content+1@5+1&2+0#3+0/F:to_1/G:7_5/H:5=5@6=4|L-L%/I:5=4/J:63+49-9
-ow^w-ah+n=pau@2_2/A:1_0_2/B:1-1-3@1-1&5-1#4-1$2-1!1-0;3-0|ah/C:0+0+2/D:det_1/E:content+1@5+1&2+0#3+0/F:to_1/G:7_5/H:5=5@6=4|L-L%/I:5=4/J:63+49-9
-w^ah-n+pau=t@3_1/A:1_0_2/B:1-1-3@1-1&5-1#4-1$2-1!1-0;3-0|ah/C:0+0+2/D:det_1/E:content+1@5+1&2+0#3+0/F:to_1/G:7_5/H:5=5@6=4|L-L%/I:5=4/J:63+49-9
-ah^n-pau+t=ax@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+2/D:content_1/E:x+x@x+x&x+x#x+x/F:to_1/G:5_5/H:x=x@1=9|0/I:5=4/J:63+49-9
-n^pau-t+ax=l@1_2/A:1_1_3/B:0-0-2@1-1&1-5#1-2$1-3!0-1;0-1|ax/C:1+1+3/D:content_1/E:to+1@1+4&1+1#0+1/F:content_2/G:5_5/H:5=4@7=3|L-L%/I:6=5/J:63+49-9
-pau^t-ax+l=ih@2_1/A:1_1_3/B:0-0-2@1-1&1-5#1-2$1-3!0-1;0-1|ax/C:1+1+3/D:content_1/E:to+1@1+4&1+1#0+1/F:content_2/G:5_5/H:5=4@7=3|L-L%/I:6=5/J:63+49-9
-t^ax-l+ih=s@1_3/A:0_0_2/B:1-1-3@1-2&2-4#1-1$1-2!0-0;0-3|ih/C:0+0+2/D:to_1/E:content+2@2+3&1+0#0+0/F:to_1/G:5_5/H:5=4@7=3|L-L%/I:6=5/J:63+49-9
-ax^l-ih+s=ax@2_2/A:0_0_2/B:1-1-3@1-2&2-4#1-1$1-2!0-0;0-3|ih/C:0+0+2/D:to_1/E:content+2@2+3&1+0#0+0/F:to_1/G:5_5/H:5=4@7=3|L-L%/I:6=5/J:63+49-9
-l^ih-s+ax=n@3_1/A:0_0_2/B:1-1-3@1-2&2-4#1-1$1-2!0-0;0-3|ih/C:0+0+2/D:to_1/E:content+2@2+3&1+0#0+0/F:to_1/G:5_5/H:5=4@7=3|L-L%/I:6=5/J:63+49-9
-ih^s-ax+n=t@1_2/A:1_1_3/B:0-0-2@2-1&3-3#2-1$2-2!1-0;1-2|ax/C:0+0+2/D:to_1/E:content+2@2+3&1+0#0+0/F:to_1/G:5_5/H:5=4@7=3|L-L%/I:6=5/J:63+49-9
-s^ax-n+t=ax@2_1/A:1_1_3/B:0-0-2@2-1&3-3#2-1$2-2!1-0;1-2|ax/C:0+0+2/D:to_1/E:content+2@2+3&1+0#0+0/F:to_1/G:5_5/H:5=4@7=3|L-L%/I:6=5/J:63+49-9
-ax^n-t+ax=hh@1_2/A:0_0_2/B:0-0-2@1-1&4-2#2-1$2-2!2-0;2-1|ax/C:0+1+2/D:content_2/E:to+1@3+2&2+0#1+0/F:pps_1/G:5_5/H:5=4@7=3|L-L%/I:6=5/J:63+49-9
-n^t-ax+hh=er@2_1/A:0_0_2/B:0-0-2@1-1&4-2#2-1$2-2!2-0;2-1|ax/C:0+1+2/D:content_2/E:to+1@3+2&2+0#1+0/F:pps_1/G:5_5/H:5=4@7=3|L-L%/I:6=5/J:63+49-9
-t^ax-hh+er=pau@1_2/A:0_0_2/B:0-1-2@1-1&5-1#2-1$2-1!3-0;3-0|er/C:1+0+4/D:to_1/E:pps+1@4+1&2+0#2+0/F:content_1/G:5_5/H:5=4@7=3|L-L%/I:6=5/J:63+49-9
-ax^hh-er+pau=s@2_1/A:0_0_2/B:0-1-2@1-1&5-1#2-1$2-1!3-0;3-0|er/C:1+0+4/D:to_1/E:pps+1@4+1&2+0#2+0/F:content_1/G:5_5/H:5=4@7=3|L-L%/I:6=5/J:63+49-9
-hh^er-pau+s=t@x_x/A:0_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+4/D:pps_1/E:x+x@x+x&x+x#x+x/F:content_1/G:5_4/H:x=x@1=9|0/I:6=5/J:63+49-9
-er^pau-s+t=ih@1_4/A:0_1_2/B:1-0-4@1-1&1-6#1-5$1-4!0-1;0-1|ih/C:1+1+2/D:pps_1/E:content+1@1+5&1+3#0+1/F:content_1/G:5_4/H:6=5@8=2|L-L%/I:5=4/J:63+49-9
-pau^s-t+ih=l@2_3/A:0_1_2/B:1-0-4@1-1&1-6#1-5$1-4!0-1;0-1|ih/C:1+1+2/D:pps_1/E:content+1@1+5&1+3#0+1/F:content_1/G:5_4/H:6=5@8=2|L-L%/I:5=4/J:63+49-9
-s^t-ih+l=ih@3_2/A:0_1_2/B:1-0-4@1-1&1-6#1-5$1-4!0-1;0-1|ih/C:1+1+2/D:pps_1/E:content+1@1+5&1+3#0+1/F:content_1/G:5_4/H:6=5@8=2|L-L%/I:5=4/J:63+49-9
-t^ih-l+ih=t@4_1/A:0_1_2/B:1-0-4@1-1&1-6#1-5$1-4!0-1;0-1|ih/C:1+1+2/D:pps_1/E:content+1@1+5&1+3#0+1/F:content_1/G:5_4/H:6=5@8=2|L-L%/I:5=4/J:63+49-9
-ih^l-ih+t=w@1_2/A:1_0_4/B:1-1-2@1-1&2-5#1-4$1-3!1-1;0-3|ih/C:1+0+3/D:content_1/E:content+1@2+4&2+2#1+2/F:aux_1/G:5_4/H:6=5@8=2|L-L%/I:5=4/J:63+49-9
-l^ih-t+w=aa@2_1/A:1_0_4/B:1-1-2@1-1&2-5#1-4$1-3!1-1;0-3|ih/C:1+0+3/D:content_1/E:content+1@2+4&2+2#1+2/F:aux_1/G:5_4/H:6=5@8=2|L-L%/I:5=4/J:63+49-9
-ih^t-w+aa=z@1_3/A:1_1_2/B:1-0-3@1-1&3-4#2-3$2-3!1-1;1-2|aa/C:1+0+3/D:content_1/E:aux+1@3+3&3+2#1+1/F:content_1/G:5_4/H:6=5@8=2|L-L%/I:5=4/J:63+49-9
-t^w-aa+z=g@2_2/A:1_1_2/B:1-0-3@1-1&3-4#2-3$2-3!1-1;1-2|aa/C:1+0+3/D:content_1/E:aux+1@3+3&3+2#1+1/F:content_1/G:5_4/H:6=5@8=2|L-L%/I:5=4/J:63+49-9
-w^aa-z+g=uh@3_1/A:1_1_2/B:1-0-3@1-1&3-4#2-3$2-3!1-1;1-2|aa/C:1+0+3/D:content_1/E:aux+1@3+3&3+2#1+1/F:content_1/G:5_4/H:6=5@8=2|L-L%/I:5=4/J:63+49-9
-aa^z-g+uh=d@1_3/A:1_0_3/B:1-0-3@1-1&4-3#3-2$2-3!1-1;2-1|uh/C:1+1+4/D:aux_1/E:content+1@4+2&3+1#2+1/F:content_2/G:5_4/H:6=5@8=2|L-L%/I:5=4/J:63+49-9
-z^g-uh+d=p@2_2/A:1_0_3/B:1-0-3@1-1&4-3#3-2$2-3!1-1;2-1|uh/C:1+1+4/D:aux_1/E:content+1@4+2&3+1#2+1/F:content_2/G:5_4/H:6=5@8=2|L-L%/I:5=4/J:63+49-9
-g^uh-d+p=r@3_1/A:1_0_3/B:1-0-3@1-1&4-3#3-2$2-3!1-1;2-1|uh/C:1+1+4/D:aux_1/E:content+1@4+2&3+1#2+1/F:content_2/G:5_4/H:6=5@8=2|L-L%/I:5=4/J:63+49-9
-uh^d-p+r=ae@1_4/A:1_0_3/B:1-1-4@1-2&5-2#4-1$2-2!1-0;3-1|ae/C:0+1+3/D:content_1/E:content+2@5+1&4+0#1+0/F:to_1/G:5_4/H:6=5@8=2|L-L%/I:5=4/J:63+49-9
-d^p-r+ae=k@2_3/A:1_0_3/B:1-1-4@1-2&5-2#4-1$2-2!1-0;3-1|ae/C:0+1+3/D:content_1/E:content+2@5+1&4+0#1+0/F:to_1/G:5_4/H:6=5@8=2|L-L%/I:5=4/J:63+49-9
-p^r-ae+k=t@3_2/A:1_0_3/B:1-1-4@1-2&5-2#4-1$2-2!1-0;3-1|ae/C:0+1+3/D:content_1/E:content+2@5+1&4+0#1+0/F:to_1/G:5_4/H:6=5@8=2|L-L%/I:5=4/J:63+49-9
-r^ae-k+t=ax@4_1/A:1_0_3/B:1-1-4@1-2&5-2#4-1$2-2!1-0;3-1|ae/C:0+1+3/D:content_1/E:content+2@5+1&4+0#1+0/F:to_1/G:5_4/H:6=5@8=2|L-L%/I:5=4/J:63+49-9
-ae^k-t+ax=s@1_3/A:1_1_4/B:0-1-3@2-1&6-1#5-1$3-1!1-0;1-0|ax/C:0+0+2/D:content_1/E:content+2@5+1&4+0#1+0/F:to_1/G:5_4/H:6=5@8=2|L-L%/I:5=4/J:63+49-9
-k^t-ax+s=pau@2_2/A:1_1_4/B:0-1-3@2-1&6-1#5-1$3-1!1-0;1-0|ax/C:0+0+2/D:content_1/E:content+2@5+1&4+0#1+0/F:to_1/G:5_4/H:6=5@8=2|L-L%/I:5=4/J:63+49-9
-t^ax-s+pau=t@3_1/A:1_1_4/B:0-1-3@2-1&6-1#5-1$3-1!1-0;1-0|ax/C:0+0+2/D:content_1/E:content+2@5+1&4+0#1+0/F:to_1/G:5_4/H:6=5@8=2|L-L%/I:5=4/J:63+49-9
-ax^s-pau+t=ax@x_x/A:0_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+2/D:content_2/E:x+x@x+x&x+x#x+x/F:to_1/G:6_5/H:x=x@1=9|0/I:5=4/J:63+49-9
-s^pau-t+ax=s@1_2/A:0_1_3/B:0-0-2@1-1&1-5#1-4$1-2!0-1;0-1|ax/C:1+1+2/D:content_2/E:to+1@1+4&1+2#0+1/F:content_1/G:6_5/H:5=4@9=1|NONE/I:0=0/J:63+49-9
-pau^t-ax+s=ey@2_1/A:0_1_3/B:0-0-2@1-1&1-5#1-4$1-2!0-1;0-1|ax/C:1+1+2/D:content_2/E:to+1@1+4&1+2#0+1/F:content_1/G:6_5/H:5=4@9=1|NONE/I:0=0/J:63+49-9
-t^ax-s+ey=ih@1_2/A:0_0_2/B:1-1-2@1-1&2-4#1-3$1-1!0-1;0-0|ey/C:1+0+2/D:to_1/E:content+1@2+3&1+1#0+1/F:content_1/G:6_5/H:5=4@9=1|NONE/I:0=0/J:63+49-9
-ax^s-ey+ih=t@2_1/A:0_0_2/B:1-1-2@1-1&2-4#1-3$1-1!0-1;0-0|ey/C:1+0+2/D:to_1/E:content+1@2+3&1+1#0+1/F:content_1/G:6_5/H:5=4@9=1|NONE/I:0=0/J:63+49-9
-s^ey-ih+t=ow@1_2/A:1_1_2/B:1-0-2@1-1&3-3#2-2$2-1!1-1;1-0|ih/C:1+0+2/D:content_1/E:content+1@3+2&2+0#1+0/F:in_2/G:6_5/H:5=4@9=1|NONE/I:0=0/J:63+49-9
-ey^ih-t+ow=v@2_1/A:1_1_2/B:1-0-2@1-1&3-3#2-2$2-1!1-1;1-0|ih/C:1+0+2/D:content_1/E:content+1@3+2&2+0#1+0/F:in_2/G:6_5/H:5=4@9=1|NONE/I:0=0/J:63+49-9
-ih^t-ow+v=er@1_2/A:1_0_2/B:1-0-2@1-2&4-2#3-1$2-1!1-0;2-0|ow/C:0+0+1/D:content_1/E:in+2@4+1&3+0#1+0/F:0_0/G:6_5/H:5=4@9=1|NONE/I:0=0/J:63+49-9
-t^ow-v+er=pau@2_1/A:1_0_2/B:1-0-2@1-2&4-2#3-1$2-1!1-0;2-0|ow/C:0+0+1/D:content_1/E:in+2@4+1&3+0#1+0/F:0_0/G:6_5/H:5=4@9=1|NONE/I:0=0/J:63+49-9
-ow^v-er+pau=x@1_1/A:1_0_2/B:0-0-1@2-1&5-1#4-1$2-1!1-0;3-0|er/C:0+0+0/D:content_1/E:in+2@4+1&3+0#1+0/F:0_0/G:6_5/H:5=4@9=1|NONE/I:0=0/J:63+49-9
-v^er-pau+x=x@x_x/A:0_0_1/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:in_2/E:x+x@x+x&x+x#x+x/F:0_0/G:5_4/H:x=x@1=9|0/I:0=0/J:63+49-9
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice19.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice19.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice19.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice19.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,67 +0,0 @@
-x^x-pau+y=eh@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+3/D:0_0/E:x+x@x+x&x+x#x+x/F:content_1/G:0_0/H:x=x@1=3|0/I:9=7/J:25+18-3
-x^pau-y+eh=s@1_3/A:0_0_0/B:1-1-3@1-1&1-9#1-5$1-2!0-1;0-8|eh/C:1+0+3/D:0_0/E:content+1@1+7&1+3#0+2/F:in_1/G:0_0/H:9=7@1=3|L-L%/I:5=4/J:25+18-3
-pau^y-eh+s=dh@2_2/A:0_0_0/B:1-1-3@1-1&1-9#1-5$1-2!0-1;0-8|eh/C:1+0+3/D:0_0/E:content+1@1+7&1+3#0+2/F:in_1/G:0_0/H:9=7@1=3|L-L%/I:5=4/J:25+18-3
-y^eh-s+dh=ae@3_1/A:0_0_0/B:1-1-3@1-1&1-9#1-5$1-2!0-1;0-8|eh/C:1+0+3/D:0_0/E:content+1@1+7&1+3#0+2/F:in_1/G:0_0/H:9=7@1=3|L-L%/I:5=4/J:25+18-3
-eh^s-dh+ae=t@1_3/A:1_1_3/B:1-0-3@1-1&2-8#1-4$1-2!1-3;1-7|ae/C:0+0+1/D:content_1/E:in+1@2+6&2+3#1+1/F:content_1/G:0_0/H:9=7@1=3|L-L%/I:5=4/J:25+18-3
-s^dh-ae+t=s@2_2/A:1_1_3/B:1-0-3@1-1&2-8#1-4$1-2!1-3;1-7|ae/C:0+0+1/D:content_1/E:in+1@2+6&2+3#1+1/F:content_1/G:0_0/H:9=7@1=3|L-L%/I:5=4/J:25+18-3
-dh^ae-t+s=ax@3_1/A:1_1_3/B:1-0-3@1-1&2-8#1-4$1-2!1-3;1-7|ae/C:0+0+1/D:content_1/E:in+1@2+6&2+3#1+1/F:content_1/G:0_0/H:9=7@1=3|L-L%/I:5=4/J:25+18-3
-ae^t-s+ax=b@1_1/A:1_0_3/B:0-0-1@1-1&3-7#2-4$1-2!1-2;2-6|novowel/C:0+0+2/D:in_1/E:content+1@3+5&2+2#2+3/F:in_2/G:0_0/H:9=7@1=3|L-L%/I:5=4/J:25+18-3
-t^s-ax+b=aw@1_2/A:0_0_1/B:0-0-2@1-2&4-6#2-4$1-2!2-1;3-5|ax/C:1+0+2/D:content_1/E:in+2@4+4&3+2#1+2/F:det_1/G:0_0/H:9=7@1=3|L-L%/I:5=4/J:25+18-3
-s^ax-b+aw=t@2_1/A:0_0_1/B:0-0-2@1-2&4-6#2-4$1-2!2-1;3-5|ax/C:1+0+2/D:content_1/E:in+2@4+4&3+2#1+2/F:det_1/G:0_0/H:9=7@1=3|L-L%/I:5=4/J:25+18-3
-ax^b-aw+t=dh@1_2/A:0_0_2/B:1-0-2@2-1&5-5#2-3$1-2!3-2;4-4|aw/C:0+0+2/D:content_1/E:in+2@4+4&3+2#1+2/F:det_1/G:0_0/H:9=7@1=3|L-L%/I:5=4/J:25+18-3
-b^aw-t+dh=ax@2_1/A:0_0_2/B:1-0-2@2-1&5-5#2-3$1-2!3-2;4-4|aw/C:0+0+2/D:content_1/E:in+2@4+4&3+2#1+2/F:det_1/G:0_0/H:9=7@1=3|L-L%/I:5=4/J:25+18-3
-aw^t-dh+ax=r@1_2/A:1_0_2/B:0-0-2@1-1&6-4#3-3$1-2!1-1;5-3|ax/C:1+0+3/D:in_2/E:det+1@5+3&3+2#2+1/F:content_1/G:0_0/H:9=7@1=3|L-L%/I:5=4/J:25+18-3
-t^dh-ax+r=ay@2_1/A:1_0_2/B:0-0-2@1-1&6-4#3-3$1-2!1-1;5-3|ax/C:1+0+3/D:in_2/E:det+1@5+3&3+2#2+1/F:content_1/G:0_0/H:9=7@1=3|L-L%/I:5=4/J:25+18-3
-dh^ax-r+ay=t@1_3/A:0_0_2/B:1-0-3@1-1&7-3#3-2$1-2!2-1;6-2|ay/C:1+0+3/D:det_1/E:content+1@6+2&3+1#3+1/F:content_2/G:0_0/H:9=7@1=3|L-L%/I:5=4/J:25+18-3
-ax^r-ay+t=d@2_2/A:0_0_2/B:1-0-3@1-1&7-3#3-2$1-2!2-1;6-2|ay/C:1+0+3/D:det_1/E:content+1@6+2&3+1#3+1/F:content_2/G:0_0/H:9=7@1=3|L-L%/I:5=4/J:25+18-3
-r^ay-t+d=ih@3_1/A:0_0_2/B:1-0-3@1-1&7-3#3-2$1-2!2-1;6-2|ay/C:1+0+3/D:det_1/E:content+1@6+2&3+1#3+1/F:content_2/G:0_0/H:9=7@1=3|L-L%/I:5=4/J:25+18-3
-ay^t-d+ih=s@1_3/A:1_0_3/B:1-0-3@1-2&8-2#4-1$1-2!1-0;7-1|ih/C:0+1+4/D:content_1/E:content+2@7+1&4+0#1+0/F:cc_1/G:0_0/H:9=7@1=3|L-L%/I:5=4/J:25+18-3
-t^d-ih+s=t@2_2/A:1_0_3/B:1-0-3@1-2&8-2#4-1$1-2!1-0;7-1|ih/C:0+1+4/D:content_1/E:content+2@7+1&4+0#1+0/F:cc_1/G:0_0/H:9=7@1=3|L-L%/I:5=4/J:25+18-3
-d^ih-s+t=ax@3_1/A:1_0_3/B:1-0-3@1-2&8-2#4-1$1-2!1-0;7-1|ih/C:0+1+4/D:content_1/E:content+2@7+1&4+0#1+0/F:cc_1/G:0_0/H:9=7@1=3|L-L%/I:5=4/J:25+18-3
-ih^s-t+ax=n@1_4/A:1_0_3/B:0-1-4@2-1&9-1#5-1$1-1!1-0;8-0|ax/C:1+0+3/D:content_1/E:content+2@7+1&4+0#1+0/F:cc_1/G:0_0/H:9=7@1=3|L-L%/I:5=4/J:25+18-3
-s^t-ax+n=s@2_3/A:1_0_3/B:0-1-4@2-1&9-1#5-1$1-1!1-0;8-0|ax/C:1+0+3/D:content_1/E:content+2@7+1&4+0#1+0/F:cc_1/G:0_0/H:9=7@1=3|L-L%/I:5=4/J:25+18-3
-t^ax-n+s=pau@3_2/A:1_0_3/B:0-1-4@2-1&9-1#5-1$1-1!1-0;8-0|ax/C:1+0+3/D:content_1/E:content+2@7+1&4+0#1+0/F:cc_1/G:0_0/H:9=7@1=3|L-L%/I:5=4/J:25+18-3
-ax^n-s+pau=b@4_1/A:1_0_3/B:0-1-4@2-1&9-1#5-1$1-1!1-0;8-0|ax/C:1+0+3/D:content_1/E:content+2@7+1&4+0#1+0/F:cc_1/G:0_0/H:9=7@1=3|L-L%/I:5=4/J:25+18-3
-n^s-pau+b=ah@x_x/A:0_1_4/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_2/E:x+x@x+x&x+x#x+x/F:cc_1/G:9_7/H:x=x@1=3|0/I:5=4/J:25+18-3
-s^pau-b+ah=t@1_3/A:0_1_4/B:1-0-3@1-1&1-5#1-4$1-4!0-1;0-1|ah/C:1+1+3/D:content_2/E:cc+1@1+4&1+3#0+1/F:content_1/G:9_7/H:5=4@2=2|L-L%/I:11=7/J:25+18-3
-pau^b-ah+t=dh@2_2/A:0_1_4/B:1-0-3@1-1&1-5#1-4$1-4!0-1;0-1|ah/C:1+1+3/D:content_2/E:cc+1@1+4&1+3#0+1/F:content_1/G:9_7/H:5=4@2=2|L-L%/I:11=7/J:25+18-3
-b^ah-t+dh=eh@3_1/A:0_1_4/B:1-0-3@1-1&1-5#1-4$1-4!0-1;0-1|ah/C:1+1+3/D:content_2/E:cc+1@1+4&1+3#0+1/F:content_1/G:9_7/H:5=4@2=2|L-L%/I:11=7/J:25+18-3
-ah^t-dh+eh=n@1_3/A:1_0_3/B:1-1-3@1-1&2-4#1-3$1-3!1-1;0-2|eh/C:1+0+1/D:cc_1/E:content+1@2+3&1+2#0+1/F:content_1/G:9_7/H:5=4@2=2|L-L%/I:11=7/J:25+18-3
-t^dh-eh+n=ay@2_2/A:1_0_3/B:1-1-3@1-1&2-4#1-3$1-3!1-1;0-2|eh/C:1+0+1/D:cc_1/E:content+1@2+3&1+2#0+1/F:content_1/G:9_7/H:5=4@2=2|L-L%/I:11=7/J:25+18-3
-dh^eh-n+ay=w@3_1/A:1_0_3/B:1-1-3@1-1&2-4#1-3$1-3!1-1;0-2|eh/C:1+0+1/D:cc_1/E:content+1@2+3&1+2#0+1/F:content_1/G:9_7/H:5=4@2=2|L-L%/I:11=7/J:25+18-3
-eh^n-ay+w=ah@1_1/A:1_1_3/B:1-0-1@1-1&3-3#2-2$2-3!1-1;1-1|ay/C:1+1+4/D:content_1/E:content+1@3+2&2+1#1+1/F:content_2/G:9_7/H:5=4@2=2|L-L%/I:11=7/J:25+18-3
-n^ay-w+ah=n@1_4/A:1_0_1/B:1-1-4@1-2&4-2#3-1$2-2!1-0;2-1|ah/C:0+1+1/D:content_1/E:content+2@4+1&3+0#1+0/F:wp_1/G:9_7/H:5=4@2=2|L-L%/I:11=7/J:25+18-3
-ay^w-ah+n=d@2_3/A:1_0_1/B:1-1-4@1-2&4-2#3-1$2-2!1-0;2-1|ah/C:0+1+1/D:content_1/E:content+2@4+1&3+0#1+0/F:wp_1/G:9_7/H:5=4@2=2|L-L%/I:11=7/J:25+18-3
-w^ah-n+d=er@3_2/A:1_0_1/B:1-1-4@1-2&4-2#3-1$2-2!1-0;2-1|ah/C:0+1+1/D:content_1/E:content+2@4+1&3+0#1+0/F:wp_1/G:9_7/H:5=4@2=2|L-L%/I:11=7/J:25+18-3
-ah^n-d+er=pau@4_1/A:1_0_1/B:1-1-4@1-2&4-2#3-1$2-2!1-0;2-1|ah/C:0+1+1/D:content_1/E:content+2@4+1&3+0#1+0/F:wp_1/G:9_7/H:5=4@2=2|L-L%/I:11=7/J:25+18-3
-n^d-er+pau=w@1_1/A:1_1_4/B:0-1-1@2-1&5-1#4-1$3-1!1-0;1-0|er/C:1+0+3/D:content_1/E:content+2@4+1&3+0#1+0/F:wp_1/G:9_7/H:5=4@2=2|L-L%/I:11=7/J:25+18-3
-d^er-pau+w=ah@x_x/A:0_1_1/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_2/E:x+x@x+x&x+x#x+x/F:wp_1/G:5_4/H:x=x@1=3|0/I:11=7/J:25+18-3
-er^pau-w+ah=t@1_3/A:0_1_1/B:1-0-3@1-1&1-11#1-8$1-5!0-1;0-1|ah/C:1+1+3/D:content_2/E:wp+1@1+7&1+4#0+1/F:content_3/G:5_4/H:11=7@3=1|L-L%/I:0=0/J:25+18-3
-pau^w-ah+t=l@2_2/A:0_1_1/B:1-0-3@1-1&1-11#1-8$1-5!0-1;0-1|ah/C:1+1+3/D:content_2/E:wp+1@1+7&1+4#0+1/F:content_3/G:5_4/H:11=7@3=1|L-L%/I:0=0/J:25+18-3
-w^ah-t+l=ae@3_1/A:0_1_1/B:1-0-3@1-1&1-11#1-8$1-5!0-1;0-1|ah/C:1+1+3/D:content_2/E:wp+1@1+7&1+4#0+1/F:content_3/G:5_4/H:11=7@3=1|L-L%/I:0=0/J:25+18-3
-ah^t-l+ae=t@1_3/A:1_0_3/B:1-1-3@1-3&2-10#1-7$1-4!1-2;0-4|ae/C:0+0+2/D:wp_1/E:content+3@2+6&1+3#0+2/F:cc_1/G:5_4/H:11=7@3=1|L-L%/I:0=0/J:25+18-3
-t^l-ae+t=ax@2_2/A:1_0_3/B:1-1-3@1-3&2-10#1-7$1-4!1-2;0-4|ae/C:0+0+2/D:wp_1/E:content+3@2+6&1+3#0+2/F:cc_1/G:5_4/H:11=7@3=1|L-L%/I:0=0/J:25+18-3
-l^ae-t+ax=t@3_1/A:1_0_3/B:1-1-3@1-3&2-10#1-7$1-4!1-2;0-4|ae/C:0+0+2/D:wp_1/E:content+3@2+6&1+3#0+2/F:cc_1/G:5_4/H:11=7@3=1|L-L%/I:0=0/J:25+18-3
-ae^t-ax+t=uw@1_2/A:1_1_3/B:0-0-2@2-2&3-9#2-7$2-4!1-1;1-3|ax/C:1+0+2/D:wp_1/E:content+3@2+6&1+3#0+2/F:cc_1/G:5_4/H:11=7@3=1|L-L%/I:0=0/J:25+18-3
-t^ax-t+uw=d@2_1/A:1_1_3/B:0-0-2@2-2&3-9#2-7$2-4!1-1;1-3|ax/C:1+0+2/D:wp_1/E:content+3@2+6&1+3#0+2/F:cc_1/G:5_4/H:11=7@3=1|L-L%/I:0=0/J:25+18-3
-ax^t-uw+d=ae@1_2/A:0_0_2/B:1-0-2@3-1&4-8#2-6$2-4!2-1;2-2|uw/C:1+0+3/D:wp_1/E:content+3@2+6&1+3#0+2/F:cc_1/G:5_4/H:11=7@3=1|L-L%/I:0=0/J:25+18-3
-t^uw-d+ae=n@2_1/A:0_0_2/B:1-0-2@3-1&4-8#2-6$2-4!2-1;2-2|uw/C:1+0+3/D:wp_1/E:content+3@2+6&1+3#0+2/F:cc_1/G:5_4/H:11=7@3=1|L-L%/I:0=0/J:25+18-3
-uw^d-ae+n=d@1_3/A:1_0_2/B:1-0-3@1-1&5-7#3-5$2-4!1-1;3-1|ae/C:1+1+4/D:content_3/E:cc+1@3+5&2+3#1+1/F:content_3/G:5_4/H:11=7@3=1|L-L%/I:0=0/J:25+18-3
-d^ae-n+d=l@2_2/A:1_0_2/B:1-0-3@1-1&5-7#3-5$2-4!1-1;3-1|ae/C:1+1+4/D:content_3/E:cc+1@3+5&2+3#1+1/F:content_3/G:5_4/H:11=7@3=1|L-L%/I:0=0/J:25+18-3
-ae^n-d+l=aa@3_1/A:1_0_2/B:1-0-3@1-1&5-7#3-5$2-4!1-1;3-1|ae/C:1+1+4/D:content_3/E:cc+1@3+5&2+3#1+1/F:content_3/G:5_4/H:11=7@3=1|L-L%/I:0=0/J:25+18-3
-n^d-l+aa=n@1_4/A:1_0_3/B:1-1-4@1-3&6-6#4-4$2-3!1-2;4-4|aa/C:0+0+2/D:cc_1/E:content+3@4+4&2+2#2+1/F:content_1/G:5_4/H:11=7@3=1|L-L%/I:0=0/J:25+18-3
-d^l-aa+n=jh@2_3/A:1_0_3/B:1-1-4@1-3&6-6#4-4$2-3!1-2;4-4|aa/C:0+0+2/D:cc_1/E:content+3@4+4&2+2#2+1/F:content_1/G:5_4/H:11=7@3=1|L-L%/I:0=0/J:25+18-3
-l^aa-n+jh=ax@3_2/A:1_0_3/B:1-1-4@1-3&6-6#4-4$2-3!1-2;4-4|aa/C:0+0+2/D:cc_1/E:content+3@4+4&2+2#2+1/F:content_1/G:5_4/H:11=7@3=1|L-L%/I:0=0/J:25+18-3
-aa^n-jh+ax=t@4_1/A:1_0_3/B:1-1-4@1-3&6-6#4-4$2-3!1-2;4-4|aa/C:0+0+2/D:cc_1/E:content+3@4+4&2+2#2+1/F:content_1/G:5_4/H:11=7@3=1|L-L%/I:0=0/J:25+18-3
-n^jh-ax+t=uw@1_2/A:1_1_4/B:0-0-2@2-2&7-5#5-4$3-3!1-1;1-3|ax/C:1+0+2/D:cc_1/E:content+3@4+4&2+2#2+1/F:content_1/G:5_4/H:11=7@3=1|L-L%/I:0=0/J:25+18-3
-jh^ax-t+uw=d@2_1/A:1_1_4/B:0-0-2@2-2&7-5#5-4$3-3!1-1;1-3|ax/C:1+0+2/D:cc_1/E:content+3@4+4&2+2#2+1/F:content_1/G:5_4/H:11=7@3=1|L-L%/I:0=0/J:25+18-3
-ax^t-uw+d=ay@1_2/A:0_0_2/B:1-0-2@3-1&8-4#5-3$3-3!2-1;2-2|uw/C:1+0+2/D:cc_1/E:content+3@4+4&2+2#2+1/F:content_1/G:5_4/H:11=7@3=1|L-L%/I:0=0/J:25+18-3
-t^uw-d+ay=v@2_1/A:0_0_2/B:1-0-2@3-1&8-4#5-3$3-3!2-1;2-2|uw/C:1+0+2/D:cc_1/E:content+3@4+4&2+2#2+1/F:content_1/G:5_4/H:11=7@3=1|L-L%/I:0=0/J:25+18-3
-uw^d-ay+v=g@1_2/A:1_0_2/B:1-0-2@1-1&9-3#6-2$3-3!1-1;3-1|ay/C:1+1+3/D:content_3/E:content+1@5+3&3+1#1+1/F:content_1/G:5_4/H:11=7@3=1|L-L%/I:0=0/J:25+18-3
-d^ay-v+g=aa@2_1/A:1_0_2/B:1-0-2@1-1&9-3#6-2$3-3!1-1;3-1|ay/C:1+1+3/D:content_3/E:content+1@5+3&3+1#1+1/F:content_1/G:5_4/H:11=7@3=1|L-L%/I:0=0/J:25+18-3
-ay^v-g+aa=t@1_3/A:1_0_2/B:1-1-3@1-1&10-2#7-1$3-2!1-0;4-1|aa/C:0+1+2/D:content_1/E:content+1@6+2&4+0#1+0/F:to_1/G:5_4/H:11=7@3=1|L-L%/I:0=0/J:25+18-3
-v^g-aa+t=t@2_2/A:1_0_2/B:1-1-3@1-1&10-2#7-1$3-2!1-0;4-1|aa/C:0+1+2/D:content_1/E:content+1@6+2&4+0#1+0/F:to_1/G:5_4/H:11=7@3=1|L-L%/I:0=0/J:25+18-3
-g^aa-t+t=ax@3_1/A:1_0_2/B:1-1-3@1-1&10-2#7-1$3-2!1-0;4-1|aa/C:0+1+2/D:content_1/E:content+1@6+2&4+0#1+0/F:to_1/G:5_4/H:11=7@3=1|L-L%/I:0=0/J:25+18-3
-aa^t-t+ax=pau@1_2/A:1_1_3/B:0-1-2@1-1&11-1#8-1$4-1!1-0;1-0|ax/C:0+0+0/D:content_1/E:to+1@7+1&5+0#1+0/F:0_0/G:5_4/H:11=7@3=1|L-L%/I:0=0/J:25+18-3
-t^t-ax+pau=x@2_1/A:1_1_3/B:0-1-2@1-1&11-1#8-1$4-1!1-0;1-0|ax/C:0+0+0/D:content_1/E:to+1@7+1&5+0#1+0/F:0_0/G:5_4/H:11=7@3=1|L-L%/I:0=0/J:25+18-3
-t^ax-pau+x=x@x_x/A:0_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:to_1/E:x+x@x+x&x+x#x+x/F:0_0/G:11_7/H:x=x@1=3|0/I:0=0/J:25+18-3
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice20.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice20.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice20.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice20.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,82 +0,0 @@
-x^x-pau+ae=l@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+2/D:0_0/E:x+x@x+x&x+x#x+x/F:content_2/G:0_0/H:x=x@1=4|0/I:10=6/J:31+22-4
-x^pau-ae+l=ax@1_2/A:0_0_0/B:1-1-2@1-2&1-10#1-5$1-4!0-2;0-3|ae/C:0+0+2/D:0_0/E:content+2@1+6&1+3#0+2/F:aux_1/G:0_0/H:10=6@1=4|L-L%/I:5=3/J:31+22-4
-pau^ae-l+ax=s@2_1/A:0_0_0/B:1-1-2@1-2&1-10#1-5$1-4!0-2;0-3|ae/C:0+0+2/D:0_0/E:content+2@1+6&1+3#0+2/F:aux_1/G:0_0/H:10=6@1=4|L-L%/I:5=3/J:31+22-4
-ae^l-ax+s=hh@1_2/A:1_1_2/B:0-0-2@2-1&2-9#1-5$1-4!1-1;1-2|ax/C:1+0+3/D:0_0/E:content+2@1+6&1+3#0+2/F:aux_1/G:0_0/H:10=6@1=4|L-L%/I:5=3/J:31+22-4
-l^ax-s+hh=ae@2_1/A:1_1_2/B:0-0-2@2-1&2-9#1-5$1-4!1-1;1-2|ax/C:1+0+3/D:0_0/E:content+2@1+6&1+3#0+2/F:aux_1/G:0_0/H:10=6@1=4|L-L%/I:5=3/J:31+22-4
-ax^s-hh+ae=d@1_3/A:0_0_2/B:1-0-3@1-1&3-8#1-4$1-4!2-1;2-1|ae/C:1+1+3/D:content_2/E:aux+1@2+5&2+3#1+1/F:content_1/G:0_0/H:10=6@1=4|L-L%/I:5=3/J:31+22-4
-s^hh-ae+d=n@2_2/A:0_0_2/B:1-0-3@1-1&3-8#1-4$1-4!2-1;2-1|ae/C:1+1+3/D:content_2/E:aux+1@2+5&2+3#1+1/F:content_1/G:0_0/H:10=6@1=4|L-L%/I:5=3/J:31+22-4
-hh^ae-d+n=aa@3_1/A:0_0_2/B:1-0-3@1-1&3-8#1-4$1-4!2-1;2-1|ae/C:1+1+3/D:content_2/E:aux+1@2+5&2+3#1+1/F:content_1/G:0_0/H:10=6@1=4|L-L%/I:5=3/J:31+22-4
-ae^d-n+aa=t@1_3/A:1_0_3/B:1-1-3@1-1&4-7#2-3$1-3!1-2;3-2|aa/C:0+0+2/D:aux_1/E:content+1@3+4&2+2#2+2/F:det_1/G:0_0/H:10=6@1=4|L-L%/I:5=3/J:31+22-4
-d^n-aa+t=dh@2_2/A:1_0_3/B:1-1-3@1-1&4-7#2-3$1-3!1-2;3-2|aa/C:0+0+2/D:aux_1/E:content+1@3+4&2+2#2+2/F:det_1/G:0_0/H:10=6@1=4|L-L%/I:5=3/J:31+22-4
-n^aa-t+dh=ax@3_1/A:1_0_3/B:1-1-3@1-1&4-7#2-3$1-3!1-2;3-2|aa/C:0+0+2/D:aux_1/E:content+1@3+4&2+2#2+2/F:det_1/G:0_0/H:10=6@1=4|L-L%/I:5=3/J:31+22-4
-aa^t-dh+ax=s@1_2/A:1_1_3/B:0-0-2@1-1&5-6#3-3$2-3!1-1;1-1|ax/C:1+1+4/D:content_1/E:det+1@4+3&3+2#1+1/F:content_2/G:0_0/H:10=6@1=4|L-L%/I:5=3/J:31+22-4
-t^dh-ax+s=l@2_1/A:1_1_3/B:0-0-2@1-1&5-6#3-3$2-3!1-1;1-1|ax/C:1+1+4/D:content_1/E:det+1@4+3&3+2#1+1/F:content_2/G:0_0/H:10=6@1=4|L-L%/I:5=3/J:31+22-4
-dh^ax-s+l=ay@1_4/A:0_0_2/B:1-1-4@1-2&6-5#3-2$2-2!2-3;2-4|ay/C:0+0+3/D:det_1/E:content+2@5+2&3+1#2+1/F:content_3/G:0_0/H:10=6@1=4|L-L%/I:5=3/J:31+22-4
-ax^s-l+ay=t@2_3/A:0_0_2/B:1-1-4@1-2&6-5#3-2$2-2!2-3;2-4|ay/C:0+0+3/D:det_1/E:content+2@5+2&3+1#2+1/F:content_3/G:0_0/H:10=6@1=4|L-L%/I:5=3/J:31+22-4
-s^l-ay+t=ax@3_2/A:0_0_2/B:1-1-4@1-2&6-5#3-2$2-2!2-3;2-4|ay/C:0+0+3/D:det_1/E:content+2@5+2&3+1#2+1/F:content_3/G:0_0/H:10=6@1=4|L-L%/I:5=3/J:31+22-4
-l^ay-t+ax=s@4_1/A:0_0_2/B:1-1-4@1-2&6-5#3-2$2-2!2-3;2-4|ay/C:0+0+3/D:det_1/E:content+2@5+2&3+1#2+1/F:content_3/G:0_0/H:10=6@1=4|L-L%/I:5=3/J:31+22-4
-ay^t-ax+s=t@1_3/A:1_1_4/B:0-0-3@2-1&7-4#4-2$3-2!1-2;1-3|ax/C:0+0+2/D:det_1/E:content+2@5+2&3+1#2+1/F:content_3/G:0_0/H:10=6@1=4|L-L%/I:5=3/J:31+22-4
-t^ax-s+t=ay@2_2/A:1_1_4/B:0-0-3@2-1&7-4#4-2$3-2!1-2;1-3|ax/C:0+0+2/D:det_1/E:content+2@5+2&3+1#2+1/F:content_3/G:0_0/H:10=6@1=4|L-L%/I:5=3/J:31+22-4
-ax^s-t+ay=d@3_1/A:1_1_4/B:0-0-3@2-1&7-4#4-2$3-2!1-2;1-3|ax/C:0+0+2/D:det_1/E:content+2@5+2&3+1#2+1/F:content_3/G:0_0/H:10=6@1=4|L-L%/I:5=3/J:31+22-4
-s^t-ay+d=iy@1_2/A:0_0_3/B:0-0-2@1-3&8-3#4-2$3-2!2-1;2-2|ay/C:1+0+1/D:content_2/E:content+3@6+1&4+0#1+0/F:wp_1/G:0_0/H:10=6@1=4|L-L%/I:5=3/J:31+22-4
-t^ay-d+iy=ax@2_1/A:0_0_3/B:0-0-2@1-3&8-3#4-2$3-2!2-1;2-2|ay/C:1+0+1/D:content_2/E:content+3@6+1&4+0#1+0/F:wp_1/G:0_0/H:10=6@1=4|L-L%/I:5=3/J:31+22-4
-ay^d-iy+ax=pau@1_1/A:0_0_2/B:1-0-1@2-2&9-2#4-1$3-2!3-0;3-1|iy/C:0+1+1/D:content_2/E:content+3@6+1&4+0#1+0/F:wp_1/G:0_0/H:10=6@1=4|L-L%/I:5=3/J:31+22-4
-d^iy-ax+pau=w@1_1/A:1_0_1/B:0-1-1@3-1&10-1#5-1$3-1!1-0;4-0|ax/C:1+0+3/D:content_2/E:content+3@6+1&4+0#1+0/F:wp_1/G:0_0/H:10=6@1=4|L-L%/I:5=3/J:31+22-4
-iy^ax-pau+w=ah@x_x/A:0_1_1/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_3/E:x+x@x+x&x+x#x+x/F:wp_1/G:10_6/H:x=x@1=4|0/I:5=3/J:31+22-4
-ax^pau-w+ah=t@1_3/A:0_1_1/B:1-0-3@1-1&1-5#1-4$1-3!0-1;0-1|ah/C:1+1+3/D:content_3/E:wp+1@1+3&1+1#0+1/F:content_3/G:10_6/H:5=3@2=3|L-L%/I:6=3/J:31+22-4
-pau^w-ah+t=l@2_2/A:0_1_1/B:1-0-3@1-1&1-5#1-4$1-3!0-1;0-1|ah/C:1+1+3/D:content_3/E:wp+1@1+3&1+1#0+1/F:content_3/G:10_6/H:5=3@2=3|L-L%/I:6=3/J:31+22-4
-w^ah-t+l=ae@3_1/A:0_1_1/B:1-0-3@1-1&1-5#1-4$1-3!0-1;0-1|ah/C:1+1+3/D:content_3/E:wp+1@1+3&1+1#0+1/F:content_3/G:10_6/H:5=3@2=3|L-L%/I:6=3/J:31+22-4
-ah^t-l+ae=t@1_3/A:1_0_3/B:1-1-3@1-3&2-4#1-3$1-2!1-2;0-3|ae/C:0+0+2/D:wp_1/E:content+3@2+2&1+0#0+0/F:aux_1/G:10_6/H:5=3@2=3|L-L%/I:6=3/J:31+22-4
-t^l-ae+t=ax@2_2/A:1_0_3/B:1-1-3@1-3&2-4#1-3$1-2!1-2;0-3|ae/C:0+0+2/D:wp_1/E:content+3@2+2&1+0#0+0/F:aux_1/G:10_6/H:5=3@2=3|L-L%/I:6=3/J:31+22-4
-l^ae-t+ax=t@3_1/A:1_0_3/B:1-1-3@1-3&2-4#1-3$1-2!1-2;0-3|ae/C:0+0+2/D:wp_1/E:content+3@2+2&1+0#0+0/F:aux_1/G:10_6/H:5=3@2=3|L-L%/I:6=3/J:31+22-4
-ae^t-ax+t=uw@1_2/A:1_1_3/B:0-0-2@2-2&3-3#2-3$2-2!1-1;1-2|ax/C:1+0+2/D:wp_1/E:content+3@2+2&1+0#0+0/F:aux_1/G:10_6/H:5=3@2=3|L-L%/I:6=3/J:31+22-4
-t^ax-t+uw=d@2_1/A:1_1_3/B:0-0-2@2-2&3-3#2-3$2-2!1-1;1-2|ax/C:1+0+2/D:wp_1/E:content+3@2+2&1+0#0+0/F:aux_1/G:10_6/H:5=3@2=3|L-L%/I:6=3/J:31+22-4
-ax^t-uw+d=w@1_2/A:0_0_2/B:1-0-2@3-1&4-2#2-2$2-2!2-1;2-1|uw/C:1+1+3/D:wp_1/E:content+3@2+2&1+0#0+0/F:aux_1/G:10_6/H:5=3@2=3|L-L%/I:6=3/J:31+22-4
-t^uw-d+w=aa@2_1/A:0_0_2/B:1-0-2@3-1&4-2#2-2$2-2!2-1;2-1|uw/C:1+1+3/D:wp_1/E:content+3@2+2&1+0#0+0/F:aux_1/G:10_6/H:5=3@2=3|L-L%/I:6=3/J:31+22-4
-uw^d-w+aa=z@1_3/A:1_0_2/B:1-1-3@1-1&5-1#3-1$2-1!1-0;3-0|aa/C:1+0+2/D:content_3/E:aux+1@3+1&2+0#1+0/F:cc_1/G:10_6/H:5=3@2=3|L-L%/I:6=3/J:31+22-4
-d^w-aa+z=pau@2_2/A:1_0_2/B:1-1-3@1-1&5-1#3-1$2-1!1-0;3-0|aa/C:1+0+2/D:content_3/E:aux+1@3+1&2+0#1+0/F:cc_1/G:10_6/H:5=3@2=3|L-L%/I:6=3/J:31+22-4
-w^aa-z+pau=ao@3_1/A:1_0_2/B:1-1-3@1-1&5-1#3-1$2-1!1-0;3-0|aa/C:1+0+2/D:content_3/E:aux+1@3+1&2+0#1+0/F:cc_1/G:10_6/H:5=3@2=3|L-L%/I:6=3/J:31+22-4
-aa^z-pau+ao=r@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:aux_1/E:x+x@x+x&x+x#x+x/F:cc_1/G:5_3/H:x=x@1=4|0/I:6=3/J:31+22-4
-z^pau-ao+r=l@1_2/A:1_1_3/B:1-0-2@1-1&1-6#1-4$1-3!0-1;0-1|ao/C:1+1+4/D:aux_1/E:cc+1@1+3&1+2#0+1/F:content_3/G:5_3/H:6=3@3=2|L-L%/I:10=10/J:31+22-4
-pau^ao-r+l=aa@2_1/A:1_1_3/B:1-0-2@1-1&1-6#1-4$1-3!0-1;0-1|ao/C:1+1+4/D:aux_1/E:cc+1@1+3&1+2#0+1/F:content_3/G:5_3/H:6=3@3=2|L-L%/I:10=10/J:31+22-4
-ao^r-l+aa=n@1_4/A:1_0_2/B:1-1-4@1-3&2-5#1-3$1-2!1-2;0-4|aa/C:0+0+2/D:cc_1/E:content+3@2+2&1+1#0+1/F:content_2/G:5_3/H:6=3@3=2|L-L%/I:10=10/J:31+22-4
-r^l-aa+n=jh@2_3/A:1_0_2/B:1-1-4@1-3&2-5#1-3$1-2!1-2;0-4|aa/C:0+0+2/D:cc_1/E:content+3@2+2&1+1#0+1/F:content_2/G:5_3/H:6=3@3=2|L-L%/I:10=10/J:31+22-4
-l^aa-n+jh=ax@3_2/A:1_0_2/B:1-1-4@1-3&2-5#1-3$1-2!1-2;0-4|aa/C:0+0+2/D:cc_1/E:content+3@2+2&1+1#0+1/F:content_2/G:5_3/H:6=3@3=2|L-L%/I:10=10/J:31+22-4
-aa^n-jh+ax=t@4_1/A:1_0_2/B:1-1-4@1-3&2-5#1-3$1-2!1-2;0-4|aa/C:0+0+2/D:cc_1/E:content+3@2+2&1+1#0+1/F:content_2/G:5_3/H:6=3@3=2|L-L%/I:10=10/J:31+22-4
-n^jh-ax+t=uw@1_2/A:1_1_4/B:0-0-2@2-2&3-4#2-3$2-2!1-1;1-3|ax/C:1+0+2/D:cc_1/E:content+3@2+2&1+1#0+1/F:content_2/G:5_3/H:6=3@3=2|L-L%/I:10=10/J:31+22-4
-jh^ax-t+uw=d@2_1/A:1_1_4/B:0-0-2@2-2&3-4#2-3$2-2!1-1;1-3|ax/C:1+0+2/D:cc_1/E:content+3@2+2&1+1#0+1/F:content_2/G:5_3/H:6=3@3=2|L-L%/I:10=10/J:31+22-4
-ax^t-uw+d=iy@1_2/A:0_0_2/B:1-0-2@3-1&4-3#2-2$2-2!2-1;2-2|uw/C:1+0+2/D:cc_1/E:content+3@2+2&1+1#0+1/F:content_2/G:5_3/H:6=3@3=2|L-L%/I:10=10/J:31+22-4
-t^uw-d+iy=dh@2_1/A:0_0_2/B:1-0-2@3-1&4-3#2-2$2-2!2-1;2-2|uw/C:1+0+2/D:cc_1/E:content+3@2+2&1+1#0+1/F:content_2/G:5_3/H:6=3@3=2|L-L%/I:10=10/J:31+22-4
-uw^d-iy+dh=er@1_2/A:1_0_2/B:1-0-2@1-2&5-2#3-1$2-2!1-0;3-1|iy/C:0+1+1/D:content_3/E:content+2@3+1&2+0#1+0/F:cc_1/G:5_3/H:6=3@3=2|L-L%/I:10=10/J:31+22-4
-d^iy-dh+er=pau@2_1/A:1_0_2/B:1-0-2@1-2&5-2#3-1$2-2!1-0;3-1|iy/C:0+1+1/D:content_3/E:content+2@3+1&2+0#1+0/F:cc_1/G:5_3/H:6=3@3=2|L-L%/I:10=10/J:31+22-4
-iy^dh-er+pau=b@1_1/A:1_0_2/B:0-1-1@2-1&6-1#4-1$2-1!1-0;4-0|er/C:1+0+3/D:content_3/E:content+2@3+1&2+0#1+0/F:cc_1/G:5_3/H:6=3@3=2|L-L%/I:10=10/J:31+22-4
-dh^er-pau+b=ah@x_x/A:0_1_1/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_2/E:x+x@x+x&x+x#x+x/F:cc_1/G:6_3/H:x=x@1=4|0/I:10=10/J:31+22-4
-er^pau-b+ah=t@1_3/A:0_1_1/B:1-0-3@1-1&1-10#1-8$1-5!0-1;0-1|ah/C:1+1+2/D:content_2/E:cc+1@1+10&1+7#0+1/F:content_1/G:6_3/H:10=10@4=1|L-L%/I:0=0/J:31+22-4
-pau^b-ah+t=sh@2_2/A:0_1_1/B:1-0-3@1-1&1-10#1-8$1-5!0-1;0-1|ah/C:1+1+2/D:content_2/E:cc+1@1+10&1+7#0+1/F:content_1/G:6_3/H:10=10@4=1|L-L%/I:0=0/J:31+22-4
-b^ah-t+sh=iy@3_1/A:0_1_1/B:1-0-3@1-1&1-10#1-8$1-5!0-1;0-1|ah/C:1+1+2/D:content_2/E:cc+1@1+10&1+7#0+1/F:content_1/G:6_3/H:10=10@4=1|L-L%/I:0=0/J:31+22-4
-ah^t-sh+iy=th@1_2/A:1_0_3/B:1-1-2@1-1&2-9#1-7$1-4!1-1;0-1|iy/C:1+1+3/D:cc_1/E:content+1@2+9&1+6#0+1/F:content_1/G:6_3/H:10=10@4=1|L-L%/I:0=0/J:31+22-4
-t^sh-iy+th=ao@2_1/A:1_0_3/B:1-1-2@1-1&2-9#1-7$1-4!1-1;0-1|iy/C:1+1+3/D:cc_1/E:content+1@2+9&1+6#0+1/F:content_1/G:6_3/H:10=10@4=1|L-L%/I:0=0/J:31+22-4
-sh^iy-th+ao=t@1_3/A:1_1_2/B:1-1-3@1-1&3-8#2-6$2-3!1-1;1-5|ao/C:1+0+2/D:content_1/E:content+1@3+8&2+5#1+1/F:content_1/G:6_3/H:10=10@4=1|L-L%/I:0=0/J:31+22-4
-iy^th-ao+t=dh@2_2/A:1_1_2/B:1-1-3@1-1&3-8#2-6$2-3!1-1;1-5|ao/C:1+0+2/D:content_1/E:content+1@3+8&2+5#1+1/F:content_1/G:6_3/H:10=10@4=1|L-L%/I:0=0/J:31+22-4
-th^ao-t+dh=ey@3_1/A:1_1_2/B:1-1-3@1-1&3-8#2-6$2-3!1-1;1-5|ao/C:1+0+2/D:content_1/E:content+1@3+8&2+5#1+1/F:content_1/G:6_3/H:10=10@4=1|L-L%/I:0=0/J:31+22-4
-ao^t-dh+ey=w@1_2/A:1_1_3/B:1-0-2@1-1&4-7#3-5$3-3!1-2;1-4|ey/C:0+0+2/D:content_1/E:content+1@4+7&3+4#1+2/F:aux_1/G:6_3/H:10=10@4=1|L-L%/I:0=0/J:31+22-4
-t^dh-ey+w=er@2_1/A:1_1_3/B:1-0-2@1-1&4-7#3-5$3-3!1-2;1-4|ey/C:0+0+2/D:content_1/E:content+1@4+7&3+4#1+2/F:aux_1/G:6_3/H:10=10@4=1|L-L%/I:0=0/J:31+22-4
-dh^ey-w+er=n@1_2/A:1_0_2/B:0-0-2@1-1&5-6#4-5$3-3!1-1;2-3|er/C:1+0+3/D:content_1/E:aux+1@5+6&4+4#1+1/F:content_1/G:6_3/H:10=10@4=1|L-L%/I:0=0/J:31+22-4
-ey^w-er+n=ay@2_1/A:1_0_2/B:0-0-2@1-1&5-6#4-5$3-3!1-1;2-3|er/C:1+0+3/D:content_1/E:aux+1@5+6&4+4#1+1/F:content_1/G:6_3/H:10=10@4=1|L-L%/I:0=0/J:31+22-4
-w^er-n+ay=s@1_3/A:0_0_2/B:1-0-3@1-1&6-5#4-4$3-3!2-1;3-2|ay/C:1+0+5/D:aux_1/E:content+1@6+5&4+3#2+1/F:content_1/G:6_3/H:10=10@4=1|L-L%/I:0=0/J:31+22-4
-er^n-ay+s=g@2_2/A:0_0_2/B:1-0-3@1-1&6-5#4-4$3-3!2-1;3-2|ay/C:1+0+5/D:aux_1/E:content+1@6+5&4+3#2+1/F:content_1/G:6_3/H:10=10@4=1|L-L%/I:0=0/J:31+22-4
-n^ay-s+g=r@3_1/A:0_0_2/B:1-0-3@1-1&6-5#4-4$3-3!2-1;3-2|ay/C:1+0+5/D:aux_1/E:content+1@6+5&4+3#2+1/F:content_1/G:6_3/H:10=10@4=1|L-L%/I:0=0/J:31+22-4
-ay^s-g+r=ae@1_5/A:1_0_3/B:1-0-5@1-1&7-4#5-3$3-3!1-1;4-1|ae/C:1+1+4/D:content_1/E:content+1@7+4&5+2#1+1/F:content_1/G:6_3/H:10=10@4=1|L-L%/I:0=0/J:31+22-4
-s^g-r+ae=n@2_4/A:1_0_3/B:1-0-5@1-1&7-4#5-3$3-3!1-1;4-1|ae/C:1+1+4/D:content_1/E:content+1@7+4&5+2#1+1/F:content_1/G:6_3/H:10=10@4=1|L-L%/I:0=0/J:31+22-4
-g^r-ae+n=d@3_3/A:1_0_3/B:1-0-5@1-1&7-4#5-3$3-3!1-1;4-1|ae/C:1+1+4/D:content_1/E:content+1@7+4&5+2#1+1/F:content_1/G:6_3/H:10=10@4=1|L-L%/I:0=0/J:31+22-4
-r^ae-n+d=w@4_2/A:1_0_3/B:1-0-5@1-1&7-4#5-3$3-3!1-1;4-1|ae/C:1+1+4/D:content_1/E:content+1@7+4&5+2#1+1/F:content_1/G:6_3/H:10=10@4=1|L-L%/I:0=0/J:31+22-4
-ae^n-d+w=er@5_1/A:1_0_3/B:1-0-5@1-1&7-4#5-3$3-3!1-1;4-1|ae/C:1+1+4/D:content_1/E:content+1@7+4&5+2#1+1/F:content_1/G:6_3/H:10=10@4=1|L-L%/I:0=0/J:31+22-4
-n^d-w+er=d@1_4/A:1_0_5/B:1-1-4@1-1&8-3#6-2$3-2!1-2;5-2|er/C:0+0+2/D:content_1/E:content+1@8+3&6+1#1+2/F:to_1/G:6_3/H:10=10@4=1|L-L%/I:0=0/J:31+22-4
-d^w-er+d=z@2_3/A:1_0_5/B:1-1-4@1-1&8-3#6-2$3-2!1-2;5-2|er/C:0+0+2/D:content_1/E:content+1@8+3&6+1#1+2/F:to_1/G:6_3/H:10=10@4=1|L-L%/I:0=0/J:31+22-4
-w^er-d+z=t@3_2/A:1_0_5/B:1-1-4@1-1&8-3#6-2$3-2!1-2;5-2|er/C:0+0+2/D:content_1/E:content+1@8+3&6+1#1+2/F:to_1/G:6_3/H:10=10@4=1|L-L%/I:0=0/J:31+22-4
-er^d-z+t=ax@4_1/A:1_0_5/B:1-1-4@1-1&8-3#6-2$3-2!1-2;5-2|er/C:0+0+2/D:content_1/E:content+1@8+3&6+1#1+2/F:to_1/G:6_3/H:10=10@4=1|L-L%/I:0=0/J:31+22-4
-d^z-t+ax=s@1_2/A:1_1_4/B:0-0-2@1-1&9-2#7-2$4-2!1-1;1-1|ax/C:1+1+2/D:content_1/E:to+1@9+2&7+1#1+1/F:content_1/G:6_3/H:10=10@4=1|L-L%/I:0=0/J:31+22-4
-z^t-ax+s=ey@2_1/A:1_1_4/B:0-0-2@1-1&9-2#7-2$4-2!1-1;1-1|ax/C:1+1+2/D:content_1/E:to+1@9+2&7+1#1+1/F:content_1/G:6_3/H:10=10@4=1|L-L%/I:0=0/J:31+22-4
-t^ax-s+ey=pau@1_2/A:0_0_2/B:1-1-2@1-1&10-1#7-1$4-1!2-0;2-0|ey/C:0+0+0/D:to_1/E:content+1@10+1&7+0#2+0/F:0_0/G:6_3/H:10=10@4=1|L-L%/I:0=0/J:31+22-4
-ax^s-ey+pau=x@2_1/A:0_0_2/B:1-1-2@1-1&10-1#7-1$4-1!2-0;2-0|ey/C:0+0+0/D:to_1/E:content+1@10+1&7+0#2+0/F:0_0/G:6_3/H:10=10@4=1|L-L%/I:0=0/J:31+22-4
-s^ey-pau+x=x@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:content_1/E:x+x@x+x&x+x#x+x/F:0_0/G:10_10/H:x=x@1=4|0/I:0=0/J:31+22-4
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice21.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice21.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice21.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice21.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,22 +0,0 @@
-x^x-pau+p=r@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+4/D:0_0/E:x+x@x+x&x+x#x+x/F:content_3/G:0_0/H:x=x@1=1|0/I:8=4/J:8+4-1
-x^pau-p+r=eh@1_4/A:0_0_0/B:1-1-4@1-3&1-8#1-4$1-3!0-3;0-3|eh/C:0+0+3/D:0_0/E:content+3@1+4&1+3#0+1/F:content_1/G:0_0/H:8=4@1=1|L-L%/I:0=0/J:8+4-1
-pau^p-r+eh=z@2_3/A:0_0_0/B:1-1-4@1-3&1-8#1-4$1-3!0-3;0-3|eh/C:0+0+3/D:0_0/E:content+3@1+4&1+3#0+1/F:content_1/G:0_0/H:8=4@1=1|L-L%/I:0=0/J:8+4-1
-p^r-eh+z=ax@3_2/A:0_0_0/B:1-1-4@1-3&1-8#1-4$1-3!0-3;0-3|eh/C:0+0+3/D:0_0/E:content+3@1+4&1+3#0+1/F:content_1/G:0_0/H:8=4@1=1|L-L%/I:0=0/J:8+4-1
-r^eh-z+ax=n@4_1/A:0_0_0/B:1-1-4@1-3&1-8#1-4$1-3!0-3;0-3|eh/C:0+0+3/D:0_0/E:content+3@1+4&1+3#0+1/F:content_1/G:0_0/H:8=4@1=1|L-L%/I:0=0/J:8+4-1
-eh^z-ax+n=t@1_3/A:1_1_4/B:0-0-3@2-2&2-7#1-4$1-3!1-2;1-2|ax/C:0+0+2/D:0_0/E:content+3@1+4&1+3#0+1/F:content_1/G:0_0/H:8=4@1=1|L-L%/I:0=0/J:8+4-1
-z^ax-n+t=l@2_2/A:1_1_4/B:0-0-3@2-2&2-7#1-4$1-3!1-2;1-2|ax/C:0+0+2/D:0_0/E:content+3@1+4&1+3#0+1/F:content_1/G:0_0/H:8=4@1=1|L-L%/I:0=0/J:8+4-1
-ax^n-t+l=iy@3_1/A:1_1_4/B:0-0-3@2-2&2-7#1-4$1-3!1-2;1-2|ax/C:0+0+2/D:0_0/E:content+3@1+4&1+3#0+1/F:content_1/G:0_0/H:8=4@1=1|L-L%/I:0=0/J:8+4-1
-n^t-l+iy=sh@1_2/A:0_0_3/B:0-0-2@3-1&3-6#1-4$1-3!2-1;2-1|iy/C:1+1+2/D:0_0/E:content+3@1+4&1+3#0+1/F:content_1/G:0_0/H:8=4@1=1|L-L%/I:0=0/J:8+4-1
-t^l-iy+sh=iy@2_1/A:0_0_3/B:0-0-2@3-1&3-6#1-4$1-3!2-1;2-1|iy/C:1+1+2/D:0_0/E:content+3@1+4&1+3#0+1/F:content_1/G:0_0/H:8=4@1=1|L-L%/I:0=0/J:8+4-1
-l^iy-sh+iy=b@1_2/A:0_0_2/B:1-1-2@1-1&4-5#1-3$1-2!3-2;3-4|iy/C:0+0+3/D:content_3/E:content+1@2+3&2+2#1+1/F:content_2/G:0_0/H:8=4@1=1|L-L%/I:0=0/J:8+4-1
-iy^sh-iy+b=ih@2_1/A:0_0_2/B:1-1-2@1-1&4-5#1-3$1-2!3-2;3-4|iy/C:0+0+3/D:content_3/E:content+1@2+3&2+2#1+1/F:content_2/G:0_0/H:8=4@1=1|L-L%/I:0=0/J:8+4-1
-sh^iy-b+ih=g@1_3/A:1_1_2/B:0-0-3@1-2&5-4#2-3$2-2!1-1;1-3|ih/C:1+0+2/D:content_1/E:content+2@3+2&3+1#1+1/F:content_2/G:0_0/H:8=4@1=1|L-L%/I:0=0/J:8+4-1
-iy^b-ih+g=ae@2_2/A:1_1_2/B:0-0-3@1-2&5-4#2-3$2-2!1-1;1-3|ih/C:1+0+2/D:content_1/E:content+2@3+2&3+1#1+1/F:content_2/G:0_0/H:8=4@1=1|L-L%/I:0=0/J:8+4-1
-b^ih-g+ae=n@3_1/A:1_1_2/B:0-0-3@1-2&5-4#2-3$2-2!1-1;1-3|ih/C:1+0+2/D:content_1/E:content+2@3+2&3+1#1+1/F:content_2/G:0_0/H:8=4@1=1|L-L%/I:0=0/J:8+4-1
-ih^g-ae+n=ax@1_2/A:0_0_3/B:1-0-2@2-1&6-3#2-2$2-2!2-2;2-2|ae/C:0+0+2/D:content_1/E:content+2@3+2&3+1#1+1/F:content_2/G:0_0/H:8=4@1=1|L-L%/I:0=0/J:8+4-1
-g^ae-n+ax=g@2_1/A:0_0_3/B:1-0-2@2-1&6-3#2-2$2-2!2-2;2-2|ae/C:0+0+2/D:content_1/E:content+2@3+2&3+1#1+1/F:content_2/G:0_0/H:8=4@1=1|L-L%/I:0=0/J:8+4-1
-ae^n-ax+g=eh@1_2/A:1_0_2/B:0-0-2@1-2&7-2#3-2$2-2!1-1;3-1|ax/C:1+1+2/D:content_2/E:content+2@4+1&4+0#1+0/F:0_0/G:0_0/H:8=4@1=1|L-L%/I:0=0/J:8+4-1
-n^ax-g+eh=n@2_1/A:1_0_2/B:0-0-2@1-2&7-2#3-2$2-2!1-1;3-1|ax/C:1+1+2/D:content_2/E:content+2@4+1&4+0#1+0/F:0_0/G:0_0/H:8=4@1=1|L-L%/I:0=0/J:8+4-1
-ax^g-eh+n=pau@1_2/A:0_0_2/B:1-1-2@2-1&8-1#3-1$2-1!2-0;4-0|eh/C:0+0+0/D:content_2/E:content+2@4+1&4+0#1+0/F:0_0/G:0_0/H:8=4@1=1|L-L%/I:0=0/J:8+4-1
-g^eh-n+pau=x@2_1/A:0_0_2/B:1-1-2@2-1&8-1#3-1$2-1!2-0;4-0|eh/C:0+0+0/D:content_2/E:content+2@4+1&4+0#1+0/F:0_0/G:0_0/H:8=4@1=1|L-L%/I:0=0/J:8+4-1
-eh^n-pau+x=x@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:content_2/E:x+x@x+x&x+x#x+x/F:0_0/G:8_4/H:x=x@1=1|0/I:0=0/J:8+4-1
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice22.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice22.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice22.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice22.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,28 +0,0 @@
-x^x-pau+ay=w@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+1/D:0_0/E:x+x@x+x&x+x#x+x/F:content_1/G:0_0/H:x=x@1=2|0/I:5=4/J:11+10-2
-x^pau-ay+w=ah@1_1/A:0_0_0/B:1-1-1@1-1&1-5#1-4$1-3!0-1;0-1|ay/C:1+1+4/D:0_0/E:content+1@1+4&1+2#0+1/F:content_2/G:0_0/H:5=4@1=2|L-H%/I:6=6/J:11+10-2
-pau^ay-w+ah=n@1_4/A:1_1_1/B:1-1-4@1-2&2-4#1-3$1-2!1-2;1-3|ah/C:0+0+1/D:content_1/E:content+2@2+3&2+1#1+2/F:in_1/G:0_0/H:5=4@1=2|L-H%/I:6=6/J:11+10-2
-ay^w-ah+n=d@2_3/A:1_1_1/B:1-1-4@1-2&2-4#1-3$1-2!1-2;1-3|ah/C:0+0+1/D:content_1/E:content+2@2+3&2+1#1+2/F:in_1/G:0_0/H:5=4@1=2|L-H%/I:6=6/J:11+10-2
-w^ah-n+d=er@3_2/A:1_1_1/B:1-1-4@1-2&2-4#1-3$1-2!1-2;1-3|ah/C:0+0+1/D:content_1/E:content+2@2+3&2+1#1+2/F:in_1/G:0_0/H:5=4@1=2|L-H%/I:6=6/J:11+10-2
-ah^n-d+er=ih@4_1/A:1_1_1/B:1-1-4@1-2&2-4#1-3$1-2!1-2;1-3|ah/C:0+0+1/D:content_1/E:content+2@2+3&2+1#1+2/F:in_1/G:0_0/H:5=4@1=2|L-H%/I:6=6/J:11+10-2
-n^d-er+ih=f@1_1/A:1_1_4/B:0-0-1@2-1&3-3#2-3$2-2!1-1;1-2|er/C:1+0+2/D:content_1/E:content+2@2+3&2+1#1+2/F:in_1/G:0_0/H:5=4@1=2|L-H%/I:6=6/J:11+10-2
-d^er-ih+f=ay@1_2/A:0_0_1/B:1-0-2@1-1&4-2#2-2$2-2!2-1;2-1|ih/C:1+1+1/D:content_2/E:in+1@3+2&3+1#1+1/F:content_1/G:0_0/H:5=4@1=2|L-H%/I:6=6/J:11+10-2
-er^ih-f+ay=pau@2_1/A:0_0_1/B:1-0-2@1-1&4-2#2-2$2-2!2-1;2-1|ih/C:1+1+1/D:content_2/E:in+1@3+2&3+1#1+1/F:content_1/G:0_0/H:5=4@1=2|L-H%/I:6=6/J:11+10-2
-ih^f-ay+pau=sh@1_1/A:1_0_2/B:1-1-1@1-1&5-1#3-1$2-1!1-0;3-0|ay/C:1+0+3/D:in_1/E:content+1@4+1&3+0#2+0/F:content_1/G:0_0/H:5=4@1=2|L-H%/I:6=6/J:11+10-2
-f^ay-pau+sh=ae@x_x/A:1_1_1/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:content_1/G:5_4/H:x=x@1=2|0/I:6=6/J:11+10-2
-ay^pau-sh+ae=l@1_3/A:1_1_1/B:1-0-3@1-1&1-6#1-5$1-4!0-1;0-1|ae/C:1+1+3/D:content_1/E:content+1@1+6&1+3#0+1/F:content_1/G:5_4/H:6=6@2=1|L-L%/I:0=0/J:11+10-2
-pau^sh-ae+l=f@2_2/A:1_1_1/B:1-0-3@1-1&1-6#1-5$1-4!0-1;0-1|ae/C:1+1+3/D:content_1/E:content+1@1+6&1+3#0+1/F:content_1/G:5_4/H:6=6@2=1|L-L%/I:0=0/J:11+10-2
-sh^ae-l+f=ao@3_1/A:1_1_1/B:1-0-3@1-1&1-6#1-5$1-4!0-1;0-1|ae/C:1+1+3/D:content_1/E:content+1@1+6&1+3#0+1/F:content_1/G:5_4/H:6=6@2=1|L-L%/I:0=0/J:11+10-2
-ae^l-f+ao=l@1_3/A:1_0_3/B:1-1-3@1-1&2-5#1-4$1-3!1-1;0-1|ao/C:1+1+3/D:content_1/E:content+1@2+5&2+2#1+1/F:content_1/G:5_4/H:6=6@2=1|L-L%/I:0=0/J:11+10-2
-l^f-ao+l=r@2_2/A:1_0_3/B:1-1-3@1-1&2-5#1-4$1-3!1-1;0-1|ao/C:1+1+3/D:content_1/E:content+1@2+5&2+2#1+1/F:content_1/G:5_4/H:6=6@2=1|L-L%/I:0=0/J:11+10-2
-f^ao-l+r=ay@3_1/A:1_0_3/B:1-1-3@1-1&2-5#1-4$1-3!1-1;0-1|ao/C:1+1+3/D:content_1/E:content+1@2+5&2+2#1+1/F:content_1/G:5_4/H:6=6@2=1|L-L%/I:0=0/J:11+10-2
-ao^l-r+ay=t@1_3/A:1_1_3/B:1-1-3@1-1&3-4#2-3$2-2!1-1;1-3|ay/C:1+0+3/D:content_1/E:content+1@3+4&3+1#1+3/F:in_1/G:5_4/H:6=6@2=1|L-L%/I:0=0/J:11+10-2
-l^r-ay+t=th@2_2/A:1_1_3/B:1-1-3@1-1&3-4#2-3$2-2!1-1;1-3|ay/C:1+0+3/D:content_1/E:content+1@3+4&3+1#1+3/F:in_1/G:5_4/H:6=6@2=1|L-L%/I:0=0/J:11+10-2
-r^ay-t+th=r@3_1/A:1_1_3/B:1-1-3@1-1&3-4#2-3$2-2!1-1;1-3|ay/C:1+0+3/D:content_1/E:content+1@3+4&3+1#1+3/F:in_1/G:5_4/H:6=6@2=1|L-L%/I:0=0/J:11+10-2
-ay^t-th+r=uw@1_3/A:1_1_3/B:1-0-3@1-1&4-3#3-2$3-2!1-2;1-2|uw/C:0+0+2/D:content_1/E:in+1@4+3&4+1#1+2/F:det_1/G:5_4/H:6=6@2=1|L-L%/I:0=0/J:11+10-2
-t^th-r+uw=dh@2_2/A:1_1_3/B:1-0-3@1-1&4-3#3-2$3-2!1-2;1-2|uw/C:0+0+2/D:content_1/E:in+1@4+3&4+1#1+2/F:det_1/G:5_4/H:6=6@2=1|L-L%/I:0=0/J:11+10-2
-th^r-uw+dh=ax@3_1/A:1_1_3/B:1-0-3@1-1&4-3#3-2$3-2!1-2;1-2|uw/C:0+0+2/D:content_1/E:in+1@4+3&4+1#1+2/F:det_1/G:5_4/H:6=6@2=1|L-L%/I:0=0/J:11+10-2
-r^uw-dh+ax=er@1_2/A:1_0_3/B:0-0-2@1-1&5-2#4-2$3-2!1-1;2-1|ax/C:1+1+2/D:in_1/E:det+1@5+2&4+1#2+1/F:content_1/G:5_4/H:6=6@2=1|L-L%/I:0=0/J:11+10-2
-uw^dh-ax+er=th@2_1/A:1_0_3/B:0-0-2@1-1&5-2#4-2$3-2!1-1;2-1|ax/C:1+1+2/D:in_1/E:det+1@5+2&4+1#2+1/F:content_1/G:5_4/H:6=6@2=1|L-L%/I:0=0/J:11+10-2
-dh^ax-er+th=pau@1_2/A:0_0_2/B:1-1-2@1-1&6-1#4-1$3-1!2-0;3-0|er/C:0+0+0/D:det_1/E:content+1@6+1&4+0#3+0/F:0_0/G:5_4/H:6=6@2=1|L-L%/I:0=0/J:11+10-2
-ax^er-th+pau=x@2_1/A:0_0_2/B:1-1-2@1-1&6-1#4-1$3-1!2-0;3-0|er/C:0+0+0/D:det_1/E:content+1@6+1&4+0#3+0/F:0_0/G:5_4/H:6=6@2=1|L-L%/I:0=0/J:11+10-2
-er^th-pau+x=x@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:content_1/E:x+x@x+x&x+x#x+x/F:0_0/G:6_6/H:x=x@1=2|0/I:0=0/J:11+10-2
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice23.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice23.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice23.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice23.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,58 +0,0 @@
-x^x-pau+hh=aw@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:0_0/E:x+x@x+x&x+x#x+x/F:wp_1/G:0_0/H:x=x@1=3|0/I:5=3/J:21+16-3
-x^pau-hh+aw=f@1_2/A:0_0_0/B:1-0-2@1-1&1-5#1-3$1-4!0-1;0-1|aw/C:1+1+3/D:0_0/E:wp+1@1+3&1+2#0+1/F:content_2/G:0_0/H:5=3@1=3|L-H%/I:9=7/J:21+16-3
-pau^hh-aw+f=ah@2_1/A:0_0_0/B:1-0-2@1-1&1-5#1-3$1-4!0-1;0-1|aw/C:1+1+3/D:0_0/E:wp+1@1+3&1+2#0+1/F:content_2/G:0_0/H:5=3@1=3|L-H%/I:9=7/J:21+16-3
-hh^aw-f+ah=n@1_3/A:1_0_2/B:1-1-3@1-2&2-4#1-2$1-3!1-2;0-2|ah/C:0+0+1/D:wp_1/E:content+2@2+2&1+1#0+1/F:content_2/G:0_0/H:5=3@1=3|L-H%/I:9=7/J:21+16-3
-aw^f-ah+n=iy@2_2/A:1_0_2/B:1-1-3@1-2&2-4#1-2$1-3!1-2;0-2|ah/C:0+0+1/D:wp_1/E:content+2@2+2&1+1#0+1/F:content_2/G:0_0/H:5=3@1=3|L-H%/I:9=7/J:21+16-3
-f^ah-n+iy=ih@3_1/A:1_0_2/B:1-1-3@1-2&2-4#1-2$1-3!1-2;0-2|ah/C:0+0+1/D:wp_1/E:content+2@2+2&1+1#0+1/F:content_2/G:0_0/H:5=3@1=3|L-H%/I:9=7/J:21+16-3
-ah^n-iy+ih=t@1_1/A:1_1_3/B:0-0-1@2-1&3-3#2-2$2-3!1-1;1-1|iy/C:1+1+2/D:wp_1/E:content+2@2+2&1+1#0+1/F:content_2/G:0_0/H:5=3@1=3|L-H%/I:9=7/J:21+16-3
-n^iy-ih+t=ax@1_2/A:0_0_1/B:1-1-2@1-2&4-2#2-1$2-2!2-0;2-1|ih/C:0+1+2/D:content_2/E:content+2@3+1&2+0#1+0/F:content_1/G:0_0/H:5=3@1=3|L-H%/I:9=7/J:21+16-3
-iy^ih-t+ax=l@2_1/A:0_0_1/B:1-1-2@1-2&4-2#2-1$2-2!2-0;2-1|ih/C:0+1+2/D:content_2/E:content+2@3+1&2+0#1+0/F:content_1/G:0_0/H:5=3@1=3|L-H%/I:9=7/J:21+16-3
-ih^t-ax+l=pau@1_2/A:1_1_2/B:0-1-2@2-1&5-1#3-1$3-1!1-0;1-0|ax/C:1+0+3/D:content_2/E:content+2@3+1&2+0#1+0/F:content_1/G:0_0/H:5=3@1=3|L-H%/I:9=7/J:21+16-3
-t^ax-l+pau=s@2_1/A:1_1_2/B:0-1-2@2-1&5-1#3-1$3-1!1-0;1-0|ax/C:1+0+3/D:content_2/E:content+2@3+1&2+0#1+0/F:content_1/G:0_0/H:5=3@1=3|L-H%/I:9=7/J:21+16-3
-ax^l-pau+s=iy@x_x/A:0_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_2/E:x+x@x+x&x+x#x+x/F:content_1/G:5_3/H:x=x@1=3|0/I:9=7/J:21+16-3
-l^pau-s+iy=m@1_3/A:0_1_2/B:1-0-3@1-1&1-9#1-5$1-5!0-2;0-2|iy/C:0+0+2/D:content_2/E:content+1@1+7&1+3#0+2/F:to_1/G:5_3/H:9=7@2=2|L-L%/I:7=6/J:21+16-3
-pau^s-iy+m=t@2_2/A:0_1_2/B:1-0-3@1-1&1-9#1-5$1-5!0-2;0-2|iy/C:0+0+2/D:content_2/E:content+1@1+7&1+3#0+2/F:to_1/G:5_3/H:9=7@2=2|L-L%/I:7=6/J:21+16-3
-s^iy-m+t=ax@3_1/A:0_1_2/B:1-0-3@1-1&1-9#1-5$1-5!0-2;0-2|iy/C:0+0+2/D:content_2/E:content+1@1+7&1+3#0+2/F:to_1/G:5_3/H:9=7@2=2|L-L%/I:7=6/J:21+16-3
-iy^m-t+ax=k@1_2/A:1_0_3/B:0-0-2@1-1&2-8#1-5$1-5!1-1;0-1|ax/C:1+1+3/D:content_1/E:to+1@2+6&2+3#1+1/F:content_1/G:5_3/H:9=7@2=2|L-L%/I:7=6/J:21+16-3
-m^t-ax+k=ah@2_1/A:1_0_3/B:0-0-2@1-1&2-8#1-5$1-5!1-1;0-1|ax/C:1+1+3/D:content_1/E:to+1@2+6&2+3#1+1/F:content_1/G:5_3/H:9=7@2=2|L-L%/I:7=6/J:21+16-3
-t^ax-k+ah=m@1_3/A:0_0_2/B:1-1-3@1-1&3-7#1-4$1-4!2-1;0-1|ah/C:1+1+2/D:to_1/E:content+1@3+5&2+2#2+1/F:content_1/G:5_3/H:9=7@2=2|L-L%/I:7=6/J:21+16-3
-ax^k-ah+m=aw@2_2/A:0_0_2/B:1-1-3@1-1&3-7#1-4$1-4!2-1;0-1|ah/C:1+1+2/D:to_1/E:content+1@3+5&2+2#2+1/F:content_1/G:5_3/H:9=7@2=2|L-L%/I:7=6/J:21+16-3
-k^ah-m+aw=t@3_1/A:0_0_2/B:1-1-3@1-1&3-7#1-4$1-4!2-1;0-1|ah/C:1+1+2/D:to_1/E:content+1@3+5&2+2#2+1/F:content_1/G:5_3/H:9=7@2=2|L-L%/I:7=6/J:21+16-3
-ah^m-aw+t=ax@1_2/A:1_1_3/B:1-1-2@1-1&4-6#2-3$2-3!1-2;1-4|aw/C:0+0+2/D:content_1/E:content+1@4+4&3+1#1+3/F:in_2/G:5_3/H:9=7@2=2|L-L%/I:7=6/J:21+16-3
-m^aw-t+ax=m@2_1/A:1_1_3/B:1-1-2@1-1&4-6#2-3$2-3!1-2;1-4|aw/C:0+0+2/D:content_1/E:content+1@4+4&3+1#1+3/F:in_2/G:5_3/H:9=7@2=2|L-L%/I:7=6/J:21+16-3
-aw^t-ax+m=ah@1_2/A:1_1_2/B:0-0-2@1-2&5-5#3-3$3-3!1-1;1-3|ax/C:1+0+2/D:content_1/E:in+2@5+3&4+1#1+2/F:det_1/G:5_3/H:9=7@2=2|L-L%/I:7=6/J:21+16-3
-t^ax-m+ah=ng@2_1/A:1_1_2/B:0-0-2@1-2&5-5#3-3$3-3!1-1;1-3|ax/C:1+0+2/D:content_1/E:in+2@5+3&4+1#1+2/F:det_1/G:5_3/H:9=7@2=2|L-L%/I:7=6/J:21+16-3
-ax^m-ah+ng=dh@1_2/A:0_0_2/B:1-0-2@2-1&6-4#3-2$3-3!2-2;2-2|ah/C:0+0+2/D:content_1/E:in+2@5+3&4+1#1+2/F:det_1/G:5_3/H:9=7@2=2|L-L%/I:7=6/J:21+16-3
-m^ah-ng+dh=ax@2_1/A:0_0_2/B:1-0-2@2-1&6-4#3-2$3-3!2-2;2-2|ah/C:0+0+2/D:content_1/E:in+2@5+3&4+1#1+2/F:det_1/G:5_3/H:9=7@2=2|L-L%/I:7=6/J:21+16-3
-ah^ng-dh+ax=p@1_2/A:1_0_2/B:0-0-2@1-1&7-3#4-2$3-3!1-1;3-1|ax/C:1+1+3/D:in_2/E:det+1@6+2&4+1#2+1/F:content_2/G:5_3/H:9=7@2=2|L-L%/I:7=6/J:21+16-3
-ng^dh-ax+p=iy@2_1/A:1_0_2/B:0-0-2@1-1&7-3#4-2$3-3!1-1;3-1|ax/C:1+1+3/D:in_2/E:det+1@6+2&4+1#2+1/F:content_2/G:5_3/H:9=7@2=2|L-L%/I:7=6/J:21+16-3
-dh^ax-p+iy=p@1_3/A:0_0_2/B:1-1-3@1-2&8-2#4-1$3-2!2-0;4-1|iy/C:0+1+2/D:det_1/E:content+2@7+1&4+0#3+0/F:in_1/G:5_3/H:9=7@2=2|L-L%/I:7=6/J:21+16-3
-ax^p-iy+p=ax@2_2/A:0_0_2/B:1-1-3@1-2&8-2#4-1$3-2!2-0;4-1|iy/C:0+1+2/D:det_1/E:content+2@7+1&4+0#3+0/F:in_1/G:5_3/H:9=7@2=2|L-L%/I:7=6/J:21+16-3
-p^iy-p+ax=l@3_1/A:0_0_2/B:1-1-3@1-2&8-2#4-1$3-2!2-0;4-1|iy/C:0+1+2/D:det_1/E:content+2@7+1&4+0#3+0/F:in_1/G:5_3/H:9=7@2=2|L-L%/I:7=6/J:21+16-3
-iy^p-ax+l=pau@1_2/A:1_1_3/B:0-1-2@2-1&9-1#5-1$4-1!1-0;1-0|ax/C:1+0+3/D:det_1/E:content+2@7+1&4+0#3+0/F:in_1/G:5_3/H:9=7@2=2|L-L%/I:7=6/J:21+16-3
-p^ax-l+pau=dh@2_1/A:1_1_3/B:0-1-2@2-1&9-1#5-1$4-1!1-0;1-0|ax/C:1+0+3/D:det_1/E:content+2@7+1&4+0#3+0/F:in_1/G:5_3/H:9=7@2=2|L-L%/I:7=6/J:21+16-3
-ax^l-pau+dh=ae@x_x/A:0_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_2/E:x+x@x+x&x+x#x+x/F:in_1/G:9_7/H:x=x@1=3|0/I:7=6/J:21+16-3
-l^pau-dh+ae=t@1_3/A:0_1_2/B:1-0-3@1-1&1-7#1-6$1-4!0-1;0-1|ae/C:1+1+3/D:content_2/E:in+1@1+6&1+3#0+1/F:content_1/G:9_7/H:7=6@3=1|L-L%/I:0=0/J:21+16-3
-pau^dh-ae+t=w@2_2/A:0_1_2/B:1-0-3@1-1&1-7#1-6$1-4!0-1;0-1|ae/C:1+1+3/D:content_2/E:in+1@1+6&1+3#0+1/F:content_1/G:9_7/H:7=6@3=1|L-L%/I:0=0/J:21+16-3
-dh^ae-t+w=ao@3_1/A:0_1_2/B:1-0-3@1-1&1-7#1-6$1-4!0-1;0-1|ae/C:1+1+3/D:content_2/E:in+1@1+6&1+3#0+1/F:content_1/G:9_7/H:7=6@3=1|L-L%/I:0=0/J:21+16-3
-ae^t-w+ao=k@1_3/A:1_0_3/B:1-1-3@1-1&2-6#1-5$1-3!1-1;0-4|ao/C:1+0+3/D:in_1/E:content+1@2+5&1+2#0+3/F:in_1/G:9_7/H:7=6@3=1|L-L%/I:0=0/J:21+16-3
-t^w-ao+k=w@2_2/A:1_0_3/B:1-1-3@1-1&2-6#1-5$1-3!1-1;0-4|ao/C:1+0+3/D:in_1/E:content+1@2+5&1+2#0+3/F:in_1/G:9_7/H:7=6@3=1|L-L%/I:0=0/J:21+16-3
-w^ao-k+w=ih@3_1/A:1_0_3/B:1-1-3@1-1&2-6#1-5$1-3!1-1;0-4|ao/C:1+0+3/D:in_1/E:content+1@2+5&1+2#0+3/F:in_1/G:9_7/H:7=6@3=1|L-L%/I:0=0/J:21+16-3
-ao^k-w+ih=dh@1_3/A:1_1_3/B:1-0-3@1-1&3-5#2-4$2-3!1-1;1-3|ih/C:1+0+3/D:content_1/E:in+1@3+4&2+2#1+2/F:pps_1/G:9_7/H:7=6@3=1|L-L%/I:0=0/J:21+16-3
-k^w-ih+dh=dh@2_2/A:1_1_3/B:1-0-3@1-1&3-5#2-4$2-3!1-1;1-3|ih/C:1+0+3/D:content_1/E:in+1@3+4&2+2#1+2/F:pps_1/G:9_7/H:7=6@3=1|L-L%/I:0=0/J:21+16-3
-w^ih-dh+dh=eh@3_1/A:1_1_3/B:1-0-3@1-1&3-5#2-4$2-3!1-1;1-3|ih/C:1+0+3/D:content_1/E:in+1@3+4&2+2#1+2/F:pps_1/G:9_7/H:7=6@3=1|L-L%/I:0=0/J:21+16-3
-ih^dh-dh+eh=r@1_3/A:1_0_3/B:1-0-3@1-1&4-4#3-3$2-3!1-1;2-2|eh/C:1+0+4/D:in_1/E:pps+1@4+3&2+2#2+1/F:content_1/G:9_7/H:7=6@3=1|L-L%/I:0=0/J:21+16-3
-dh^dh-eh+r=hh@2_2/A:1_0_3/B:1-0-3@1-1&4-4#3-3$2-3!1-1;2-2|eh/C:1+0+4/D:in_1/E:pps+1@4+3&2+2#2+1/F:content_1/G:9_7/H:7=6@3=1|L-L%/I:0=0/J:21+16-3
-dh^eh-r+hh=eh@3_1/A:1_0_3/B:1-0-3@1-1&4-4#3-3$2-3!1-1;2-2|eh/C:1+0+4/D:in_1/E:pps+1@4+3&2+2#2+1/F:content_1/G:9_7/H:7=6@3=1|L-L%/I:0=0/J:21+16-3
-eh^r-hh+eh=d@1_4/A:1_0_3/B:1-0-4@1-1&5-3#4-2$2-3!1-1;3-1|eh/C:1+1+4/D:pps_1/E:content+1@5+2&2+1#3+1/F:content_2/G:9_7/H:7=6@3=1|L-L%/I:0=0/J:21+16-3
-r^hh-eh+d=z@2_3/A:1_0_3/B:1-0-4@1-1&5-3#4-2$2-3!1-1;3-1|eh/C:1+1+4/D:pps_1/E:content+1@5+2&2+1#3+1/F:content_2/G:9_7/H:7=6@3=1|L-L%/I:0=0/J:21+16-3
-hh^eh-d+z=d@3_2/A:1_0_3/B:1-0-4@1-1&5-3#4-2$2-3!1-1;3-1|eh/C:1+1+4/D:pps_1/E:content+1@5+2&2+1#3+1/F:content_2/G:9_7/H:7=6@3=1|L-L%/I:0=0/J:21+16-3
-eh^d-z+d=aw@4_1/A:1_0_3/B:1-0-4@1-1&5-3#4-2$2-3!1-1;3-1|eh/C:1+1+4/D:pps_1/E:content+1@5+2&2+1#3+1/F:content_2/G:9_7/H:7=6@3=1|L-L%/I:0=0/J:21+16-3
-d^z-d+aw=n@1_4/A:1_0_4/B:1-1-4@1-2&6-2#5-1$2-2!1-0;4-1|aw/C:0+1+3/D:content_1/E:content+2@6+1&3+0#1+0/F:0_0/G:9_7/H:7=6@3=1|L-L%/I:0=0/J:21+16-3
-z^d-aw+n=w@2_3/A:1_0_4/B:1-1-4@1-2&6-2#5-1$2-2!1-0;4-1|aw/C:0+1+3/D:content_1/E:content+2@6+1&3+0#1+0/F:0_0/G:9_7/H:7=6@3=1|L-L%/I:0=0/J:21+16-3
-d^aw-n+w=er@3_2/A:1_0_4/B:1-1-4@1-2&6-2#5-1$2-2!1-0;4-1|aw/C:0+1+3/D:content_1/E:content+2@6+1&3+0#1+0/F:0_0/G:9_7/H:7=6@3=1|L-L%/I:0=0/J:21+16-3
-aw^n-w+er=d@4_1/A:1_0_4/B:1-1-4@1-2&6-2#5-1$2-2!1-0;4-1|aw/C:0+1+3/D:content_1/E:content+2@6+1&3+0#1+0/F:0_0/G:9_7/H:7=6@3=1|L-L%/I:0=0/J:21+16-3
-n^w-er+d=z@1_3/A:1_1_4/B:0-1-3@2-1&7-1#6-1$3-1!1-0;1-0|er/C:0+0+0/D:content_1/E:content+2@6+1&3+0#1+0/F:0_0/G:9_7/H:7=6@3=1|L-L%/I:0=0/J:21+16-3
-w^er-d+z=pau@2_2/A:1_1_4/B:0-1-3@2-1&7-1#6-1$3-1!1-0;1-0|er/C:0+0+0/D:content_1/E:content+2@6+1&3+0#1+0/F:0_0/G:9_7/H:7=6@3=1|L-L%/I:0=0/J:21+16-3
-er^d-z+pau=x@3_1/A:1_1_4/B:0-1-3@2-1&7-1#6-1$3-1!1-0;1-0|er/C:0+0+0/D:content_1/E:content+2@6+1&3+0#1+0/F:0_0/G:9_7/H:7=6@3=1|L-L%/I:0=0/J:21+16-3
-d^z-pau+x=x@x_x/A:0_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:content_2/E:x+x@x+x&x+x#x+x/F:0_0/G:7_6/H:x=x@1=3|0/I:0=0/J:21+16-3
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice24.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice24.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice24.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice24.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,64 +0,0 @@
-x^x-pau+dh=ax@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+2/D:0_0/E:x+x@x+x&x+x#x+x/F:det_1/G:0_0/H:x=x@1=5|0/I:5=2/J:24+20-5
-x^pau-dh+ax=ae@1_2/A:0_0_0/B:0-0-2@1-1&1-5#1-2$1-3!0-2;0-2|ax/C:0+0+3/D:0_0/E:det+1@1+2&1+1#0+1/F:content_4/G:0_0/H:5=2@1=5|L-L%/I:2=2/J:24+20-5
-pau^dh-ax+ae=n@2_1/A:0_0_0/B:0-0-2@1-1&1-5#1-2$1-3!0-2;0-2|ax/C:0+0+3/D:0_0/E:det+1@1+2&1+1#0+1/F:content_4/G:0_0/H:5=2@1=5|L-L%/I:2=2/J:24+20-5
-dh^ax-ae+n=t@1_3/A:0_0_2/B:0-0-3@1-4&2-4#1-2$1-3!0-1;0-1|ae/C:1+1+2/D:det_1/E:content+4@2+1&1+0#0+0/F:content_1/G:0_0/H:5=2@1=5|L-L%/I:2=2/J:24+20-5
-ax^ae-n+t=ih@2_2/A:0_0_2/B:0-0-3@1-4&2-4#1-2$1-3!0-1;0-1|ae/C:1+1+2/D:det_1/E:content+4@2+1&1+0#0+0/F:content_1/G:0_0/H:5=2@1=5|L-L%/I:2=2/J:24+20-5
-ae^n-t+ih=p@3_1/A:0_0_2/B:0-0-3@1-4&2-4#1-2$1-3!0-1;0-1|ae/C:1+1+2/D:det_1/E:content+4@2+1&1+0#0+0/F:content_1/G:0_0/H:5=2@1=5|L-L%/I:2=2/J:24+20-5
-n^t-ih+p=ax@1_2/A:0_0_3/B:1-1-2@2-3&3-3#1-1$1-2!0-0;0-2|ih/C:0+0+2/D:det_1/E:content+4@2+1&1+0#0+0/F:content_1/G:0_0/H:5=2@1=5|L-L%/I:2=2/J:24+20-5
-t^ih-p+ax=th@2_1/A:0_0_3/B:1-1-2@2-3&3-3#1-1$1-2!0-0;0-2|ih/C:0+0+2/D:det_1/E:content+4@2+1&1+0#0+0/F:content_1/G:0_0/H:5=2@1=5|L-L%/I:2=2/J:24+20-5
-ih^p-ax+th=iy@1_2/A:1_1_2/B:0-0-2@3-2&4-2#2-1$2-2!1-0;1-1|ax/C:0+1+2/D:det_1/E:content+4@2+1&1+0#0+0/F:content_1/G:0_0/H:5=2@1=5|L-L%/I:2=2/J:24+20-5
-p^ax-th+iy=z@2_1/A:1_1_2/B:0-0-2@3-2&4-2#2-1$2-2!1-0;1-1|ax/C:0+1+2/D:det_1/E:content+4@2+1&1+0#0+0/F:content_1/G:0_0/H:5=2@1=5|L-L%/I:2=2/J:24+20-5
-ax^th-iy+z=pau@1_2/A:0_0_2/B:0-1-2@4-1&5-1#2-1$2-1!2-0;2-0|iy/C:1+0+1/D:det_1/E:content+4@2+1&1+0#0+0/F:content_1/G:0_0/H:5=2@1=5|L-L%/I:2=2/J:24+20-5
-th^iy-z+pau=ay@2_1/A:0_0_2/B:0-1-2@4-1&5-1#2-1$2-1!2-0;2-0|iy/C:1+0+1/D:det_1/E:content+4@2+1&1+0#0+0/F:content_1/G:0_0/H:5=2@1=5|L-L%/I:2=2/J:24+20-5
-iy^z-pau+ay=th@x_x/A:0_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+1/D:content_4/E:x+x@x+x&x+x#x+x/F:content_1/G:5_2/H:x=x@1=5|0/I:2=2/J:24+20-5
-z^pau-ay+th=ih@1_1/A:0_1_2/B:1-0-1@1-1&1-2#1-2$1-2!0-1;0-1|ay/C:1+1+4/D:content_4/E:content+1@1+2&1+1#0+1/F:content_1/G:5_2/H:2=2@2=4|L-L%/I:8=8/J:24+20-5
-pau^ay-th+ih=ng@1_4/A:1_0_1/B:1-1-4@1-1&2-1#1-1$1-1!1-0;0-0|ih/C:1+0+3/D:content_1/E:content+1@2+1&2+0#1+0/F:cc_1/G:5_2/H:2=2@2=4|L-L%/I:8=8/J:24+20-5
-ay^th-ih+ng=k@2_3/A:1_0_1/B:1-1-4@1-1&2-1#1-1$1-1!1-0;0-0|ih/C:1+0+3/D:content_1/E:content+1@2+1&2+0#1+0/F:cc_1/G:5_2/H:2=2@2=4|L-L%/I:8=8/J:24+20-5
-th^ih-ng+k=pau@3_2/A:1_0_1/B:1-1-4@1-1&2-1#1-1$1-1!1-0;0-0|ih/C:1+0+3/D:content_1/E:content+1@2+1&2+0#1+0/F:cc_1/G:5_2/H:2=2@2=4|L-L%/I:8=8/J:24+20-5
-ih^ng-k+pau=b@4_1/A:1_0_1/B:1-1-4@1-1&2-1#1-1$1-1!1-0;0-0|ih/C:1+0+3/D:content_1/E:content+1@2+1&2+0#1+0/F:cc_1/G:5_2/H:2=2@2=4|L-L%/I:8=8/J:24+20-5
-ng^k-pau+b=ah@x_x/A:1_1_4/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:cc_1/G:2_2/H:x=x@1=5|0/I:8=8/J:24+20-5
-k^pau-b+ah=t@1_3/A:1_1_4/B:1-0-3@1-1&1-8#1-7$1-3!0-1;0-1|ah/C:1+1+1/D:content_1/E:cc+1@1+8&1+4#0+1/F:content_1/G:2_2/H:8=8@3=3|L-L%/I:7=6/J:24+20-5
-pau^b-ah+t=ay@2_2/A:1_1_4/B:1-0-3@1-1&1-8#1-7$1-3!0-1;0-1|ah/C:1+1+1/D:content_1/E:cc+1@1+8&1+4#0+1/F:content_1/G:2_2/H:8=8@3=3|L-L%/I:7=6/J:24+20-5
-b^ah-t+ay=sh@3_1/A:1_1_4/B:1-0-3@1-1&1-8#1-7$1-3!0-1;0-1|ah/C:1+1+1/D:content_1/E:cc+1@1+8&1+4#0+1/F:content_1/G:2_2/H:8=8@3=3|L-L%/I:7=6/J:24+20-5
-ah^t-ay+sh=ae@1_1/A:1_0_3/B:1-1-1@1-1&2-7#1-6$1-2!1-1;0-6|ay/C:1+0+3/D:cc_1/E:content+1@2+7&1+3#0+1/F:content_1/G:2_2/H:8=8@3=3|L-L%/I:7=6/J:24+20-5
-t^ay-sh+ae=l@1_3/A:1_1_1/B:1-0-3@1-1&3-6#2-5$2-2!1-1;1-5|ae/C:1+0+3/D:content_1/E:content+1@3+6&2+2#1+3/F:aux_1/G:2_2/H:8=8@3=3|L-L%/I:7=6/J:24+20-5
-ay^sh-ae+l=hh@2_2/A:1_1_1/B:1-0-3@1-1&3-6#2-5$2-2!1-1;1-5|ae/C:1+0+3/D:content_1/E:content+1@3+6&2+2#1+3/F:aux_1/G:2_2/H:8=8@3=3|L-L%/I:7=6/J:24+20-5
-sh^ae-l+hh=ae@3_1/A:1_1_1/B:1-0-3@1-1&3-6#2-5$2-2!1-1;1-5|ae/C:1+0+3/D:content_1/E:content+1@3+6&2+2#1+3/F:aux_1/G:2_2/H:8=8@3=3|L-L%/I:7=6/J:24+20-5
-ae^l-hh+ae=v@1_3/A:1_0_3/B:1-0-3@1-1&4-5#3-4$2-2!1-2;2-4|ae/C:0+0+2/D:content_1/E:aux+1@4+5&3+2#1+2/F:to_1/G:2_2/H:8=8@3=3|L-L%/I:7=6/J:24+20-5
-l^hh-ae+v=t@2_2/A:1_0_3/B:1-0-3@1-1&4-5#3-4$2-2!1-2;2-4|ae/C:0+0+2/D:content_1/E:aux+1@4+5&3+2#1+2/F:to_1/G:2_2/H:8=8@3=3|L-L%/I:7=6/J:24+20-5
-hh^ae-v+t=ax@3_1/A:1_0_3/B:1-0-3@1-1&4-5#3-4$2-2!1-2;2-4|ae/C:0+0+2/D:content_1/E:aux+1@4+5&3+2#1+2/F:to_1/G:2_2/H:8=8@3=3|L-L%/I:7=6/J:24+20-5
-ae^v-t+ax=ae@1_2/A:1_0_3/B:0-0-2@1-1&5-4#4-4$2-2!1-1;3-3|ax/C:1+0+3/D:aux_1/E:to+1@5+4&3+2#2+1/F:content_1/G:2_2/H:8=8@3=3|L-L%/I:7=6/J:24+20-5
-v^t-ax+ae=s@2_1/A:1_0_3/B:0-0-2@1-1&5-4#4-4$2-2!1-1;3-3|ax/C:1+0+3/D:aux_1/E:to+1@5+4&3+2#2+1/F:content_1/G:2_2/H:8=8@3=3|L-L%/I:7=6/J:24+20-5
-t^ax-ae+s=k@1_3/A:0_0_2/B:1-0-3@1-1&6-3#4-3$2-2!2-1;4-2|ae/C:1+0+3/D:to_1/E:content+1@6+3&3+1#3+1/F:content_1/G:2_2/H:8=8@3=3|L-L%/I:7=6/J:24+20-5
-ax^ae-s+k=dh@2_2/A:0_0_2/B:1-0-3@1-1&6-3#4-3$2-2!2-1;4-2|ae/C:1+0+3/D:to_1/E:content+1@6+3&3+1#3+1/F:content_1/G:2_2/H:8=8@3=3|L-L%/I:7=6/J:24+20-5
-ae^s-k+dh=eh@3_1/A:0_0_2/B:1-0-3@1-1&6-3#4-3$2-2!2-1;4-2|ae/C:1+0+3/D:to_1/E:content+1@6+3&3+1#3+1/F:content_1/G:2_2/H:8=8@3=3|L-L%/I:7=6/J:24+20-5
-s^k-dh+eh=m@1_3/A:1_0_3/B:1-0-3@1-1&7-2#5-2$2-2!1-1;5-1|eh/C:1+1+3/D:content_1/E:content+1@7+2&4+0#1+0/F:wp_1/G:2_2/H:8=8@3=3|L-L%/I:7=6/J:24+20-5
-k^dh-eh+m=w@2_2/A:1_0_3/B:1-0-3@1-1&7-2#5-2$2-2!1-1;5-1|eh/C:1+1+3/D:content_1/E:content+1@7+2&4+0#1+0/F:wp_1/G:2_2/H:8=8@3=3|L-L%/I:7=6/J:24+20-5
-dh^eh-m+w=ah@3_1/A:1_0_3/B:1-0-3@1-1&7-2#5-2$2-2!1-1;5-1|eh/C:1+1+3/D:content_1/E:content+1@7+2&4+0#1+0/F:wp_1/G:2_2/H:8=8@3=3|L-L%/I:7=6/J:24+20-5
-eh^m-w+ah=t@1_3/A:1_0_3/B:1-1-3@1-1&8-1#6-1$2-1!1-0;6-0|ah/C:0+0+2/D:content_1/E:wp+1@8+1&5+0#1+0/F:det_1/G:2_2/H:8=8@3=3|L-L%/I:7=6/J:24+20-5
-m^w-ah+t=pau@2_2/A:1_0_3/B:1-1-3@1-1&8-1#6-1$2-1!1-0;6-0|ah/C:0+0+2/D:content_1/E:wp+1@8+1&5+0#1+0/F:det_1/G:2_2/H:8=8@3=3|L-L%/I:7=6/J:24+20-5
-w^ah-t+pau=dh@3_1/A:1_0_3/B:1-1-3@1-1&8-1#6-1$2-1!1-0;6-0|ah/C:0+0+2/D:content_1/E:wp+1@8+1&5+0#1+0/F:det_1/G:2_2/H:8=8@3=3|L-L%/I:7=6/J:24+20-5
-ah^t-pau+dh=ax@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+2/D:wp_1/E:x+x@x+x&x+x#x+x/F:det_1/G:8_8/H:x=x@1=5|0/I:7=6/J:24+20-5
-t^pau-dh+ax=n@1_2/A:1_1_3/B:0-0-2@1-1&1-7#1-5$1-4!0-1;0-1|ax/C:1+1+3/D:wp_1/E:det+1@1+6&1+2#0+1/F:content_1/G:8_8/H:7=6@4=2|L-L%/I:2=2/J:24+20-5
-pau^dh-ax+n=ey@2_1/A:1_1_3/B:0-0-2@1-1&1-7#1-5$1-4!0-1;0-1|ax/C:1+1+3/D:wp_1/E:det+1@1+6&1+2#0+1/F:content_1/G:8_8/H:7=6@4=2|L-L%/I:2=2/J:24+20-5
-dh^ax-n+ey=m@1_3/A:0_0_2/B:1-1-3@1-1&2-6#1-4$1-3!0-1;0-3|ey/C:1+0+2/D:det_1/E:content+1@2+5&1+1#0+3/F:in_1/G:8_8/H:7=6@4=2|L-L%/I:2=2/J:24+20-5
-ax^n-ey+m=ah@2_2/A:0_0_2/B:1-1-3@1-1&2-6#1-4$1-3!0-1;0-3|ey/C:1+0+2/D:det_1/E:content+1@2+5&1+1#0+3/F:in_1/G:8_8/H:7=6@4=2|L-L%/I:2=2/J:24+20-5
-n^ey-m+ah=v@3_1/A:0_0_2/B:1-1-3@1-1&2-6#1-4$1-3!0-1;0-3|ey/C:1+0+2/D:det_1/E:content+1@2+5&1+1#0+3/F:in_1/G:8_8/H:7=6@4=2|L-L%/I:2=2/J:24+20-5
-ey^m-ah+v=dh@1_2/A:1_1_3/B:1-0-2@1-1&3-5#2-3$2-3!1-2;1-2|ah/C:0+0+2/D:content_1/E:in+1@3+4&2+1#1+2/F:det_1/G:8_8/H:7=6@4=2|L-L%/I:2=2/J:24+20-5
-m^ah-v+dh=ax@2_1/A:1_1_3/B:1-0-2@1-1&3-5#2-3$2-3!1-2;1-2|ah/C:0+0+2/D:content_1/E:in+1@3+4&2+1#1+2/F:det_1/G:8_8/H:7=6@4=2|L-L%/I:2=2/J:24+20-5
-ah^v-dh+ax=k@1_2/A:1_0_2/B:0-0-2@1-1&4-4#3-3$2-3!1-1;2-1|ax/C:1+1+4/D:in_1/E:det+1@4+3&2+1#2+1/F:content_2/G:8_8/H:7=6@4=2|L-L%/I:2=2/J:24+20-5
-v^dh-ax+k=ah@2_1/A:1_0_2/B:0-0-2@1-1&4-4#3-3$2-3!1-1;2-1|ax/C:1+1+4/D:in_1/E:det+1@4+3&2+1#2+1/F:content_2/G:8_8/H:7=6@4=2|L-L%/I:2=2/J:24+20-5
-dh^ax-k+ah=n@1_4/A:0_0_2/B:1-1-4@1-2&5-3#3-2$2-2!2-2;3-2|ah/C:0+0+2/D:det_1/E:content+2@5+2&2+0#3+0/F:aux_1/G:8_8/H:7=6@4=2|L-L%/I:2=2/J:24+20-5
-ax^k-ah+n=t@2_3/A:0_0_2/B:1-1-4@1-2&5-3#3-2$2-2!2-2;3-2|ah/C:0+0+2/D:det_1/E:content+2@5+2&2+0#3+0/F:aux_1/G:8_8/H:7=6@4=2|L-L%/I:2=2/J:24+20-5
-k^ah-n+t=r@3_2/A:0_0_2/B:1-1-4@1-2&5-3#3-2$2-2!2-2;3-2|ah/C:0+0+2/D:det_1/E:content+2@5+2&2+0#3+0/F:aux_1/G:8_8/H:7=6@4=2|L-L%/I:2=2/J:24+20-5
-ah^n-t+r=iy@4_1/A:0_0_2/B:1-1-4@1-2&5-3#3-2$2-2!2-2;3-2|ah/C:0+0+2/D:det_1/E:content+2@5+2&2+0#3+0/F:aux_1/G:8_8/H:7=6@4=2|L-L%/I:2=2/J:24+20-5
-n^t-r+iy=ih@1_2/A:1_1_4/B:0-0-2@2-1&6-2#4-2$3-2!1-1;1-1|iy/C:1+1+2/D:det_1/E:content+2@5+2&2+0#3+0/F:aux_1/G:8_8/H:7=6@4=2|L-L%/I:2=2/J:24+20-5
-t^r-iy+ih=z@2_1/A:1_1_4/B:0-0-2@2-1&6-2#4-2$3-2!1-1;1-1|iy/C:1+1+2/D:det_1/E:content+2@5+2&2+0#3+0/F:aux_1/G:8_8/H:7=6@4=2|L-L%/I:2=2/J:24+20-5
-r^iy-ih+z=pau@1_2/A:0_0_2/B:1-1-2@1-1&7-1#4-1$3-1!2-0;2-0|ih/C:1+0+2/D:content_2/E:aux+1@6+1&3+0#1+0/F:content_1/G:8_8/H:7=6@4=2|L-L%/I:2=2/J:24+20-5
-iy^ih-z+pau=y@2_1/A:0_0_2/B:1-1-2@1-1&7-1#4-1$3-1!2-0;2-0|ih/C:1+0+2/D:content_2/E:aux+1@6+1&3+0#1+0/F:content_1/G:8_8/H:7=6@4=2|L-L%/I:2=2/J:24+20-5
-ih^z-pau+y=uw@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:aux_1/E:x+x@x+x&x+x#x+x/F:content_1/G:7_6/H:x=x@1=5|0/I:2=2/J:24+20-5
-z^pau-y+uw=n@1_2/A:1_1_2/B:1-0-2@1-1&1-2#1-2$1-2!0-1;0-1|uw/C:1+1+2/D:aux_1/E:content+1@1+2&1+1#0+1/F:content_1/G:7_6/H:2=2@5=1|L-L%/I:0=0/J:24+20-5
-pau^y-uw+n=ow@2_1/A:1_1_2/B:1-0-2@1-1&1-2#1-2$1-2!0-1;0-1|uw/C:1+1+2/D:aux_1/E:content+1@1+2&1+1#0+1/F:content_1/G:7_6/H:2=2@5=1|L-L%/I:0=0/J:24+20-5
-y^uw-n+ow=pau@1_2/A:1_0_2/B:1-1-2@1-1&2-1#1-1$1-1!1-0;0-0|ow/C:0+0+0/D:content_1/E:content+1@2+1&2+0#1+0/F:0_0/G:7_6/H:2=2@5=1|L-L%/I:0=0/J:24+20-5
-uw^n-ow+pau=x@2_1/A:1_0_2/B:1-1-2@1-1&2-1#1-1$1-1!1-0;0-0|ow/C:0+0+0/D:content_1/E:content+1@2+1&2+0#1+0/F:0_0/G:7_6/H:2=2@5=1|L-L%/I:0=0/J:24+20-5
-n^ow-pau+x=x@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:content_1/E:x+x@x+x&x+x#x+x/F:0_0/G:2_2/H:x=x@1=5|0/I:0=0/J:24+20-5
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice25.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice25.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice25.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice25.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,34 +0,0 @@
-x^x-pau+p=l@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+4/D:0_0/E:x+x@x+x&x+x#x+x/F:content_1/G:0_0/H:x=x@1=3|0/I:2=2/J:11+8-3
-x^pau-p+l=iy@1_4/A:0_0_0/B:1-1-4@1-1&1-2#1-2$1-2!0-1;0-1|iy/C:1+1+3/D:0_0/E:content+1@1+2&1+1#0+1/F:content_1/G:0_0/H:2=2@1=3|L-H%/I:5=4/J:11+8-3
-pau^p-l+iy=z@2_3/A:0_0_0/B:1-1-4@1-1&1-2#1-2$1-2!0-1;0-1|iy/C:1+1+3/D:0_0/E:content+1@1+2&1+1#0+1/F:content_1/G:0_0/H:2=2@1=3|L-H%/I:5=4/J:11+8-3
-p^l-iy+z=m@3_2/A:0_0_0/B:1-1-4@1-1&1-2#1-2$1-2!0-1;0-1|iy/C:1+1+3/D:0_0/E:content+1@1+2&1+1#0+1/F:content_1/G:0_0/H:2=2@1=3|L-H%/I:5=4/J:11+8-3
-l^iy-z+m=aa@4_1/A:0_0_0/B:1-1-4@1-1&1-2#1-2$1-2!0-1;0-1|iy/C:1+1+3/D:0_0/E:content+1@1+2&1+1#0+1/F:content_1/G:0_0/H:2=2@1=3|L-H%/I:5=4/J:11+8-3
-iy^z-m+aa=m@1_3/A:1_1_4/B:1-1-3@1-1&2-1#1-1$1-1!1-0;1-0|aa/C:1+0+2/D:content_1/E:content+1@2+1&2+0#1+0/F:aux_1/G:0_0/H:2=2@1=3|L-H%/I:5=4/J:11+8-3
-z^m-aa+m=pau@2_2/A:1_1_4/B:1-1-3@1-1&2-1#1-1$1-1!1-0;1-0|aa/C:1+0+2/D:content_1/E:content+1@2+1&2+0#1+0/F:aux_1/G:0_0/H:2=2@1=3|L-H%/I:5=4/J:11+8-3
-m^aa-m+pau=ih@3_1/A:1_1_4/B:1-1-3@1-1&2-1#1-1$1-1!1-0;1-0|aa/C:1+0+2/D:content_1/E:content+1@2+1&2+0#1+0/F:aux_1/G:0_0/H:2=2@1=3|L-H%/I:5=4/J:11+8-3
-aa^m-pau+ih=z@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:content_1/E:x+x@x+x&x+x#x+x/F:aux_1/G:2_2/H:x=x@1=3|0/I:5=4/J:11+8-3
-m^pau-ih+z=dh@1_2/A:1_1_3/B:1-0-2@1-1&1-5#1-4$1-2!0-1;0-4|ih/C:1+0+3/D:content_1/E:aux+1@1+4&1+1#0+3/F:det_1/G:2_2/H:5=4@2=2|L-L%/I:4=2/J:11+8-3
-pau^ih-z+dh=ih@2_1/A:1_1_3/B:1-0-2@1-1&1-5#1-4$1-2!0-1;0-4|ih/C:1+0+3/D:content_1/E:aux+1@1+4&1+1#0+3/F:det_1/G:2_2/H:5=4@2=2|L-L%/I:4=2/J:11+8-3
-ih^z-dh+ih=s@1_3/A:1_0_2/B:1-0-3@1-1&2-4#1-3$1-2!1-1;0-3|ih/C:1+0+2/D:aux_1/E:det+1@2+3&1+1#0+2/F:in_1/G:2_2/H:5=4@2=2|L-L%/I:4=2/J:11+8-3
-z^dh-ih+s=n@2_2/A:1_0_2/B:1-0-3@1-1&2-4#1-3$1-2!1-1;0-3|ih/C:1+0+2/D:aux_1/E:det+1@2+3&1+1#0+2/F:in_1/G:2_2/H:5=4@2=2|L-L%/I:4=2/J:11+8-3
-dh^ih-s+n=uw@3_1/A:1_0_2/B:1-0-3@1-1&2-4#1-3$1-2!1-1;0-3|ih/C:1+0+2/D:aux_1/E:det+1@2+3&1+1#0+2/F:in_1/G:2_2/H:5=4@2=2|L-L%/I:4=2/J:11+8-3
-ih^s-n+uw=z@1_2/A:1_0_3/B:1-0-2@1-1&3-3#2-2$1-2!1-1;0-2|uw/C:1+0+3/D:det_1/E:in+1@3+2&1+1#0+1/F:content_2/G:2_2/H:5=4@2=2|L-L%/I:4=2/J:11+8-3
-s^n-uw+z=iy@2_1/A:1_0_3/B:1-0-2@1-1&3-3#2-2$1-2!1-1;0-2|uw/C:1+0+3/D:det_1/E:in+1@3+2&1+1#0+1/F:content_2/G:2_2/H:5=4@2=2|L-L%/I:4=2/J:11+8-3
-n^uw-z+iy=l@1_3/A:1_0_2/B:1-0-3@1-2&4-2#3-1$1-2!1-0;0-1|iy/C:0+1+3/D:in_1/E:content+2@4+1&1+0#0+0/F:cc_1/G:2_2/H:5=4@2=2|L-L%/I:4=2/J:11+8-3
-uw^z-iy+l=ax@2_2/A:1_0_2/B:1-0-3@1-2&4-2#3-1$1-2!1-0;0-1|iy/C:0+1+3/D:in_1/E:content+2@4+1&1+0#0+0/F:cc_1/G:2_2/H:5=4@2=2|L-L%/I:4=2/J:11+8-3
-z^iy-l+ax=n@3_1/A:1_0_2/B:1-0-3@1-2&4-2#3-1$1-2!1-0;0-1|iy/C:0+1+3/D:in_1/E:content+2@4+1&1+0#0+0/F:cc_1/G:2_2/H:5=4@2=2|L-L%/I:4=2/J:11+8-3
-iy^l-ax+n=d@1_3/A:1_0_3/B:0-1-3@2-1&5-1#4-1$1-1!1-0;0-0|ax/C:1+0+2/D:in_1/E:content+2@4+1&1+0#0+0/F:cc_1/G:2_2/H:5=4@2=2|L-L%/I:4=2/J:11+8-3
-l^ax-n+d=pau@2_2/A:1_0_3/B:0-1-3@2-1&5-1#4-1$1-1!1-0;0-0|ax/C:1+0+2/D:in_1/E:content+2@4+1&1+0#0+0/F:cc_1/G:2_2/H:5=4@2=2|L-L%/I:4=2/J:11+8-3
-ax^n-d+pau=ao@3_1/A:1_0_3/B:0-1-3@2-1&5-1#4-1$1-1!1-0;0-0|ax/C:1+0+2/D:in_1/E:content+2@4+1&1+0#0+0/F:cc_1/G:2_2/H:5=4@2=2|L-L%/I:4=2/J:11+8-3
-n^d-pau+ao=r@x_x/A:0_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:content_2/E:x+x@x+x&x+x#x+x/F:cc_1/G:5_4/H:x=x@1=3|0/I:4=2/J:11+8-3
-d^pau-ao+r=ao@1_2/A:0_1_3/B:1-0-2@1-1&1-4#1-2$1-3!0-2;0-2|ao/C:0+0+2/D:content_2/E:cc+1@1+2&1+1#0+1/F:content_3/G:5_4/H:4=2@3=1|L-L%/I:0=0/J:11+8-3
-pau^ao-r+ao=s@2_1/A:0_1_3/B:1-0-2@1-1&1-4#1-2$1-3!0-2;0-2|ao/C:0+0+2/D:content_2/E:cc+1@1+2&1+1#0+1/F:content_3/G:5_4/H:4=2@3=1|L-L%/I:0=0/J:11+8-3
-ao^r-ao+s=t@1_2/A:1_0_2/B:0-0-2@1-3&2-3#1-2$1-3!1-1;0-1|ao/C:1+1+5/D:cc_1/E:content+3@2+1&1+0#0+0/F:0_0/G:5_4/H:4=2@3=1|L-L%/I:0=0/J:11+8-3
-r^ao-s+t=r@2_1/A:1_0_2/B:0-0-2@1-3&2-3#1-2$1-3!1-1;0-1|ao/C:1+1+5/D:cc_1/E:content+3@2+1&1+0#0+0/F:0_0/G:5_4/H:4=2@3=1|L-L%/I:0=0/J:11+8-3
-ao^s-t+r=ey@1_5/A:0_0_2/B:1-1-5@2-2&3-2#1-1$1-2!2-0;0-1|ey/C:0+1+1/D:cc_1/E:content+3@2+1&1+0#0+0/F:0_0/G:5_4/H:4=2@3=1|L-L%/I:0=0/J:11+8-3
-s^t-r+ey=l@2_4/A:0_0_2/B:1-1-5@2-2&3-2#1-1$1-2!2-0;0-1|ey/C:0+1+1/D:cc_1/E:content+3@2+1&1+0#0+0/F:0_0/G:5_4/H:4=2@3=1|L-L%/I:0=0/J:11+8-3
-t^r-ey+l=y@3_3/A:0_0_2/B:1-1-5@2-2&3-2#1-1$1-2!2-0;0-1|ey/C:0+1+1/D:cc_1/E:content+3@2+1&1+0#0+0/F:0_0/G:5_4/H:4=2@3=1|L-L%/I:0=0/J:11+8-3
-r^ey-l+y=ax@4_2/A:0_0_2/B:1-1-5@2-2&3-2#1-1$1-2!2-0;0-1|ey/C:0+1+1/D:cc_1/E:content+3@2+1&1+0#0+0/F:0_0/G:5_4/H:4=2@3=1|L-L%/I:0=0/J:11+8-3
-ey^l-y+ax=pau@5_1/A:0_0_2/B:1-1-5@2-2&3-2#1-1$1-2!2-0;0-1|ey/C:0+1+1/D:cc_1/E:content+3@2+1&1+0#0+0/F:0_0/G:5_4/H:4=2@3=1|L-L%/I:0=0/J:11+8-3
-l^y-ax+pau=x@1_1/A:1_1_5/B:0-1-1@3-1&4-1#2-1$2-1!1-0;1-0|ax/C:0+0+0/D:cc_1/E:content+3@2+1&1+0#0+0/F:0_0/G:5_4/H:4=2@3=1|L-L%/I:0=0/J:11+8-3
-y^ax-pau+x=x@x_x/A:0_1_1/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:content_3/E:x+x@x+x&x+x#x+x/F:0_0/G:4_2/H:x=x@1=3|0/I:0=0/J:11+8-3
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice26.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice26.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice26.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice26.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,35 +0,0 @@
-x^x-pau+ae=n@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:0_0/E:x+x@x+x&x+x#x+x/F:cc_1/G:0_0/H:x=x@1=2|0/I:10=7/J:12+9-2
-x^pau-ae+n=d@1_3/A:0_0_0/B:1-0-3@1-1&1-10#1-7$1-3!0-1;0-3|ae/C:1+0+3/D:0_0/E:cc+1@1+7&1+4#0+3/F:wp_1/G:0_0/H:10=7@1=2|L-H%/I:2=2/J:12+9-2
-pau^ae-n+d=w@2_2/A:0_0_0/B:1-0-3@1-1&1-10#1-7$1-3!0-1;0-3|ae/C:1+0+3/D:0_0/E:cc+1@1+7&1+4#0+3/F:wp_1/G:0_0/H:10=7@1=2|L-H%/I:2=2/J:12+9-2
-ae^n-d+w=ah@3_1/A:0_0_0/B:1-0-3@1-1&1-10#1-7$1-3!0-1;0-3|ae/C:1+0+3/D:0_0/E:cc+1@1+7&1+4#0+3/F:wp_1/G:0_0/H:10=7@1=2|L-H%/I:2=2/J:12+9-2
-n^d-w+ah=t@1_3/A:1_0_3/B:1-0-3@1-1&2-9#1-6$1-3!1-1;0-2|ah/C:1+0+2/D:cc_1/E:wp+1@2+6&1+4#0+2/F:det_1/G:0_0/H:10=7@1=2|L-H%/I:2=2/J:12+9-2
-d^w-ah+t=ae@2_2/A:1_0_3/B:1-0-3@1-1&2-9#1-6$1-3!1-1;0-2|ah/C:1+0+2/D:cc_1/E:wp+1@2+6&1+4#0+2/F:det_1/G:0_0/H:10=7@1=2|L-H%/I:2=2/J:12+9-2
-w^ah-t+ae=n@3_1/A:1_0_3/B:1-0-3@1-1&2-9#1-6$1-3!1-1;0-2|ah/C:1+0+2/D:cc_1/E:wp+1@2+6&1+4#0+2/F:det_1/G:0_0/H:10=7@1=2|L-H%/I:2=2/J:12+9-2
-ah^t-ae+n=ih@1_2/A:1_0_3/B:1-0-2@1-1&3-8#2-5$1-3!1-1;0-1|ae/C:1+1+2/D:wp_1/E:det+1@3+5&1+4#0+1/F:content_3/G:0_0/H:10=7@1=2|L-H%/I:2=2/J:12+9-2
-t^ae-n+ih=g@2_1/A:1_0_3/B:1-0-2@1-1&3-8#2-5$1-3!1-1;0-1|ae/C:1+1+2/D:wp_1/E:det+1@3+5&1+4#0+1/F:content_3/G:0_0/H:10=7@1=2|L-H%/I:2=2/J:12+9-2
-ae^n-ih+g=n@1_2/A:1_0_2/B:1-1-2@1-3&4-7#3-4$1-2!1-3;0-6|ih/C:0+0+2/D:det_1/E:content+3@4+4&1+3#0+1/F:content_2/G:0_0/H:10=7@1=2|L-H%/I:2=2/J:12+9-2
-n^ih-g+n=er@2_1/A:1_0_2/B:1-1-2@1-3&4-7#3-4$1-2!1-3;0-6|ih/C:0+0+2/D:det_1/E:content+3@4+4&1+3#0+1/F:content_2/G:0_0/H:10=7@1=2|L-H%/I:2=2/J:12+9-2
-ih^g-n+er=ax@1_2/A:1_1_2/B:0-0-2@2-2&5-6#4-4$2-2!1-2;1-5|er/C:0+0+3/D:det_1/E:content+3@4+4&1+3#0+1/F:content_2/G:0_0/H:10=7@1=2|L-H%/I:2=2/J:12+9-2
-g^n-er+ax=n@2_1/A:1_1_2/B:0-0-2@2-2&5-6#4-4$2-2!1-2;1-5|er/C:0+0+3/D:det_1/E:content+3@4+4&1+3#0+1/F:content_2/G:0_0/H:10=7@1=2|L-H%/I:2=2/J:12+9-2
-n^er-ax+n=t@1_3/A:0_0_2/B:0-0-3@3-1&6-5#4-4$2-2!2-1;2-4|ax/C:1+0+3/D:det_1/E:content+3@4+4&1+3#0+1/F:content_2/G:0_0/H:10=7@1=2|L-H%/I:2=2/J:12+9-2
-er^ax-n+t=l@2_2/A:0_0_2/B:0-0-3@3-1&6-5#4-4$2-2!2-1;2-4|ax/C:1+0+3/D:det_1/E:content+3@4+4&1+3#0+1/F:content_2/G:0_0/H:10=7@1=2|L-H%/I:2=2/J:12+9-2
-ax^n-t+l=ih@3_1/A:0_0_2/B:0-0-3@3-1&6-5#4-4$2-2!2-1;2-4|ax/C:1+0+3/D:det_1/E:content+3@4+4&1+3#0+1/F:content_2/G:0_0/H:10=7@1=2|L-H%/I:2=2/J:12+9-2
-n^t-l+ih=t@1_3/A:0_0_3/B:1-0-3@1-2&7-4#4-3$2-2!3-2;3-3|ih/C:0+0+2/D:content_3/E:content+2@5+3&2+2#1+1/F:content_1/G:0_0/H:10=7@1=2|L-H%/I:2=2/J:12+9-2
-t^l-ih+t=ax@2_2/A:0_0_3/B:1-0-3@1-2&7-4#4-3$2-2!3-2;3-3|ih/C:0+0+2/D:content_3/E:content+2@5+3&2+2#1+1/F:content_1/G:0_0/H:10=7@1=2|L-H%/I:2=2/J:12+9-2
-l^ih-t+ax=l@3_1/A:0_0_3/B:1-0-3@1-2&7-4#4-3$2-2!3-2;3-3|ih/C:0+0+2/D:content_3/E:content+2@5+3&2+2#1+1/F:content_1/G:0_0/H:10=7@1=2|L-H%/I:2=2/J:12+9-2
-ih^t-ax+l=g@1_2/A:1_0_3/B:0-0-2@2-1&8-3#5-3$2-2!1-1;4-2|ax/C:1+0+3/D:content_3/E:content+2@5+3&2+2#1+1/F:content_1/G:0_0/H:10=7@1=2|L-H%/I:2=2/J:12+9-2
-t^ax-l+g=er@2_1/A:1_0_3/B:0-0-2@2-1&8-3#5-3$2-2!1-1;4-2|ax/C:1+0+3/D:content_3/E:content+2@5+3&2+2#1+1/F:content_1/G:0_0/H:10=7@1=2|L-H%/I:2=2/J:12+9-2
-ax^l-g+er=l@1_3/A:0_0_2/B:1-0-3@1-1&9-2#5-2$2-2!2-1;5-1|er/C:1+1+3/D:content_2/E:content+1@6+2&3+1#1+1/F:content_1/G:0_0/H:10=7@1=2|L-H%/I:2=2/J:12+9-2
-l^g-er+l=sh@2_2/A:0_0_2/B:1-0-3@1-1&9-2#5-2$2-2!2-1;5-1|er/C:1+1+3/D:content_2/E:content+1@6+2&3+1#1+1/F:content_1/G:0_0/H:10=7@1=2|L-H%/I:2=2/J:12+9-2
-g^er-l+sh=eh@3_1/A:0_0_2/B:1-0-3@1-1&9-2#5-2$2-2!2-1;5-1|er/C:1+1+3/D:content_2/E:content+1@6+2&3+1#1+1/F:content_1/G:0_0/H:10=7@1=2|L-H%/I:2=2/J:12+9-2
-er^l-sh+eh=l@1_3/A:1_0_3/B:1-1-3@1-1&10-1#6-1$2-1!1-0;6-0|eh/C:1+0+4/D:content_1/E:content+1@7+1&4+0#1+0/F:content_1/G:0_0/H:10=7@1=2|L-H%/I:2=2/J:12+9-2
-l^sh-eh+l=pau@2_2/A:1_0_3/B:1-1-3@1-1&10-1#6-1$2-1!1-0;6-0|eh/C:1+0+4/D:content_1/E:content+1@7+1&4+0#1+0/F:content_1/G:0_0/H:10=7@1=2|L-H%/I:2=2/J:12+9-2
-sh^eh-l+pau=th@3_1/A:1_0_3/B:1-1-3@1-1&10-1#6-1$2-1!1-0;6-0|eh/C:1+0+4/D:content_1/E:content+1@7+1&4+0#1+0/F:content_1/G:0_0/H:10=7@1=2|L-H%/I:2=2/J:12+9-2
-eh^l-pau+th=ih@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+4/D:content_1/E:x+x@x+x&x+x#x+x/F:content_1/G:10_7/H:x=x@1=2|0/I:2=2/J:12+9-2
-l^pau-th+ih=ng@1_4/A:1_1_3/B:1-0-4@1-1&1-2#1-2$1-2!0-1;0-1|ih/C:1+1+2/D:content_1/E:content+1@1+2&1+1#0+1/F:content_1/G:10_7/H:2=2@2=1|L-L%/I:0=0/J:12+9-2
-pau^th-ih+ng=k@2_3/A:1_1_3/B:1-0-4@1-1&1-2#1-2$1-2!0-1;0-1|ih/C:1+1+2/D:content_1/E:content+1@1+2&1+1#0+1/F:content_1/G:10_7/H:2=2@2=1|L-L%/I:0=0/J:12+9-2
-th^ih-ng+k=m@3_2/A:1_1_3/B:1-0-4@1-1&1-2#1-2$1-2!0-1;0-1|ih/C:1+1+2/D:content_1/E:content+1@1+2&1+1#0+1/F:content_1/G:10_7/H:2=2@2=1|L-L%/I:0=0/J:12+9-2
-ih^ng-k+m=iy@4_1/A:1_1_3/B:1-0-4@1-1&1-2#1-2$1-2!0-1;0-1|ih/C:1+1+2/D:content_1/E:content+1@1+2&1+1#0+1/F:content_1/G:10_7/H:2=2@2=1|L-L%/I:0=0/J:12+9-2
-ng^k-m+iy=pau@1_2/A:1_0_4/B:1-1-2@1-1&2-1#1-1$1-1!1-0;0-0|iy/C:0+0+0/D:content_1/E:content+1@2+1&2+0#1+0/F:0_0/G:10_7/H:2=2@2=1|L-L%/I:0=0/J:12+9-2
-k^m-iy+pau=x@2_1/A:1_0_4/B:1-1-2@1-1&2-1#1-1$1-1!1-0;0-0|iy/C:0+0+0/D:content_1/E:content+1@2+1&2+0#1+0/F:0_0/G:10_7/H:2=2@2=1|L-L%/I:0=0/J:12+9-2
-m^iy-pau+x=x@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:content_1/E:x+x@x+x&x+x#x+x/F:0_0/G:2_2/H:x=x@1=2|0/I:0=0/J:12+9-2
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice27.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice27.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice27.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice27.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,47 +0,0 @@
-x^x-pau+n=ow@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:0_0/E:x+x@x+x&x+x#x+x/F:det_1/G:0_0/H:x=x@1=2|0/I:8=6/J:19+14-2
-x^pau-n+ow=ih@1_2/A:0_0_0/B:1-0-2@1-1&1-8#1-5$1-4!0-1;0-1|ow/C:1+1+2/D:0_0/E:det+1@1+6&1+4#0+1/F:content_2/G:0_0/H:8=6@1=2|L-L%/I:11=8/J:19+14-2
-pau^n-ow+ih=t@2_1/A:0_0_0/B:1-0-2@1-1&1-8#1-5$1-4!0-1;0-1|ow/C:1+1+2/D:0_0/E:det+1@1+6&1+4#0+1/F:content_2/G:0_0/H:8=6@1=2|L-L%/I:11=8/J:19+14-2
-n^ow-ih+t=ax@1_2/A:1_0_2/B:1-1-2@1-2&2-7#1-4$1-3!1-2;0-2|ih/C:0+0+2/D:det_1/E:content+2@2+5&1+3#0+1/F:content_2/G:0_0/H:8=6@1=2|L-L%/I:11=8/J:19+14-2
-ow^ih-t+ax=l@2_1/A:1_0_2/B:1-1-2@1-2&2-7#1-4$1-3!1-2;0-2|ih/C:0+0+2/D:det_1/E:content+2@2+5&1+3#0+1/F:content_2/G:0_0/H:8=6@1=2|L-L%/I:11=8/J:19+14-2
-ih^t-ax+l=n@1_2/A:1_1_2/B:0-0-2@2-1&3-6#2-4$2-3!1-1;1-1|ax/C:1+1+3/D:det_1/E:content+2@2+5&1+3#0+1/F:content_2/G:0_0/H:8=6@1=2|L-L%/I:11=8/J:19+14-2
-t^ax-l+n=eh@2_1/A:1_1_2/B:0-0-2@2-1&3-6#2-4$2-3!1-1;1-1|ax/C:1+1+3/D:det_1/E:content+2@2+5&1+3#0+1/F:content_2/G:0_0/H:8=6@1=2|L-L%/I:11=8/J:19+14-2
-ax^l-n+eh=v@1_3/A:0_0_2/B:1-1-3@1-2&4-5#2-3$2-2!2-2;2-4|eh/C:0+0+1/D:content_2/E:content+2@3+4&2+2#1+1/F:content_1/G:0_0/H:8=6@1=2|L-L%/I:11=8/J:19+14-2
-l^n-eh+v=er@2_2/A:0_0_2/B:1-1-3@1-2&4-5#2-3$2-2!2-2;2-4|eh/C:0+0+1/D:content_2/E:content+2@3+4&2+2#1+1/F:content_1/G:0_0/H:8=6@1=2|L-L%/I:11=8/J:19+14-2
-n^eh-v+er=d@3_1/A:0_0_2/B:1-1-3@1-2&4-5#2-3$2-2!2-2;2-4|eh/C:0+0+1/D:content_2/E:content+2@3+4&2+2#1+1/F:content_1/G:0_0/H:8=6@1=2|L-L%/I:11=8/J:19+14-2
-eh^v-er+d=uw@1_1/A:1_1_3/B:0-0-1@2-1&5-4#3-3$3-2!1-1;1-3|er/C:1+0+2/D:content_2/E:content+2@3+4&2+2#1+1/F:content_1/G:0_0/H:8=6@1=2|L-L%/I:11=8/J:19+14-2
-v^er-d+uw=t@1_2/A:0_0_1/B:1-0-2@1-1&6-3#3-2$3-2!2-2;2-2|uw/C:0+0+2/D:content_2/E:content+1@4+3&3+1#1+2/F:to_1/G:0_0/H:8=6@1=2|L-L%/I:11=8/J:19+14-2
-er^d-uw+t=ax@2_1/A:0_0_1/B:1-0-2@1-1&6-3#3-2$3-2!2-2;2-2|uw/C:0+0+2/D:content_2/E:content+1@4+3&3+1#1+2/F:to_1/G:0_0/H:8=6@1=2|L-L%/I:11=8/J:19+14-2
-d^uw-t+ax=ae@1_2/A:1_0_2/B:0-0-2@1-1&7-2#4-2$3-2!1-1;3-1|ax/C:1+1+3/D:content_1/E:to+1@5+2&4+1#1+1/F:content_1/G:0_0/H:8=6@1=2|L-L%/I:11=8/J:19+14-2
-uw^t-ax+ae=s@2_1/A:1_0_2/B:0-0-2@1-1&7-2#4-2$3-2!1-1;3-1|ax/C:1+1+3/D:content_1/E:to+1@5+2&4+1#1+1/F:content_1/G:0_0/H:8=6@1=2|L-L%/I:11=8/J:19+14-2
-t^ax-ae+s=k@1_3/A:0_0_2/B:1-1-3@1-1&8-1#4-1$3-1!2-0;4-0|ae/C:0+0+3/D:to_1/E:content+1@6+1&4+0#2+0/F:content_2/G:0_0/H:8=6@1=2|L-L%/I:11=8/J:19+14-2
-ax^ae-s+k=pau@2_2/A:0_0_2/B:1-1-3@1-1&8-1#4-1$3-1!2-0;4-0|ae/C:0+0+3/D:to_1/E:content+1@6+1&4+0#2+0/F:content_2/G:0_0/H:8=6@1=2|L-L%/I:11=8/J:19+14-2
-ae^s-k+pau=p@3_1/A:0_0_2/B:1-1-3@1-1&8-1#4-1$3-1!2-0;4-0|ae/C:0+0+3/D:to_1/E:content+1@6+1&4+0#2+0/F:content_2/G:0_0/H:8=6@1=2|L-L%/I:11=8/J:19+14-2
-s^k-pau+p=er@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:content_2/G:8_6/H:x=x@1=2|0/I:11=8/J:19+14-2
-k^pau-p+er=hh@1_3/A:1_1_3/B:0-0-3@1-2&1-11#1-10$1-6!0-1;0-1|er/C:1+1+3/D:content_1/E:content+2@1+8&1+6#0+1/F:content_1/G:8_6/H:11=8@2=1|L-L%/I:0=0/J:19+14-2
-pau^p-er+hh=ae@2_2/A:1_1_3/B:0-0-3@1-2&1-11#1-10$1-6!0-1;0-1|er/C:1+1+3/D:content_1/E:content+2@1+8&1+6#0+1/F:content_1/G:8_6/H:11=8@2=1|L-L%/I:0=0/J:19+14-2
-p^er-hh+ae=p@3_1/A:1_1_3/B:0-0-3@1-2&1-11#1-10$1-6!0-1;0-1|er/C:1+1+3/D:content_1/E:content+2@1+8&1+6#0+1/F:content_1/G:8_6/H:11=8@2=1|L-L%/I:0=0/J:19+14-2
-er^hh-ae+p=s@1_3/A:0_0_3/B:1-1-3@2-1&2-10#1-9$1-5!0-1;0-1|ae/C:1+1+1/D:content_1/E:content+2@1+8&1+6#0+1/F:content_1/G:8_6/H:11=8@2=1|L-L%/I:0=0/J:19+14-2
-hh^ae-p+s=ay@2_2/A:0_0_3/B:1-1-3@2-1&2-10#1-9$1-5!0-1;0-1|ae/C:1+1+1/D:content_1/E:content+2@1+8&1+6#0+1/F:content_1/G:8_6/H:11=8@2=1|L-L%/I:0=0/J:19+14-2
-ae^p-s+ay=sh@3_1/A:0_0_3/B:1-1-3@2-1&2-10#1-9$1-5!0-1;0-1|ae/C:1+1+1/D:content_1/E:content+2@1+8&1+6#0+1/F:content_1/G:8_6/H:11=8@2=1|L-L%/I:0=0/J:19+14-2
-p^s-ay+sh=ae@1_1/A:1_1_3/B:1-1-1@1-1&3-9#2-8$2-4!1-1;1-4|ay/C:1+0+3/D:content_2/E:content+1@2+7&2+5#1+1/F:content_1/G:8_6/H:11=8@2=1|L-L%/I:0=0/J:19+14-2
-s^ay-sh+ae=l@1_3/A:1_1_1/B:1-0-3@1-1&4-8#3-7$3-4!1-1;1-3|ae/C:1+0+2/D:content_1/E:content+1@3+6&3+4#1+1/F:content_1/G:8_6/H:11=8@2=1|L-L%/I:0=0/J:19+14-2
-ay^sh-ae+l=s@2_2/A:1_1_1/B:1-0-3@1-1&4-8#3-7$3-4!1-1;1-3|ae/C:1+0+2/D:content_1/E:content+1@3+6&3+4#1+1/F:content_1/G:8_6/H:11=8@2=1|L-L%/I:0=0/J:19+14-2
-sh^ae-l+s=iy@3_1/A:1_1_1/B:1-0-3@1-1&4-8#3-7$3-4!1-1;1-3|ae/C:1+0+2/D:content_1/E:content+1@3+6&3+4#1+1/F:content_1/G:8_6/H:11=8@2=1|L-L%/I:0=0/J:19+14-2
-ae^l-s+iy=ih@1_2/A:1_0_3/B:1-0-2@1-1&5-7#4-6$3-4!1-1;2-2|iy/C:1+0+2/D:content_1/E:content+1@4+5&4+3#1+1/F:content_1/G:8_6/H:11=8@2=1|L-L%/I:0=0/J:19+14-2
-l^s-iy+ih=t@2_1/A:1_0_3/B:1-0-2@1-1&5-7#4-6$3-4!1-1;2-2|iy/C:1+0+2/D:content_1/E:content+1@4+5&4+3#1+1/F:content_1/G:8_6/H:11=8@2=1|L-L%/I:0=0/J:19+14-2
-s^iy-ih+t=r@1_2/A:1_0_2/B:1-0-2@1-1&6-6#5-5$3-4!1-1;3-1|ih/C:1+1+3/D:content_1/E:content+1@5+4&5+2#1+1/F:content_2/G:8_6/H:11=8@2=1|L-L%/I:0=0/J:19+14-2
-iy^ih-t+r=ih@2_1/A:1_0_2/B:1-0-2@1-1&6-6#5-5$3-4!1-1;3-1|ih/C:1+1+3/D:content_1/E:content+1@5+4&5+2#1+1/F:content_2/G:8_6/H:11=8@2=1|L-L%/I:0=0/J:19+14-2
-ih^t-r+ih=t@1_3/A:1_0_2/B:1-1-3@1-2&7-5#6-4$3-3!1-2;4-3|ih/C:0+0+2/D:content_1/E:content+2@6+3&6+1#1+2/F:in_1/G:8_6/H:11=8@2=1|L-L%/I:0=0/J:19+14-2
-t^r-ih+t=ax@2_2/A:1_0_2/B:1-1-3@1-2&7-5#6-4$3-3!1-2;4-3|ih/C:0+0+2/D:content_1/E:content+2@6+3&6+1#1+2/F:in_1/G:8_6/H:11=8@2=1|L-L%/I:0=0/J:19+14-2
-r^ih-t+ax=n@3_1/A:1_0_2/B:1-1-3@1-2&7-5#6-4$3-3!1-2;4-3|ih/C:0+0+2/D:content_1/E:content+2@6+3&6+1#1+2/F:in_1/G:8_6/H:11=8@2=1|L-L%/I:0=0/J:19+14-2
-ih^t-ax+n=ah@1_2/A:1_1_3/B:0-0-2@2-1&8-4#7-4$4-3!1-1;1-2|ax/C:1+0+2/D:content_1/E:content+2@6+3&6+1#1+2/F:in_1/G:8_6/H:11=8@2=1|L-L%/I:0=0/J:19+14-2
-t^ax-n+ah=p@2_1/A:1_1_3/B:0-0-2@2-1&8-4#7-4$4-3!1-1;1-2|ax/C:1+0+2/D:content_1/E:content+2@6+3&6+1#1+2/F:in_1/G:8_6/H:11=8@2=1|L-L%/I:0=0/J:19+14-2
-ax^n-ah+p=s@1_2/A:0_0_2/B:1-0-2@1-1&9-3#7-3$4-3!2-1;2-1|ah/C:1+1+4/D:content_2/E:in+1@7+2&7+1#1+1/F:content_2/G:8_6/H:11=8@2=1|L-L%/I:0=0/J:19+14-2
-n^ah-p+s=ah@2_1/A:0_0_2/B:1-0-2@1-1&9-3#7-3$4-3!2-1;2-1|ah/C:1+1+4/D:content_2/E:in+1@7+2&7+1#1+1/F:content_2/G:8_6/H:11=8@2=1|L-L%/I:0=0/J:19+14-2
-ah^p-s+ah=m@1_4/A:1_0_2/B:1-1-4@1-2&10-2#8-2$4-2!1-1;3-1|ah/C:1+1+2/D:in_1/E:content+2@8+1&7+0#2+0/F:0_0/G:8_6/H:11=8@2=1|L-L%/I:0=0/J:19+14-2
-p^s-ah+m=w@2_3/A:1_0_2/B:1-1-4@1-2&10-2#8-2$4-2!1-1;3-1|ah/C:1+1+2/D:in_1/E:content+2@8+1&7+0#2+0/F:0_0/G:8_6/H:11=8@2=1|L-L%/I:0=0/J:19+14-2
-s^ah-m+w=eh@3_2/A:1_0_2/B:1-1-4@1-2&10-2#8-2$4-2!1-1;3-1|ah/C:1+1+2/D:in_1/E:content+2@8+1&7+0#2+0/F:0_0/G:8_6/H:11=8@2=1|L-L%/I:0=0/J:19+14-2
-ah^m-w+eh=r@4_1/A:1_0_2/B:1-1-4@1-2&10-2#8-2$4-2!1-1;3-1|ah/C:1+1+2/D:in_1/E:content+2@8+1&7+0#2+0/F:0_0/G:8_6/H:11=8@2=1|L-L%/I:0=0/J:19+14-2
-m^w-eh+r=pau@1_2/A:1_1_4/B:1-1-2@2-1&11-1#9-1$5-1!1-0;1-0|eh/C:0+0+0/D:in_1/E:content+2@8+1&7+0#2+0/F:0_0/G:8_6/H:11=8@2=1|L-L%/I:0=0/J:19+14-2
-w^eh-r+pau=x@2_1/A:1_1_4/B:1-1-2@2-1&11-1#9-1$5-1!1-0;1-0|eh/C:0+0+0/D:in_1/E:content+2@8+1&7+0#2+0/F:0_0/G:8_6/H:11=8@2=1|L-L%/I:0=0/J:19+14-2
-eh^r-pau+x=x@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:content_2/E:x+x@x+x&x+x#x+x/F:0_0/G:11_8/H:x=x@1=2|0/I:0=0/J:19+14-2
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice28.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice28.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice28.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice28.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,44 +0,0 @@
-x^x-pau+dh=eh@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+3/D:0_0/E:x+x@x+x&x+x#x+x/F:content_1/G:0_0/H:x=x@1=2|0/I:7=6/J:17+12-2
-x^pau-dh+eh=r@1_3/A:0_0_0/B:1-1-3@1-1&1-7#1-5$1-3!0-1;0-2|eh/C:1+0+3/D:0_0/E:content+1@1+6&1+3#0+2/F:aux_1/G:0_0/H:7=6@1=2|L-L%/I:10=6/J:17+12-2
-pau^dh-eh+r=w@2_2/A:0_0_0/B:1-1-3@1-1&1-7#1-5$1-3!0-1;0-2|eh/C:1+0+3/D:0_0/E:content+1@1+6&1+3#0+2/F:aux_1/G:0_0/H:7=6@1=2|L-L%/I:10=6/J:17+12-2
-dh^eh-r+w=aa@3_1/A:0_0_0/B:1-1-3@1-1&1-7#1-5$1-3!0-1;0-2|eh/C:1+0+3/D:0_0/E:content+1@1+6&1+3#0+2/F:aux_1/G:0_0/H:7=6@1=2|L-L%/I:10=6/J:17+12-2
-eh^r-w+aa=z@1_3/A:1_1_3/B:1-0-3@1-1&2-6#1-4$1-3!1-1;1-1|aa/C:1+1+3/D:content_1/E:aux+1@2+5&2+3#1+1/F:content_2/G:0_0/H:7=6@1=2|L-L%/I:10=6/J:17+12-2
-r^w-aa+z=n@2_2/A:1_1_3/B:1-0-3@1-1&2-6#1-4$1-3!1-1;1-1|aa/C:1+1+3/D:content_1/E:aux+1@2+5&2+3#1+1/F:content_2/G:0_0/H:7=6@1=2|L-L%/I:10=6/J:17+12-2
-w^aa-z+n=ah@3_1/A:1_1_3/B:1-0-3@1-1&2-6#1-4$1-3!1-1;1-1|aa/C:1+1+3/D:content_1/E:aux+1@2+5&2+3#1+1/F:content_2/G:0_0/H:7=6@1=2|L-L%/I:10=6/J:17+12-2
-aa^z-n+ah=th@1_3/A:1_0_3/B:1-1-3@1-2&3-5#2-3$1-2!1-2;2-4|ah/C:0+0+2/D:aux_1/E:content+2@3+4&2+2#2+1/F:content_1/G:0_0/H:7=6@1=2|L-L%/I:10=6/J:17+12-2
-z^n-ah+th=ih@2_2/A:1_0_3/B:1-1-3@1-2&3-5#2-3$1-2!1-2;2-4|ah/C:0+0+2/D:aux_1/E:content+2@3+4&2+2#2+1/F:content_1/G:0_0/H:7=6@1=2|L-L%/I:10=6/J:17+12-2
-n^ah-th+ih=ng@3_1/A:1_0_3/B:1-1-3@1-2&3-5#2-3$1-2!1-2;2-4|ah/C:0+0+2/D:aux_1/E:content+2@3+4&2+2#2+1/F:content_1/G:0_0/H:7=6@1=2|L-L%/I:10=6/J:17+12-2
-ah^th-ih+ng=eh@1_2/A:1_1_3/B:0-0-2@2-1&4-4#3-3$2-2!1-1;1-3|ih/C:1+0+3/D:aux_1/E:content+2@3+4&2+2#2+1/F:content_1/G:0_0/H:7=6@1=2|L-L%/I:10=6/J:17+12-2
-th^ih-ng+eh=l@2_1/A:1_1_3/B:0-0-2@2-1&4-4#3-3$2-2!1-1;1-3|ih/C:1+0+3/D:aux_1/E:content+2@3+4&2+2#2+1/F:content_1/G:0_0/H:7=6@1=2|L-L%/I:10=6/J:17+12-2
-ih^ng-eh+l=s@1_3/A:0_0_2/B:1-0-3@1-1&5-3#3-2$2-2!2-2;2-2|eh/C:0+0+2/D:content_2/E:content+1@4+3&3+1#1+2/F:to_1/G:0_0/H:7=6@1=2|L-L%/I:10=6/J:17+12-2
-ng^eh-l+s=t@2_2/A:0_0_2/B:1-0-3@1-1&5-3#3-2$2-2!2-2;2-2|eh/C:0+0+2/D:content_2/E:content+1@4+3&3+1#1+2/F:to_1/G:0_0/H:7=6@1=2|L-L%/I:10=6/J:17+12-2
-eh^l-s+t=ax@3_1/A:0_0_2/B:1-0-3@1-1&5-3#3-2$2-2!2-2;2-2|eh/C:0+0+2/D:content_2/E:content+1@4+3&3+1#1+2/F:to_1/G:0_0/H:7=6@1=2|L-L%/I:10=6/J:17+12-2
-l^s-t+ax=d@1_2/A:1_0_3/B:0-0-2@1-1&6-2#4-2$2-2!1-1;3-1|ax/C:1+1+2/D:content_1/E:to+1@5+2&4+1#1+1/F:content_1/G:0_0/H:7=6@1=2|L-L%/I:10=6/J:17+12-2
-s^t-ax+d=uw@2_1/A:1_0_3/B:0-0-2@1-1&6-2#4-2$2-2!1-1;3-1|ax/C:1+1+2/D:content_1/E:to+1@5+2&4+1#1+1/F:content_1/G:0_0/H:7=6@1=2|L-L%/I:10=6/J:17+12-2
-t^ax-d+uw=pau@1_2/A:0_0_2/B:1-1-2@1-1&7-1#4-1$2-1!2-0;4-0|uw/C:1+0+2/D:to_1/E:content+1@6+1&4+0#2+0/F:content_1/G:0_0/H:7=6@1=2|L-L%/I:10=6/J:17+12-2
-ax^d-uw+pau=s@2_1/A:0_0_2/B:1-1-2@1-1&7-1#4-1$2-1!2-0;4-0|uw/C:1+0+2/D:to_1/E:content+1@6+1&4+0#2+0/F:content_1/G:0_0/H:7=6@1=2|L-L%/I:10=6/J:17+12-2
-d^uw-pau+s=ow@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:content_1/E:x+x@x+x&x+x#x+x/F:content_1/G:7_6/H:x=x@1=2|0/I:10=6/J:17+12-2
-uw^pau-s+ow=ae@1_2/A:1_1_2/B:1-0-2@1-1&1-10#1-6$1-4!0-1;0-1|ow/C:1+1+2/D:content_1/E:content+1@1+6&1+5#0+1/F:content_2/G:7_6/H:10=6@2=1|L-L%/I:0=0/J:17+12-2
-pau^s-ow+ae=l@2_1/A:1_1_2/B:1-0-2@1-1&1-10#1-6$1-4!0-1;0-1|ow/C:1+1+2/D:content_1/E:content+1@1+6&1+5#0+1/F:content_2/G:7_6/H:10=6@2=1|L-L%/I:0=0/J:17+12-2
-s^ow-ae+l=ax@1_2/A:1_0_2/B:1-1-2@1-2&2-9#1-5$1-3!1-2;0-5|ae/C:0+0+2/D:content_1/E:content+2@2+5&2+4#1+1/F:content_1/G:7_6/H:10=6@2=1|L-L%/I:0=0/J:17+12-2
-ow^ae-l+ax=s@2_1/A:1_0_2/B:1-1-2@1-2&2-9#1-5$1-3!1-2;0-5|ae/C:0+0+2/D:content_1/E:content+2@2+5&2+4#1+1/F:content_1/G:7_6/H:10=6@2=1|L-L%/I:0=0/J:17+12-2
-ae^l-ax+s=s@1_2/A:1_1_2/B:0-0-2@2-1&3-8#2-5$2-3!1-1;1-4|ax/C:1+0+3/D:content_1/E:content+2@2+5&2+4#1+1/F:content_1/G:7_6/H:10=6@2=1|L-L%/I:0=0/J:17+12-2
-l^ax-s+s=uw@2_1/A:1_1_2/B:0-0-2@2-1&3-8#2-5$2-3!1-1;1-4|ax/C:1+0+3/D:content_1/E:content+2@2+5&2+4#1+1/F:content_1/G:7_6/H:10=6@2=1|L-L%/I:0=0/J:17+12-2
-ax^s-s+uw=n@1_3/A:0_0_2/B:1-0-3@1-1&4-7#2-4$2-3!2-2;2-3|uw/C:0+0+3/D:content_2/E:content+1@3+4&3+3#1+1/F:content_2/G:7_6/H:10=6@2=1|L-L%/I:0=0/J:17+12-2
-s^s-uw+n=b@2_2/A:0_0_2/B:1-0-3@1-1&4-7#2-4$2-3!2-2;2-3|uw/C:0+0+3/D:content_2/E:content+1@3+4&3+3#1+1/F:content_2/G:7_6/H:10=6@2=1|L-L%/I:0=0/J:17+12-2
-s^uw-n+b=ih@3_1/A:0_0_2/B:1-0-3@1-1&4-7#2-4$2-3!2-2;2-3|uw/C:0+0+3/D:content_2/E:content+1@3+4&3+3#1+1/F:content_2/G:7_6/H:10=6@2=1|L-L%/I:0=0/J:17+12-2
-uw^n-b+ih=g@1_3/A:1_0_3/B:0-0-3@1-2&5-6#3-4$2-3!1-1;3-2|ih/C:1+0+2/D:content_1/E:content+2@4+3&4+2#1+1/F:content_2/G:7_6/H:10=6@2=1|L-L%/I:0=0/J:17+12-2
-n^b-ih+g=ae@2_2/A:1_0_3/B:0-0-3@1-2&5-6#3-4$2-3!1-1;3-2|ih/C:1+0+2/D:content_1/E:content+2@4+3&4+2#1+1/F:content_2/G:7_6/H:10=6@2=1|L-L%/I:0=0/J:17+12-2
-b^ih-g+ae=n@3_1/A:1_0_3/B:0-0-3@1-2&5-6#3-4$2-3!1-1;3-2|ih/C:1+0+2/D:content_1/E:content+2@4+3&4+2#1+1/F:content_2/G:7_6/H:10=6@2=1|L-L%/I:0=0/J:17+12-2
-ih^g-ae+n=t@1_2/A:0_0_3/B:1-0-2@2-1&6-5#3-3$2-3!2-1;4-1|ae/C:1+1+3/D:content_1/E:content+2@4+3&4+2#1+1/F:content_2/G:7_6/H:10=6@2=1|L-L%/I:0=0/J:17+12-2
-g^ae-n+t=ao@2_1/A:0_0_3/B:1-0-2@2-1&6-5#3-3$2-3!2-1;4-1|ae/C:1+1+3/D:content_1/E:content+2@4+3&4+2#1+1/F:content_2/G:7_6/H:10=6@2=1|L-L%/I:0=0/J:17+12-2
-ae^n-t+ao=k@1_3/A:1_0_2/B:1-1-3@1-2&7-4#4-2$2-2!1-3;5-3|ao/C:0+0+2/D:content_2/E:content+2@5+2&5+1#1+1/F:content_2/G:7_6/H:10=6@2=1|L-L%/I:0=0/J:17+12-2
-n^t-ao+k=ih@2_2/A:1_0_2/B:1-1-3@1-2&7-4#4-2$2-2!1-3;5-3|ao/C:0+0+2/D:content_2/E:content+2@5+2&5+1#1+1/F:content_2/G:7_6/H:10=6@2=1|L-L%/I:0=0/J:17+12-2
-t^ao-k+ih=ng@3_1/A:1_0_2/B:1-1-3@1-2&7-4#4-2$2-2!1-3;5-3|ao/C:0+0+2/D:content_2/E:content+2@5+2&5+1#1+1/F:content_2/G:7_6/H:10=6@2=1|L-L%/I:0=0/J:17+12-2
-ao^k-ih+ng=ax@1_2/A:1_1_3/B:0-0-2@2-1&8-3#5-2$3-2!1-2;1-2|ih/C:0+0+2/D:content_2/E:content+2@5+2&5+1#1+1/F:content_2/G:7_6/H:10=6@2=1|L-L%/I:0=0/J:17+12-2
-k^ih-ng+ax=g@2_1/A:1_1_3/B:0-0-2@2-1&8-3#5-2$3-2!1-2;1-2|ih/C:0+0+2/D:content_2/E:content+2@5+2&5+1#1+1/F:content_2/G:7_6/H:10=6@2=1|L-L%/I:0=0/J:17+12-2
-ih^ng-ax+g=eh@1_2/A:0_0_2/B:0-0-2@1-2&9-2#5-2$3-2!2-1;2-1|ax/C:1+1+2/D:content_2/E:content+2@6+1&6+0#1+0/F:0_0/G:7_6/H:10=6@2=1|L-L%/I:0=0/J:17+12-2
-ng^ax-g+eh=n@2_1/A:0_0_2/B:0-0-2@1-2&9-2#5-2$3-2!2-1;2-1|ax/C:1+1+2/D:content_2/E:content+2@6+1&6+0#1+0/F:0_0/G:7_6/H:10=6@2=1|L-L%/I:0=0/J:17+12-2
-ax^g-eh+n=pau@1_2/A:0_0_2/B:1-1-2@2-1&10-1#5-1$3-1!3-0;3-0|eh/C:0+0+0/D:content_2/E:content+2@6+1&6+0#1+0/F:0_0/G:7_6/H:10=6@2=1|L-L%/I:0=0/J:17+12-2
-g^eh-n+pau=x@2_1/A:0_0_2/B:1-1-2@2-1&10-1#5-1$3-1!3-0;3-0|eh/C:0+0+0/D:content_2/E:content+2@6+1&6+0#1+0/F:0_0/G:7_6/H:10=6@2=1|L-L%/I:0=0/J:17+12-2
-eh^n-pau+x=x@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:content_2/E:x+x@x+x&x+x#x+x/F:0_0/G:10_6/H:x=x@1=2|0/I:0=0/J:17+12-2
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice29.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice29.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice29.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice29.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,33 +0,0 @@
-x^x-pau+d=ih@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+3/D:0_0/E:x+x@x+x&x+x#x+x/F:content_2/G:0_0/H:x=x@1=2|0/I:9=7/J:12+10-2
-x^pau-d+ih=n@1_3/A:0_0_0/B:0-0-3@1-2&1-9#1-7$1-4!0-1;0-1|ih/C:1+1+2/D:0_0/E:content+2@1+7&1+5#0+1/F:content_1/G:0_0/H:9=7@1=2|L-H%/I:3=3/J:12+10-2
-pau^d-ih+n=aa@2_2/A:0_0_0/B:0-0-3@1-2&1-9#1-7$1-4!0-1;0-1|ih/C:1+1+2/D:0_0/E:content+2@1+7&1+5#0+1/F:content_1/G:0_0/H:9=7@1=2|L-H%/I:3=3/J:12+10-2
-d^ih-n+aa=l@3_1/A:0_0_0/B:0-0-3@1-2&1-9#1-7$1-4!0-1;0-1|ih/C:1+1+2/D:0_0/E:content+2@1+7&1+5#0+1/F:content_1/G:0_0/H:9=7@1=2|L-H%/I:3=3/J:12+10-2
-ih^n-aa+l=m@1_2/A:0_0_3/B:1-1-2@2-1&2-8#1-6$1-3!0-1;0-3|aa/C:1+0+3/D:0_0/E:content+2@1+7&1+5#0+1/F:content_1/G:0_0/H:9=7@1=2|L-H%/I:3=3/J:12+10-2
-n^aa-l+m=ih@2_1/A:0_0_3/B:1-1-2@2-1&2-8#1-6$1-3!0-1;0-3|aa/C:1+0+3/D:0_0/E:content+2@1+7&1+5#0+1/F:content_1/G:0_0/H:9=7@1=2|L-H%/I:3=3/J:12+10-2
-aa^l-m+ih=s@1_3/A:1_1_2/B:1-0-3@1-1&3-7#2-5$2-3!1-1;1-2|ih/C:1+0+2/D:content_2/E:content+1@2+6&2+4#1+1/F:content_1/G:0_0/H:9=7@1=2|L-H%/I:3=3/J:12+10-2
-l^m-ih+s=m@2_2/A:1_1_2/B:1-0-3@1-1&3-7#2-5$2-3!1-1;1-2|ih/C:1+0+2/D:content_2/E:content+1@2+6&2+4#1+1/F:content_1/G:0_0/H:9=7@1=2|L-H%/I:3=3/J:12+10-2
-m^ih-s+m=iy@3_1/A:1_1_2/B:1-0-3@1-1&3-7#2-5$2-3!1-1;1-2|ih/C:1+0+2/D:content_2/E:content+1@2+6&2+4#1+1/F:content_1/G:0_0/H:9=7@1=2|L-H%/I:3=3/J:12+10-2
-ih^s-m+iy=v@1_2/A:1_0_3/B:1-0-2@1-1&4-6#3-4$2-3!1-1;2-1|iy/C:1+1+3/D:content_1/E:content+1@3+5&3+3#1+1/F:content_2/G:0_0/H:9=7@1=2|L-H%/I:3=3/J:12+10-2
-s^m-iy+v=eh@2_1/A:1_0_3/B:1-0-2@1-1&4-6#3-4$2-3!1-1;2-1|iy/C:1+1+3/D:content_1/E:content+1@3+5&3+3#1+1/F:content_2/G:0_0/H:9=7@1=2|L-H%/I:3=3/J:12+10-2
-m^iy-v+eh=r@1_3/A:1_0_2/B:1-1-3@1-2&5-5#4-3$2-2!1-2;3-4|eh/C:0+0+1/D:content_1/E:content+2@4+4&4+2#1+1/F:content_1/G:0_0/H:9=7@1=2|L-H%/I:3=3/J:12+10-2
-iy^v-eh+r=iy@2_2/A:1_0_2/B:1-1-3@1-2&5-5#4-3$2-2!1-2;3-4|eh/C:0+0+1/D:content_1/E:content+2@4+4&4+2#1+1/F:content_1/G:0_0/H:9=7@1=2|L-H%/I:3=3/J:12+10-2
-v^eh-r+iy=m@3_1/A:1_0_2/B:1-1-3@1-2&5-5#4-3$2-2!1-2;3-4|eh/C:0+0+1/D:content_1/E:content+2@4+4&4+2#1+1/F:content_1/G:0_0/H:9=7@1=2|L-H%/I:3=3/J:12+10-2
-eh^r-iy+m=ah@1_1/A:1_1_3/B:0-0-1@2-1&6-4#5-3$3-2!1-1;1-3|iy/C:1+0+3/D:content_1/E:content+2@4+4&4+2#1+1/F:content_1/G:0_0/H:9=7@1=2|L-H%/I:3=3/J:12+10-2
-r^iy-m+ah=ch@1_3/A:0_0_1/B:1-0-3@1-1&7-3#5-2$3-2!2-2;2-2|ah/C:0+0+2/D:content_2/E:content+1@5+3&5+1#1+2/F:to_1/G:0_0/H:9=7@1=2|L-H%/I:3=3/J:12+10-2
-iy^m-ah+ch=t@2_2/A:0_0_1/B:1-0-3@1-1&7-3#5-2$3-2!2-2;2-2|ah/C:0+0+2/D:content_2/E:content+1@5+3&5+1#1+2/F:to_1/G:0_0/H:9=7@1=2|L-H%/I:3=3/J:12+10-2
-m^ah-ch+t=ax@3_1/A:0_0_1/B:1-0-3@1-1&7-3#5-2$3-2!2-2;2-2|ah/C:0+0+2/D:content_2/E:content+1@5+3&5+1#1+2/F:to_1/G:0_0/H:9=7@1=2|L-H%/I:3=3/J:12+10-2
-ah^ch-t+ax=n@1_2/A:1_0_3/B:0-0-2@1-1&8-2#6-2$3-2!1-1;3-1|ax/C:1+1+3/D:content_1/E:to+1@6+2&6+1#1+1/F:content_1/G:0_0/H:9=7@1=2|L-H%/I:3=3/J:12+10-2
-ch^t-ax+n=ay@2_1/A:1_0_3/B:0-0-2@1-1&8-2#6-2$3-2!1-1;3-1|ax/C:1+1+3/D:content_1/E:to+1@6+2&6+1#1+1/F:content_1/G:0_0/H:9=7@1=2|L-H%/I:3=3/J:12+10-2
-t^ax-n+ay=t@1_3/A:0_0_2/B:1-1-3@1-1&9-1#6-1$3-1!2-0;4-0|ay/C:1+0+1/D:to_1/E:content+1@7+1&6+0#2+0/F:content_1/G:0_0/H:9=7@1=2|L-H%/I:3=3/J:12+10-2
-ax^n-ay+t=pau@2_2/A:0_0_2/B:1-1-3@1-1&9-1#6-1$3-1!2-0;4-0|ay/C:1+0+1/D:to_1/E:content+1@7+1&6+0#2+0/F:content_1/G:0_0/H:9=7@1=2|L-H%/I:3=3/J:12+10-2
-n^ay-t+pau=ay@3_1/A:0_0_2/B:1-1-3@1-1&9-1#6-1$3-1!2-0;4-0|ay/C:1+0+1/D:to_1/E:content+1@7+1&6+0#2+0/F:content_1/G:0_0/H:9=7@1=2|L-H%/I:3=3/J:12+10-2
-ay^t-pau+ay=sh@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+1/D:content_1/E:x+x@x+x&x+x#x+x/F:content_1/G:9_7/H:x=x@1=2|0/I:3=3/J:12+10-2
-t^pau-ay+sh=uh@1_1/A:1_1_3/B:1-0-1@1-1&1-3#1-3$1-2!0-1;0-2|ay/C:1+0+3/D:content_1/E:content+1@1+3&1+1#0+2/F:md_1/G:9_7/H:3=3@2=1|L-L%/I:0=0/J:12+10-2
-pau^ay-sh+uh=d@1_3/A:1_0_1/B:1-0-3@1-1&2-2#1-2$1-2!1-1;0-1|uh/C:1+1+4/D:content_1/E:md+1@2+2&2+1#1+1/F:content_1/G:9_7/H:3=3@2=1|L-L%/I:0=0/J:12+10-2
-ay^sh-uh+d=th@2_2/A:1_0_1/B:1-0-3@1-1&2-2#1-2$1-2!1-1;0-1|uh/C:1+1+4/D:content_1/E:md+1@2+2&2+1#1+1/F:content_1/G:9_7/H:3=3@2=1|L-L%/I:0=0/J:12+10-2
-sh^uh-d+th=ih@3_1/A:1_0_1/B:1-0-3@1-1&2-2#1-2$1-2!1-1;0-1|uh/C:1+1+4/D:content_1/E:md+1@2+2&2+1#1+1/F:content_1/G:9_7/H:3=3@2=1|L-L%/I:0=0/J:12+10-2
-uh^d-th+ih=ng@1_4/A:1_0_3/B:1-1-4@1-1&3-1#2-1$1-1!1-0;0-0|ih/C:0+0+0/D:md_1/E:content+1@3+1&2+0#2+0/F:0_0/G:9_7/H:3=3@2=1|L-L%/I:0=0/J:12+10-2
-d^th-ih+ng=k@2_3/A:1_0_3/B:1-1-4@1-1&3-1#2-1$1-1!1-0;0-0|ih/C:0+0+0/D:md_1/E:content+1@3+1&2+0#2+0/F:0_0/G:9_7/H:3=3@2=1|L-L%/I:0=0/J:12+10-2
-th^ih-ng+k=pau@3_2/A:1_0_3/B:1-1-4@1-1&3-1#2-1$1-1!1-0;0-0|ih/C:0+0+0/D:md_1/E:content+1@3+1&2+0#2+0/F:0_0/G:9_7/H:3=3@2=1|L-L%/I:0=0/J:12+10-2
-ih^ng-k+pau=x@4_1/A:1_0_3/B:1-1-4@1-1&3-1#2-1$1-1!1-0;0-0|ih/C:0+0+0/D:md_1/E:content+1@3+1&2+0#2+0/F:0_0/G:9_7/H:3=3@2=1|L-L%/I:0=0/J:12+10-2
-ng^k-pau+x=x@x_x/A:1_1_4/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:content_1/E:x+x@x+x&x+x#x+x/F:0_0/G:3_3/H:x=x@1=2|0/I:0=0/J:12+10-2
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice30.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice30.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice30.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice30.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,36 +0,0 @@
-x^x-pau+ay=hh@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+1/D:0_0/E:x+x@x+x&x+x#x+x/F:content_1/G:0_0/H:x=x@1=2|0/I:11=8/J:14+11-2
-x^pau-ay+hh=ow@1_1/A:0_0_0/B:1-1-1@1-1&1-11#1-7$1-4!0-1;0-1|ay/C:1+1+3/D:0_0/E:content+1@1+8&1+5#0+1/F:content_1/G:0_0/H:11=8@1=2|L-H%/I:3=3/J:14+11-2
-pau^ay-hh+ow=p@1_3/A:1_1_1/B:1-1-3@1-1&2-10#1-6$1-3!1-1;1-6|ow/C:1+0+3/D:content_1/E:content+1@2+7&2+4#1+1/F:content_1/G:0_0/H:11=8@1=2|L-H%/I:3=3/J:14+11-2
-ay^hh-ow+p=dh@2_2/A:1_1_1/B:1-1-3@1-1&2-10#1-6$1-3!1-1;1-6|ow/C:1+0+3/D:content_1/E:content+1@2+7&2+4#1+1/F:content_1/G:0_0/H:11=8@1=2|L-H%/I:3=3/J:14+11-2
-hh^ow-p+dh=eh@3_1/A:1_1_1/B:1-1-3@1-1&2-10#1-6$1-3!1-1;1-6|ow/C:1+0+3/D:content_1/E:content+1@2+7&2+4#1+1/F:content_1/G:0_0/H:11=8@1=2|L-H%/I:3=3/J:14+11-2
-ow^p-dh+eh=l@1_3/A:1_1_3/B:1-0-3@1-1&3-9#2-5$2-3!1-2;1-5|eh/C:0+0+3/D:content_1/E:content+1@3+6&3+3#1+1/F:content_3/G:0_0/H:11=8@1=2|L-H%/I:3=3/J:14+11-2
-p^dh-eh+l=r@2_2/A:1_1_3/B:1-0-3@1-1&3-9#2-5$2-3!1-2;1-5|eh/C:0+0+3/D:content_1/E:content+1@3+6&3+3#1+1/F:content_3/G:0_0/H:11=8@1=2|L-H%/I:3=3/J:14+11-2
-dh^eh-l+r=ih@3_1/A:1_1_3/B:1-0-3@1-1&3-9#2-5$2-3!1-2;1-5|eh/C:0+0+3/D:content_1/E:content+1@3+6&3+3#1+1/F:content_3/G:0_0/H:11=8@1=2|L-H%/I:3=3/J:14+11-2
-eh^l-r+ih=m@1_3/A:1_0_3/B:0-0-3@1-3&4-8#3-5$2-3!1-1;2-4|ih/C:1+0+3/D:content_1/E:content+3@4+5&4+2#1+2/F:pps_1/G:0_0/H:11=8@1=2|L-H%/I:3=3/J:14+11-2
-l^r-ih+m=eh@2_2/A:1_0_3/B:0-0-3@1-3&4-8#3-5$2-3!1-1;2-4|ih/C:1+0+3/D:content_1/E:content+3@4+5&4+2#1+2/F:pps_1/G:0_0/H:11=8@1=2|L-H%/I:3=3/J:14+11-2
-r^ih-m+eh=m@3_1/A:1_0_3/B:0-0-3@1-3&4-8#3-5$2-3!1-1;2-4|ih/C:1+0+3/D:content_1/E:content+3@4+5&4+2#1+2/F:pps_1/G:0_0/H:11=8@1=2|L-H%/I:3=3/J:14+11-2
-ih^m-eh+m=b@1_3/A:0_0_3/B:1-0-3@2-2&5-7#3-4$2-3!2-3;3-3|eh/C:0+0+1/D:content_1/E:content+3@4+5&4+2#1+2/F:pps_1/G:0_0/H:11=8@1=2|L-H%/I:3=3/J:14+11-2
-m^eh-m+b=er@2_2/A:0_0_3/B:1-0-3@2-2&5-7#3-4$2-3!2-3;3-3|eh/C:0+0+1/D:content_1/E:content+3@4+5&4+2#1+2/F:pps_1/G:0_0/H:11=8@1=2|L-H%/I:3=3/J:14+11-2
-eh^m-b+er=hh@3_1/A:0_0_3/B:1-0-3@2-2&5-7#3-4$2-3!2-3;3-3|eh/C:0+0+1/D:content_1/E:content+3@4+5&4+2#1+2/F:pps_1/G:0_0/H:11=8@1=2|L-H%/I:3=3/J:14+11-2
-m^b-er+hh=er@1_1/A:1_0_3/B:0-0-1@3-1&6-6#4-4$2-3!1-2;4-2|er/C:0+0+2/D:content_1/E:content+3@4+5&4+2#1+2/F:pps_1/G:0_0/H:11=8@1=2|L-H%/I:3=3/J:14+11-2
-b^er-hh+er=s@1_2/A:0_0_1/B:0-0-2@1-1&7-5#4-4$2-3!2-1;5-1|er/C:1+1+3/D:content_3/E:pps+1@5+4&5+2#1+1/F:content_2/G:0_0/H:11=8@1=2|L-H%/I:3=3/J:14+11-2
-er^hh-er+s=ao@2_1/A:0_0_1/B:0-0-2@1-1&7-5#4-4$2-3!2-1;5-1|er/C:1+1+3/D:content_3/E:pps+1@5+4&5+2#1+1/F:content_2/G:0_0/H:11=8@1=2|L-H%/I:3=3/J:14+11-2
-hh^er-s+ao=s@1_3/A:0_0_2/B:1-1-3@1-2&8-4#4-3$2-2!3-2;6-3|ao/C:0+0+1/D:pps_1/E:content+2@6+3&5+1#2+2/F:in_1/G:0_0/H:11=8@1=2|L-H%/I:3=3/J:14+11-2
-er^s-ao+s=er@2_2/A:0_0_2/B:1-1-3@1-2&8-4#4-3$2-2!3-2;6-3|ao/C:0+0+1/D:pps_1/E:content+2@6+3&5+1#2+2/F:in_1/G:0_0/H:11=8@1=2|L-H%/I:3=3/J:14+11-2
-s^ao-s+er=ah@3_1/A:0_0_2/B:1-1-3@1-2&8-4#4-3$2-2!3-2;6-3|ao/C:0+0+1/D:pps_1/E:content+2@6+3&5+1#2+2/F:in_1/G:0_0/H:11=8@1=2|L-H%/I:3=3/J:14+11-2
-ao^s-er+ah=v@1_1/A:1_1_3/B:0-0-1@2-1&9-3#5-3$3-2!1-1;1-2|er/C:1+0+2/D:pps_1/E:content+2@6+3&5+1#2+2/F:in_1/G:0_0/H:11=8@1=2|L-H%/I:3=3/J:14+11-2
-s^er-ah+v=m@1_2/A:0_0_1/B:1-0-2@1-1&10-2#5-2$3-2!2-1;2-1|ah/C:1+1+4/D:content_2/E:in+1@7+2&6+1#1+1/F:content_1/G:0_0/H:11=8@1=2|L-H%/I:3=3/J:14+11-2
-er^ah-v+m=ih@2_1/A:0_0_1/B:1-0-2@1-1&10-2#5-2$3-2!2-1;2-1|ah/C:1+1+4/D:content_2/E:in+1@7+2&6+1#1+1/F:content_1/G:0_0/H:11=8@1=2|L-H%/I:3=3/J:14+11-2
-ah^v-m+ih=l@1_4/A:1_0_2/B:1-1-4@1-1&11-1#6-1$3-1!1-0;3-0|ih/C:1+0+2/D:in_1/E:content+1@8+1&6+0#2+0/F:in_1/G:0_0/H:11=8@1=2|L-H%/I:3=3/J:14+11-2
-v^m-ih+l=k@2_3/A:1_0_2/B:1-1-4@1-1&11-1#6-1$3-1!1-0;3-0|ih/C:1+0+2/D:in_1/E:content+1@8+1&6+0#2+0/F:in_1/G:0_0/H:11=8@1=2|L-H%/I:3=3/J:14+11-2
-m^ih-l+k=pau@3_2/A:1_0_2/B:1-1-4@1-1&11-1#6-1$3-1!1-0;3-0|ih/C:1+0+2/D:in_1/E:content+1@8+1&6+0#2+0/F:in_1/G:0_0/H:11=8@1=2|L-H%/I:3=3/J:14+11-2
-ih^l-k+pau=ae@4_1/A:1_0_2/B:1-1-4@1-1&11-1#6-1$3-1!1-0;3-0|ih/C:1+0+2/D:in_1/E:content+1@8+1&6+0#2+0/F:in_1/G:0_0/H:11=8@1=2|L-H%/I:3=3/J:14+11-2
-l^k-pau+ae=t@x_x/A:1_1_4/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:content_1/E:x+x@x+x&x+x#x+x/F:in_1/G:11_8/H:x=x@1=2|0/I:3=3/J:14+11-2
-k^pau-ae+t=t@1_2/A:1_1_4/B:1-0-2@1-1&1-3#1-3$1-3!0-1;0-1|ae/C:1+1+2/D:content_1/E:in+1@1+3&1+2#0+1/F:content_1/G:11_8/H:3=3@2=1|L-L%/I:0=0/J:14+11-2
-pau^ae-t+t=iy@2_1/A:1_1_4/B:1-0-2@1-1&1-3#1-3$1-3!0-1;0-1|ae/C:1+1+2/D:content_1/E:in+1@1+3&1+2#0+1/F:content_1/G:11_8/H:3=3@2=1|L-L%/I:0=0/J:14+11-2
-ae^t-t+iy=t@1_2/A:1_0_2/B:1-1-2@1-1&2-2#1-2$1-2!1-1;0-1|iy/C:1+1+3/D:in_1/E:content+1@2+2&1+1#0+1/F:content_1/G:11_8/H:3=3@2=1|L-L%/I:0=0/J:14+11-2
-t^t-iy+t=ay@2_1/A:1_0_2/B:1-1-2@1-1&2-2#1-2$1-2!1-1;0-1|iy/C:1+1+3/D:in_1/E:content+1@2+2&1+1#0+1/F:content_1/G:11_8/H:3=3@2=1|L-L%/I:0=0/J:14+11-2
-t^iy-t+ay=m@1_3/A:1_1_2/B:1-1-3@1-1&3-1#2-1$2-1!1-0;1-0|ay/C:0+0+0/D:content_1/E:content+1@3+1&2+0#1+0/F:0_0/G:11_8/H:3=3@2=1|L-L%/I:0=0/J:14+11-2
-iy^t-ay+m=pau@2_2/A:1_1_2/B:1-1-3@1-1&3-1#2-1$2-1!1-0;1-0|ay/C:0+0+0/D:content_1/E:content+1@3+1&2+0#1+0/F:0_0/G:11_8/H:3=3@2=1|L-L%/I:0=0/J:14+11-2
-t^ay-m+pau=x@3_1/A:1_1_2/B:1-1-3@1-1&3-1#2-1$2-1!1-0;1-0|ay/C:0+0+0/D:content_1/E:content+1@3+1&2+0#1+0/F:0_0/G:11_8/H:3=3@2=1|L-L%/I:0=0/J:14+11-2
-ay^m-pau+x=x@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:content_1/E:x+x@x+x&x+x#x+x/F:0_0/G:3_3/H:x=x@1=2|0/I:0=0/J:14+11-2
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice31.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice31.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice31.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice31.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,11 +0,0 @@
-x^x-pau+d=ay@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+3/D:0_0/E:x+x@x+x&x+x#x+x/F:content_2/G:0_0/H:x=x@1=1|0/I:4=3/J:4+3-1
-x^pau-d+ay=n@1_3/A:0_0_0/B:1-1-3@1-2&1-4#1-3$1-3!0-2;0-2|ay/C:0+0+1/D:0_0/E:content+2@1+3&1+2#0+1/F:content_1/G:0_0/H:4=3@1=1|L-L%/I:0=0/J:4+3-1
-pau^d-ay+n=ax@2_2/A:0_0_0/B:1-1-3@1-2&1-4#1-3$1-3!0-2;0-2|ay/C:0+0+1/D:0_0/E:content+2@1+3&1+2#0+1/F:content_1/G:0_0/H:4=3@1=1|L-L%/I:0=0/J:4+3-1
-d^ay-n+ax=m@3_1/A:0_0_0/B:1-1-3@1-2&1-4#1-3$1-3!0-2;0-2|ay/C:0+0+1/D:0_0/E:content+2@1+3&1+2#0+1/F:content_1/G:0_0/H:4=3@1=1|L-L%/I:0=0/J:4+3-1
-ay^n-ax+m=ay@1_1/A:1_1_3/B:0-0-1@2-1&2-3#1-3$1-3!1-1;1-1|ax/C:1+1+2/D:0_0/E:content+2@1+3&1+2#0+1/F:content_1/G:0_0/H:4=3@1=1|L-L%/I:0=0/J:4+3-1
-n^ax-m+ay=d@1_2/A:0_0_1/B:1-1-2@1-1&3-2#1-2$1-2!2-1;2-1|ay/C:1+1+3/D:content_2/E:content+1@2+2&2+1#1+1/F:content_1/G:0_0/H:4=3@1=1|L-L%/I:0=0/J:4+3-1
-ax^m-ay+d=ih@2_1/A:0_0_1/B:1-1-2@1-1&3-2#1-2$1-2!2-1;2-1|ay/C:1+1+3/D:content_2/E:content+1@2+2&2+1#1+1/F:content_1/G:0_0/H:4=3@1=1|L-L%/I:0=0/J:4+3-1
-m^ay-d+ih=r@1_3/A:1_1_2/B:1-1-3@1-1&4-1#2-1$2-1!1-0;1-0|ih/C:0+0+0/D:content_1/E:content+1@3+1&3+0#1+0/F:0_0/G:0_0/H:4=3@1=1|L-L%/I:0=0/J:4+3-1
-ay^d-ih+r=pau@2_2/A:1_1_2/B:1-1-3@1-1&4-1#2-1$2-1!1-0;1-0|ih/C:0+0+0/D:content_1/E:content+1@3+1&3+0#1+0/F:0_0/G:0_0/H:4=3@1=1|L-L%/I:0=0/J:4+3-1
-d^ih-r+pau=x@3_1/A:1_1_2/B:1-1-3@1-1&4-1#2-1$2-1!1-0;1-0|ih/C:0+0+0/D:content_1/E:content+1@3+1&3+0#1+0/F:0_0/G:0_0/H:4=3@1=1|L-L%/I:0=0/J:4+3-1
-ih^r-pau+x=x@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:content_1/E:x+x@x+x&x+x#x+x/F:0_0/G:4_3/H:x=x@1=1|0/I:0=0/J:4+3-1
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice32.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice32.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice32.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice32.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,21 +0,0 @@
-x^x-pau+ay=w@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+1/D:0_0/E:x+x@x+x&x+x#x+x/F:content_1/G:0_0/H:x=x@1=1|0/I:8=8/J:8+8-1
-x^pau-ay+w=ih@1_1/A:0_0_0/B:1-1-1@1-1&1-8#1-7$1-3!0-1;0-1|ay/C:1+1+3/D:0_0/E:content+1@1+8&1+4#0+1/F:content_1/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-pau^ay-w+ih=sh@1_3/A:1_1_1/B:1-1-3@1-1&2-7#1-6$1-2!1-1;1-6|ih/C:1+0+2/D:content_1/E:content+1@2+7&2+3#1+1/F:content_1/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-ay^w-ih+sh=y@2_2/A:1_1_1/B:1-1-3@1-1&2-7#1-6$1-2!1-1;1-6|ih/C:1+0+2/D:content_1/E:content+1@2+7&2+3#1+1/F:content_1/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-w^ih-sh+y=uw@3_1/A:1_1_1/B:1-1-3@1-1&2-7#1-6$1-2!1-1;1-6|ih/C:1+0+2/D:content_1/E:content+1@2+7&2+3#1+1/F:content_1/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-ih^sh-y+uw=w@1_2/A:1_1_3/B:1-0-2@1-1&3-6#2-5$2-2!1-2;1-5|uw/C:0+0+2/D:content_1/E:content+1@3+6&3+2#1+3/F:aux_1/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-sh^y-uw+w=er@2_1/A:1_1_3/B:1-0-2@1-1&3-6#2-5$2-2!1-2;1-5|uw/C:0+0+2/D:content_1/E:content+1@3+6&3+2#1+3/F:aux_1/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-y^uw-w+er=d@1_2/A:1_0_2/B:0-0-2@1-1&4-5#3-5$2-2!1-1;2-4|er/C:1+0+3/D:content_1/E:aux+1@4+5&4+2#1+2/F:in_1/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-uw^w-er+d=aw@2_1/A:1_0_2/B:0-0-2@1-1&4-5#3-5$2-2!1-1;2-4|er/C:1+0+3/D:content_1/E:aux+1@4+5&4+2#1+2/F:in_1/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-w^er-d+aw=n@1_3/A:0_0_2/B:1-0-3@1-1&5-4#3-4$2-2!2-1;3-3|aw/C:1+0+3/D:aux_1/E:in+1@5+4&4+2#2+1/F:content_1/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-er^d-aw+n=hh@2_2/A:0_0_2/B:1-0-3@1-1&5-4#3-4$2-2!2-1;3-3|aw/C:1+0+3/D:aux_1/E:in+1@5+4&4+2#2+1/F:content_1/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-d^aw-n+hh=ih@3_1/A:0_0_2/B:1-0-3@1-1&5-4#3-4$2-2!2-1;3-3|aw/C:1+0+3/D:aux_1/E:in+1@5+4&4+2#2+1/F:content_1/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-aw^n-hh+ih=r@1_3/A:1_0_3/B:1-0-3@1-1&6-3#4-3$2-2!1-1;4-2|ih/C:1+0+3/D:in_1/E:content+1@6+3&4+1#3+2/F:in_1/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-n^hh-ih+r=w@2_2/A:1_0_3/B:1-0-3@1-1&6-3#4-3$2-2!1-1;4-2|ih/C:1+0+3/D:in_1/E:content+1@6+3&4+1#3+2/F:in_1/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-hh^ih-r+w=ih@3_1/A:1_0_3/B:1-0-3@1-1&6-3#4-3$2-2!1-1;4-2|ih/C:1+0+3/D:in_1/E:content+1@6+3&4+1#3+2/F:in_1/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-ih^r-w+ih=dh@1_3/A:1_0_3/B:1-0-3@1-1&7-2#5-2$2-2!1-1;5-1|ih/C:1+1+2/D:content_1/E:in+1@7+2&5+1#1+1/F:content_1/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-r^w-ih+dh=m@2_2/A:1_0_3/B:1-0-3@1-1&7-2#5-2$2-2!1-1;5-1|ih/C:1+1+2/D:content_1/E:in+1@7+2&5+1#1+1/F:content_1/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-w^ih-dh+m=iy@3_1/A:1_0_3/B:1-0-3@1-1&7-2#5-2$2-2!1-1;5-1|ih/C:1+1+2/D:content_1/E:in+1@7+2&5+1#1+1/F:content_1/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-ih^dh-m+iy=pau@1_2/A:1_0_3/B:1-1-2@1-1&8-1#6-1$2-1!1-0;6-0|iy/C:0+0+0/D:in_1/E:content+1@8+1&5+0#2+0/F:0_0/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-dh^m-iy+pau=x@2_1/A:1_0_3/B:1-1-2@1-1&8-1#6-1$2-1!1-0;6-0|iy/C:0+0+0/D:in_1/E:content+1@8+1&5+0#2+0/F:0_0/G:0_0/H:8=8@1=1|L-L%/I:0=0/J:8+8-1
-m^iy-pau+x=x@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:content_1/E:x+x@x+x&x+x#x+x/F:0_0/G:8_8/H:x=x@1=1|0/I:0=0/J:8+8-1
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice33.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice33.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice33.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice33.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,66 +0,0 @@
-x^x-pau+dh=eh@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+3/D:0_0/E:x+x@x+x&x+x#x+x/F:content_1/G:0_0/H:x=x@1=5|0/I:7=7/J:26+24-5
-x^pau-dh+eh=r@1_3/A:0_0_0/B:1-1-3@1-1&1-7#1-5$1-3!0-1;0-3|eh/C:1+0+2/D:0_0/E:content+1@1+7&1+2#0+3/F:aux_1/G:0_0/H:7=7@1=5|L-L%/I:3=2/J:26+24-5
-pau^dh-eh+r=aa@2_2/A:0_0_0/B:1-1-3@1-1&1-7#1-5$1-3!0-1;0-3|eh/C:1+0+2/D:0_0/E:content+1@1+7&1+2#0+3/F:aux_1/G:0_0/H:7=7@1=5|L-L%/I:3=2/J:26+24-5
-dh^eh-r+aa=r@3_1/A:0_0_0/B:1-1-3@1-1&1-7#1-5$1-3!0-1;0-3|eh/C:1+0+2/D:0_0/E:content+1@1+7&1+2#0+3/F:aux_1/G:0_0/H:7=7@1=5|L-L%/I:3=2/J:26+24-5
-eh^r-aa+r=n@1_2/A:1_1_3/B:1-0-2@1-1&2-6#1-4$1-3!1-1;1-2|aa/C:1+0+2/D:content_1/E:aux+1@2+6&2+2#1+2/F:det_1/G:0_0/H:7=7@1=5|L-L%/I:3=2/J:26+24-5
-r^aa-r+n=ow@2_1/A:1_1_3/B:1-0-2@1-1&2-6#1-4$1-3!1-1;1-2|aa/C:1+0+2/D:content_1/E:aux+1@2+6&2+2#1+2/F:det_1/G:0_0/H:7=7@1=5|L-L%/I:3=2/J:26+24-5
-aa^r-n+ow=m@1_2/A:1_0_2/B:1-0-2@1-1&3-5#2-3$1-3!1-1;2-1|ow/C:1+1+3/D:aux_1/E:det+1@3+5&2+2#2+1/F:content_1/G:0_0/H:7=7@1=5|L-L%/I:3=2/J:26+24-5
-r^n-ow+m=ay@2_1/A:1_0_2/B:1-0-2@1-1&3-5#2-3$1-3!1-1;2-1|ow/C:1+1+3/D:aux_1/E:det+1@3+5&2+2#2+1/F:content_1/G:0_0/H:7=7@1=5|L-L%/I:3=2/J:26+24-5
-n^ow-m+ay=s@1_3/A:1_0_2/B:1-1-3@1-1&4-4#3-2$1-2!1-3;3-3|ay/C:0+0+2/D:det_1/E:content+1@4+4&2+1#3+3/F:in_1/G:0_0/H:7=7@1=5|L-L%/I:3=2/J:26+24-5
-ow^m-ay+s=ih@2_2/A:1_0_2/B:1-1-3@1-1&4-4#3-2$1-2!1-3;3-3|ay/C:0+0+2/D:det_1/E:content+1@4+4&2+1#3+3/F:in_1/G:0_0/H:7=7@1=5|L-L%/I:3=2/J:26+24-5
-m^ay-s+ih=n@3_1/A:1_0_2/B:1-1-3@1-1&4-4#3-2$1-2!1-3;3-3|ay/C:0+0+2/D:det_1/E:content+1@4+4&2+1#3+3/F:in_1/G:0_0/H:7=7@1=5|L-L%/I:3=2/J:26+24-5
-ay^s-ih+n=dh@1_2/A:1_1_3/B:0-0-2@1-1&5-3#4-2$2-2!1-2;1-2|ih/C:0+0+2/D:content_1/E:in+1@5+3&3+1#1+2/F:det_1/G:0_0/H:7=7@1=5|L-L%/I:3=2/J:26+24-5
-s^ih-n+dh=ax@2_1/A:1_1_3/B:0-0-2@1-1&5-3#4-2$2-2!1-2;1-2|ih/C:0+0+2/D:content_1/E:in+1@5+3&3+1#1+2/F:det_1/G:0_0/H:7=7@1=5|L-L%/I:3=2/J:26+24-5
-ih^n-dh+ax=eh@1_2/A:0_0_2/B:0-0-2@1-1&6-2#4-2$2-2!2-1;2-1|ax/C:1+1+2/D:in_1/E:det+1@6+2&3+1#2+1/F:content_1/G:0_0/H:7=7@1=5|L-L%/I:3=2/J:26+24-5
-n^dh-ax+eh=r@2_1/A:0_0_2/B:0-0-2@1-1&6-2#4-2$2-2!2-1;2-1|ax/C:1+1+2/D:in_1/E:det+1@6+2&3+1#2+1/F:content_1/G:0_0/H:7=7@1=5|L-L%/I:3=2/J:26+24-5
-dh^ax-eh+r=pau@1_2/A:0_0_2/B:1-1-2@1-1&7-1#4-1$2-1!3-0;3-0|eh/C:1+0+2/D:det_1/E:content+1@7+1&3+0#3+0/F:content_1/G:0_0/H:7=7@1=5|L-L%/I:3=2/J:26+24-5
-ax^eh-r+pau=ay@2_1/A:0_0_2/B:1-1-2@1-1&7-1#4-1$2-1!3-0;3-0|eh/C:1+0+2/D:det_1/E:content+1@7+1&3+0#3+0/F:content_1/G:0_0/H:7=7@1=5|L-L%/I:3=2/J:26+24-5
-eh^r-pau+ay=m@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:content_1/E:x+x@x+x&x+x#x+x/F:content_1/G:7_7/H:x=x@1=5|0/I:3=2/J:26+24-5
-r^pau-ay+m=ax@1_2/A:1_1_2/B:1-0-2@1-1&1-3#1-2$1-2!0-2;0-2|ay/C:0+0+2/D:content_1/E:content+1@1+2&1+1#0+1/F:content_2/G:7_7/H:3=2@2=4|L-L%/I:6=6/J:26+24-5
-pau^ay-m+ax=f@2_1/A:1_1_2/B:1-0-2@1-1&1-3#1-2$1-2!0-2;0-2|ay/C:0+0+2/D:content_1/E:content+1@1+2&1+1#0+1/F:content_2/G:7_7/H:3=2@2=4|L-L%/I:6=6/J:26+24-5
-ay^m-ax+f=r@1_2/A:1_0_2/B:0-0-2@1-2&2-2#1-2$1-2!1-1;0-1|ax/C:1+1+3/D:content_1/E:content+2@2+1&2+0#1+0/F:cc_1/G:7_7/H:3=2@2=4|L-L%/I:6=6/J:26+24-5
-m^ax-f+r=ey@2_1/A:1_0_2/B:0-0-2@1-2&2-2#1-2$1-2!1-1;0-1|ax/C:1+1+3/D:content_1/E:content+2@2+1&2+0#1+0/F:cc_1/G:7_7/H:3=2@2=4|L-L%/I:6=6/J:26+24-5
-ax^f-r+ey=d@1_3/A:0_0_2/B:1-1-3@2-1&3-1#1-1$1-1!2-0;0-0|ey/C:1+0+3/D:content_1/E:content+2@2+1&2+0#1+0/F:cc_1/G:7_7/H:3=2@2=4|L-L%/I:6=6/J:26+24-5
-f^r-ey+d=pau@2_2/A:0_0_2/B:1-1-3@2-1&3-1#1-1$1-1!2-0;0-0|ey/C:1+0+3/D:content_1/E:content+2@2+1&2+0#1+0/F:cc_1/G:7_7/H:3=2@2=4|L-L%/I:6=6/J:26+24-5
-r^ey-d+pau=b@3_1/A:0_0_2/B:1-1-3@2-1&3-1#1-1$1-1!2-0;0-0|ey/C:1+0+3/D:content_1/E:content+2@2+1&2+0#1+0/F:cc_1/G:7_7/H:3=2@2=4|L-L%/I:6=6/J:26+24-5
-ey^d-pau+b=ah@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_2/E:x+x@x+x&x+x#x+x/F:cc_1/G:3_2/H:x=x@1=5|0/I:6=6/J:26+24-5
-d^pau-b+ah=t@1_3/A:1_1_3/B:1-0-3@1-1&1-6#1-5$1-4!0-1;0-1|ah/C:1+1+2/D:content_2/E:cc+1@1+6&1+3#0+1/F:content_1/G:3_2/H:6=6@3=3|L-L%/I:8=7/J:26+24-5
-pau^b-ah+t=y@2_2/A:1_1_3/B:1-0-3@1-1&1-6#1-5$1-4!0-1;0-1|ah/C:1+1+2/D:content_2/E:cc+1@1+6&1+3#0+1/F:content_1/G:3_2/H:6=6@3=3|L-L%/I:8=7/J:26+24-5
-b^ah-t+y=uw@3_1/A:1_1_3/B:1-0-3@1-1&1-6#1-5$1-4!0-1;0-1|ah/C:1+1+2/D:content_2/E:cc+1@1+6&1+3#0+1/F:content_1/G:3_2/H:6=6@3=3|L-L%/I:8=7/J:26+24-5
-ah^t-y+uw=m@1_2/A:1_0_3/B:1-1-2@1-1&2-5#1-4$1-3!1-1;0-2|uw/C:1+0+3/D:cc_1/E:content+1@2+5&1+2#0+2/F:md_1/G:3_2/H:6=6@3=3|L-L%/I:8=7/J:26+24-5
-t^y-uw+m=ay@2_1/A:1_0_3/B:1-1-2@1-1&2-5#1-4$1-3!1-1;0-2|uw/C:1+0+3/D:cc_1/E:content+1@2+5&1+2#0+2/F:md_1/G:3_2/H:6=6@3=3|L-L%/I:8=7/J:26+24-5
-y^uw-m+ay=t@1_3/A:1_1_2/B:1-0-3@1-1&3-4#2-3$2-3!1-1;1-1|ay/C:1+1+3/D:content_1/E:md+1@3+4&2+2#1+1/F:content_1/G:3_2/H:6=6@3=3|L-L%/I:8=7/J:26+24-5
-uw^m-ay+t=k@2_2/A:1_1_2/B:1-0-3@1-1&3-4#2-3$2-3!1-1;1-1|ay/C:1+1+3/D:content_1/E:md+1@3+4&2+2#1+1/F:content_1/G:3_2/H:6=6@3=3|L-L%/I:8=7/J:26+24-5
-m^ay-t+k=ae@3_1/A:1_1_2/B:1-0-3@1-1&3-4#2-3$2-3!1-1;1-1|ay/C:1+1+3/D:content_1/E:md+1@3+4&2+2#1+1/F:content_1/G:3_2/H:6=6@3=3|L-L%/I:8=7/J:26+24-5
-ay^t-k+ae=ch@1_3/A:1_0_3/B:1-1-3@1-1&4-3#3-2$2-2!1-2;2-2|ae/C:0+0+1/D:md_1/E:content+1@4+3&2+1#2+2/F:det_1/G:3_2/H:6=6@3=3|L-L%/I:8=7/J:26+24-5
-t^k-ae+ch=ax@2_2/A:1_0_3/B:1-1-3@1-1&4-3#3-2$2-2!1-2;2-2|ae/C:0+0+1/D:md_1/E:content+1@4+3&2+1#2+2/F:det_1/G:3_2/H:6=6@3=3|L-L%/I:8=7/J:26+24-5
-k^ae-ch+ax=b@3_1/A:1_0_3/B:1-1-3@1-1&4-3#3-2$2-2!1-2;2-2|ae/C:0+0+1/D:md_1/E:content+1@4+3&2+1#2+2/F:det_1/G:3_2/H:6=6@3=3|L-L%/I:8=7/J:26+24-5
-ae^ch-ax+b=ae@1_1/A:1_1_3/B:0-0-1@1-1&5-2#4-2$3-2!1-1;1-1|ax/C:1+1+3/D:content_1/E:det+1@5+2&3+1#1+1/F:content_1/G:3_2/H:6=6@3=3|L-L%/I:8=7/J:26+24-5
-ch^ax-b+ae=t@1_3/A:0_0_1/B:1-1-3@1-1&6-1#4-1$3-1!2-0;2-0|ae/C:1+0+3/D:det_1/E:content+1@6+1&3+0#2+0/F:cc_1/G:3_2/H:6=6@3=3|L-L%/I:8=7/J:26+24-5
-ax^b-ae+t=pau@2_2/A:0_0_1/B:1-1-3@1-1&6-1#4-1$3-1!2-0;2-0|ae/C:1+0+3/D:det_1/E:content+1@6+1&3+0#2+0/F:cc_1/G:3_2/H:6=6@3=3|L-L%/I:8=7/J:26+24-5
-b^ae-t+pau=ae@3_1/A:0_0_1/B:1-1-3@1-1&6-1#4-1$3-1!2-0;2-0|ae/C:1+0+3/D:det_1/E:content+1@6+1&3+0#2+0/F:cc_1/G:3_2/H:6=6@3=3|L-L%/I:8=7/J:26+24-5
-ae^t-pau+ae=n@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:cc_1/G:6_6/H:x=x@1=5|0/I:8=7/J:26+24-5
-t^pau-ae+n=d@1_3/A:1_1_3/B:1-0-3@1-1&1-8#1-5$1-3!0-1;0-3|ae/C:1+0+3/D:content_1/E:cc+1@1+7&1+4#0+2/F:in_1/G:6_6/H:8=7@4=2|L-L%/I:2=2/J:26+24-5
-pau^ae-n+d=dh@2_2/A:1_1_3/B:1-0-3@1-1&1-8#1-5$1-3!0-1;0-3|ae/C:1+0+3/D:content_1/E:cc+1@1+7&1+4#0+2/F:in_1/G:6_6/H:8=7@4=2|L-L%/I:2=2/J:26+24-5
-ae^n-d+dh=ae@3_1/A:1_1_3/B:1-0-3@1-1&1-8#1-5$1-3!0-1;0-3|ae/C:1+0+3/D:content_1/E:cc+1@1+7&1+4#0+2/F:in_1/G:6_6/H:8=7@4=2|L-L%/I:2=2/J:26+24-5
-n^d-dh+ae=t@1_3/A:1_0_3/B:1-0-3@1-1&2-7#1-4$1-3!1-2;0-2|ae/C:0+0+1/D:cc_1/E:in+1@2+6&1+4#0+1/F:content_1/G:6_6/H:8=7@4=2|L-L%/I:2=2/J:26+24-5
-d^dh-ae+t=s@2_2/A:1_0_3/B:1-0-3@1-1&2-7#1-4$1-3!1-2;0-2|ae/C:0+0+1/D:cc_1/E:in+1@2+6&1+4#0+1/F:content_1/G:6_6/H:8=7@4=2|L-L%/I:2=2/J:26+24-5
-dh^ae-t+s=v@3_1/A:1_0_3/B:1-0-3@1-1&2-7#1-4$1-3!1-2;0-2|ae/C:0+0+1/D:cc_1/E:in+1@2+6&1+4#0+1/F:content_1/G:6_6/H:8=7@4=2|L-L%/I:2=2/J:26+24-5
-ae^t-s+v=eh@1_1/A:1_0_3/B:0-0-1@1-1&3-6#2-4$1-3!1-1;0-1|novowel/C:1+1+3/D:in_1/E:content+1@3+5&1+3#0+1/F:content_2/G:6_6/H:8=7@4=2|L-L%/I:2=2/J:26+24-5
-t^s-v+eh=r@1_3/A:0_0_1/B:1-1-3@1-2&4-5#2-3$1-2!2-2;0-4|eh/C:0+0+1/D:content_1/E:content+2@4+4&2+2#1+1/F:content_1/G:6_6/H:8=7@4=2|L-L%/I:2=2/J:26+24-5
-s^v-eh+r=iy@2_2/A:0_0_1/B:1-1-3@1-2&4-5#2-3$1-2!2-2;0-4|eh/C:0+0+1/D:content_1/E:content+2@4+4&2+2#1+1/F:content_1/G:6_6/H:8=7@4=2|L-L%/I:2=2/J:26+24-5
-v^eh-r+iy=l@3_1/A:0_0_1/B:1-1-3@1-2&4-5#2-3$1-2!2-2;0-4|eh/C:0+0+1/D:content_1/E:content+2@4+4&2+2#1+1/F:content_1/G:6_6/H:8=7@4=2|L-L%/I:2=2/J:26+24-5
-eh^r-iy+l=ay@1_1/A:1_1_3/B:0-0-1@2-1&5-4#3-3$2-2!1-1;1-3|iy/C:1+0+3/D:content_1/E:content+2@4+4&2+2#1+1/F:content_1/G:6_6/H:8=7@4=2|L-L%/I:2=2/J:26+24-5
-r^iy-l+ay=k@1_3/A:0_0_1/B:1-0-3@1-1&6-3#3-2$2-2!2-2;2-2|ay/C:0+0+1/D:content_2/E:content+1@5+3&3+1#1+2/F:det_1/G:6_6/H:8=7@4=2|L-L%/I:2=2/J:26+24-5
-iy^l-ay+k=ax@2_2/A:0_0_1/B:1-0-3@1-1&6-3#3-2$2-2!2-2;2-2|ay/C:0+0+1/D:content_2/E:content+1@5+3&3+1#1+2/F:det_1/G:6_6/H:8=7@4=2|L-L%/I:2=2/J:26+24-5
-l^ay-k+ax=m@3_1/A:0_0_1/B:1-0-3@1-1&6-3#3-2$2-2!2-2;2-2|ay/C:0+0+1/D:content_2/E:content+1@5+3&3+1#1+2/F:det_1/G:6_6/H:8=7@4=2|L-L%/I:2=2/J:26+24-5
-ay^k-ax+m=aw@1_1/A:1_0_3/B:0-0-1@1-1&7-2#4-2$2-2!1-1;3-1|ax/C:1+1+3/D:content_1/E:det+1@6+2&4+1#1+1/F:content_1/G:6_6/H:8=7@4=2|L-L%/I:2=2/J:26+24-5
-k^ax-m+aw=s@1_3/A:0_0_1/B:1-1-3@1-1&8-1#4-1$2-1!2-0;4-0|aw/C:1+0+2/D:det_1/E:content+1@7+1&4+0#2+0/F:content_1/G:6_6/H:8=7@4=2|L-L%/I:2=2/J:26+24-5
-ax^m-aw+s=pau@2_2/A:0_0_1/B:1-1-3@1-1&8-1#4-1$2-1!2-0;4-0|aw/C:1+0+2/D:det_1/E:content+1@7+1&4+0#2+0/F:content_1/G:6_6/H:8=7@4=2|L-L%/I:2=2/J:26+24-5
-m^aw-s+pau=y@3_1/A:0_0_1/B:1-1-3@1-1&8-1#4-1$2-1!2-0;4-0|aw/C:1+0+2/D:det_1/E:content+1@7+1&4+0#2+0/F:content_1/G:6_6/H:8=7@4=2|L-L%/I:2=2/J:26+24-5
-aw^s-pau+y=uw@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:content_1/E:x+x@x+x&x+x#x+x/F:content_1/G:8_7/H:x=x@1=5|0/I:2=2/J:26+24-5
-s^pau-y+uw=n@1_2/A:1_1_3/B:1-0-2@1-1&1-2#1-2$1-2!0-1;0-1|uw/C:1+1+2/D:content_1/E:content+1@1+2&1+1#0+1/F:content_1/G:8_7/H:2=2@5=1|L-L%/I:0=0/J:26+24-5
-pau^y-uw+n=ow@2_1/A:1_1_3/B:1-0-2@1-1&1-2#1-2$1-2!0-1;0-1|uw/C:1+1+2/D:content_1/E:content+1@1+2&1+1#0+1/F:content_1/G:8_7/H:2=2@5=1|L-L%/I:0=0/J:26+24-5
-y^uw-n+ow=pau@1_2/A:1_0_2/B:1-1-2@1-1&2-1#1-1$1-1!1-0;0-0|ow/C:0+0+0/D:content_1/E:content+1@2+1&2+0#1+0/F:0_0/G:8_7/H:2=2@5=1|L-L%/I:0=0/J:26+24-5
-uw^n-ow+pau=x@2_1/A:1_0_2/B:1-1-2@1-1&2-1#1-1$1-1!1-0;0-0|ow/C:0+0+0/D:content_1/E:content+1@2+1&2+0#1+0/F:0_0/G:8_7/H:2=2@5=1|L-L%/I:0=0/J:26+24-5
-n^ow-pau+x=x@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:content_1/E:x+x@x+x&x+x#x+x/F:0_0/G:2_2/H:x=x@1=5|0/I:0=0/J:26+24-5
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice34.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice34.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice34.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice34.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,24 +0,0 @@
-x^x-pau+b=ah@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:0_0/E:x+x@x+x&x+x#x+x/F:cc_1/G:0_0/H:x=x@1=2|0/I:5=5/J:8+7-2
-x^pau-b+ah=t@1_3/A:0_0_0/B:1-0-3@1-1&1-5#1-5$1-4!0-1;0-1|ah/C:1+1+2/D:0_0/E:cc+1@1+5&1+4#0+1/F:content_1/G:0_0/H:5=5@1=2|L-H%/I:3=2/J:8+7-2
-pau^b-ah+t=d@2_2/A:0_0_0/B:1-0-3@1-1&1-5#1-5$1-4!0-1;0-1|ah/C:1+1+2/D:0_0/E:cc+1@1+5&1+4#0+1/F:content_1/G:0_0/H:5=5@1=2|L-H%/I:3=2/J:8+7-2
-b^ah-t+d=uw@3_1/A:0_0_0/B:1-0-3@1-1&1-5#1-5$1-4!0-1;0-1|ah/C:1+1+2/D:0_0/E:cc+1@1+5&1+4#0+1/F:content_1/G:0_0/H:5=5@1=2|L-H%/I:3=2/J:8+7-2
-ah^t-d+uw=k@1_2/A:1_0_3/B:1-1-2@1-1&2-4#1-4$1-3!1-1;0-1|uw/C:1+1+4/D:cc_1/E:content+1@2+4&1+3#0+1/F:content_1/G:0_0/H:5=5@1=2|L-H%/I:3=2/J:8+7-2
-t^d-uw+k=ae@2_1/A:1_0_3/B:1-1-2@1-1&2-4#1-4$1-3!1-1;0-1|uw/C:1+1+4/D:cc_1/E:content+1@2+4&1+3#0+1/F:content_1/G:0_0/H:5=5@1=2|L-H%/I:3=2/J:8+7-2
-d^uw-k+ae=t@1_4/A:1_1_2/B:1-1-4@1-1&3-3#2-3$2-2!1-1;1-2|ae/C:1+0+2/D:content_1/E:content+1@3+3&2+2#1+1/F:content_1/G:0_0/H:5=5@1=2|L-H%/I:3=2/J:8+7-2
-uw^k-ae+t=s@2_3/A:1_1_2/B:1-1-4@1-1&3-3#2-3$2-2!1-1;1-2|ae/C:1+0+2/D:content_1/E:content+1@3+3&2+2#1+1/F:content_1/G:0_0/H:5=5@1=2|L-H%/I:3=2/J:8+7-2
-k^ae-t+s=iy@3_2/A:1_1_2/B:1-1-4@1-1&3-3#2-3$2-2!1-1;1-2|ae/C:1+0+2/D:content_1/E:content+1@3+3&2+2#1+1/F:content_1/G:0_0/H:5=5@1=2|L-H%/I:3=2/J:8+7-2
-ae^t-s+iy=t@4_1/A:1_1_2/B:1-1-4@1-1&3-3#2-3$2-2!1-1;1-2|ae/C:1+0+2/D:content_1/E:content+1@3+3&2+2#1+1/F:content_1/G:0_0/H:5=5@1=2|L-H%/I:3=2/J:8+7-2
-t^s-iy+t=b@1_2/A:1_1_4/B:1-0-2@1-1&4-2#3-2$3-2!1-1;1-1|iy/C:1+1+4/D:content_1/E:content+1@4+2&3+1#1+1/F:content_1/G:0_0/H:5=5@1=2|L-H%/I:3=2/J:8+7-2
-s^iy-t+b=ae@2_1/A:1_1_4/B:1-0-2@1-1&4-2#3-2$3-2!1-1;1-1|iy/C:1+1+4/D:content_1/E:content+1@4+2&3+1#1+1/F:content_1/G:0_0/H:5=5@1=2|L-H%/I:3=2/J:8+7-2
-iy^t-b+ae=t@1_4/A:1_0_2/B:1-1-4@1-1&5-1#4-1$3-1!1-0;2-0|ae/C:1+0+1/D:content_1/E:content+1@5+1&4+0#1+0/F:content_1/G:0_0/H:5=5@1=2|L-H%/I:3=2/J:8+7-2
-t^b-ae+t=s@2_3/A:1_0_2/B:1-1-4@1-1&5-1#4-1$3-1!1-0;2-0|ae/C:1+0+1/D:content_1/E:content+1@5+1&4+0#1+0/F:content_1/G:0_0/H:5=5@1=2|L-H%/I:3=2/J:8+7-2
-b^ae-t+s=pau@3_2/A:1_0_2/B:1-1-4@1-1&5-1#4-1$3-1!1-0;2-0|ae/C:1+0+1/D:content_1/E:content+1@5+1&4+0#1+0/F:content_1/G:0_0/H:5=5@1=2|L-H%/I:3=2/J:8+7-2
-ae^t-s+pau=ay@4_1/A:1_0_2/B:1-1-4@1-1&5-1#4-1$3-1!1-0;2-0|ae/C:1+0+1/D:content_1/E:content+1@5+1&4+0#1+0/F:content_1/G:0_0/H:5=5@1=2|L-H%/I:3=2/J:8+7-2
-t^s-pau+ay=w@x_x/A:1_1_4/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+1/D:content_1/E:x+x@x+x&x+x#x+x/F:content_1/G:5_5/H:x=x@1=2|0/I:3=2/J:8+7-2
-s^pau-ay+w=ah@1_1/A:1_1_4/B:1-0-1@1-1&1-3#1-2$1-3!0-1;0-1|ay/C:1+1+4/D:content_1/E:content+1@1+2&1+1#0+1/F:content_2/G:5_5/H:3=2@2=1|L-L%/I:0=0/J:8+7-2
-pau^ay-w+ah=n@1_4/A:1_0_1/B:1-1-4@1-2&2-2#1-1$1-2!1-0;0-1|ah/C:0+1+1/D:content_1/E:content+2@2+1&2+0#1+0/F:0_0/G:5_5/H:3=2@2=1|L-L%/I:0=0/J:8+7-2
-ay^w-ah+n=d@2_3/A:1_0_1/B:1-1-4@1-2&2-2#1-1$1-2!1-0;0-1|ah/C:0+1+1/D:content_1/E:content+2@2+1&2+0#1+0/F:0_0/G:5_5/H:3=2@2=1|L-L%/I:0=0/J:8+7-2
-w^ah-n+d=er@3_2/A:1_0_1/B:1-1-4@1-2&2-2#1-1$1-2!1-0;0-1|ah/C:0+1+1/D:content_1/E:content+2@2+1&2+0#1+0/F:0_0/G:5_5/H:3=2@2=1|L-L%/I:0=0/J:8+7-2
-ah^n-d+er=pau@4_1/A:1_0_1/B:1-1-4@1-2&2-2#1-1$1-2!1-0;0-1|ah/C:0+1+1/D:content_1/E:content+2@2+1&2+0#1+0/F:0_0/G:5_5/H:3=2@2=1|L-L%/I:0=0/J:8+7-2
-n^d-er+pau=x@1_1/A:1_1_4/B:0-1-1@2-1&3-1#2-1$2-1!1-0;1-0|er/C:0+0+0/D:content_1/E:content+2@2+1&2+0#1+0/F:0_0/G:5_5/H:3=2@2=1|L-L%/I:0=0/J:8+7-2
-d^er-pau+x=x@x_x/A:0_1_1/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:content_2/E:x+x@x+x&x+x#x+x/F:0_0/G:3_2/H:x=x@1=2|0/I:0=0/J:8+7-2
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice35.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice35.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice35.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice35.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,180 +0,0 @@
-x^x-pau+ae=n@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:0_0/E:x+x@x+x&x+x#x+x/F:cc_1/G:0_0/H:x=x@1=11|0/I:12=8/J:64+52-11
-x^pau-ae+n=d@1_3/A:0_0_0/B:1-0-3@1-1&1-12#1-7$1-4!0-1;0-1|ae/C:1+1+3/D:0_0/E:cc+1@1+8&1+6#0+1/F:content_1/G:0_0/H:12=8@1=11|L-H%/I:8=6/J:64+52-11
-pau^ae-n+d=hh@2_2/A:0_0_0/B:1-0-3@1-1&1-12#1-7$1-4!0-1;0-1|ae/C:1+1+3/D:0_0/E:cc+1@1+8&1+6#0+1/F:content_1/G:0_0/H:12=8@1=11|L-H%/I:8=6/J:64+52-11
-ae^n-d+hh=ih@3_1/A:0_0_0/B:1-0-3@1-1&1-12#1-7$1-4!0-1;0-1|ae/C:1+1+3/D:0_0/E:cc+1@1+8&1+6#0+1/F:content_1/G:0_0/H:12=8@1=11|L-H%/I:8=6/J:64+52-11
-n^d-hh+ih=r@1_3/A:1_0_3/B:1-1-3@1-1&2-11#1-6$1-3!1-1;0-7|ih/C:1+0+2/D:cc_1/E:content+1@2+7&1+5#0+1/F:content_2/G:0_0/H:12=8@1=11|L-H%/I:8=6/J:64+52-11
-d^hh-ih+r=ae@2_2/A:1_0_3/B:1-1-3@1-1&2-11#1-6$1-3!1-1;0-7|ih/C:1+0+2/D:cc_1/E:content+1@2+7&1+5#0+1/F:content_2/G:0_0/H:12=8@1=11|L-H%/I:8=6/J:64+52-11
-hh^ih-r+ae=l@3_1/A:1_0_3/B:1-1-3@1-1&2-11#1-6$1-3!1-1;0-7|ih/C:1+0+2/D:cc_1/E:content+1@2+7&1+5#0+1/F:content_2/G:0_0/H:12=8@1=11|L-H%/I:8=6/J:64+52-11
-ih^r-ae+l=ax@1_2/A:1_1_3/B:1-0-2@1-2&3-10#2-5$2-3!1-3;1-6|ae/C:0+0+2/D:content_1/E:content+2@3+6&2+4#1+1/F:content_2/G:0_0/H:12=8@1=11|L-H%/I:8=6/J:64+52-11
-r^ae-l+ax=s@2_1/A:1_1_3/B:1-0-2@1-2&3-10#2-5$2-3!1-3;1-6|ae/C:0+0+2/D:content_1/E:content+2@3+6&2+4#1+1/F:content_2/G:0_0/H:12=8@1=11|L-H%/I:8=6/J:64+52-11
-ae^l-ax+s=b@1_2/A:1_0_2/B:0-0-2@2-1&4-9#3-5$2-3!1-2;2-5|ax/C:0+0+3/D:content_1/E:content+2@3+6&2+4#1+1/F:content_2/G:0_0/H:12=8@1=11|L-H%/I:8=6/J:64+52-11
-l^ax-s+b=ih@2_1/A:1_0_2/B:0-0-2@2-1&4-9#3-5$2-3!1-2;2-5|ax/C:0+0+3/D:content_1/E:content+2@3+6&2+4#1+1/F:content_2/G:0_0/H:12=8@1=11|L-H%/I:8=6/J:64+52-11
-ax^s-b+ih=g@1_3/A:0_0_2/B:0-0-3@1-2&5-8#3-5$2-3!2-1;3-4|ih/C:1+0+2/D:content_2/E:content+2@4+5&3+3#1+2/F:to_1/G:0_0/H:12=8@1=11|L-H%/I:8=6/J:64+52-11
-s^b-ih+g=ae@2_2/A:0_0_2/B:0-0-3@1-2&5-8#3-5$2-3!2-1;3-4|ih/C:1+0+2/D:content_2/E:content+2@4+5&3+3#1+2/F:to_1/G:0_0/H:12=8@1=11|L-H%/I:8=6/J:64+52-11
-b^ih-g+ae=n@3_1/A:0_0_2/B:0-0-3@1-2&5-8#3-5$2-3!2-1;3-4|ih/C:1+0+2/D:content_2/E:content+2@4+5&3+3#1+2/F:to_1/G:0_0/H:12=8@1=11|L-H%/I:8=6/J:64+52-11
-ih^g-ae+n=t@1_2/A:0_0_3/B:1-0-2@2-1&6-7#3-4$2-3!3-2;4-3|ae/C:0+0+2/D:content_2/E:content+2@4+5&3+3#1+2/F:to_1/G:0_0/H:12=8@1=11|L-H%/I:8=6/J:64+52-11
-g^ae-n+t=ax@2_1/A:0_0_3/B:1-0-2@2-1&6-7#3-4$2-3!3-2;4-3|ae/C:0+0+2/D:content_2/E:content+2@4+5&3+3#1+2/F:to_1/G:0_0/H:12=8@1=11|L-H%/I:8=6/J:64+52-11
-ae^n-t+ax=g@1_2/A:1_0_2/B:0-0-2@1-1&7-6#4-4$2-3!1-1;5-2|ax/C:1+0+3/D:content_2/E:to+1@5+4&4+3#1+1/F:content_1/G:0_0/H:12=8@1=11|L-H%/I:8=6/J:64+52-11
-n^t-ax+g=eh@2_1/A:1_0_2/B:0-0-2@1-1&7-6#4-4$2-3!1-1;5-2|ax/C:1+0+3/D:content_2/E:to+1@5+4&4+3#1+1/F:content_1/G:0_0/H:12=8@1=11|L-H%/I:8=6/J:64+52-11
-t^ax-g+eh=t@1_3/A:0_0_2/B:1-0-3@1-1&8-5#4-3$2-3!2-1;6-1|eh/C:1+1+3/D:to_1/E:content+1@6+3&4+2#2+1/F:content_2/G:0_0/H:12=8@1=11|L-H%/I:8=6/J:64+52-11
-ax^g-eh+t=r@2_2/A:0_0_2/B:1-0-3@1-1&8-5#4-3$2-3!2-1;6-1|eh/C:1+1+3/D:to_1/E:content+1@6+3&4+2#2+1/F:content_2/G:0_0/H:12=8@1=11|L-H%/I:8=6/J:64+52-11
-g^eh-t+r=ae@3_1/A:0_0_2/B:1-0-3@1-1&8-5#4-3$2-3!2-1;6-1|eh/C:1+1+3/D:to_1/E:content+1@6+3&4+2#2+1/F:content_2/G:0_0/H:12=8@1=11|L-H%/I:8=6/J:64+52-11
-eh^t-r+ae=dh@1_3/A:1_0_3/B:1-1-3@1-2&9-4#5-2$2-2!1-2;7-3|ae/C:0+0+1/D:content_1/E:content+2@7+2&5+1#1+1/F:content_2/G:0_0/H:12=8@1=11|L-H%/I:8=6/J:64+52-11
-t^r-ae+dh=er@2_2/A:1_0_3/B:1-1-3@1-2&9-4#5-2$2-2!1-2;7-3|ae/C:0+0+1/D:content_1/E:content+2@7+2&5+1#1+1/F:content_2/G:0_0/H:12=8@1=11|L-H%/I:8=6/J:64+52-11
-r^ae-dh+er=s@3_1/A:1_0_3/B:1-1-3@1-2&9-4#5-2$2-2!1-2;7-3|ae/C:0+0+1/D:content_1/E:content+2@7+2&5+1#1+1/F:content_2/G:0_0/H:12=8@1=11|L-H%/I:8=6/J:64+52-11
-ae^dh-er+s=l@1_1/A:1_1_3/B:0-0-1@2-1&10-3#6-2$3-2!1-1;1-2|er/C:1+0+4/D:content_1/E:content+2@7+2&5+1#1+1/F:content_2/G:0_0/H:12=8@1=11|L-H%/I:8=6/J:64+52-11
-dh^er-s+l=iy@1_4/A:0_0_1/B:1-0-4@1-2&11-2#6-1$3-2!2-0;2-1|iy/C:0+1+1/D:content_2/E:content+2@8+1&6+0#1+0/F:cc_1/G:0_0/H:12=8@1=11|L-H%/I:8=6/J:64+52-11
-er^s-l+iy=p@2_3/A:0_0_1/B:1-0-4@1-2&11-2#6-1$3-2!2-0;2-1|iy/C:0+1+1/D:content_2/E:content+2@8+1&6+0#1+0/F:cc_1/G:0_0/H:12=8@1=11|L-H%/I:8=6/J:64+52-11
-s^l-iy+p=iy@3_2/A:0_0_1/B:1-0-4@1-2&11-2#6-1$3-2!2-0;2-1|iy/C:0+1+1/D:content_2/E:content+2@8+1&6+0#1+0/F:cc_1/G:0_0/H:12=8@1=11|L-H%/I:8=6/J:64+52-11
-l^iy-p+iy=pau@4_1/A:0_0_1/B:1-0-4@1-2&11-2#6-1$3-2!2-0;2-1|iy/C:0+1+1/D:content_2/E:content+2@8+1&6+0#1+0/F:cc_1/G:0_0/H:12=8@1=11|L-H%/I:8=6/J:64+52-11
-iy^p-iy+pau=ae@1_1/A:1_0_4/B:0-1-1@2-1&12-1#7-1$3-1!1-0;3-0|iy/C:1+0+3/D:content_2/E:content+2@8+1&6+0#1+0/F:cc_1/G:0_0/H:12=8@1=11|L-H%/I:8=6/J:64+52-11
-p^iy-pau+ae=n@x_x/A:0_1_1/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_2/E:x+x@x+x&x+x#x+x/F:cc_1/G:12_8/H:x=x@1=11|0/I:8=6/J:64+52-11
-iy^pau-ae+n=d@1_3/A:0_1_1/B:1-0-3@1-1&1-8#1-5$1-4!0-1;0-1|ae/C:1+1+4/D:content_2/E:cc+1@1+6&1+3#0+1/F:content_1/G:12_8/H:8=6@2=10|L-L%/I:7=6/J:64+52-11
-pau^ae-n+d=w@2_2/A:0_1_1/B:1-0-3@1-1&1-8#1-5$1-4!0-1;0-1|ae/C:1+1+4/D:content_2/E:cc+1@1+6&1+3#0+1/F:content_1/G:12_8/H:8=6@2=10|L-L%/I:7=6/J:64+52-11
-ae^n-d+w=eh@3_1/A:0_1_1/B:1-0-3@1-1&1-8#1-5$1-4!0-1;0-1|ae/C:1+1+4/D:content_2/E:cc+1@1+6&1+3#0+1/F:content_1/G:12_8/H:8=6@2=10|L-L%/I:7=6/J:64+52-11
-n^d-w+eh=n@1_4/A:1_0_3/B:1-1-4@1-1&2-7#1-4$1-3!1-1;0-2|eh/C:1+0+2/D:cc_1/E:content+1@2+5&1+2#0+2/F:in_1/G:12_8/H:8=6@2=10|L-L%/I:7=6/J:64+52-11
-d^w-eh+n=t@2_3/A:1_0_3/B:1-1-4@1-1&2-7#1-4$1-3!1-1;0-2|eh/C:1+0+2/D:cc_1/E:content+1@2+5&1+2#0+2/F:in_1/G:12_8/H:8=6@2=10|L-L%/I:7=6/J:64+52-11
-w^eh-n+t=aa@3_2/A:1_0_3/B:1-1-4@1-1&2-7#1-4$1-3!1-1;0-2|eh/C:1+0+2/D:cc_1/E:content+1@2+5&1+2#0+2/F:in_1/G:12_8/H:8=6@2=10|L-L%/I:7=6/J:64+52-11
-eh^n-t+aa=n@4_1/A:1_0_3/B:1-1-4@1-1&2-7#1-4$1-3!1-1;0-2|eh/C:1+0+2/D:cc_1/E:content+1@2+5&1+2#0+2/F:in_1/G:12_8/H:8=6@2=10|L-L%/I:7=6/J:64+52-11
-n^t-aa+n=s@1_2/A:1_1_4/B:1-0-2@1-1&3-6#2-3$2-3!1-1;1-1|aa/C:1+1+2/D:content_1/E:in+1@3+4&2+2#1+1/F:content_2/G:12_8/H:8=6@2=10|L-L%/I:7=6/J:64+52-11
-t^aa-n+s=ey@2_1/A:1_1_4/B:1-0-2@1-1&3-6#2-3$2-3!1-1;1-1|aa/C:1+1+2/D:content_1/E:in+1@3+4&2+2#1+1/F:content_2/G:12_8/H:8=6@2=10|L-L%/I:7=6/J:64+52-11
-aa^n-s+ey=ih@1_2/A:1_0_2/B:1-1-2@1-2&4-5#3-2$2-2!1-4;2-4|ey/C:0+0+2/D:in_1/E:content+2@4+3&2+1#2+2/F:to_1/G:12_8/H:8=6@2=10|L-L%/I:7=6/J:64+52-11
-n^s-ey+ih=ng@2_1/A:1_0_2/B:1-1-2@1-2&4-5#3-2$2-2!1-4;2-4|ey/C:0+0+2/D:in_1/E:content+2@4+3&2+1#2+2/F:to_1/G:12_8/H:8=6@2=10|L-L%/I:7=6/J:64+52-11
-s^ey-ih+ng=t@1_2/A:1_1_2/B:0-0-2@2-1&5-4#4-2$3-2!1-3;1-3|ih/C:0+0+2/D:in_1/E:content+2@4+3&2+1#2+2/F:to_1/G:12_8/H:8=6@2=10|L-L%/I:7=6/J:64+52-11
-ey^ih-ng+t=ax@2_1/A:1_1_2/B:0-0-2@2-1&5-4#4-2$3-2!1-3;1-3|ih/C:0+0+2/D:in_1/E:content+2@4+3&2+1#2+2/F:to_1/G:12_8/H:8=6@2=10|L-L%/I:7=6/J:64+52-11
-ih^ng-t+ax=hh@1_2/A:0_0_2/B:0-0-2@1-1&6-3#4-2$3-2!2-2;2-2|ax/C:0+0+3/D:content_2/E:to+1@5+2&3+1#1+1/F:content_2/G:12_8/H:8=6@2=10|L-L%/I:7=6/J:64+52-11
-ng^t-ax+hh=er@2_1/A:0_0_2/B:0-0-2@1-1&6-3#4-2$3-2!2-2;2-2|ax/C:0+0+3/D:content_2/E:to+1@5+2&3+1#1+1/F:content_2/G:12_8/H:8=6@2=10|L-L%/I:7=6/J:64+52-11
-t^ax-hh+er=s@1_3/A:0_0_2/B:0-0-3@1-2&7-2#4-2$3-2!3-1;3-1|er/C:1+1+3/D:to_1/E:content+2@6+1&3+0#2+0/F:in_1/G:12_8/H:8=6@2=10|L-L%/I:7=6/J:64+52-11
-ax^hh-er+s=eh@2_2/A:0_0_2/B:0-0-3@1-2&7-2#4-2$3-2!3-1;3-1|er/C:1+1+3/D:to_1/E:content+2@6+1&3+0#2+0/F:in_1/G:12_8/H:8=6@2=10|L-L%/I:7=6/J:64+52-11
-hh^er-s+eh=l@3_1/A:0_0_2/B:0-0-3@1-2&7-2#4-2$3-2!3-1;3-1|er/C:1+1+3/D:to_1/E:content+2@6+1&3+0#2+0/F:in_1/G:12_8/H:8=6@2=10|L-L%/I:7=6/J:64+52-11
-er^s-eh+l=f@1_3/A:0_0_3/B:1-1-3@2-1&8-1#4-1$3-1!4-0;4-0|eh/C:0+0+2/D:to_1/E:content+2@6+1&3+0#2+0/F:in_1/G:12_8/H:8=6@2=10|L-L%/I:7=6/J:64+52-11
-s^eh-l+f=pau@2_2/A:0_0_3/B:1-1-3@2-1&8-1#4-1$3-1!4-0;4-0|eh/C:0+0+2/D:to_1/E:content+2@6+1&3+0#2+0/F:in_1/G:12_8/H:8=6@2=10|L-L%/I:7=6/J:64+52-11
-eh^l-f+pau=ih@3_1/A:0_0_3/B:1-1-3@2-1&8-1#4-1$3-1!4-0;4-0|eh/C:0+0+2/D:to_1/E:content+2@6+1&3+0#2+0/F:in_1/G:12_8/H:8=6@2=10|L-L%/I:7=6/J:64+52-11
-l^f-pau+ih=n@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+2/D:content_2/E:x+x@x+x&x+x#x+x/F:in_1/G:8_6/H:x=x@1=11|0/I:7=6/J:64+52-11
-f^pau-ih+n=ax@1_2/A:1_1_3/B:0-0-2@1-1&1-7#1-5$1-3!0-2;0-2|ih/C:0+0+1/D:content_2/E:in+1@1+6&1+3#0+2/F:det_1/G:8_6/H:7=6@3=9|L-L%/I:4=4/J:64+52-11
-pau^ih-n+ax=d@2_1/A:1_1_3/B:0-0-2@1-1&1-7#1-5$1-3!0-2;0-2|ih/C:0+0+1/D:content_2/E:in+1@1+6&1+3#0+2/F:det_1/G:8_6/H:7=6@3=9|L-L%/I:4=4/J:64+52-11
-ih^n-ax+d=r@1_1/A:0_0_2/B:0-0-1@1-1&2-6#1-5$1-3!0-1;0-1|ax/C:1+1+4/D:in_1/E:det+1@2+5&1+3#0+1/F:content_2/G:8_6/H:7=6@3=9|L-L%/I:4=4/J:64+52-11
-n^ax-d+r=iy@1_4/A:0_0_1/B:1-1-4@1-2&3-5#1-4$1-2!0-2;0-4|iy/C:0+0+1/D:det_1/E:content+2@3+4&1+2#0+1/F:content_1/G:8_6/H:7=6@3=9|L-L%/I:4=4/J:64+52-11
-ax^d-r+iy=m@2_3/A:0_0_1/B:1-1-4@1-2&3-5#1-4$1-2!0-2;0-4|iy/C:0+0+1/D:det_1/E:content+2@3+4&1+2#0+1/F:content_1/G:8_6/H:7=6@3=9|L-L%/I:4=4/J:64+52-11
-d^r-iy+m=iy@3_2/A:0_0_1/B:1-1-4@1-2&3-5#1-4$1-2!0-2;0-4|iy/C:0+0+1/D:det_1/E:content+2@3+4&1+2#0+1/F:content_1/G:8_6/H:7=6@3=9|L-L%/I:4=4/J:64+52-11
-r^iy-m+iy=s@4_1/A:0_0_1/B:1-1-4@1-2&3-5#1-4$1-2!0-2;0-4|iy/C:0+0+1/D:det_1/E:content+2@3+4&1+2#0+1/F:content_1/G:8_6/H:7=6@3=9|L-L%/I:4=4/J:64+52-11
-iy^m-iy+s=ao@1_1/A:1_1_4/B:0-0-1@2-1&4-4#2-4$2-2!1-1;1-3|iy/C:1+0+4/D:det_1/E:content+2@3+4&1+2#0+1/F:content_1/G:8_6/H:7=6@3=9|L-L%/I:4=4/J:64+52-11
-m^iy-s+ao=r@1_4/A:0_0_1/B:1-0-4@1-1&5-3#2-3$2-2!2-1;2-2|ao/C:1+0+2/D:content_2/E:content+1@4+3&2+1#1+2/F:in_1/G:8_6/H:7=6@3=9|L-L%/I:4=4/J:64+52-11
-iy^s-ao+r=t@2_3/A:0_0_1/B:1-0-4@1-1&5-3#2-3$2-2!2-1;2-2|ao/C:1+0+2/D:content_2/E:content+1@4+3&2+1#1+2/F:in_1/G:8_6/H:7=6@3=9|L-L%/I:4=4/J:64+52-11
-s^ao-r+t=ah@3_2/A:0_0_1/B:1-0-4@1-1&5-3#2-3$2-2!2-1;2-2|ao/C:1+0+2/D:content_2/E:content+1@4+3&2+1#1+2/F:in_1/G:8_6/H:7=6@3=9|L-L%/I:4=4/J:64+52-11
-ao^r-t+ah=v@4_1/A:0_0_1/B:1-0-4@1-1&5-3#2-3$2-2!2-1;2-2|ao/C:1+0+2/D:content_2/E:content+1@4+3&2+1#1+2/F:in_1/G:8_6/H:7=6@3=9|L-L%/I:4=4/J:64+52-11
-r^t-ah+v=w@1_2/A:1_0_4/B:1-0-2@1-1&6-2#3-2$2-2!1-1;3-1|ah/C:1+1+2/D:content_1/E:in+1@5+2&3+1#1+1/F:content_1/G:8_6/H:7=6@3=9|L-L%/I:4=4/J:64+52-11
-t^ah-v+w=ey@2_1/A:1_0_4/B:1-0-2@1-1&6-2#3-2$2-2!1-1;3-1|ah/C:1+1+2/D:content_1/E:in+1@5+2&3+1#1+1/F:content_1/G:8_6/H:7=6@3=9|L-L%/I:4=4/J:64+52-11
-ah^v-w+ey=pau@1_2/A:1_0_2/B:1-1-2@1-1&7-1#4-1$2-1!1-0;4-0|ey/C:1+0+2/D:in_1/E:content+1@6+1&3+0#2+0/F:content_1/G:8_6/H:7=6@3=9|L-L%/I:4=4/J:64+52-11
-v^w-ey+pau=d@2_1/A:1_0_2/B:1-1-2@1-1&7-1#4-1$2-1!1-0;4-0|ey/C:1+0+2/D:in_1/E:content+1@6+1&3+0#2+0/F:content_1/G:8_6/H:7=6@3=9|L-L%/I:4=4/J:64+52-11
-w^ey-pau+d=uw@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:content_1/E:x+x@x+x&x+x#x+x/F:content_1/G:7_6/H:x=x@1=11|0/I:4=4/J:64+52-11
-ey^pau-d+uw=k@1_2/A:1_1_2/B:1-0-2@1-1&1-4#1-4$1-4!0-1;0-1|uw/C:1+1+4/D:content_1/E:content+1@1+4&1+3#0+1/F:content_1/G:7_6/H:4=4@4=8|L-L%/I:7=6/J:64+52-11
-pau^d-uw+k=ae@2_1/A:1_1_2/B:1-0-2@1-1&1-4#1-4$1-4!0-1;0-1|uw/C:1+1+4/D:content_1/E:content+1@1+4&1+3#0+1/F:content_1/G:7_6/H:4=4@4=8|L-L%/I:7=6/J:64+52-11
-d^uw-k+ae=t@1_4/A:1_0_2/B:1-1-4@1-1&2-3#1-3$1-3!1-1;0-1|ae/C:1+1+2/D:content_1/E:content+1@2+3&2+2#1+1/F:content_1/G:7_6/H:4=4@4=8|L-L%/I:7=6/J:64+52-11
-uw^k-ae+t=s@2_3/A:1_0_2/B:1-1-4@1-1&2-3#1-3$1-3!1-1;0-1|ae/C:1+1+2/D:content_1/E:content+1@2+3&2+2#1+1/F:content_1/G:7_6/H:4=4@4=8|L-L%/I:7=6/J:64+52-11
-k^ae-t+s=iy@3_2/A:1_0_2/B:1-1-4@1-1&2-3#1-3$1-3!1-1;0-1|ae/C:1+1+2/D:content_1/E:content+1@2+3&2+2#1+1/F:content_1/G:7_6/H:4=4@4=8|L-L%/I:7=6/J:64+52-11
-ae^t-s+iy=t@4_1/A:1_0_2/B:1-1-4@1-1&2-3#1-3$1-3!1-1;0-1|ae/C:1+1+2/D:content_1/E:content+1@2+3&2+2#1+1/F:content_1/G:7_6/H:4=4@4=8|L-L%/I:7=6/J:64+52-11
-t^s-iy+t=b@1_2/A:1_1_4/B:1-1-2@1-1&3-2#2-2$2-2!1-1;1-1|iy/C:1+1+4/D:content_1/E:content+1@3+2&3+1#1+1/F:content_1/G:7_6/H:4=4@4=8|L-L%/I:7=6/J:64+52-11
-s^iy-t+b=ae@2_1/A:1_1_4/B:1-1-2@1-1&3-2#2-2$2-2!1-1;1-1|iy/C:1+1+4/D:content_1/E:content+1@3+2&3+1#1+1/F:content_1/G:7_6/H:4=4@4=8|L-L%/I:7=6/J:64+52-11
-iy^t-b+ae=t@1_4/A:1_1_2/B:1-1-4@1-1&4-1#3-1$3-1!1-0;1-0|ae/C:1+1+2/D:content_1/E:content+1@4+1&4+0#1+0/F:content_1/G:7_6/H:4=4@4=8|L-L%/I:7=6/J:64+52-11
-t^b-ae+t=s@2_3/A:1_1_2/B:1-1-4@1-1&4-1#3-1$3-1!1-0;1-0|ae/C:1+1+2/D:content_1/E:content+1@4+1&4+0#1+0/F:content_1/G:7_6/H:4=4@4=8|L-L%/I:7=6/J:64+52-11
-b^ae-t+s=pau@3_2/A:1_1_2/B:1-1-4@1-1&4-1#3-1$3-1!1-0;1-0|ae/C:1+1+2/D:content_1/E:content+1@4+1&4+0#1+0/F:content_1/G:7_6/H:4=4@4=8|L-L%/I:7=6/J:64+52-11
-ae^t-s+pau=d@4_1/A:1_1_2/B:1-1-4@1-1&4-1#3-1$3-1!1-0;1-0|ae/C:1+1+2/D:content_1/E:content+1@4+1&4+0#1+0/F:content_1/G:7_6/H:4=4@4=8|L-L%/I:7=6/J:64+52-11
-t^s-pau+d=uw@x_x/A:1_1_4/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+2/D:content_1/E:x+x@x+x&x+x#x+x/F:content_1/G:4_4/H:x=x@1=11|0/I:7=6/J:64+52-11
-s^pau-d+uw=k@1_2/A:1_1_4/B:1-1-2@1-1&1-7#1-6$1-4!0-1;0-1|uw/C:1+1+4/D:content_1/E:content+1@1+6&1+4#0+1/F:content_1/G:4_4/H:7=6@1=11|L-L%/I:4=4/J:64+52-11
-pau^d-uw+k=ae@2_1/A:1_1_4/B:1-1-2@1-1&1-7#1-6$1-4!0-1;0-1|uw/C:1+1+4/D:content_1/E:content+1@1+6&1+4#0+1/F:content_1/G:4_4/H:7=6@1=11|L-L%/I:4=4/J:64+52-11
-d^uw-k+ae=t@1_4/A:1_1_2/B:1-1-4@1-1&2-6#1-5$1-3!1-1;1-1|ae/C:1+1+2/D:content_1/E:content+1@2+5&2+3#1+1/F:content_1/G:4_4/H:7=6@1=11|L-L%/I:4=4/J:64+52-11
-uw^k-ae+t=s@2_3/A:1_1_2/B:1-1-4@1-1&2-6#1-5$1-3!1-1;1-1|ae/C:1+1+2/D:content_1/E:content+1@2+5&2+3#1+1/F:content_1/G:4_4/H:7=6@1=11|L-L%/I:4=4/J:64+52-11
-k^ae-t+s=iy@3_2/A:1_1_2/B:1-1-4@1-1&2-6#1-5$1-3!1-1;1-1|ae/C:1+1+2/D:content_1/E:content+1@2+5&2+3#1+1/F:content_1/G:4_4/H:7=6@1=11|L-L%/I:4=4/J:64+52-11
-ae^t-s+iy=t@4_1/A:1_1_2/B:1-1-4@1-1&2-6#1-5$1-3!1-1;1-1|ae/C:1+1+2/D:content_1/E:content+1@2+5&2+3#1+1/F:content_1/G:4_4/H:7=6@1=11|L-L%/I:4=4/J:64+52-11
-t^s-iy+t=b@1_2/A:1_1_4/B:1-1-2@1-1&3-5#2-4$2-2!1-1;1-4|iy/C:1+0+4/D:content_1/E:content+1@3+4&3+2#1+1/F:content_1/G:4_4/H:7=6@1=11|L-L%/I:4=4/J:64+52-11
-s^iy-t+b=ae@2_1/A:1_1_4/B:1-1-2@1-1&3-5#2-4$2-2!1-1;1-4|iy/C:1+0+4/D:content_1/E:content+1@3+4&3+2#1+1/F:content_1/G:4_4/H:7=6@1=11|L-L%/I:4=4/J:64+52-11
-iy^t-b+ae=t@1_4/A:1_1_2/B:1-0-4@1-1&4-4#3-3$3-2!1-1;1-3|ae/C:1+0+3/D:content_1/E:content+1@4+3&4+1#1+2/F:cc_1/G:4_4/H:7=6@1=11|L-L%/I:4=4/J:64+52-11
-t^b-ae+t=s@2_3/A:1_1_2/B:1-0-4@1-1&4-4#3-3$3-2!1-1;1-3|ae/C:1+0+3/D:content_1/E:content+1@4+3&4+1#1+2/F:cc_1/G:4_4/H:7=6@1=11|L-L%/I:4=4/J:64+52-11
-b^ae-t+s=ae@3_2/A:1_1_2/B:1-0-4@1-1&4-4#3-3$3-2!1-1;1-3|ae/C:1+0+3/D:content_1/E:content+1@4+3&4+1#1+2/F:cc_1/G:4_4/H:7=6@1=11|L-L%/I:4=4/J:64+52-11
-ae^t-s+ae=n@4_1/A:1_1_2/B:1-0-4@1-1&4-4#3-3$3-2!1-1;1-3|ae/C:1+0+3/D:content_1/E:content+1@4+3&4+1#1+2/F:cc_1/G:4_4/H:7=6@1=11|L-L%/I:4=4/J:64+52-11
-t^s-ae+n=d@1_3/A:1_0_4/B:1-0-3@1-1&5-3#4-2$3-2!1-2;2-2|ae/C:0+0+4/D:content_1/E:cc+1@5+2&5+1#1+1/F:content_2/G:4_4/H:7=6@1=11|L-L%/I:4=4/J:64+52-11
-s^ae-n+d=s@2_2/A:1_0_4/B:1-0-3@1-1&5-3#4-2$3-2!1-2;2-2|ae/C:0+0+4/D:content_1/E:cc+1@5+2&5+1#1+1/F:content_2/G:4_4/H:7=6@1=11|L-L%/I:4=4/J:64+52-11
-ae^n-d+s=ax@3_1/A:1_0_4/B:1-0-3@1-1&5-3#4-2$3-2!1-2;2-2|ae/C:0+0+4/D:content_1/E:cc+1@5+2&5+1#1+1/F:content_2/G:4_4/H:7=6@1=11|L-L%/I:4=4/J:64+52-11
-n^d-s+ax=m@1_4/A:1_0_3/B:0-0-4@1-2&6-2#5-2$3-2!1-1;3-1|ax/C:1+1+3/D:cc_1/E:content+2@6+1&5+0#2+0/F:content_1/G:4_4/H:7=6@1=11|L-L%/I:4=4/J:64+52-11
-d^s-ax+m=t@2_3/A:1_0_3/B:0-0-4@1-2&6-2#5-2$3-2!1-1;3-1|ax/C:1+1+3/D:cc_1/E:content+2@6+1&5+0#2+0/F:content_1/G:4_4/H:7=6@1=11|L-L%/I:4=4/J:64+52-11
-s^ax-m+t=ay@3_2/A:1_0_3/B:0-0-4@1-2&6-2#5-2$3-2!1-1;3-1|ax/C:1+1+3/D:cc_1/E:content+2@6+1&5+0#2+0/F:content_1/G:4_4/H:7=6@1=11|L-L%/I:4=4/J:64+52-11
-ax^m-t+ay=m@4_1/A:1_0_3/B:0-0-4@1-2&6-2#5-2$3-2!1-1;3-1|ax/C:1+1+3/D:cc_1/E:content+2@6+1&5+0#2+0/F:content_1/G:4_4/H:7=6@1=11|L-L%/I:4=4/J:64+52-11
-m^t-ay+m=z@1_3/A:0_0_4/B:1-1-3@2-1&7-1#5-1$3-1!2-0;4-0|ay/C:1+0+2/D:cc_1/E:content+2@6+1&5+0#2+0/F:content_1/G:4_4/H:7=6@1=11|L-L%/I:4=4/J:64+52-11
-t^ay-m+z=pau@2_2/A:0_0_4/B:1-1-3@2-1&7-1#5-1$3-1!2-0;4-0|ay/C:1+0+2/D:cc_1/E:content+2@6+1&5+0#2+0/F:content_1/G:4_4/H:7=6@1=11|L-L%/I:4=4/J:64+52-11
-ay^m-z+pau=d@3_1/A:0_0_4/B:1-1-3@2-1&7-1#5-1$3-1!2-0;4-0|ay/C:1+0+2/D:cc_1/E:content+2@6+1&5+0#2+0/F:content_1/G:4_4/H:7=6@1=11|L-L%/I:4=4/J:64+52-11
-m^z-pau+d=uw@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:content_2/E:x+x@x+x&x+x#x+x/F:content_1/G:7_6/H:x=x@1=11|0/I:4=4/J:64+52-11
-z^pau-d+uw=b@1_2/A:1_1_3/B:1-0-2@1-1&1-4#1-4$1-3!0-1;0-1|uw/C:1+1+4/D:content_2/E:content+1@1+4&1+3#0+1/F:content_1/G:7_6/H:4=4@2=10|NONE/I:1=1/J:64+52-11
-pau^d-uw+b=ae@2_1/A:1_1_3/B:1-0-2@1-1&1-4#1-4$1-3!0-1;0-1|uw/C:1+1+4/D:content_2/E:content+1@1+4&1+3#0+1/F:content_1/G:7_6/H:4=4@2=10|NONE/I:1=1/J:64+52-11
-d^uw-b+ae=t@1_4/A:1_0_2/B:1-1-4@1-1&2-3#1-3$1-2!1-1;0-1|ae/C:1+1+2/D:content_1/E:content+1@2+3&2+2#1+1/F:content_1/G:7_6/H:4=4@2=10|NONE/I:1=1/J:64+52-11
-uw^b-ae+t=s@2_3/A:1_0_2/B:1-1-4@1-1&2-3#1-3$1-2!1-1;0-1|ae/C:1+1+2/D:content_1/E:content+1@2+3&2+2#1+1/F:content_1/G:7_6/H:4=4@2=10|NONE/I:1=1/J:64+52-11
-b^ae-t+s=iy@3_2/A:1_0_2/B:1-1-4@1-1&2-3#1-3$1-2!1-1;0-1|ae/C:1+1+2/D:content_1/E:content+1@2+3&2+2#1+1/F:content_1/G:7_6/H:4=4@2=10|NONE/I:1=1/J:64+52-11
-ae^t-s+iy=t@4_1/A:1_0_2/B:1-1-4@1-1&2-3#1-3$1-2!1-1;0-1|ae/C:1+1+2/D:content_1/E:content+1@2+3&2+2#1+1/F:content_1/G:7_6/H:4=4@2=10|NONE/I:1=1/J:64+52-11
-t^s-iy+t=k@1_2/A:1_1_4/B:1-1-2@1-1&3-2#2-2$2-1!1-1;1-0|iy/C:1+0+4/D:content_1/E:content+1@3+2&3+1#1+1/F:content_1/G:7_6/H:4=4@2=10|NONE/I:1=1/J:64+52-11
-s^iy-t+k=ae@2_1/A:1_1_4/B:1-1-2@1-1&3-2#2-2$2-1!1-1;1-0|iy/C:1+0+4/D:content_1/E:content+1@3+2&3+1#1+1/F:content_1/G:7_6/H:4=4@2=10|NONE/I:1=1/J:64+52-11
-iy^t-k+ae=t@1_4/A:1_1_2/B:1-0-4@1-1&4-1#3-1$3-1!1-0;1-0|ae/C:1+0+3/D:content_1/E:content+1@4+1&4+0#1+0/F:in_1/G:7_6/H:4=4@2=10|NONE/I:1=1/J:64+52-11
-t^k-ae+t=s@2_3/A:1_1_2/B:1-0-4@1-1&4-1#3-1$3-1!1-0;1-0|ae/C:1+0+3/D:content_1/E:content+1@4+1&4+0#1+0/F:in_1/G:7_6/H:4=4@2=10|NONE/I:1=1/J:64+52-11
-k^ae-t+s=pau@3_2/A:1_1_2/B:1-0-4@1-1&4-1#3-1$3-1!1-0;1-0|ae/C:1+0+3/D:content_1/E:content+1@4+1&4+0#1+0/F:in_1/G:7_6/H:4=4@2=10|NONE/I:1=1/J:64+52-11
-ae^t-s+pau=f@4_1/A:1_1_2/B:1-0-4@1-1&4-1#3-1$3-1!1-0;1-0|ae/C:1+0+3/D:content_1/E:content+1@4+1&4+0#1+0/F:in_1/G:7_6/H:4=4@2=10|NONE/I:1=1/J:64+52-11
-t^s-pau+f=ao@x_x/A:1_0_4/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:in_1/G:4_4/H:x=x@1=11|0/I:1=1/J:64+52-11
-s^pau-f+ao=r@1_3/A:1_0_4/B:1-0-3@1-1&1-1#1-1$1-1!0-0;0-0|ao/C:1+0+2/D:content_1/E:in+1@1+1&1+0#0+0/F:content_1/G:4_4/H:1=1@1=11|NONE/I:2=2/J:64+52-11
-pau^f-ao+r=pau@2_2/A:1_0_4/B:1-0-3@1-1&1-1#1-1$1-1!0-0;0-0|ao/C:1+0+2/D:content_1/E:in+1@1+1&1+0#0+0/F:content_1/G:4_4/H:1=1@1=11|NONE/I:2=2/J:64+52-11
-f^ao-r+pau=y@3_1/A:1_0_4/B:1-0-3@1-1&1-1#1-1$1-1!0-0;0-0|ao/C:1+0+2/D:content_1/E:in+1@1+1&1+0#0+0/F:content_1/G:4_4/H:1=1@1=11|NONE/I:2=2/J:64+52-11
-ao^r-pau+y=uw@x_x/A:1_0_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:in_1/E:x+x@x+x&x+x#x+x/F:content_1/G:1_1/H:x=x@1=11|0/I:2=2/J:64+52-11
-r^pau-y+uw=s@1_2/A:1_0_3/B:1-0-2@1-1&1-2#1-2$1-2!0-1;0-1|uw/C:1+1+2/D:in_1/E:content+1@1+2&1+1#0+1/F:content_1/G:1_1/H:2=2@2=10|L-L%/I:9=6/J:64+52-11
-pau^y-uw+s=iy@2_1/A:1_0_3/B:1-0-2@1-1&1-2#1-2$1-2!0-1;0-1|uw/C:1+1+2/D:in_1/E:content+1@1+2&1+1#0+1/F:content_1/G:1_1/H:2=2@2=10|L-L%/I:9=6/J:64+52-11
-y^uw-s+iy=pau@1_2/A:1_0_2/B:1-1-2@1-1&2-1#1-1$1-1!1-0;0-0|iy/C:1+0+2/D:content_1/E:content+1@2+1&2+0#1+0/F:in_1/G:1_1/H:2=2@2=10|L-L%/I:9=6/J:64+52-11
-uw^s-iy+pau=ae@2_1/A:1_0_2/B:1-1-2@1-1&2-1#1-1$1-1!1-0;0-0|iy/C:1+0+2/D:content_1/E:content+1@2+1&2+0#1+0/F:in_1/G:1_1/H:2=2@2=10|L-L%/I:9=6/J:64+52-11
-s^iy-pau+ae=z@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:content_1/E:x+x@x+x&x+x#x+x/F:in_1/G:2_2/H:x=x@1=11|0/I:9=6/J:64+52-11
-iy^pau-ae+z=sh@1_2/A:1_1_2/B:1-0-2@1-1&1-9#1-6$1-4!0-1;0-1|ae/C:1+1+2/D:content_1/E:in+1@1+6&1+5#0+1/F:content_1/G:2_2/H:9=6@3=9|L-L%/I:6=5/J:64+52-11
-pau^ae-z+sh=iy@2_1/A:1_1_2/B:1-0-2@1-1&1-9#1-6$1-4!0-1;0-1|ae/C:1+1+2/D:content_1/E:in+1@1+6&1+5#0+1/F:content_1/G:2_2/H:9=6@3=9|L-L%/I:6=5/J:64+52-11
-ae^z-sh+iy=k@1_2/A:1_0_2/B:1-1-2@1-1&2-8#1-5$1-3!1-1;0-6|iy/C:1+0+5/D:in_1/E:content+1@2+5&1+4#0+1/F:content_1/G:2_2/H:9=6@3=9|L-L%/I:6=5/J:64+52-11
-z^sh-iy+k=uh@2_1/A:1_0_2/B:1-1-2@1-1&2-8#1-5$1-3!1-1;0-6|iy/C:1+0+5/D:in_1/E:content+1@2+5&1+4#0+1/F:content_1/G:2_2/H:9=6@3=9|L-L%/I:6=5/J:64+52-11
-sh^iy-k+uh=d@1_5/A:1_1_2/B:1-0-5@1-1&3-7#2-4$2-3!1-1;1-5|uh/C:1+0+3/D:content_1/E:content+1@3+4&2+3#1+1/F:content_2/G:2_2/H:9=6@3=9|L-L%/I:6=5/J:64+52-11
-iy^k-uh+d=n@2_4/A:1_1_2/B:1-0-5@1-1&3-7#2-4$2-3!1-1;1-5|uh/C:1+0+3/D:content_1/E:content+1@3+4&2+3#1+1/F:content_2/G:2_2/H:9=6@3=9|L-L%/I:6=5/J:64+52-11
-k^uh-d+n=t@3_3/A:1_1_2/B:1-0-5@1-1&3-7#2-4$2-3!1-1;1-5|uh/C:1+0+3/D:content_1/E:content+1@3+4&2+3#1+1/F:content_2/G:2_2/H:9=6@3=9|L-L%/I:6=5/J:64+52-11
-uh^d-n+t=ae@4_2/A:1_1_2/B:1-0-5@1-1&3-7#2-4$2-3!1-1;1-5|uh/C:1+0+3/D:content_1/E:content+1@3+4&2+3#1+1/F:content_2/G:2_2/H:9=6@3=9|L-L%/I:6=5/J:64+52-11
-d^n-t+ae=n@5_1/A:1_1_2/B:1-0-5@1-1&3-7#2-4$2-3!1-1;1-5|uh/C:1+0+3/D:content_1/E:content+1@3+4&2+3#1+1/F:content_2/G:2_2/H:9=6@3=9|L-L%/I:6=5/J:64+52-11
-n^t-ae+n=s@1_3/A:1_0_5/B:1-0-3@1-2&4-6#3-3$2-3!1-2;2-4|ae/C:0+0+1/D:content_1/E:content+2@4+3&3+2#1+1/F:content_2/G:2_2/H:9=6@3=9|L-L%/I:6=5/J:64+52-11
-t^ae-n+s=er@2_2/A:1_0_5/B:1-0-3@1-2&4-6#3-3$2-3!1-2;2-4|ae/C:0+0+1/D:content_1/E:content+2@4+3&3+2#1+1/F:content_2/G:2_2/H:9=6@3=9|L-L%/I:6=5/J:64+52-11
-ae^n-s+er=iy@3_1/A:1_0_5/B:1-0-3@1-2&4-6#3-3$2-3!1-2;2-4|ae/C:0+0+1/D:content_1/E:content+2@4+3&3+2#1+1/F:content_2/G:2_2/H:9=6@3=9|L-L%/I:6=5/J:64+52-11
-n^s-er+iy=dh@1_1/A:1_0_3/B:0-0-1@2-1&5-5#4-3$2-3!1-1;3-3|er/C:1+0+2/D:content_1/E:content+2@4+3&3+2#1+1/F:content_2/G:2_2/H:9=6@3=9|L-L%/I:6=5/J:64+52-11
-s^er-iy+dh=er@1_2/A:0_0_1/B:1-0-2@1-2&6-4#4-2$2-3!2-2;4-2|iy/C:0+0+1/D:content_2/E:content+2@5+2&4+1#1+1/F:content_2/G:2_2/H:9=6@3=9|L-L%/I:6=5/J:64+52-11
-er^iy-dh+er=k@2_1/A:0_0_1/B:1-0-2@1-2&6-4#4-2$2-3!2-2;4-2|iy/C:0+0+1/D:content_2/E:content+2@5+2&4+1#1+1/F:content_2/G:2_2/H:9=6@3=9|L-L%/I:6=5/J:64+52-11
-iy^dh-er+k=w@1_1/A:1_0_2/B:0-0-1@2-1&7-3#5-2$2-3!1-1;5-1|er/C:1+1+4/D:content_2/E:content+2@5+2&4+1#1+1/F:content_2/G:2_2/H:9=6@3=9|L-L%/I:6=5/J:64+52-11
-dh^er-k+w=eh@1_4/A:0_0_1/B:1-1-4@1-2&8-2#5-1$2-2!2-0;6-1|eh/C:0+1+3/D:content_2/E:content+2@6+1&5+0#1+0/F:content_1/G:2_2/H:9=6@3=9|L-L%/I:6=5/J:64+52-11
-er^k-w+eh=s@2_3/A:0_0_1/B:1-1-4@1-2&8-2#5-1$2-2!2-0;6-1|eh/C:0+1+3/D:content_2/E:content+2@6+1&5+0#1+0/F:content_1/G:2_2/H:9=6@3=9|L-L%/I:6=5/J:64+52-11
-k^w-eh+s=ch@3_2/A:0_0_1/B:1-1-4@1-2&8-2#5-1$2-2!2-0;6-1|eh/C:0+1+3/D:content_2/E:content+2@6+1&5+0#1+0/F:content_1/G:2_2/H:9=6@3=9|L-L%/I:6=5/J:64+52-11
-w^eh-s+ch=ax@4_1/A:0_0_1/B:1-1-4@1-2&8-2#5-1$2-2!2-0;6-1|eh/C:0+1+3/D:content_2/E:content+2@6+1&5+0#1+0/F:content_1/G:2_2/H:9=6@3=9|L-L%/I:6=5/J:64+52-11
-eh^s-ch+ax=n@1_3/A:1_1_4/B:0-1-3@2-1&9-1#6-1$3-1!1-0;1-0|ax/C:1+0+2/D:content_2/E:content+2@6+1&5+0#1+0/F:content_1/G:2_2/H:9=6@3=9|L-L%/I:6=5/J:64+52-11
-s^ch-ax+n=pau@2_2/A:1_1_4/B:0-1-3@2-1&9-1#6-1$3-1!1-0;1-0|ax/C:1+0+2/D:content_2/E:content+2@6+1&5+0#1+0/F:content_1/G:2_2/H:9=6@3=9|L-L%/I:6=5/J:64+52-11
-ch^ax-n+pau=ih@3_1/A:1_1_4/B:0-1-3@2-1&9-1#6-1$3-1!1-0;1-0|ax/C:1+0+2/D:content_2/E:content+2@6+1&5+0#1+0/F:content_1/G:2_2/H:9=6@3=9|L-L%/I:6=5/J:64+52-11
-ax^n-pau+ih=t@x_x/A:0_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:content_2/E:x+x@x+x&x+x#x+x/F:content_1/G:9_6/H:x=x@1=11|0/I:6=5/J:64+52-11
-n^pau-ih+t=d@1_2/A:0_1_3/B:1-0-2@1-1&1-6#1-5$1-4!0-1;0-1|ih/C:1+1+5/D:content_2/E:content+1@1+5&1+4#0+1/F:content_1/G:9_6/H:6=5@4=8|L-L%/I:4=4/J:64+52-11
-pau^ih-t+d=ih@2_1/A:0_1_3/B:1-0-2@1-1&1-6#1-5$1-4!0-1;0-1|ih/C:1+1+5/D:content_2/E:content+1@1+5&1+4#0+1/F:content_1/G:9_6/H:6=5@4=8|L-L%/I:4=4/J:64+52-11
-ih^t-d+ih=d@1_5/A:1_0_2/B:1-1-5@1-1&2-5#1-4$1-3!1-1;0-2|ih/C:1+0+3/D:content_1/E:content+1@2+4&2+3#1+1/F:content_1/G:9_6/H:6=5@4=8|L-L%/I:4=4/J:64+52-11
-t^d-ih+d=n@2_4/A:1_0_2/B:1-1-5@1-1&2-5#1-4$1-3!1-1;0-2|ih/C:1+0+3/D:content_1/E:content+1@2+4&2+3#1+1/F:content_1/G:9_6/H:6=5@4=8|L-L%/I:4=4/J:64+52-11
-d^ih-d+n=t@3_3/A:1_0_2/B:1-1-5@1-1&2-5#1-4$1-3!1-1;0-2|ih/C:1+0+3/D:content_1/E:content+1@2+4&2+3#1+1/F:content_1/G:9_6/H:6=5@4=8|L-L%/I:4=4/J:64+52-11
-ih^d-n+t=m@4_2/A:1_0_2/B:1-1-5@1-1&2-5#1-4$1-3!1-1;0-2|ih/C:1+0+3/D:content_1/E:content+1@2+4&2+3#1+1/F:content_1/G:9_6/H:6=5@4=8|L-L%/I:4=4/J:64+52-11
-d^n-t+m=ah@5_1/A:1_0_2/B:1-1-5@1-1&2-5#1-4$1-3!1-1;0-2|ih/C:1+0+3/D:content_1/E:content+1@2+4&2+3#1+1/F:content_1/G:9_6/H:6=5@4=8|L-L%/I:4=4/J:64+52-11
-n^t-m+ah=ch@1_3/A:1_1_5/B:1-0-3@1-1&3-4#2-3$2-3!1-1;1-1|ah/C:1+1+3/D:content_1/E:content+1@3+3&3+2#1+1/F:content_2/G:9_6/H:6=5@4=8|L-L%/I:4=4/J:64+52-11
-t^m-ah+ch=m@2_2/A:1_1_5/B:1-0-3@1-1&3-4#2-3$2-3!1-1;1-1|ah/C:1+1+3/D:content_1/E:content+1@3+3&3+2#1+1/F:content_2/G:9_6/H:6=5@4=8|L-L%/I:4=4/J:64+52-11
-m^ah-ch+m=ae@3_1/A:1_1_5/B:1-0-3@1-1&3-4#2-3$2-3!1-1;1-1|ah/C:1+1+3/D:content_1/E:content+1@3+3&3+2#1+1/F:content_2/G:9_6/H:6=5@4=8|L-L%/I:4=4/J:64+52-11
-ah^ch-m+ae=t@1_3/A:1_0_3/B:1-1-3@1-2&4-3#3-2$2-2!1-2;2-2|ae/C:0+0+1/D:content_1/E:content+2@4+2&4+1#1+1/F:content_1/G:9_6/H:6=5@4=8|L-L%/I:4=4/J:64+52-11
-ch^m-ae+t=er@2_2/A:1_0_3/B:1-1-3@1-2&4-3#3-2$2-2!1-2;2-2|ae/C:0+0+1/D:content_1/E:content+2@4+2&4+1#1+1/F:content_1/G:9_6/H:6=5@4=8|L-L%/I:4=4/J:64+52-11
-m^ae-t+er=w@3_1/A:1_0_3/B:1-1-3@1-2&4-3#3-2$2-2!1-2;2-2|ae/C:0+0+1/D:content_1/E:content+2@4+2&4+1#1+1/F:content_1/G:9_6/H:6=5@4=8|L-L%/I:4=4/J:64+52-11
-ae^t-er+w=ih@1_1/A:1_1_3/B:0-0-1@2-1&5-2#4-2$3-2!1-1;1-1|er/C:1+1+3/D:content_1/E:content+2@4+2&4+1#1+1/F:content_1/G:9_6/H:6=5@4=8|L-L%/I:4=4/J:64+52-11
-t^er-w+ih=ch@1_3/A:0_0_1/B:1-1-3@1-1&6-1#4-1$3-1!2-0;2-0|ih/C:1+0+2/D:content_2/E:content+1@5+1&5+0#1+0/F:content_1/G:9_6/H:6=5@4=8|L-L%/I:4=4/J:64+52-11
-er^w-ih+ch=pau@2_2/A:0_0_1/B:1-1-3@1-1&6-1#4-1$3-1!2-0;2-0|ih/C:1+0+2/D:content_2/E:content+1@5+1&5+0#1+0/F:content_1/G:9_6/H:6=5@4=8|L-L%/I:4=4/J:64+52-11
-w^ih-ch+pau=w@3_1/A:0_0_1/B:1-1-3@1-1&6-1#4-1$3-1!2-0;2-0|ih/C:1+0+2/D:content_2/E:content+1@5+1&5+0#1+0/F:content_1/G:9_6/H:6=5@4=8|L-L%/I:4=4/J:64+52-11
-ih^ch-pau+w=ey@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:content_1/E:x+x@x+x&x+x#x+x/F:content_1/G:6_5/H:x=x@1=11|0/I:4=4/J:64+52-11
-ch^pau-w+ey=sh@1_2/A:1_1_3/B:1-0-2@1-1&1-4#1-4$1-4!0-1;0-1|ey/C:1+1+2/D:content_1/E:content+1@1+4&1+3#0+1/F:content_1/G:6_5/H:4=4@5=7|L-L%/I:0=0/J:64+52-11
-pau^w-ey+sh=iy@2_1/A:1_1_3/B:1-0-2@1-1&1-4#1-4$1-4!0-1;0-1|ey/C:1+1+2/D:content_1/E:content+1@1+4&1+3#0+1/F:content_1/G:6_5/H:4=4@5=7|L-L%/I:0=0/J:64+52-11
-w^ey-sh+iy=p@1_2/A:1_0_2/B:1-1-2@1-1&2-3#1-3$1-3!1-1;0-1|iy/C:1+1+3/D:content_1/E:content+1@2+3&2+2#1+1/F:content_1/G:6_5/H:4=4@5=7|L-L%/I:0=0/J:64+52-11
-ey^sh-iy+p=uh@2_1/A:1_0_2/B:1-1-2@1-1&2-3#1-3$1-3!1-1;0-1|iy/C:1+1+3/D:content_1/E:content+1@2+3&2+2#1+1/F:content_1/G:6_5/H:4=4@5=7|L-L%/I:0=0/J:64+52-11
-sh^iy-p+uh=t@1_3/A:1_1_2/B:1-1-3@1-1&3-2#2-2$2-2!1-1;1-1|uh/C:1+1+2/D:content_1/E:content+1@3+2&3+1#1+1/F:content_1/G:6_5/H:4=4@5=7|L-L%/I:0=0/J:64+52-11
-iy^p-uh+t=ih@2_2/A:1_1_2/B:1-1-3@1-1&3-2#2-2$2-2!1-1;1-1|uh/C:1+1+2/D:content_1/E:content+1@3+2&3+1#1+1/F:content_1/G:6_5/H:4=4@5=7|L-L%/I:0=0/J:64+52-11
-p^uh-t+ih=t@3_1/A:1_1_2/B:1-1-3@1-1&3-2#2-2$2-2!1-1;1-1|uh/C:1+1+2/D:content_1/E:content+1@3+2&3+1#1+1/F:content_1/G:6_5/H:4=4@5=7|L-L%/I:0=0/J:64+52-11
-uh^t-ih+t=pau@1_2/A:1_1_3/B:1-1-2@1-1&4-1#3-1$3-1!1-0;1-0|ih/C:0+0+0/D:content_1/E:content+1@4+1&4+0#1+0/F:0_0/G:6_5/H:4=4@5=7|L-L%/I:0=0/J:64+52-11
-t^ih-t+pau=x@2_1/A:1_1_3/B:1-1-2@1-1&4-1#3-1$3-1!1-0;1-0|ih/C:0+0+0/D:content_1/E:content+1@4+1&4+0#1+0/F:0_0/G:6_5/H:4=4@5=7|L-L%/I:0=0/J:64+52-11
-ih^t-pau+x=x@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:content_1/E:x+x@x+x&x+x#x+x/F:0_0/G:4_4/H:x=x@1=11|0/I:0=0/J:64+52-11
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice36.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice36.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice36.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice36.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,204 +0,0 @@
-x^x-pau+sh=iy@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+2/D:0_0/E:x+x@x+x&x+x#x+x/F:content_1/G:0_0/H:x=x@1=13|0/I:8=7/J:74+60-13
-x^pau-sh+iy=f@1_2/A:0_0_0/B:1-1-2@1-1&1-8#1-7$1-4!0-1;0-1|iy/C:1+1+4/D:0_0/E:content+1@1+7&1+4#0+1/F:content_1/G:0_0/H:8=7@1=13|L-H%/I:7=6/J:74+60-13
-pau^sh-iy+f=eh@2_1/A:0_0_0/B:1-1-2@1-1&1-8#1-7$1-4!0-1;0-1|iy/C:1+1+4/D:0_0/E:content+1@1+7&1+4#0+1/F:content_1/G:0_0/H:8=7@1=13|L-H%/I:7=6/J:74+60-13
-sh^iy-f+eh=l@1_4/A:1_1_2/B:1-1-4@1-1&2-7#1-6$1-3!1-1;1-4|eh/C:1+0+3/D:content_1/E:content+1@2+6&2+3#1+2/F:in_1/G:0_0/H:8=7@1=13|L-H%/I:7=6/J:74+60-13
-iy^f-eh+l=t@2_3/A:1_1_2/B:1-1-4@1-1&2-7#1-6$1-3!1-1;1-4|eh/C:1+0+3/D:content_1/E:content+1@2+6&2+3#1+2/F:in_1/G:0_0/H:8=7@1=13|L-H%/I:7=6/J:74+60-13
-f^eh-l+t=dh@3_2/A:1_1_2/B:1-1-4@1-1&2-7#1-6$1-3!1-1;1-4|eh/C:1+0+3/D:content_1/E:content+1@2+6&2+3#1+2/F:in_1/G:0_0/H:8=7@1=13|L-H%/I:7=6/J:74+60-13
-eh^l-t+dh=ae@4_1/A:1_1_2/B:1-1-4@1-1&2-7#1-6$1-3!1-1;1-4|eh/C:1+0+3/D:content_1/E:content+1@2+6&2+3#1+2/F:in_1/G:0_0/H:8=7@1=13|L-H%/I:7=6/J:74+60-13
-l^t-dh+ae=t@1_3/A:1_1_4/B:1-0-3@1-1&3-6#2-5$2-3!1-1;1-3|ae/C:1+0+2/D:content_1/E:in+1@3+5&3+3#1+1/F:content_1/G:0_0/H:8=7@1=13|L-H%/I:7=6/J:74+60-13
-t^dh-ae+t=sh@2_2/A:1_1_4/B:1-0-3@1-1&3-6#2-5$2-3!1-1;1-3|ae/C:1+0+2/D:content_1/E:in+1@3+5&3+3#1+1/F:content_1/G:0_0/H:8=7@1=13|L-H%/I:7=6/J:74+60-13
-dh^ae-t+sh=iy@3_1/A:1_1_4/B:1-0-3@1-1&3-6#2-5$2-3!1-1;1-3|ae/C:1+0+2/D:content_1/E:in+1@3+5&3+3#1+1/F:content_1/G:0_0/H:8=7@1=13|L-H%/I:7=6/J:74+60-13
-ae^t-sh+iy=w@1_2/A:1_0_3/B:1-0-2@1-1&4-5#3-4$2-3!1-1;2-2|iy/C:1+0+3/D:in_1/E:content+1@4+4&3+2#2+2/F:aux_1/G:0_0/H:8=7@1=13|L-H%/I:7=6/J:74+60-13
-t^sh-iy+w=aa@2_1/A:1_0_3/B:1-0-2@1-1&4-5#3-4$2-3!1-1;2-2|iy/C:1+0+3/D:in_1/E:content+1@4+4&3+2#2+2/F:aux_1/G:0_0/H:8=7@1=13|L-H%/I:7=6/J:74+60-13
-sh^iy-w+aa=z@1_3/A:1_0_2/B:1-0-3@1-1&5-4#4-3$2-3!1-1;3-1|aa/C:1+1+3/D:content_1/E:aux+1@5+3&4+2#1+1/F:content_2/G:0_0/H:8=7@1=13|L-H%/I:7=6/J:74+60-13
-iy^w-aa+z=d@2_2/A:1_0_2/B:1-0-3@1-1&5-4#4-3$2-3!1-1;3-1|aa/C:1+1+3/D:content_1/E:aux+1@5+3&4+2#1+1/F:content_2/G:0_0/H:8=7@1=13|L-H%/I:7=6/J:74+60-13
-w^aa-z+d=ow@3_1/A:1_0_2/B:1-0-3@1-1&5-4#4-3$2-3!1-1;3-1|aa/C:1+1+3/D:content_1/E:aux+1@5+3&4+2#1+1/F:content_2/G:0_0/H:8=7@1=13|L-H%/I:7=6/J:74+60-13
-aa^z-d+ow=z@1_3/A:1_0_3/B:1-1-3@1-2&6-3#5-2$2-2!1-2;4-2|ow/C:0+0+2/D:aux_1/E:content+2@6+2&4+1#2+1/F:content_1/G:0_0/H:8=7@1=13|L-H%/I:7=6/J:74+60-13
-z^d-ow+z=ih@2_2/A:1_0_3/B:1-1-3@1-2&6-3#5-2$2-2!1-2;4-2|ow/C:0+0+2/D:aux_1/E:content+2@6+2&4+1#2+1/F:content_1/G:0_0/H:8=7@1=13|L-H%/I:7=6/J:74+60-13
-d^ow-z+ih=ng@3_1/A:1_0_3/B:1-1-3@1-2&6-3#5-2$2-2!1-2;4-2|ow/C:0+0+2/D:aux_1/E:content+2@6+2&4+1#2+1/F:content_1/G:0_0/H:8=7@1=13|L-H%/I:7=6/J:74+60-13
-ow^z-ih+ng=ao@1_2/A:1_1_3/B:0-0-2@2-1&7-2#6-2$3-2!1-1;1-1|ih/C:1+1+2/D:aux_1/E:content+2@6+2&4+1#2+1/F:content_1/G:0_0/H:8=7@1=13|L-H%/I:7=6/J:74+60-13
-z^ih-ng+ao=f@2_1/A:1_1_3/B:0-0-2@2-1&7-2#6-2$3-2!1-1;1-1|ih/C:1+1+2/D:aux_1/E:content+2@6+2&4+1#2+1/F:content_1/G:0_0/H:8=7@1=13|L-H%/I:7=6/J:74+60-13
-ih^ng-ao+f=pau@1_2/A:0_0_2/B:1-1-2@1-1&8-1#6-1$3-1!2-0;2-0|ao/C:1+0+3/D:content_2/E:content+1@7+1&5+0#1+0/F:cc_1/G:0_0/H:8=7@1=13|L-H%/I:7=6/J:74+60-13
-ng^ao-f+pau=ae@2_1/A:0_0_2/B:1-1-2@1-1&8-1#6-1$3-1!2-0;2-0|ao/C:1+0+3/D:content_2/E:content+1@7+1&5+0#1+0/F:cc_1/G:0_0/H:8=7@1=13|L-H%/I:7=6/J:74+60-13
-ao^f-pau+ae=n@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:cc_1/G:8_7/H:x=x@1=13|0/I:7=6/J:74+60-13
-f^pau-ae+n=d@1_3/A:1_1_2/B:1-0-3@1-1&1-7#1-5$1-3!0-1;0-2|ae/C:1+0+3/D:content_1/E:cc+1@1+6&1+3#0+2/F:aux_1/G:8_7/H:7=6@2=12|L-L%/I:6=5/J:74+60-13
-pau^ae-n+d=hh@2_2/A:1_1_2/B:1-0-3@1-1&1-7#1-5$1-3!0-1;0-2|ae/C:1+0+3/D:content_1/E:cc+1@1+6&1+3#0+2/F:aux_1/G:8_7/H:7=6@2=12|L-L%/I:6=5/J:74+60-13
-ae^n-d+hh=ae@3_1/A:1_1_2/B:1-0-3@1-1&1-7#1-5$1-3!0-1;0-2|ae/C:1+0+3/D:content_1/E:cc+1@1+6&1+3#0+2/F:aux_1/G:8_7/H:7=6@2=12|L-L%/I:6=5/J:74+60-13
-n^d-hh+ae=d@1_3/A:1_0_3/B:1-0-3@1-1&2-6#1-4$1-3!1-1;0-1|ae/C:1+1+4/D:cc_1/E:aux+1@2+5&1+3#0+1/F:content_1/G:8_7/H:7=6@2=12|L-L%/I:6=5/J:74+60-13
-d^hh-ae+d=jh@2_2/A:1_0_3/B:1-0-3@1-1&2-6#1-4$1-3!1-1;0-1|ae/C:1+1+4/D:cc_1/E:aux+1@2+5&1+3#0+1/F:content_1/G:8_7/H:7=6@2=12|L-L%/I:6=5/J:74+60-13
-hh^ae-d+jh=ah@3_1/A:1_0_3/B:1-0-3@1-1&2-6#1-4$1-3!1-1;0-1|ae/C:1+1+4/D:cc_1/E:aux+1@2+5&1+3#0+1/F:content_1/G:8_7/H:7=6@2=12|L-L%/I:6=5/J:74+60-13
-ae^d-jh+ah=s@1_4/A:1_0_3/B:1-1-4@1-1&3-5#2-3$1-2!1-2;0-4|ah/C:0+0+3/D:aux_1/E:content+1@3+4&1+2#0+1/F:content_2/G:8_7/H:7=6@2=12|L-L%/I:6=5/J:74+60-13
-d^jh-ah+s=t@2_3/A:1_0_3/B:1-1-4@1-1&3-5#2-3$1-2!1-2;0-4|ah/C:0+0+3/D:aux_1/E:content+1@3+4&1+2#0+1/F:content_2/G:8_7/H:7=6@2=12|L-L%/I:6=5/J:74+60-13
-jh^ah-s+t=b@3_2/A:1_0_3/B:1-1-4@1-1&3-5#2-3$1-2!1-2;0-4|ah/C:0+0+3/D:aux_1/E:content+1@3+4&1+2#0+1/F:content_2/G:8_7/H:7=6@2=12|L-L%/I:6=5/J:74+60-13
-ah^s-t+b=ih@4_1/A:1_0_3/B:1-1-4@1-1&3-5#2-3$1-2!1-2;0-4|ah/C:0+0+3/D:aux_1/E:content+1@3+4&1+2#0+1/F:content_2/G:8_7/H:7=6@2=12|L-L%/I:6=5/J:74+60-13
-s^t-b+ih=g@1_3/A:1_1_4/B:0-0-3@1-2&4-4#3-3$2-2!1-1;1-3|ih/C:1+0+2/D:content_1/E:content+2@4+3&2+1#1+2/F:to_1/G:8_7/H:7=6@2=12|L-L%/I:6=5/J:74+60-13
-t^b-ih+g=ah@2_2/A:1_1_4/B:0-0-3@1-2&4-4#3-3$2-2!1-1;1-3|ih/C:1+0+2/D:content_1/E:content+2@4+3&2+1#1+2/F:to_1/G:8_7/H:7=6@2=12|L-L%/I:6=5/J:74+60-13
-b^ih-g+ah=n@3_1/A:1_1_4/B:0-0-3@1-2&4-4#3-3$2-2!1-1;1-3|ih/C:1+0+2/D:content_1/E:content+2@4+3&2+1#1+2/F:to_1/G:8_7/H:7=6@2=12|L-L%/I:6=5/J:74+60-13
-ih^g-ah+n=t@1_2/A:0_0_3/B:1-0-2@2-1&5-3#3-2$2-2!2-2;2-2|ah/C:0+0+2/D:content_1/E:content+2@4+3&2+1#1+2/F:to_1/G:8_7/H:7=6@2=12|L-L%/I:6=5/J:74+60-13
-g^ah-n+t=ax@2_1/A:0_0_3/B:1-0-2@2-1&5-3#3-2$2-2!2-2;2-2|ah/C:0+0+2/D:content_1/E:content+2@4+3&2+1#1+2/F:to_1/G:8_7/H:7=6@2=12|L-L%/I:6=5/J:74+60-13
-ah^n-t+ax=d@1_2/A:1_0_2/B:0-0-2@1-1&6-2#4-2$2-2!1-1;3-1|ax/C:1+1+4/D:content_2/E:to+1@5+2&3+1#1+1/F:content_1/G:8_7/H:7=6@2=12|L-L%/I:6=5/J:74+60-13
-n^t-ax+d=r@2_1/A:1_0_2/B:0-0-2@1-1&6-2#4-2$2-2!1-1;3-1|ax/C:1+1+4/D:content_2/E:to+1@5+2&3+1#1+1/F:content_1/G:8_7/H:7=6@2=12|L-L%/I:6=5/J:74+60-13
-t^ax-d+r=iy@1_4/A:0_0_2/B:1-1-4@1-1&7-1#4-1$2-1!2-0;4-0|iy/C:1+0+3/D:to_1/E:content+1@6+1&3+0#2+0/F:in_1/G:8_7/H:7=6@2=12|L-L%/I:6=5/J:74+60-13
-ax^d-r+iy=m@2_3/A:0_0_2/B:1-1-4@1-1&7-1#4-1$2-1!2-0;4-0|iy/C:1+0+3/D:to_1/E:content+1@6+1&3+0#2+0/F:in_1/G:8_7/H:7=6@2=12|L-L%/I:6=5/J:74+60-13
-d^r-iy+m=pau@3_2/A:0_0_2/B:1-1-4@1-1&7-1#4-1$2-1!2-0;4-0|iy/C:1+0+3/D:to_1/E:content+1@6+1&3+0#2+0/F:in_1/G:8_7/H:7=6@2=12|L-L%/I:6=5/J:74+60-13
-r^iy-m+pau=dh@4_1/A:0_0_2/B:1-1-4@1-1&7-1#4-1$2-1!2-0;4-0|iy/C:1+0+3/D:to_1/E:content+1@6+1&3+0#2+0/F:in_1/G:8_7/H:7=6@2=12|L-L%/I:6=5/J:74+60-13
-iy^m-pau+dh=ae@x_x/A:1_1_4/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:in_1/G:7_6/H:x=x@1=13|0/I:6=5/J:74+60-13
-m^pau-dh+ae=t@1_3/A:1_1_4/B:1-0-3@1-1&1-6#1-5$1-4!0-1;0-1|ae/C:1+1+2/D:content_1/E:in+1@1+5&1+3#0+1/F:content_1/G:7_6/H:6=5@3=11|L-L%/I:5=4/J:74+60-13
-pau^dh-ae+t=sh@2_2/A:1_1_4/B:1-0-3@1-1&1-6#1-5$1-4!0-1;0-1|ae/C:1+1+2/D:content_1/E:in+1@1+5&1+3#0+1/F:content_1/G:7_6/H:6=5@3=11|L-L%/I:5=4/J:74+60-13
-dh^ae-t+sh=iy@3_1/A:1_1_4/B:1-0-3@1-1&1-6#1-5$1-4!0-1;0-1|ae/C:1+1+2/D:content_1/E:in+1@1+5&1+3#0+1/F:content_1/G:7_6/H:6=5@3=11|L-L%/I:5=4/J:74+60-13
-ae^t-sh+iy=w@1_2/A:1_0_3/B:1-1-2@1-1&2-5#1-4$1-3!1-1;0-2|iy/C:1+0+3/D:in_1/E:content+1@2+4&1+2#0+2/F:aux_1/G:7_6/H:6=5@3=11|L-L%/I:5=4/J:74+60-13
-t^sh-iy+w=aa@2_1/A:1_0_3/B:1-1-2@1-1&2-5#1-4$1-3!1-1;0-2|iy/C:1+0+3/D:in_1/E:content+1@2+4&1+2#0+2/F:aux_1/G:7_6/H:6=5@3=11|L-L%/I:5=4/J:74+60-13
-sh^iy-w+aa=z@1_3/A:1_1_2/B:1-0-3@1-1&3-4#2-3$2-3!1-1;1-1|aa/C:1+1+3/D:content_1/E:aux+1@3+3&2+2#1+1/F:content_2/G:7_6/H:6=5@3=11|L-L%/I:5=4/J:74+60-13
-iy^w-aa+z=w@2_2/A:1_1_2/B:1-0-3@1-1&3-4#2-3$2-3!1-1;1-1|aa/C:1+1+3/D:content_1/E:aux+1@3+3&2+2#1+1/F:content_2/G:7_6/H:6=5@3=11|L-L%/I:5=4/J:74+60-13
-w^aa-z+w=ao@3_1/A:1_1_2/B:1-0-3@1-1&3-4#2-3$2-3!1-1;1-1|aa/C:1+1+3/D:content_1/E:aux+1@3+3&2+2#1+1/F:content_2/G:7_6/H:6=5@3=11|L-L%/I:5=4/J:74+60-13
-aa^z-w+ao=k@1_3/A:1_0_3/B:1-1-3@1-2&4-3#3-2$2-2!1-2;2-2|ao/C:0+0+2/D:aux_1/E:content+2@4+2&2+1#2+1/F:content_1/G:7_6/H:6=5@3=11|L-L%/I:5=4/J:74+60-13
-z^w-ao+k=ih@2_2/A:1_0_3/B:1-1-3@1-2&4-3#3-2$2-2!1-2;2-2|ao/C:0+0+2/D:aux_1/E:content+2@4+2&2+1#2+1/F:content_1/G:7_6/H:6=5@3=11|L-L%/I:5=4/J:74+60-13
-w^ao-k+ih=ng@3_1/A:1_0_3/B:1-1-3@1-2&4-3#3-2$2-2!1-2;2-2|ao/C:0+0+2/D:aux_1/E:content+2@4+2&2+1#2+1/F:content_1/G:7_6/H:6=5@3=11|L-L%/I:5=4/J:74+60-13
-ao^k-ih+ng=hh@1_2/A:1_1_3/B:0-0-2@2-1&5-2#4-2$3-2!1-1;1-1|ih/C:1+1+4/D:aux_1/E:content+2@4+2&2+1#2+1/F:content_1/G:7_6/H:6=5@3=11|L-L%/I:5=4/J:74+60-13
-k^ih-ng+hh=ae@2_1/A:1_1_3/B:0-0-2@2-1&5-2#4-2$3-2!1-1;1-1|ih/C:1+1+4/D:aux_1/E:content+2@4+2&2+1#2+1/F:content_1/G:7_6/H:6=5@3=11|L-L%/I:5=4/J:74+60-13
-ih^ng-hh+ae=n@1_4/A:0_0_2/B:1-1-4@1-1&6-1#4-1$3-1!2-0;2-0|ae/C:0+0+2/D:content_2/E:content+1@5+1&3+0#1+0/F:in_1/G:7_6/H:6=5@3=11|L-L%/I:5=4/J:74+60-13
-ng^hh-ae+n=d@2_3/A:0_0_2/B:1-1-4@1-1&6-1#4-1$3-1!2-0;2-0|ae/C:0+0+2/D:content_2/E:content+1@5+1&3+0#1+0/F:in_1/G:7_6/H:6=5@3=11|L-L%/I:5=4/J:74+60-13
-hh^ae-n+d=pau@3_2/A:0_0_2/B:1-1-4@1-1&6-1#4-1$3-1!2-0;2-0|ae/C:0+0+2/D:content_2/E:content+1@5+1&3+0#1+0/F:in_1/G:7_6/H:6=5@3=11|L-L%/I:5=4/J:74+60-13
-ae^n-d+pau=ih@4_1/A:0_0_2/B:1-1-4@1-1&6-1#4-1$3-1!2-0;2-0|ae/C:0+0+2/D:content_2/E:content+1@5+1&3+0#1+0/F:in_1/G:7_6/H:6=5@3=11|L-L%/I:5=4/J:74+60-13
-n^d-pau+ih=n@x_x/A:1_1_4/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+2/D:content_1/E:x+x@x+x&x+x#x+x/F:in_1/G:6_5/H:x=x@1=13|0/I:5=4/J:74+60-13
-d^pau-ih+n=hh@1_2/A:1_1_4/B:0-0-2@1-1&1-5#1-4$1-3!0-1;0-1|ih/C:1+1+4/D:content_1/E:in+1@1+4&1+2#0+1/F:content_1/G:6_5/H:5=4@4=10|L-L%/I:10=6/J:74+60-13
-pau^ih-n+hh=ae@2_1/A:1_1_4/B:0-0-2@1-1&1-5#1-4$1-3!0-1;0-1|ih/C:1+1+4/D:content_1/E:in+1@1+4&1+2#0+1/F:content_1/G:6_5/H:5=4@4=10|L-L%/I:10=6/J:74+60-13
-ih^n-hh+ae=n@1_4/A:0_0_2/B:1-1-4@1-1&2-4#1-3$1-2!0-1;0-3|ae/C:1+0+3/D:in_1/E:content+1@2+3&1+1#0+2/F:in_1/G:6_5/H:5=4@4=10|L-L%/I:10=6/J:74+60-13
-n^hh-ae+n=d@2_3/A:0_0_2/B:1-1-4@1-1&2-4#1-3$1-2!0-1;0-3|ae/C:1+0+3/D:in_1/E:content+1@2+3&1+1#0+2/F:in_1/G:6_5/H:5=4@4=10|L-L%/I:10=6/J:74+60-13
-hh^ae-n+d=w@3_2/A:0_0_2/B:1-1-4@1-1&2-4#1-3$1-2!0-1;0-3|ae/C:1+0+3/D:in_1/E:content+1@2+3&1+1#0+2/F:in_1/G:6_5/H:5=4@4=10|L-L%/I:10=6/J:74+60-13
-ae^n-d+w=ih@4_1/A:0_0_2/B:1-1-4@1-1&2-4#1-3$1-2!0-1;0-3|ae/C:1+0+3/D:in_1/E:content+1@2+3&1+1#0+2/F:in_1/G:6_5/H:5=4@4=10|L-L%/I:10=6/J:74+60-13
-n^d-w+ih=dh@1_3/A:1_1_4/B:1-0-3@1-1&3-3#2-2$2-2!1-1;1-2|ih/C:1+0+3/D:content_1/E:in+1@3+2&2+1#1+1/F:content_2/G:6_5/H:5=4@4=10|L-L%/I:10=6/J:74+60-13
-d^w-ih+dh=d@2_2/A:1_1_4/B:1-0-3@1-1&3-3#2-2$2-2!1-1;1-2|ih/C:1+0+3/D:content_1/E:in+1@3+2&2+1#1+1/F:content_2/G:6_5/H:5=4@4=10|L-L%/I:10=6/J:74+60-13
-w^ih-dh+d=ay@3_1/A:1_1_4/B:1-0-3@1-1&3-3#2-2$2-2!1-1;1-2|ih/C:1+0+3/D:content_1/E:in+1@3+2&2+1#1+1/F:content_2/G:6_5/H:5=4@4=10|L-L%/I:10=6/J:74+60-13
-ih^dh-d+ay=n@1_3/A:1_0_3/B:1-0-3@1-2&4-2#3-1$2-2!1-0;2-1|ay/C:0+1+1/D:in_1/E:content+2@4+1&2+0#2+0/F:cc_1/G:6_5/H:5=4@4=10|L-L%/I:10=6/J:74+60-13
-dh^d-ay+n=ax@2_2/A:1_0_3/B:1-0-3@1-2&4-2#3-1$2-2!1-0;2-1|ay/C:0+1+1/D:in_1/E:content+2@4+1&2+0#2+0/F:cc_1/G:6_5/H:5=4@4=10|L-L%/I:10=6/J:74+60-13
-d^ay-n+ax=pau@3_1/A:1_0_3/B:1-0-3@1-2&4-2#3-1$2-2!1-0;2-1|ay/C:0+1+1/D:in_1/E:content+2@4+1&2+0#2+0/F:cc_1/G:6_5/H:5=4@4=10|L-L%/I:10=6/J:74+60-13
-ay^n-ax+pau=ae@1_1/A:1_0_3/B:0-1-1@2-1&5-1#4-1$2-1!1-0;3-0|ax/C:1+0+3/D:in_1/E:content+2@4+1&2+0#2+0/F:cc_1/G:6_5/H:5=4@4=10|L-L%/I:10=6/J:74+60-13
-n^ax-pau+ae=n@x_x/A:0_1_1/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_2/E:x+x@x+x&x+x#x+x/F:cc_1/G:5_4/H:x=x@1=13|0/I:10=6/J:74+60-13
-ax^pau-ae+n=d@1_3/A:0_1_1/B:1-0-3@1-1&1-10#1-4$1-5!0-1;0-1|ae/C:1+1+2/D:content_2/E:cc+1@1+6&1+3#0+1/F:content_2/G:5_4/H:10=6@5=9|L-L%/I:3=2/J:74+60-13
-pau^ae-n+d=s@2_2/A:0_1_1/B:1-0-3@1-1&1-10#1-4$1-5!0-1;0-1|ae/C:1+1+2/D:content_2/E:cc+1@1+6&1+3#0+1/F:content_2/G:5_4/H:10=6@5=9|L-L%/I:3=2/J:74+60-13
-ae^n-d+s=ey@3_1/A:0_1_1/B:1-0-3@1-1&1-10#1-4$1-5!0-1;0-1|ae/C:1+1+2/D:content_2/E:cc+1@1+6&1+3#0+1/F:content_2/G:5_4/H:10=6@5=9|L-L%/I:3=2/J:74+60-13
-n^d-s+ey=ih@1_2/A:1_0_3/B:1-1-2@1-2&2-9#1-3$1-4!1-4;0-4|ey/C:0+0+2/D:cc_1/E:content+2@2+5&1+2#0+3/F:to_1/G:5_4/H:10=6@5=9|L-L%/I:3=2/J:74+60-13
-d^s-ey+ih=ng@2_1/A:1_0_3/B:1-1-2@1-2&2-9#1-3$1-4!1-4;0-4|ey/C:0+0+2/D:cc_1/E:content+2@2+5&1+2#0+3/F:to_1/G:5_4/H:10=6@5=9|L-L%/I:3=2/J:74+60-13
-s^ey-ih+ng=t@1_2/A:1_1_2/B:0-0-2@2-1&3-8#2-3$2-4!1-3;1-3|ih/C:0+0+2/D:cc_1/E:content+2@2+5&1+2#0+3/F:to_1/G:5_4/H:10=6@5=9|L-L%/I:3=2/J:74+60-13
-ey^ih-ng+t=ax@2_1/A:1_1_2/B:0-0-2@2-1&3-8#2-3$2-4!1-3;1-3|ih/C:0+0+2/D:cc_1/E:content+2@2+5&1+2#0+3/F:to_1/G:5_4/H:10=6@5=9|L-L%/I:3=2/J:74+60-13
-ih^ng-t+ax=hh@1_2/A:0_0_2/B:0-0-2@1-1&4-7#2-3$2-4!2-2;2-2|ax/C:0+0+2/D:content_2/E:to+1@3+4&2+2#1+2/F:pps_1/G:5_4/H:10=6@5=9|L-L%/I:3=2/J:74+60-13
-ng^t-ax+hh=er@2_1/A:0_0_2/B:0-0-2@1-1&4-7#2-3$2-4!2-2;2-2|ax/C:0+0+2/D:content_2/E:to+1@3+4&2+2#1+2/F:pps_1/G:5_4/H:10=6@5=9|L-L%/I:3=2/J:74+60-13
-t^ax-hh+er=v@1_2/A:0_0_2/B:0-0-2@1-1&5-6#2-3$2-4!3-1;3-1|er/C:1+1+3/D:to_1/E:pps+1@4+3&2+2#2+1/F:content_2/G:5_4/H:10=6@5=9|L-L%/I:3=2/J:74+60-13
-ax^hh-er+v=eh@2_1/A:0_0_2/B:0-0-2@1-1&5-6#2-3$2-4!3-1;3-1|er/C:1+1+3/D:to_1/E:pps+1@4+3&2+2#2+1/F:content_2/G:5_4/H:10=6@5=9|L-L%/I:3=2/J:74+60-13
-hh^er-v+eh=r@1_3/A:0_0_2/B:1-1-3@1-2&6-5#2-2$2-3!4-2;4-2|eh/C:0+0+1/D:pps_1/E:content+2@5+2&2+1#3+1/F:content_3/G:5_4/H:10=6@5=9|L-L%/I:3=2/J:74+60-13
-er^v-eh+r=iy@2_2/A:0_0_2/B:1-1-3@1-2&6-5#2-2$2-3!4-2;4-2|eh/C:0+0+1/D:pps_1/E:content+2@5+2&2+1#3+1/F:content_3/G:5_4/H:10=6@5=9|L-L%/I:3=2/J:74+60-13
-v^eh-r+iy=er@3_1/A:0_0_2/B:1-1-3@1-2&6-5#2-2$2-3!4-2;4-2|eh/C:0+0+1/D:pps_1/E:content+2@5+2&2+1#3+1/F:content_3/G:5_4/H:10=6@5=9|L-L%/I:3=2/J:74+60-13
-eh^r-iy+er=n@1_1/A:1_1_3/B:0-0-1@2-1&7-4#3-2$3-3!1-1;1-1|iy/C:1+1+2/D:pps_1/E:content+2@5+2&2+1#3+1/F:content_3/G:5_4/H:10=6@5=9|L-L%/I:3=2/J:74+60-13
-r^iy-er+n=ax@1_2/A:0_0_1/B:1-1-2@1-3&8-3#3-1$3-2!2-0;2-2|er/C:0+0+2/D:content_2/E:content+3@6+1&3+0#1+0/F:content_1/G:5_4/H:10=6@5=9|L-L%/I:3=2/J:74+60-13
-iy^er-n+ax=s@2_1/A:0_0_1/B:1-1-2@1-3&8-3#3-1$3-2!2-0;2-2|er/C:0+0+2/D:content_2/E:content+3@6+1&3+0#1+0/F:content_1/G:5_4/H:10=6@5=9|L-L%/I:3=2/J:74+60-13
-er^n-ax+s=t@1_2/A:1_1_2/B:0-0-2@2-2&9-2#4-1$4-2!1-0;1-1|ax/C:0+1+3/D:content_2/E:content+3@6+1&3+0#1+0/F:content_1/G:5_4/H:10=6@5=9|L-L%/I:3=2/J:74+60-13
-n^ax-s+t=l@2_1/A:1_1_2/B:0-0-2@2-2&9-2#4-1$4-2!1-0;1-1|ax/C:0+1+3/D:content_2/E:content+3@6+1&3+0#1+0/F:content_1/G:5_4/H:10=6@5=9|L-L%/I:3=2/J:74+60-13
-ax^s-t+l=iy@1_3/A:0_0_2/B:0-1-3@3-1&10-1#4-1$4-1!2-0;2-0|iy/C:1+0+2/D:content_2/E:content+3@6+1&3+0#1+0/F:content_1/G:5_4/H:10=6@5=9|L-L%/I:3=2/J:74+60-13
-s^t-l+iy=pau@2_2/A:0_0_2/B:0-1-3@3-1&10-1#4-1$4-1!2-0;2-0|iy/C:1+0+2/D:content_2/E:content+3@6+1&3+0#1+0/F:content_1/G:5_4/H:10=6@5=9|L-L%/I:3=2/J:74+60-13
-t^l-iy+pau=n@3_1/A:0_0_2/B:0-1-3@3-1&10-1#4-1$4-1!2-0;2-0|iy/C:1+0+2/D:content_2/E:content+3@6+1&3+0#1+0/F:content_1/G:5_4/H:10=6@5=9|L-L%/I:3=2/J:74+60-13
-l^iy-pau+n=aw@x_x/A:0_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:content_3/E:x+x@x+x&x+x#x+x/F:content_1/G:10_6/H:x=x@1=13|0/I:3=2/J:74+60-13
-iy^pau-n+aw=d@1_2/A:0_1_3/B:1-0-2@1-1&1-3#1-2$1-3!0-1;0-1|aw/C:1+1+3/D:content_3/E:content+1@1+2&1+1#0+1/F:content_2/G:10_6/H:3=2@6=8|L-L%/I:4=4/J:74+60-13
-pau^n-aw+d=ay@2_1/A:0_1_3/B:1-0-2@1-1&1-3#1-2$1-3!0-1;0-1|aw/C:1+1+3/D:content_3/E:content+1@1+2&1+1#0+1/F:content_2/G:10_6/H:3=2@6=8|L-L%/I:4=4/J:74+60-13
-n^aw-d+ay=n@1_3/A:1_0_2/B:1-1-3@1-2&2-2#1-1$1-2!1-0;0-1|ay/C:0+1+1/D:content_1/E:content+2@2+1&2+0#1+0/F:content_1/G:10_6/H:3=2@6=8|L-L%/I:4=4/J:74+60-13
-aw^d-ay+n=ax@2_2/A:1_0_2/B:1-1-3@1-2&2-2#1-1$1-2!1-0;0-1|ay/C:0+1+1/D:content_1/E:content+2@2+1&2+0#1+0/F:content_1/G:10_6/H:3=2@6=8|L-L%/I:4=4/J:74+60-13
-d^ay-n+ax=pau@3_1/A:1_0_2/B:1-1-3@1-2&2-2#1-1$1-2!1-0;0-1|ay/C:0+1+1/D:content_1/E:content+2@2+1&2+0#1+0/F:content_1/G:10_6/H:3=2@6=8|L-L%/I:4=4/J:74+60-13
-ay^n-ax+pau=t@1_1/A:1_1_3/B:0-1-1@2-1&3-1#2-1$2-1!1-0;1-0|ax/C:1+0+3/D:content_1/E:content+2@2+1&2+0#1+0/F:content_1/G:10_6/H:3=2@6=8|L-L%/I:4=4/J:74+60-13
-n^ax-pau+t=eh@x_x/A:0_1_1/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_2/E:x+x@x+x&x+x#x+x/F:content_1/G:3_2/H:x=x@1=13|0/I:4=4/J:74+60-13
-ax^pau-t+eh=l@1_3/A:0_1_1/B:1-0-3@1-1&1-4#1-3$1-3!0-1;0-1|eh/C:1+1+2/D:content_2/E:content+1@1+4&1+2#0+1/F:content_1/G:3_2/H:4=4@7=7|L-L%/I:7=6/J:74+60-13
-pau^t-eh+l=m@2_2/A:0_1_1/B:1-0-3@1-1&1-4#1-3$1-3!0-1;0-1|eh/C:1+1+2/D:content_2/E:content+1@1+4&1+2#0+1/F:content_1/G:3_2/H:4=4@7=7|L-L%/I:7=6/J:74+60-13
-t^eh-l+m=iy@3_1/A:0_1_1/B:1-0-3@1-1&1-4#1-3$1-3!0-1;0-1|eh/C:1+1+2/D:content_2/E:content+1@1+4&1+2#0+1/F:content_1/G:3_2/H:4=4@7=7|L-L%/I:7=6/J:74+60-13
-eh^l-m+iy=dh@1_2/A:1_0_3/B:1-1-2@1-1&2-3#1-2$1-2!1-2;0-2|iy/C:0+0+2/D:content_1/E:content+1@2+3&2+1#1+2/F:det_1/G:3_2/H:4=4@7=7|L-L%/I:7=6/J:74+60-13
-l^m-iy+dh=ax@2_1/A:1_0_3/B:1-1-2@1-1&2-3#1-2$1-2!1-2;0-2|iy/C:0+0+2/D:content_1/E:content+1@2+3&2+1#1+2/F:det_1/G:3_2/H:4=4@7=7|L-L%/I:7=6/J:74+60-13
-m^iy-dh+ax=t@1_2/A:1_1_2/B:0-0-2@1-1&3-2#2-2$2-2!1-1;1-1|ax/C:1+1+4/D:content_1/E:det+1@3+2&3+1#1+1/F:content_1/G:3_2/H:4=4@7=7|L-L%/I:7=6/J:74+60-13
-iy^dh-ax+t=r@2_1/A:1_1_2/B:0-0-2@1-1&3-2#2-2$2-2!1-1;1-1|ax/C:1+1+4/D:content_1/E:det+1@3+2&3+1#1+1/F:content_1/G:3_2/H:4=4@7=7|L-L%/I:7=6/J:74+60-13
-dh^ax-t+r=uw@1_4/A:0_0_2/B:1-1-4@1-1&4-1#2-1$2-1!2-0;2-0|uw/C:1+0+3/D:det_1/E:content+1@4+1&3+0#2+0/F:content_1/G:3_2/H:4=4@7=7|L-L%/I:7=6/J:74+60-13
-ax^t-r+uw=th@2_3/A:0_0_2/B:1-1-4@1-1&4-1#2-1$2-1!2-0;2-0|uw/C:1+0+3/D:det_1/E:content+1@4+1&3+0#2+0/F:content_1/G:3_2/H:4=4@7=7|L-L%/I:7=6/J:74+60-13
-t^r-uw+th=pau@3_2/A:0_0_2/B:1-1-4@1-1&4-1#2-1$2-1!2-0;2-0|uw/C:1+0+3/D:det_1/E:content+1@4+1&3+0#2+0/F:content_1/G:3_2/H:4=4@7=7|L-L%/I:7=6/J:74+60-13
-r^uw-th+pau=d@4_1/A:0_0_2/B:1-1-4@1-1&4-1#2-1$2-1!2-0;2-0|uw/C:1+0+3/D:det_1/E:content+1@4+1&3+0#2+0/F:content_1/G:3_2/H:4=4@7=7|L-L%/I:7=6/J:74+60-13
-uw^th-pau+d=ih@x_x/A:1_1_4/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:content_1/G:4_4/H:x=x@1=13|0/I:7=6/J:74+60-13
-th^pau-d+ih=d@1_3/A:1_1_4/B:1-0-3@1-1&1-7#1-5$1-3!0-1;0-1|ih/C:1+1+2/D:content_1/E:content+1@1+6&1+4#0+1/F:content_1/G:4_4/H:7=6@8=6|L-L%/I:4=2/J:74+60-13
-pau^d-ih+d=y@2_2/A:1_1_4/B:1-0-3@1-1&1-7#1-5$1-3!0-1;0-1|ih/C:1+1+2/D:content_1/E:content+1@1+6&1+4#0+1/F:content_1/G:4_4/H:7=6@8=6|L-L%/I:4=2/J:74+60-13
-d^ih-d+y=uw@3_1/A:1_1_4/B:1-0-3@1-1&1-7#1-5$1-3!0-1;0-1|ih/C:1+1+2/D:content_1/E:content+1@1+6&1+4#0+1/F:content_1/G:4_4/H:7=6@8=6|L-L%/I:4=2/J:74+60-13
-ih^d-y+uw=eh@1_2/A:1_0_3/B:1-1-2@1-1&2-6#1-4$1-2!1-1;0-5|uw/C:1+0+2/D:content_1/E:content+1@2+5&2+3#1+1/F:content_2/G:4_4/H:7=6@8=6|L-L%/I:4=2/J:74+60-13
-d^y-uw+eh=v@2_1/A:1_0_3/B:1-1-2@1-1&2-6#1-4$1-2!1-1;0-5|uw/C:1+0+2/D:content_1/E:content+1@2+5&2+3#1+1/F:content_2/G:4_4/H:7=6@8=6|L-L%/I:4=2/J:74+60-13
-y^uw-eh+v=er@1_2/A:1_1_2/B:1-0-2@1-2&3-5#2-3$2-2!1-2;1-4|eh/C:0+0+1/D:content_1/E:content+2@3+4&3+2#1+1/F:content_1/G:4_4/H:7=6@8=6|L-L%/I:4=2/J:74+60-13
-uw^eh-v+er=iy@2_1/A:1_1_2/B:1-0-2@1-2&3-5#2-3$2-2!1-2;1-4|eh/C:0+0+1/D:content_1/E:content+2@3+4&3+2#1+1/F:content_1/G:4_4/H:7=6@8=6|L-L%/I:4=2/J:74+60-13
-eh^v-er+iy=t@1_1/A:1_0_2/B:0-0-1@2-1&4-4#3-3$2-2!1-1;2-3|er/C:1+0+2/D:content_1/E:content+2@3+4&3+2#1+1/F:content_1/G:4_4/H:7=6@8=6|L-L%/I:4=2/J:74+60-13
-v^er-iy+t=ax@1_2/A:0_0_1/B:1-0-2@1-1&5-3#3-2$2-2!2-2;3-2|iy/C:0+0+1/D:content_2/E:content+1@4+3&4+1#1+2/F:det_1/G:4_4/H:7=6@8=6|L-L%/I:4=2/J:74+60-13
-er^iy-t+ax=b@2_1/A:0_0_1/B:1-0-2@1-1&5-3#3-2$2-2!2-2;3-2|iy/C:0+0+1/D:content_2/E:content+1@4+3&4+1#1+2/F:det_1/G:4_4/H:7=6@8=6|L-L%/I:4=2/J:74+60-13
-iy^t-ax+b=ae@1_1/A:1_0_2/B:0-0-1@1-1&6-2#4-2$2-2!1-1;4-1|ax/C:1+1+3/D:content_1/E:det+1@5+2&5+1#1+1/F:content_1/G:4_4/H:7=6@8=6|L-L%/I:4=2/J:74+60-13
-t^ax-b+ae=t@1_3/A:0_0_1/B:1-1-3@1-1&7-1#4-1$2-1!2-0;5-0|ae/C:1+0+3/D:det_1/E:content+1@6+1&5+0#2+0/F:wp_1/G:4_4/H:7=6@8=6|L-L%/I:4=2/J:74+60-13
-ax^b-ae+t=pau@2_2/A:0_0_1/B:1-1-3@1-1&7-1#4-1$2-1!2-0;5-0|ae/C:1+0+3/D:det_1/E:content+1@6+1&5+0#2+0/F:wp_1/G:4_4/H:7=6@8=6|L-L%/I:4=2/J:74+60-13
-b^ae-t+pau=w@3_1/A:0_0_1/B:1-1-3@1-1&7-1#4-1$2-1!2-0;5-0|ae/C:1+0+3/D:det_1/E:content+1@6+1&5+0#2+0/F:wp_1/G:4_4/H:7=6@8=6|L-L%/I:4=2/J:74+60-13
-ae^t-pau+w=eh@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:wp_1/G:7_6/H:x=x@1=13|0/I:4=2/J:74+60-13
-t^pau-w+eh=n@1_3/A:1_1_3/B:1-0-3@1-1&1-4#1-2$1-3!0-1;0-1|eh/C:1+1+3/D:content_1/E:wp+1@1+2&1+1#0+1/F:content_3/G:7_6/H:4=2@1=13|L-H%/I:2=2/J:74+60-13
-pau^w-eh+n=s@2_2/A:1_1_3/B:1-0-3@1-1&1-4#1-2$1-3!0-1;0-1|eh/C:1+1+3/D:content_1/E:wp+1@1+2&1+1#0+1/F:content_3/G:7_6/H:4=2@1=13|L-H%/I:2=2/J:74+60-13
-w^eh-n+s=ah@3_1/A:1_1_3/B:1-0-3@1-1&1-4#1-2$1-3!0-1;0-1|eh/C:1+1+3/D:content_1/E:wp+1@1+2&1+1#0+1/F:content_3/G:7_6/H:4=2@1=13|L-H%/I:2=2/J:74+60-13
-eh^n-s+ah=d@1_3/A:1_0_3/B:1-1-3@1-3&2-3#1-1$1-2!1-0;0-2|ah/C:0+0+2/D:wp_1/E:content+3@2+1&1+0#0+0/F:content_1/G:7_6/H:4=2@1=13|L-H%/I:2=2/J:74+60-13
-n^s-ah+d=ax@2_2/A:1_0_3/B:1-1-3@1-3&2-3#1-1$1-2!1-0;0-2|ah/C:0+0+2/D:wp_1/E:content+3@2+1&1+0#0+0/F:content_1/G:7_6/H:4=2@1=13|L-H%/I:2=2/J:74+60-13
-s^ah-d+ax=n@3_1/A:1_0_3/B:1-1-3@1-3&2-3#1-1$1-2!1-0;0-2|ah/C:0+0+2/D:wp_1/E:content+3@2+1&1+0#0+0/F:content_1/G:7_6/H:4=2@1=13|L-H%/I:2=2/J:74+60-13
-ah^d-ax+n=l@1_2/A:1_1_3/B:0-0-2@2-2&3-2#2-1$2-2!1-0;1-1|ax/C:0+1+2/D:wp_1/E:content+3@2+1&1+0#0+0/F:content_1/G:7_6/H:4=2@1=13|L-H%/I:2=2/J:74+60-13
-d^ax-n+l=iy@2_1/A:1_1_3/B:0-0-2@2-2&3-2#2-1$2-2!1-0;1-1|ax/C:0+1+2/D:wp_1/E:content+3@2+1&1+0#0+0/F:content_1/G:7_6/H:4=2@1=13|L-H%/I:2=2/J:74+60-13
-ax^n-l+iy=pau@1_2/A:0_0_2/B:0-1-2@3-1&4-1#2-1$2-1!2-0;2-0|iy/C:1+0+4/D:wp_1/E:content+3@2+1&1+0#0+0/F:content_1/G:7_6/H:4=2@1=13|L-H%/I:2=2/J:74+60-13
-n^l-iy+pau=th@2_1/A:0_0_2/B:0-1-2@3-1&4-1#2-1$2-1!2-0;2-0|iy/C:1+0+4/D:wp_1/E:content+3@2+1&1+0#0+0/F:content_1/G:7_6/H:4=2@1=13|L-H%/I:2=2/J:74+60-13
-l^iy-pau+th=ah@x_x/A:0_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+4/D:content_3/E:x+x@x+x&x+x#x+x/F:content_1/G:4_2/H:x=x@1=13|0/I:2=2/J:74+60-13
-iy^pau-th+ah=m@1_4/A:0_1_2/B:1-0-4@1-1&1-2#1-2$1-2!0-1;0-1|ah/C:1+1+4/D:content_3/E:content+1@1+2&1+1#0+1/F:content_1/G:4_2/H:2=2@2=12|L-L%/I:9=8/J:74+60-13
-pau^th-ah+m=p@2_3/A:0_1_2/B:1-0-4@1-1&1-2#1-2$1-2!0-1;0-1|ah/C:1+1+4/D:content_3/E:content+1@1+2&1+1#0+1/F:content_1/G:4_2/H:2=2@2=12|L-L%/I:9=8/J:74+60-13
-th^ah-m+p=th@3_2/A:0_1_2/B:1-0-4@1-1&1-2#1-2$1-2!0-1;0-1|ah/C:1+1+4/D:content_3/E:content+1@1+2&1+1#0+1/F:content_1/G:4_2/H:2=2@2=12|L-L%/I:9=8/J:74+60-13
-ah^m-p+th=ah@4_1/A:0_1_2/B:1-0-4@1-1&1-2#1-2$1-2!0-1;0-1|ah/C:1+1+4/D:content_3/E:content+1@1+2&1+1#0+1/F:content_1/G:4_2/H:2=2@2=12|L-L%/I:9=8/J:74+60-13
-m^p-th+ah=m@1_4/A:1_0_4/B:1-1-4@1-1&2-1#1-1$1-1!1-0;0-0|ah/C:1+0+3/D:content_1/E:content+1@2+1&2+0#1+0/F:in_1/G:4_2/H:2=2@2=12|L-L%/I:9=8/J:74+60-13
-p^th-ah+m=p@2_3/A:1_0_4/B:1-1-4@1-1&2-1#1-1$1-1!1-0;0-0|ah/C:1+0+3/D:content_1/E:content+1@2+1&2+0#1+0/F:in_1/G:4_2/H:2=2@2=12|L-L%/I:9=8/J:74+60-13
-th^ah-m+p=pau@3_2/A:1_0_4/B:1-1-4@1-1&2-1#1-1$1-1!1-0;0-0|ah/C:1+0+3/D:content_1/E:content+1@2+1&2+0#1+0/F:in_1/G:4_2/H:2=2@2=12|L-L%/I:9=8/J:74+60-13
-ah^m-p+pau=d@4_1/A:1_0_4/B:1-1-4@1-1&2-1#1-1$1-1!1-0;0-0|ah/C:1+0+3/D:content_1/E:content+1@2+1&2+0#1+0/F:in_1/G:4_2/H:2=2@2=12|L-L%/I:9=8/J:74+60-13
-m^p-pau+d=aw@x_x/A:1_1_4/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:in_1/G:2_2/H:x=x@1=13|0/I:9=8/J:74+60-13
-p^pau-d+aw=n@1_3/A:1_1_4/B:1-0-3@1-1&1-9#1-7$1-3!0-1;0-1|aw/C:1+1+2/D:content_1/E:in+1@1+8&1+5#0+1/F:content_1/G:2_2/H:9=8@1=13|L-H%/I:3=3/J:74+60-13
-pau^d-aw+n=sh@2_2/A:1_1_4/B:1-0-3@1-1&1-9#1-7$1-3!0-1;0-1|aw/C:1+1+2/D:content_1/E:in+1@1+8&1+5#0+1/F:content_1/G:2_2/H:9=8@1=13|L-H%/I:3=3/J:74+60-13
-d^aw-n+sh=iy@3_1/A:1_1_4/B:1-0-3@1-1&1-9#1-7$1-3!0-1;0-1|aw/C:1+1+2/D:content_1/E:in+1@1+8&1+5#0+1/F:content_1/G:2_2/H:9=8@1=13|L-H%/I:3=3/J:74+60-13
-aw^n-sh+iy=k@1_2/A:1_0_3/B:1-1-2@1-1&2-8#1-6$1-2!1-1;0-7|iy/C:1+0+3/D:in_1/E:content+1@2+7&1+4#0+1/F:content_1/G:2_2/H:9=8@1=13|L-H%/I:3=3/J:74+60-13
-n^sh-iy+k=ey@2_1/A:1_0_3/B:1-1-2@1-1&2-8#1-6$1-2!1-1;0-7|iy/C:1+0+3/D:in_1/E:content+1@2+7&1+4#0+1/F:content_1/G:2_2/H:9=8@1=13|L-H%/I:3=3/J:74+60-13
-sh^iy-k+ey=m@1_3/A:1_1_2/B:1-0-3@1-1&3-7#2-5$2-2!1-2;1-6|ey/C:0+0+2/D:content_1/E:content+1@3+6&2+3#1+1/F:content_2/G:2_2/H:9=8@1=13|L-H%/I:3=3/J:74+60-13
-iy^k-ey+m=ax@2_2/A:1_1_2/B:1-0-3@1-1&3-7#2-5$2-2!1-2;1-6|ey/C:0+0+2/D:content_1/E:content+1@3+6&2+3#1+1/F:content_2/G:2_2/H:9=8@1=13|L-H%/I:3=3/J:74+60-13
-k^ey-m+ax=p@3_1/A:1_1_2/B:1-0-3@1-1&3-7#2-5$2-2!1-2;1-6|ey/C:0+0+2/D:content_1/E:content+1@3+6&2+3#1+1/F:content_2/G:2_2/H:9=8@1=13|L-H%/I:3=3/J:74+60-13
-ey^m-ax+p=aa@1_2/A:1_0_3/B:0-0-2@1-2&4-6#3-5$2-2!1-1;2-5|ax/C:1+0+2/D:content_1/E:content+2@4+5&3+2#1+2/F:det_1/G:2_2/H:9=8@1=13|L-H%/I:3=3/J:74+60-13
-m^ax-p+aa=n@2_1/A:1_0_3/B:0-0-2@1-2&4-6#3-5$2-2!1-1;2-5|ax/C:1+0+2/D:content_1/E:content+2@4+5&3+2#1+2/F:det_1/G:2_2/H:9=8@1=13|L-H%/I:3=3/J:74+60-13
-ax^p-aa+n=ax@1_2/A:0_0_2/B:1-0-2@2-1&5-5#3-4$2-2!2-2;3-4|aa/C:0+0+1/D:content_1/E:content+2@4+5&3+2#1+2/F:det_1/G:2_2/H:9=8@1=13|L-H%/I:3=3/J:74+60-13
-p^aa-n+ax=hh@2_1/A:0_0_2/B:1-0-2@2-1&5-5#3-4$2-2!2-2;3-4|aa/C:0+0+1/D:content_1/E:content+2@4+5&3+2#1+2/F:det_1/G:2_2/H:9=8@1=13|L-H%/I:3=3/J:74+60-13
-aa^n-ax+hh=iy@1_1/A:1_0_2/B:0-0-1@1-1&6-4#4-4$2-2!1-1;4-3|ax/C:1+0+3/D:content_2/E:det+1@5+4&4+2#1+1/F:content_1/G:2_2/H:9=8@1=13|L-H%/I:3=3/J:74+60-13
-n^ax-hh+iy=p@1_3/A:0_0_1/B:1-0-3@1-1&7-3#4-3$2-2!2-1;5-2|iy/C:1+0+2/D:det_1/E:content+1@6+3&4+1#2+2/F:in_1/G:2_2/H:9=8@1=13|L-H%/I:3=3/J:74+60-13
-ax^hh-iy+p=ah@2_2/A:0_0_1/B:1-0-3@1-1&7-3#4-3$2-2!2-1;5-2|iy/C:1+0+2/D:det_1/E:content+1@6+3&4+1#2+2/F:in_1/G:2_2/H:9=8@1=13|L-H%/I:3=3/J:74+60-13
-hh^iy-p+ah=v@3_1/A:0_0_1/B:1-0-3@1-1&7-3#4-3$2-2!2-1;5-2|iy/C:1+0+2/D:det_1/E:content+1@6+3&4+1#2+2/F:in_1/G:2_2/H:9=8@1=13|L-H%/I:3=3/J:74+60-13
-iy^p-ah+v=s@1_2/A:1_0_3/B:1-0-2@1-1&8-2#5-2$2-2!1-1;6-1|ah/C:1+1+5/D:content_1/E:in+1@7+2&5+1#1+1/F:content_1/G:2_2/H:9=8@1=13|L-H%/I:3=3/J:74+60-13
-p^ah-v+s=t@2_1/A:1_0_3/B:1-0-2@1-1&8-2#5-2$2-2!1-1;6-1|ah/C:1+1+5/D:content_1/E:in+1@7+2&5+1#1+1/F:content_1/G:2_2/H:9=8@1=13|L-H%/I:3=3/J:74+60-13
-ah^v-s+t=ih@1_5/A:1_0_2/B:1-1-5@1-1&9-1#6-1$2-1!1-0;7-0|ih/C:1+0+3/D:in_1/E:content+1@8+1&5+0#2+0/F:cc_1/G:2_2/H:9=8@1=13|L-H%/I:3=3/J:74+60-13
-v^s-t+ih=k@2_4/A:1_0_2/B:1-1-5@1-1&9-1#6-1$2-1!1-0;7-0|ih/C:1+0+3/D:in_1/E:content+1@8+1&5+0#2+0/F:cc_1/G:2_2/H:9=8@1=13|L-H%/I:3=3/J:74+60-13
-s^t-ih+k=s@3_3/A:1_0_2/B:1-1-5@1-1&9-1#6-1$2-1!1-0;7-0|ih/C:1+0+3/D:in_1/E:content+1@8+1&5+0#2+0/F:cc_1/G:2_2/H:9=8@1=13|L-H%/I:3=3/J:74+60-13
-t^ih-k+s=pau@4_2/A:1_0_2/B:1-1-5@1-1&9-1#6-1$2-1!1-0;7-0|ih/C:1+0+3/D:in_1/E:content+1@8+1&5+0#2+0/F:cc_1/G:2_2/H:9=8@1=13|L-H%/I:3=3/J:74+60-13
-ih^k-s+pau=ae@5_1/A:1_0_2/B:1-1-5@1-1&9-1#6-1$2-1!1-0;7-0|ih/C:1+0+3/D:in_1/E:content+1@8+1&5+0#2+0/F:cc_1/G:2_2/H:9=8@1=13|L-H%/I:3=3/J:74+60-13
-k^s-pau+ae=n@x_x/A:1_1_5/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:cc_1/G:9_8/H:x=x@1=13|0/I:3=3/J:74+60-13
-s^pau-ae+n=d@1_3/A:1_1_5/B:1-0-3@1-1&1-3#1-3$1-3!0-1;0-1|ae/C:1+1+3/D:content_1/E:cc+1@1+3&1+2#0+1/F:content_1/G:9_8/H:3=3@2=12|L-L%/I:6=5/J:74+60-13
-pau^ae-n+d=d@2_2/A:1_1_5/B:1-0-3@1-1&1-3#1-3$1-3!0-1;0-1|ae/C:1+1+3/D:content_1/E:cc+1@1+3&1+2#0+1/F:content_1/G:9_8/H:3=3@2=12|L-L%/I:6=5/J:74+60-13
-ae^n-d+d=r@3_1/A:1_1_5/B:1-0-3@1-1&1-3#1-3$1-3!0-1;0-1|ae/C:1+1+3/D:content_1/E:cc+1@1+3&1+2#0+1/F:content_1/G:9_8/H:3=3@2=12|L-L%/I:6=5/J:74+60-13
-n^d-d+r=ay@1_3/A:1_0_3/B:1-1-3@1-1&2-2#1-2$1-2!1-1;0-1|ay/C:1+1+4/D:cc_1/E:content+1@2+2&1+1#0+1/F:content_1/G:9_8/H:3=3@2=12|L-L%/I:6=5/J:74+60-13
-d^d-r+ay=l@2_2/A:1_0_3/B:1-1-3@1-1&2-2#1-2$1-2!1-1;0-1|ay/C:1+1+4/D:cc_1/E:content+1@2+2&1+1#0+1/F:content_1/G:9_8/H:3=3@2=12|L-L%/I:6=5/J:74+60-13
-d^r-ay+l=iy@3_1/A:1_0_3/B:1-1-3@1-1&2-2#1-2$1-2!1-1;0-1|ay/C:1+1+4/D:cc_1/E:content+1@2+2&1+1#0+1/F:content_1/G:9_8/H:3=3@2=12|L-L%/I:6=5/J:74+60-13
-r^ay-l+iy=v@1_4/A:1_1_3/B:1-1-4@1-1&3-1#2-1$2-1!1-0;1-0|iy/C:1+0+3/D:content_1/E:content+1@3+1&2+0#1+0/F:cc_1/G:9_8/H:3=3@2=12|L-L%/I:6=5/J:74+60-13
-ay^l-iy+v=z@2_3/A:1_1_3/B:1-1-4@1-1&3-1#2-1$2-1!1-0;1-0|iy/C:1+0+3/D:content_1/E:content+1@3+1&2+0#1+0/F:cc_1/G:9_8/H:3=3@2=12|L-L%/I:6=5/J:74+60-13
-l^iy-v+z=pau@3_2/A:1_1_3/B:1-1-4@1-1&3-1#2-1$2-1!1-0;1-0|iy/C:1+0+3/D:content_1/E:content+1@3+1&2+0#1+0/F:cc_1/G:9_8/H:3=3@2=12|L-L%/I:6=5/J:74+60-13
-iy^v-z+pau=ae@4_1/A:1_1_3/B:1-1-4@1-1&3-1#2-1$2-1!1-0;1-0|iy/C:1+0+3/D:content_1/E:content+1@3+1&2+0#1+0/F:cc_1/G:9_8/H:3=3@2=12|L-L%/I:6=5/J:74+60-13
-v^z-pau+ae=n@x_x/A:1_1_4/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:cc_1/G:3_3/H:x=x@1=13|0/I:6=5/J:74+60-13
-z^pau-ae+n=d@1_3/A:1_1_4/B:1-0-3@1-1&1-6#1-4$1-2!0-2;0-2|ae/C:0+0+2/D:content_1/E:cc+1@1+5&1+1#0+2/F:det_1/G:3_3/H:6=5@3=11|NONE/I:0=0/J:74+60-13
-pau^ae-n+d=dh@2_2/A:1_1_4/B:1-0-3@1-1&1-6#1-4$1-2!0-2;0-2|ae/C:0+0+2/D:content_1/E:cc+1@1+5&1+1#0+2/F:det_1/G:3_3/H:6=5@3=11|NONE/I:0=0/J:74+60-13
-ae^n-d+dh=ax@3_1/A:1_1_4/B:1-0-3@1-1&1-6#1-4$1-2!0-2;0-2|ae/C:0+0+2/D:content_1/E:cc+1@1+5&1+1#0+2/F:det_1/G:3_3/H:6=5@3=11|NONE/I:0=0/J:74+60-13
-n^d-dh+ax=f@1_2/A:1_0_3/B:0-0-2@1-1&2-5#1-4$1-2!1-1;0-1|ax/C:1+1+3/D:cc_1/E:det+1@2+4&1+1#0+1/F:content_1/G:3_3/H:6=5@3=11|NONE/I:0=0/J:74+60-13
-d^dh-ax+f=ao@2_1/A:1_0_3/B:0-0-2@1-1&2-5#1-4$1-2!1-1;0-1|ax/C:1+1+3/D:cc_1/E:det+1@2+4&1+1#0+1/F:content_1/G:3_3/H:6=5@3=11|NONE/I:0=0/J:74+60-13
-dh^ax-f+ao=l@1_3/A:0_0_2/B:1-1-3@1-1&3-4#1-3$1-1!2-1;0-0|ao/C:1+0+3/D:det_1/E:content+1@3+3&1+0#0+0/F:aux_1/G:3_3/H:6=5@3=11|NONE/I:0=0/J:74+60-13
-ax^f-ao+l=w@2_2/A:0_0_2/B:1-1-3@1-1&3-4#1-3$1-1!2-1;0-0|ao/C:1+0+3/D:det_1/E:content+1@3+3&1+0#0+0/F:aux_1/G:3_3/H:6=5@3=11|NONE/I:0=0/J:74+60-13
-f^ao-l+w=aa@3_1/A:0_0_2/B:1-1-3@1-1&3-4#1-3$1-1!2-1;0-0|ao/C:1+0+3/D:det_1/E:content+1@3+3&1+0#0+0/F:aux_1/G:3_3/H:6=5@3=11|NONE/I:0=0/J:74+60-13
-ao^l-w+aa=z@1_3/A:1_1_3/B:1-0-3@1-1&4-3#2-2$2-1!1-1;1-0|aa/C:1+0+2/D:content_1/E:aux+1@4+2&2+0#1+0/F:in_2/G:3_3/H:6=5@3=11|NONE/I:0=0/J:74+60-13
-l^w-aa+z=ow@2_2/A:1_1_3/B:1-0-3@1-1&4-3#2-2$2-1!1-1;1-0|aa/C:1+0+2/D:content_1/E:aux+1@4+2&2+0#1+0/F:in_2/G:3_3/H:6=5@3=11|NONE/I:0=0/J:74+60-13
-w^aa-z+ow=v@3_1/A:1_1_3/B:1-0-3@1-1&4-3#2-2$2-1!1-1;1-0|aa/C:1+0+2/D:content_1/E:aux+1@4+2&2+0#1+0/F:in_2/G:3_3/H:6=5@3=11|NONE/I:0=0/J:74+60-13
-aa^z-ow+v=er@1_2/A:1_0_3/B:1-0-2@1-2&5-2#3-1$2-1!1-0;2-0|ow/C:0+0+1/D:aux_1/E:in+2@5+1&2+0#2+0/F:0_0/G:3_3/H:6=5@3=11|NONE/I:0=0/J:74+60-13
-z^ow-v+er=pau@2_1/A:1_0_3/B:1-0-2@1-2&5-2#3-1$2-1!1-0;2-0|ow/C:0+0+1/D:aux_1/E:in+2@5+1&2+0#2+0/F:0_0/G:3_3/H:6=5@3=11|NONE/I:0=0/J:74+60-13
-ow^v-er+pau=x@1_1/A:1_0_2/B:0-0-1@2-1&6-1#4-1$2-1!1-0;3-0|er/C:0+0+0/D:aux_1/E:in+2@5+1&2+0#2+0/F:0_0/G:3_3/H:6=5@3=11|NONE/I:0=0/J:74+60-13
-v^er-pau+x=x@x_x/A:0_0_1/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:in_2/E:x+x@x+x&x+x#x+x/F:0_0/G:6_5/H:x=x@1=13|0/I:0=0/J:74+60-13
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice37.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice37.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice37.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice37.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,143 +0,0 @@
-x^x-pau+ae=l@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+2/D:0_0/E:x+x@x+x&x+x#x+x/F:content_2/G:0_0/H:x=x@1=9|0/I:7=6/J:54+43-9
-x^pau-ae+l=ax@1_2/A:0_0_0/B:1-1-2@1-2&1-7#1-5$1-3!0-2;0-3|ae/C:0+0+2/D:0_0/E:content+2@1+6&1+3#0+2/F:aux_1/G:0_0/H:7=6@1=9|L-L%/I:8=8/J:54+43-9
-pau^ae-l+ax=s@2_1/A:0_0_0/B:1-1-2@1-2&1-7#1-5$1-3!0-2;0-3|ae/C:0+0+2/D:0_0/E:content+2@1+6&1+3#0+2/F:aux_1/G:0_0/H:7=6@1=9|L-L%/I:8=8/J:54+43-9
-ae^l-ax+s=w@1_2/A:1_1_2/B:0-0-2@2-1&2-6#1-5$1-3!1-1;1-2|ax/C:1+0+3/D:0_0/E:content+2@1+6&1+3#0+2/F:aux_1/G:0_0/H:7=6@1=9|L-L%/I:8=8/J:54+43-9
-l^ax-s+w=aa@2_1/A:1_1_2/B:0-0-2@2-1&2-6#1-5$1-3!1-1;1-2|ax/C:1+0+3/D:0_0/E:content+2@1+6&1+3#0+2/F:aux_1/G:0_0/H:7=6@1=9|L-L%/I:8=8/J:54+43-9
-ax^s-w+aa=z@1_3/A:0_0_2/B:1-0-3@1-1&3-5#1-4$1-3!2-1;2-1|aa/C:1+1+3/D:content_2/E:aux+1@2+5&2+3#1+1/F:content_1/G:0_0/H:7=6@1=9|L-L%/I:8=8/J:54+43-9
-s^w-aa+z=n@2_2/A:0_0_2/B:1-0-3@1-1&3-5#1-4$1-3!2-1;2-1|aa/C:1+1+3/D:content_2/E:aux+1@2+5&2+3#1+1/F:content_1/G:0_0/H:7=6@1=9|L-L%/I:8=8/J:54+43-9
-w^aa-z+n=aa@3_1/A:0_0_2/B:1-0-3@1-1&3-5#1-4$1-3!2-1;2-1|aa/C:1+1+3/D:content_2/E:aux+1@2+5&2+3#1+1/F:content_1/G:0_0/H:7=6@1=9|L-L%/I:8=8/J:54+43-9
-aa^z-n+aa=t@1_3/A:1_0_3/B:1-1-3@1-1&4-4#2-3$1-2!1-2;3-3|aa/C:0+0+1/D:aux_1/E:content+1@3+4&2+2#2+2/F:det_1/G:0_0/H:7=6@1=9|L-L%/I:8=8/J:54+43-9
-z^n-aa+t=ax@2_2/A:1_0_3/B:1-1-3@1-1&4-4#2-3$1-2!1-2;3-3|aa/C:0+0+1/D:aux_1/E:content+1@3+4&2+2#2+2/F:det_1/G:0_0/H:7=6@1=9|L-L%/I:8=8/J:54+43-9
-n^aa-t+ax=b@3_1/A:1_0_3/B:1-1-3@1-1&4-4#2-3$1-2!1-2;3-3|aa/C:0+0+1/D:aux_1/E:content+1@3+4&2+2#2+2/F:det_1/G:0_0/H:7=6@1=9|L-L%/I:8=8/J:54+43-9
-aa^t-ax+b=ih@1_1/A:1_1_3/B:0-0-1@1-1&5-3#3-3$2-2!1-1;1-2|ax/C:1+0+3/D:content_1/E:det+1@4+3&3+2#1+1/F:content_1/G:0_0/H:7=6@1=9|L-L%/I:8=8/J:54+43-9
-t^ax-b+ih=t@1_3/A:0_0_1/B:1-0-3@1-1&6-2#3-2$2-2!2-1;2-1|ih/C:1+1+3/D:det_1/E:content+1@5+2&3+1#2+1/F:content_1/G:0_0/H:7=6@1=9|L-L%/I:8=8/J:54+43-9
-ax^b-ih+t=hh@2_2/A:0_0_1/B:1-0-3@1-1&6-2#3-2$2-2!2-1;2-1|ih/C:1+1+3/D:det_1/E:content+1@5+2&3+1#2+1/F:content_1/G:0_0/H:7=6@1=9|L-L%/I:8=8/J:54+43-9
-b^ih-t+hh=er@3_1/A:0_0_1/B:1-0-3@1-1&6-2#3-2$2-2!2-1;2-1|ih/C:1+1+3/D:det_1/E:content+1@5+2&3+1#2+1/F:content_1/G:0_0/H:7=6@1=9|L-L%/I:8=8/J:54+43-9
-ih^t-hh+er=t@1_3/A:1_0_3/B:1-1-3@1-1&7-1#4-1$2-1!1-0;3-0|er/C:1+0+3/D:content_1/E:content+1@6+1&4+0#1+0/F:cc_1/G:0_0/H:7=6@1=9|L-L%/I:8=8/J:54+43-9
-t^hh-er+t=pau@2_2/A:1_0_3/B:1-1-3@1-1&7-1#4-1$2-1!1-0;3-0|er/C:1+0+3/D:content_1/E:content+1@6+1&4+0#1+0/F:cc_1/G:0_0/H:7=6@1=9|L-L%/I:8=8/J:54+43-9
-hh^er-t+pau=ae@3_1/A:1_0_3/B:1-1-3@1-1&7-1#4-1$2-1!1-0;3-0|er/C:1+0+3/D:content_1/E:content+1@6+1&4+0#1+0/F:cc_1/G:0_0/H:7=6@1=9|L-L%/I:8=8/J:54+43-9
-er^t-pau+ae=n@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:cc_1/G:7_6/H:x=x@1=9|0/I:8=8/J:54+43-9
-t^pau-ae+n=d@1_3/A:1_1_3/B:1-0-3@1-1&1-8#1-6$1-4!0-1;0-1|ae/C:1+1+2/D:content_1/E:cc+1@1+8&1+3#0+1/F:content_1/G:7_6/H:8=8@2=8|L-L%/I:4=3/J:54+43-9
-pau^ae-n+d=sh@2_2/A:1_1_3/B:1-0-3@1-1&1-8#1-6$1-4!0-1;0-1|ae/C:1+1+2/D:content_1/E:cc+1@1+8&1+3#0+1/F:content_1/G:7_6/H:8=8@2=8|L-L%/I:4=3/J:54+43-9
-ae^n-d+sh=iy@3_1/A:1_1_3/B:1-0-3@1-1&1-8#1-6$1-4!0-1;0-1|ae/C:1+1+2/D:content_1/E:cc+1@1+8&1+3#0+1/F:content_1/G:7_6/H:8=8@2=8|L-L%/I:4=3/J:54+43-9
-n^d-sh+iy=jh@1_2/A:1_0_3/B:1-1-2@1-1&2-7#1-5$1-3!1-1;0-1|iy/C:1+1+5/D:cc_1/E:content+1@2+7&1+2#0+1/F:content_1/G:7_6/H:8=8@2=8|L-L%/I:4=3/J:54+43-9
-d^sh-iy+jh=ah@2_1/A:1_0_3/B:1-1-2@1-1&2-7#1-5$1-3!1-1;0-1|iy/C:1+1+5/D:cc_1/E:content+1@2+7&1+2#0+1/F:content_1/G:7_6/H:8=8@2=8|L-L%/I:4=3/J:54+43-9
-sh^iy-jh+ah=m@1_5/A:1_1_2/B:1-1-5@1-1&3-6#2-4$2-2!1-1;1-5|ah/C:1+0+2/D:content_1/E:content+1@3+6&2+1#1+5/F:in_1/G:7_6/H:8=8@2=8|L-L%/I:4=3/J:54+43-9
-iy^jh-ah+m=p@2_4/A:1_1_2/B:1-1-5@1-1&3-6#2-4$2-2!1-1;1-5|ah/C:1+0+2/D:content_1/E:content+1@3+6&2+1#1+5/F:in_1/G:7_6/H:8=8@2=8|L-L%/I:4=3/J:54+43-9
-jh^ah-m+p=t@3_3/A:1_1_2/B:1-1-5@1-1&3-6#2-4$2-2!1-1;1-5|ah/C:1+0+2/D:content_1/E:content+1@3+6&2+1#1+5/F:in_1/G:7_6/H:8=8@2=8|L-L%/I:4=3/J:54+43-9
-ah^m-p+t=ah@4_2/A:1_1_2/B:1-1-5@1-1&3-6#2-4$2-2!1-1;1-5|ah/C:1+0+2/D:content_1/E:content+1@3+6&2+1#1+5/F:in_1/G:7_6/H:8=8@2=8|L-L%/I:4=3/J:54+43-9
-m^p-t+ah=p@5_1/A:1_1_2/B:1-1-5@1-1&3-6#2-4$2-2!1-1;1-5|ah/C:1+0+2/D:content_1/E:content+1@3+6&2+1#1+5/F:in_1/G:7_6/H:8=8@2=8|L-L%/I:4=3/J:54+43-9
-p^t-ah+p=aa@1_2/A:1_1_5/B:1-0-2@1-1&4-5#3-3$3-2!1-1;1-4|ah/C:1+0+2/D:content_1/E:in+1@4+5&3+1#1+4/F:in_1/G:7_6/H:8=8@2=8|L-L%/I:4=3/J:54+43-9
-t^ah-p+aa=n@2_1/A:1_1_5/B:1-0-2@1-1&4-5#3-3$3-2!1-1;1-4|ah/C:1+0+2/D:content_1/E:in+1@4+5&3+1#1+4/F:in_1/G:7_6/H:8=8@2=8|L-L%/I:4=3/J:54+43-9
-ah^p-aa+n=t@1_2/A:1_0_2/B:1-0-2@1-1&5-4#4-2$3-2!1-3;2-3|aa/C:0+0+2/D:in_1/E:in+1@5+4&3+1#2+3/F:to_1/G:7_6/H:8=8@2=8|L-L%/I:4=3/J:54+43-9
-p^aa-n+t=ax@2_1/A:1_0_2/B:1-0-2@1-1&5-4#4-2$3-2!1-3;2-3|aa/C:0+0+2/D:in_1/E:in+1@5+4&3+1#2+3/F:to_1/G:7_6/H:8=8@2=8|L-L%/I:4=3/J:54+43-9
-aa^n-t+ax=hh@1_2/A:1_0_2/B:0-0-2@1-1&6-3#5-2$3-2!1-2;3-2|ax/C:0+0+2/D:in_1/E:to+1@6+3&3+1#3+2/F:pps_1/G:7_6/H:8=8@2=8|L-L%/I:4=3/J:54+43-9
-n^t-ax+hh=er@2_1/A:1_0_2/B:0-0-2@1-1&6-3#5-2$3-2!1-2;3-2|ax/C:0+0+2/D:in_1/E:to+1@6+3&3+1#3+2/F:pps_1/G:7_6/H:8=8@2=8|L-L%/I:4=3/J:54+43-9
-t^ax-hh+er=f@1_2/A:0_0_2/B:0-0-2@1-1&7-2#5-2$3-2!2-1;4-1|er/C:1+1+3/D:to_1/E:pps+1@7+2&3+1#4+1/F:content_1/G:7_6/H:8=8@2=8|L-L%/I:4=3/J:54+43-9
-ax^hh-er+f=iy@2_1/A:0_0_2/B:0-0-2@1-1&7-2#5-2$3-2!2-1;4-1|er/C:1+1+3/D:to_1/E:pps+1@7+2&3+1#4+1/F:content_1/G:7_6/H:8=8@2=8|L-L%/I:4=3/J:54+43-9
-hh^er-f+iy=t@1_3/A:0_0_2/B:1-1-3@1-1&8-1#5-1$3-1!3-0;5-0|iy/C:0+0+2/D:pps_1/E:content+1@8+1&3+0#5+0/F:in_1/G:7_6/H:8=8@2=8|L-L%/I:4=3/J:54+43-9
-er^f-iy+t=pau@2_2/A:0_0_2/B:1-1-3@1-1&8-1#5-1$3-1!3-0;5-0|iy/C:0+0+2/D:pps_1/E:content+1@8+1&3+0#5+0/F:in_1/G:7_6/H:8=8@2=8|L-L%/I:4=3/J:54+43-9
-f^iy-t+pau=ih@3_1/A:0_0_2/B:1-1-3@1-1&8-1#5-1$3-1!3-0;5-0|iy/C:0+0+2/D:pps_1/E:content+1@8+1&3+0#5+0/F:in_1/G:7_6/H:8=8@2=8|L-L%/I:4=3/J:54+43-9
-iy^t-pau+ih=n@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+2/D:content_1/E:x+x@x+x&x+x#x+x/F:in_1/G:8_8/H:x=x@1=9|0/I:4=3/J:54+43-9
-t^pau-ih+n=ax@1_2/A:1_1_3/B:0-0-2@1-1&1-4#1-2$1-3!0-2;0-2|ih/C:0+0+1/D:content_1/E:in+1@1+3&1+1#0+2/F:det_1/G:8_8/H:4=3@3=7|L-L%/I:3=3/J:54+43-9
-pau^ih-n+ax=m@2_1/A:1_1_3/B:0-0-2@1-1&1-4#1-2$1-3!0-2;0-2|ih/C:0+0+1/D:content_1/E:in+1@1+3&1+1#0+2/F:det_1/G:8_8/H:4=3@3=7|L-L%/I:3=3/J:54+43-9
-ih^n-ax+m=ow@1_1/A:0_0_2/B:0-0-1@1-1&2-3#1-2$1-3!0-1;0-1|ax/C:1+1+3/D:in_1/E:det+1@2+2&1+1#0+1/F:content_2/G:8_8/H:4=3@3=7|L-L%/I:3=3/J:54+43-9
-n^ax-m+ow=m@1_3/A:0_0_1/B:1-1-3@1-2&3-2#1-1$1-2!0-0;0-1|ow/C:0+1+3/D:det_1/E:content+2@3+1&1+0#0+0/F:content_1/G:8_8/H:4=3@3=7|L-L%/I:3=3/J:54+43-9
-ax^m-ow+m=ax@2_2/A:0_0_1/B:1-1-3@1-2&3-2#1-1$1-2!0-0;0-1|ow/C:0+1+3/D:det_1/E:content+2@3+1&1+0#0+0/F:content_1/G:8_8/H:4=3@3=7|L-L%/I:3=3/J:54+43-9
-m^ow-m+ax=n@3_1/A:0_0_1/B:1-1-3@1-2&3-2#1-1$1-2!0-0;0-1|ow/C:0+1+3/D:det_1/E:content+2@3+1&1+0#0+0/F:content_1/G:8_8/H:4=3@3=7|L-L%/I:3=3/J:54+43-9
-ow^m-ax+n=t@1_3/A:1_1_3/B:0-1-3@2-1&4-1#2-1$2-1!1-0;1-0|ax/C:1+0+2/D:det_1/E:content+2@3+1&1+0#0+0/F:content_1/G:8_8/H:4=3@3=7|L-L%/I:3=3/J:54+43-9
-m^ax-n+t=pau@2_2/A:1_1_3/B:0-1-3@2-1&4-1#2-1$2-1!1-0;1-0|ax/C:1+0+2/D:det_1/E:content+2@3+1&1+0#0+0/F:content_1/G:8_8/H:4=3@3=7|L-L%/I:3=3/J:54+43-9
-ax^n-t+pau=sh@3_1/A:1_1_3/B:0-1-3@2-1&4-1#2-1$2-1!1-0;1-0|ax/C:1+0+2/D:det_1/E:content+2@3+1&1+0#0+0/F:content_1/G:8_8/H:4=3@3=7|L-L%/I:3=3/J:54+43-9
-n^t-pau+sh=iy@x_x/A:0_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:content_2/E:x+x@x+x&x+x#x+x/F:content_1/G:4_3/H:x=x@1=9|0/I:3=3/J:54+43-9
-t^pau-sh+iy=l@1_2/A:0_1_3/B:1-0-2@1-1&1-3#1-3$1-2!0-1;0-1|iy/C:1+1+4/D:content_2/E:content+1@1+3&1+1#0+1/F:content_1/G:4_3/H:3=3@4=6|NONE/I:8=6/J:54+43-9
-pau^sh-iy+l=uh@2_1/A:0_1_3/B:1-0-2@1-1&1-3#1-3$1-2!0-1;0-1|iy/C:1+1+4/D:content_2/E:content+1@1+3&1+1#0+1/F:content_1/G:4_3/H:3=3@4=6|NONE/I:8=6/J:54+43-9
-sh^iy-l+uh=k@1_4/A:1_0_2/B:1-1-4@1-1&2-2#1-2$1-1!1-1;0-0|uh/C:1+0+2/D:content_1/E:content+1@2+2&2+0#1+0/F:in_1/G:4_3/H:3=3@4=6|NONE/I:8=6/J:54+43-9
-iy^l-uh+k=t@2_3/A:1_0_2/B:1-1-4@1-1&2-2#1-2$1-1!1-1;0-0|uh/C:1+0+2/D:content_1/E:content+1@2+2&2+0#1+0/F:in_1/G:4_3/H:3=3@4=6|NONE/I:8=6/J:54+43-9
-l^uh-k+t=ah@3_2/A:1_0_2/B:1-1-4@1-1&2-2#1-2$1-1!1-1;0-0|uh/C:1+0+2/D:content_1/E:content+1@2+2&2+0#1+0/F:in_1/G:4_3/H:3=3@4=6|NONE/I:8=6/J:54+43-9
-uh^k-t+ah=p@4_1/A:1_0_2/B:1-1-4@1-1&2-2#1-2$1-1!1-1;0-0|uh/C:1+0+2/D:content_1/E:content+1@2+2&2+0#1+0/F:in_1/G:4_3/H:3=3@4=6|NONE/I:8=6/J:54+43-9
-k^t-ah+p=pau@1_2/A:1_1_4/B:1-0-2@1-1&3-1#2-1$2-1!1-0;1-0|ah/C:1+0+3/D:content_1/E:in+1@3+1&3+0#1+0/F:cc_1/G:4_3/H:3=3@4=6|NONE/I:8=6/J:54+43-9
-t^ah-p+pau=b@2_1/A:1_1_4/B:1-0-2@1-1&3-1#2-1$2-1!1-0;1-0|ah/C:1+0+3/D:content_1/E:in+1@3+1&3+0#1+0/F:cc_1/G:4_3/H:3=3@4=6|NONE/I:8=6/J:54+43-9
-ah^p-pau+b=ah@x_x/A:1_0_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:in_1/E:x+x@x+x&x+x#x+x/F:cc_1/G:3_3/H:x=x@1=9|0/I:8=6/J:54+43-9
-p^pau-b+ah=t@1_3/A:1_0_2/B:1-0-3@1-1&1-8#1-7$1-4!0-1;0-1|ah/C:1+1+2/D:in_1/E:cc+1@1+6&1+3#0+1/F:content_1/G:3_3/H:8=6@5=5|L-L%/I:10=6/J:54+43-9
-pau^b-ah+t=ih@2_2/A:1_0_2/B:1-0-3@1-1&1-8#1-7$1-4!0-1;0-1|ah/C:1+1+2/D:in_1/E:cc+1@1+6&1+3#0+1/F:content_1/G:3_3/H:8=6@5=5|L-L%/I:10=6/J:54+43-9
-b^ah-t+ih=t@3_1/A:1_0_2/B:1-0-3@1-1&1-8#1-7$1-4!0-1;0-1|ah/C:1+1+2/D:in_1/E:cc+1@1+6&1+3#0+1/F:content_1/G:3_3/H:8=6@5=5|L-L%/I:10=6/J:54+43-9
-ah^t-ih+t=w@1_2/A:1_0_3/B:1-1-2@1-1&2-7#1-6$1-3!1-1;0-4|ih/C:1+0+3/D:cc_1/E:content+1@2+5&1+2#0+3/F:aux_1/G:3_3/H:8=6@5=5|L-L%/I:10=6/J:54+43-9
-t^ih-t+w=aa@2_1/A:1_0_3/B:1-1-2@1-1&2-7#1-6$1-3!1-1;0-4|ih/C:1+0+3/D:cc_1/E:content+1@2+5&1+2#0+3/F:aux_1/G:3_3/H:8=6@5=5|L-L%/I:10=6/J:54+43-9
-ih^t-w+aa=z@1_3/A:1_1_2/B:1-0-3@1-1&3-6#2-5$2-3!1-1;1-3|aa/C:1+0+2/D:content_1/E:aux+1@3+4&2+2#1+2/F:det_1/G:3_3/H:8=6@5=5|L-L%/I:10=6/J:54+43-9
-t^w-aa+z=ao@2_2/A:1_1_2/B:1-0-3@1-1&3-6#2-5$2-3!1-1;1-3|aa/C:1+0+2/D:content_1/E:aux+1@3+4&2+2#1+2/F:det_1/G:3_3/H:8=6@5=5|L-L%/I:10=6/J:54+43-9
-w^aa-z+ao=l@3_1/A:1_1_2/B:1-0-3@1-1&3-6#2-5$2-3!1-1;1-3|aa/C:1+0+2/D:content_1/E:aux+1@3+4&2+2#1+2/F:det_1/G:3_3/H:8=6@5=5|L-L%/I:10=6/J:54+43-9
-aa^z-ao+l=d@1_2/A:1_0_3/B:1-0-2@1-1&4-5#3-4$2-3!1-1;2-2|ao/C:1+0+4/D:aux_1/E:det+1@4+3&2+2#2+1/F:content_1/G:3_3/H:8=6@5=5|L-L%/I:10=6/J:54+43-9
-z^ao-l+d=aa@2_1/A:1_0_3/B:1-0-2@1-1&4-5#3-4$2-3!1-1;2-2|ao/C:1+0+4/D:aux_1/E:det+1@4+3&2+2#2+1/F:content_1/G:3_3/H:8=6@5=5|L-L%/I:10=6/J:54+43-9
-ao^l-d+aa=r@1_4/A:1_0_2/B:1-0-4@1-1&5-4#4-3$2-3!1-1;3-1|aa/C:1+1+2/D:det_1/E:content+1@5+2&2+1#3+1/F:content_3/G:3_3/H:8=6@5=5|L-L%/I:10=6/J:54+43-9
-l^d-aa+r=k@2_3/A:1_0_2/B:1-0-4@1-1&5-4#4-3$2-3!1-1;3-1|aa/C:1+1+2/D:det_1/E:content+1@5+2&2+1#3+1/F:content_3/G:3_3/H:8=6@5=5|L-L%/I:10=6/J:54+43-9
-d^aa-r+k=ow@3_2/A:1_0_2/B:1-0-4@1-1&5-4#4-3$2-3!1-1;3-1|aa/C:1+1+2/D:det_1/E:content+1@5+2&2+1#3+1/F:content_3/G:3_3/H:8=6@5=5|L-L%/I:10=6/J:54+43-9
-aa^r-k+ow=v@4_1/A:1_0_2/B:1-0-4@1-1&5-4#4-3$2-3!1-1;3-1|aa/C:1+1+2/D:det_1/E:content+1@5+2&2+1#3+1/F:content_3/G:3_3/H:8=6@5=5|L-L%/I:10=6/J:54+43-9
-r^k-ow+v=er@1_2/A:1_0_4/B:1-1-2@1-3&6-3#5-2$2-2!1-2;4-2|ow/C:0+0+2/D:content_1/E:content+3@6+1&3+0#1+0/F:in_2/G:3_3/H:8=6@5=5|L-L%/I:10=6/J:54+43-9
-k^ow-v+er=hh@2_1/A:1_0_4/B:1-1-2@1-3&6-3#5-2$2-2!1-2;4-2|ow/C:0+0+2/D:content_1/E:content+3@6+1&3+0#1+0/F:in_2/G:3_3/H:8=6@5=5|L-L%/I:10=6/J:54+43-9
-ow^v-er+hh=eh@1_2/A:1_1_2/B:0-0-2@2-2&7-2#6-2$3-2!1-1;1-1|er/C:1+1+2/D:content_1/E:content+3@6+1&3+0#1+0/F:in_2/G:3_3/H:8=6@5=5|L-L%/I:10=6/J:54+43-9
-v^er-hh+eh=d@2_1/A:1_1_2/B:0-0-2@2-2&7-2#6-2$3-2!1-1;1-1|er/C:1+1+2/D:content_1/E:content+3@6+1&3+0#1+0/F:in_2/G:3_3/H:8=6@5=5|L-L%/I:10=6/J:54+43-9
-er^hh-eh+d=pau@1_2/A:0_0_2/B:1-1-2@3-1&8-1#6-1$3-1!2-0;2-0|eh/C:0+0+2/D:content_1/E:content+3@6+1&3+0#1+0/F:in_2/G:3_3/H:8=6@5=5|L-L%/I:10=6/J:54+43-9
-hh^eh-d+pau=b@2_1/A:0_0_2/B:1-1-2@3-1&8-1#6-1$3-1!2-0;2-0|eh/C:0+0+2/D:content_1/E:content+3@6+1&3+0#1+0/F:in_2/G:3_3/H:8=6@5=5|L-L%/I:10=6/J:54+43-9
-eh^d-pau+b=iy@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+2/D:content_3/E:x+x@x+x&x+x#x+x/F:in_2/G:8_6/H:x=x@1=9|0/I:10=6/J:54+43-9
-d^pau-b+iy=f@1_2/A:1_1_2/B:0-0-2@1-2&1-10#1-6$1-2!0-1;0-9|iy/C:1+0+3/D:content_3/E:in+2@1+6&1+2#0+4/F:pps_1/G:8_6/H:10=6@6=4|L-L%/I:5=4/J:54+43-9
-pau^b-iy+f=ao@2_1/A:1_1_2/B:0-0-2@1-2&1-10#1-6$1-2!0-1;0-9|iy/C:1+0+3/D:content_3/E:in+2@1+6&1+2#0+4/F:pps_1/G:8_6/H:10=6@6=4|L-L%/I:5=4/J:54+43-9
-b^iy-f+ao=r@1_3/A:0_0_2/B:1-0-3@2-1&2-9#1-5$1-2!0-2;0-8|ao/C:0+0+2/D:content_3/E:in+2@1+6&1+2#0+4/F:pps_1/G:8_6/H:10=6@6=4|L-L%/I:5=4/J:54+43-9
-iy^f-ao+r=hh@2_2/A:0_0_2/B:1-0-3@2-1&2-9#1-5$1-2!0-2;0-8|ao/C:0+0+2/D:content_3/E:in+2@1+6&1+2#0+4/F:pps_1/G:8_6/H:10=6@6=4|L-L%/I:5=4/J:54+43-9
-f^ao-r+hh=er@3_1/A:0_0_2/B:1-0-3@2-1&2-9#1-5$1-2!0-2;0-8|ao/C:0+0+2/D:content_3/E:in+2@1+6&1+2#0+4/F:pps_1/G:8_6/H:10=6@6=4|L-L%/I:5=4/J:54+43-9
-ao^r-hh+er=w@1_2/A:1_0_3/B:0-0-2@1-1&3-8#2-5$1-2!1-1;0-7|er/C:1+0+3/D:in_2/E:pps+1@2+5&1+2#0+3/F:aux_1/G:8_6/H:10=6@6=4|L-L%/I:5=4/J:54+43-9
-r^hh-er+w=aa@2_1/A:1_0_3/B:0-0-2@1-1&3-8#2-5$1-2!1-1;0-7|er/C:1+0+3/D:in_2/E:pps+1@2+5&1+2#0+3/F:aux_1/G:8_6/H:10=6@6=4|L-L%/I:5=4/J:54+43-9
-hh^er-w+aa=z@1_3/A:0_0_2/B:1-0-3@1-1&4-7#2-4$1-2!2-2;0-6|aa/C:0+0+2/D:pps_1/E:aux+1@3+4&1+2#0+2/F:det_3/G:8_6/H:10=6@6=4|L-L%/I:5=4/J:54+43-9
-er^w-aa+z=ax@2_2/A:0_0_2/B:1-0-3@1-1&4-7#2-4$1-2!2-2;0-6|aa/C:0+0+2/D:pps_1/E:aux+1@3+4&1+2#0+2/F:det_3/G:8_6/H:10=6@6=4|L-L%/I:5=4/J:54+43-9
-w^aa-z+ax=n@3_1/A:0_0_2/B:1-0-3@1-1&4-7#2-4$1-2!2-2;0-6|aa/C:0+0+2/D:pps_1/E:aux+1@3+4&1+2#0+2/F:det_3/G:8_6/H:10=6@6=4|L-L%/I:5=4/J:54+43-9
-aa^z-ax+n=ah@1_2/A:1_0_3/B:0-0-2@1-3&5-6#3-4$1-2!1-1;0-5|ax/C:1+0+2/D:aux_1/E:det+3@4+3&1+2#0+1/F:content_1/G:8_6/H:10=6@6=4|L-L%/I:5=4/J:54+43-9
-z^ax-n+ah=dh@2_1/A:1_0_3/B:0-0-2@1-3&5-6#3-4$1-2!1-1;0-5|ax/C:1+0+2/D:aux_1/E:det+3@4+3&1+2#0+1/F:content_1/G:8_6/H:10=6@6=4|L-L%/I:5=4/J:54+43-9
-ax^n-ah+dh=er@1_2/A:0_0_2/B:1-0-2@2-2&6-5#3-3$1-2!2-2;0-4|ah/C:0+0+1/D:aux_1/E:det+3@4+3&1+2#0+1/F:content_1/G:8_6/H:10=6@6=4|L-L%/I:5=4/J:54+43-9
-n^ah-dh+er=l@2_1/A:0_0_2/B:1-0-2@2-2&6-5#3-3$1-2!2-2;0-4|ah/C:0+0+1/D:aux_1/E:det+3@4+3&1+2#0+1/F:content_1/G:8_6/H:10=6@6=4|L-L%/I:5=4/J:54+43-9
-ah^dh-er+l=ao@1_1/A:1_0_2/B:0-0-1@3-1&7-4#4-3$1-2!1-1;0-3|er/C:1+0+3/D:aux_1/E:det+3@4+3&1+2#0+1/F:content_1/G:8_6/H:10=6@6=4|L-L%/I:5=4/J:54+43-9
-dh^er-l+ao=ng@1_3/A:0_0_1/B:1-0-3@1-1&8-3#4-2$1-2!2-1;0-2|ao/C:1+0+3/D:det_3/E:content+1@5+2&1+1#0+1/F:content_2/G:8_6/H:10=6@6=4|L-L%/I:5=4/J:54+43-9
-er^l-ao+ng=p@2_2/A:0_0_1/B:1-0-3@1-1&8-3#4-2$1-2!2-1;0-2|ao/C:1+0+3/D:det_3/E:content+1@5+2&1+1#0+1/F:content_2/G:8_6/H:10=6@6=4|L-L%/I:5=4/J:54+43-9
-l^ao-ng+p=ae@3_1/A:0_0_1/B:1-0-3@1-1&8-3#4-2$1-2!2-1;0-2|ao/C:1+0+3/D:det_3/E:content+1@5+2&1+1#0+1/F:content_2/G:8_6/H:10=6@6=4|L-L%/I:5=4/J:54+43-9
-ao^ng-p+ae=s@1_3/A:1_0_3/B:1-0-3@1-2&9-2#5-1$1-2!1-0;0-1|ae/C:0+1+2/D:content_1/E:content+2@6+1&2+0#1+0/F:cc_1/G:8_6/H:10=6@6=4|L-L%/I:5=4/J:54+43-9
-ng^p-ae+s=ax@2_2/A:1_0_3/B:1-0-3@1-2&9-2#5-1$1-2!1-0;0-1|ae/C:0+1+2/D:content_1/E:content+2@6+1&2+0#1+0/F:cc_1/G:8_6/H:10=6@6=4|L-L%/I:5=4/J:54+43-9
-p^ae-s+ax=jh@3_1/A:1_0_3/B:1-0-3@1-2&9-2#5-1$1-2!1-0;0-1|ae/C:0+1+2/D:content_1/E:content+2@6+1&2+0#1+0/F:cc_1/G:8_6/H:10=6@6=4|L-L%/I:5=4/J:54+43-9
-ae^s-ax+jh=pau@1_2/A:1_0_3/B:0-1-2@2-1&10-1#6-1$1-1!1-0;0-0|ax/C:1+0+3/D:content_1/E:content+2@6+1&2+0#1+0/F:cc_1/G:8_6/H:10=6@6=4|L-L%/I:5=4/J:54+43-9
-s^ax-jh+pau=ae@2_1/A:1_0_3/B:0-1-2@2-1&10-1#6-1$1-1!1-0;0-0|ax/C:1+0+3/D:content_1/E:content+2@6+1&2+0#1+0/F:cc_1/G:8_6/H:10=6@6=4|L-L%/I:5=4/J:54+43-9
-ax^jh-pau+ae=n@x_x/A:0_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_2/E:x+x@x+x&x+x#x+x/F:cc_1/G:10_6/H:x=x@1=9|0/I:5=4/J:54+43-9
-jh^pau-ae+n=d@1_3/A:0_1_2/B:1-0-3@1-1&1-5#1-3$1-4!0-2;0-2|ae/C:0+0+2/D:content_2/E:cc+1@1+4&1+2#0+2/F:det_1/G:10_6/H:5=4@7=3|L-H%/I:4=4/J:54+43-9
-pau^ae-n+d=dh@2_2/A:0_1_2/B:1-0-3@1-1&1-5#1-3$1-4!0-2;0-2|ae/C:0+0+2/D:content_2/E:cc+1@1+4&1+2#0+2/F:det_1/G:10_6/H:5=4@7=3|L-H%/I:4=4/J:54+43-9
-ae^n-d+dh=ax@3_1/A:0_1_2/B:1-0-3@1-1&1-5#1-3$1-4!0-2;0-2|ae/C:0+0+2/D:content_2/E:cc+1@1+4&1+2#0+2/F:det_1/G:10_6/H:5=4@7=3|L-H%/I:4=4/J:54+43-9
-n^d-dh+ax=w@1_2/A:1_0_3/B:0-0-2@1-1&2-4#1-3$1-4!1-1;0-1|ax/C:1+1+3/D:cc_1/E:det+1@2+3&1+2#0+1/F:content_1/G:10_6/H:5=4@7=3|L-H%/I:4=4/J:54+43-9
-d^dh-ax+w=ay@2_1/A:1_0_3/B:0-0-2@1-1&2-4#1-3$1-4!1-1;0-1|ax/C:1+1+3/D:cc_1/E:det+1@2+3&1+2#0+1/F:content_1/G:10_6/H:5=4@7=3|L-H%/I:4=4/J:54+43-9
-dh^ax-w+ay=t@1_3/A:0_0_2/B:1-1-3@1-1&3-3#1-2$1-3!2-1;0-1|ay/C:1+1+3/D:det_1/E:content+1@3+2&1+1#0+1/F:content_2/G:10_6/H:5=4@7=3|L-H%/I:4=4/J:54+43-9
-ax^w-ay+t=r@2_2/A:0_0_2/B:1-1-3@1-1&3-3#1-2$1-3!2-1;0-1|ay/C:1+1+3/D:det_1/E:content+1@3+2&1+1#0+1/F:content_2/G:10_6/H:5=4@7=3|L-H%/I:4=4/J:54+43-9
-w^ay-t+r=ae@3_1/A:0_0_2/B:1-1-3@1-1&3-3#1-2$1-3!2-1;0-1|ay/C:1+1+3/D:det_1/E:content+1@3+2&1+1#0+1/F:content_2/G:10_6/H:5=4@7=3|L-H%/I:4=4/J:54+43-9
-ay^t-r+ae=b@1_3/A:1_1_3/B:1-1-3@1-2&4-2#2-1$2-2!1-0;1-1|ae/C:0+1+2/D:content_1/E:content+2@4+1&2+0#1+0/F:aux_1/G:10_6/H:5=4@7=3|L-H%/I:4=4/J:54+43-9
-t^r-ae+b=ax@2_2/A:1_1_3/B:1-1-3@1-2&4-2#2-1$2-2!1-0;1-1|ae/C:0+1+2/D:content_1/E:content+2@4+1&2+0#1+0/F:aux_1/G:10_6/H:5=4@7=3|L-H%/I:4=4/J:54+43-9
-r^ae-b+ax=t@3_1/A:1_1_3/B:1-1-3@1-2&4-2#2-1$2-2!1-0;1-1|ae/C:0+1+2/D:content_1/E:content+2@4+1&2+0#1+0/F:aux_1/G:10_6/H:5=4@7=3|L-H%/I:4=4/J:54+43-9
-ae^b-ax+t=pau@1_2/A:1_1_3/B:0-1-2@2-1&5-1#3-1$3-1!1-0;1-0|ax/C:1+0+3/D:content_1/E:content+2@4+1&2+0#1+0/F:aux_1/G:10_6/H:5=4@7=3|L-H%/I:4=4/J:54+43-9
-b^ax-t+pau=w@2_1/A:1_1_3/B:0-1-2@2-1&5-1#3-1$3-1!1-0;1-0|ax/C:1+0+3/D:content_1/E:content+2@4+1&2+0#1+0/F:aux_1/G:10_6/H:5=4@7=3|L-H%/I:4=4/J:54+43-9
-ax^t-pau+w=aa@x_x/A:0_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_2/E:x+x@x+x&x+x#x+x/F:aux_1/G:5_4/H:x=x@1=9|0/I:4=4/J:54+43-9
-t^pau-w+aa=z@1_3/A:0_1_2/B:1-0-3@1-1&1-4#1-3$1-3!0-1;0-1|aa/C:1+1+4/D:content_2/E:aux+1@1+4&1+2#0+1/F:content_1/G:5_4/H:4=4@8=2|L-L%/I:5=3/J:54+43-9
-pau^w-aa+z=s@2_2/A:0_1_2/B:1-0-3@1-1&1-4#1-3$1-3!0-1;0-1|aa/C:1+1+4/D:content_2/E:aux+1@1+4&1+2#0+1/F:content_1/G:5_4/H:4=4@8=2|L-L%/I:5=3/J:54+43-9
-w^aa-z+s=t@3_1/A:0_1_2/B:1-0-3@1-1&1-4#1-3$1-3!0-1;0-1|aa/C:1+1+4/D:content_2/E:aux+1@1+4&1+2#0+1/F:content_1/G:5_4/H:4=4@8=2|L-L%/I:5=3/J:54+43-9
-aa^z-s+t=ih@1_4/A:1_0_3/B:1-1-4@1-1&2-3#1-2$1-2!1-2;0-2|ih/C:0+0+2/D:aux_1/E:content+1@2+3&1+1#0+2/F:in_1/G:5_4/H:4=4@8=2|L-L%/I:5=3/J:54+43-9
-z^s-t+ih=l@2_3/A:1_0_3/B:1-1-4@1-1&2-3#1-2$1-2!1-2;0-2|ih/C:0+0+2/D:aux_1/E:content+1@2+3&1+1#0+2/F:in_1/G:5_4/H:4=4@8=2|L-L%/I:5=3/J:54+43-9
-s^t-ih+l=ih@3_2/A:1_0_3/B:1-1-4@1-1&2-3#1-2$1-2!1-2;0-2|ih/C:0+0+2/D:aux_1/E:content+1@2+3&1+1#0+2/F:in_1/G:5_4/H:4=4@8=2|L-L%/I:5=3/J:54+43-9
-t^ih-l+ih=n@4_1/A:1_0_3/B:1-1-4@1-1&2-3#1-2$1-2!1-2;0-2|ih/C:0+0+2/D:aux_1/E:content+1@2+3&1+1#0+2/F:in_1/G:5_4/H:4=4@8=2|L-L%/I:5=3/J:54+43-9
-ih^l-ih+n=s@1_2/A:1_1_4/B:0-0-2@1-1&3-2#2-2$2-2!1-1;1-1|ih/C:1+1+3/D:content_1/E:in+1@3+2&2+1#1+1/F:content_1/G:5_4/H:4=4@8=2|L-L%/I:5=3/J:54+43-9
-l^ih-n+s=ay@2_1/A:1_1_4/B:0-0-2@1-1&3-2#2-2$2-2!1-1;1-1|ih/C:1+1+3/D:content_1/E:in+1@3+2&2+1#1+1/F:content_1/G:5_4/H:4=4@8=2|L-L%/I:5=3/J:54+43-9
-ih^n-s+ay=t@1_3/A:0_0_2/B:1-1-3@1-1&4-1#2-1$2-1!2-0;2-0|ay/C:1+1+2/D:in_1/E:content+1@4+1&2+0#2+0/F:content_3/G:5_4/H:4=4@8=2|L-L%/I:5=3/J:54+43-9
-n^s-ay+t=pau@2_2/A:0_0_2/B:1-1-3@1-1&4-1#2-1$2-1!2-0;2-0|ay/C:1+1+2/D:in_1/E:content+1@4+1&2+0#2+0/F:content_3/G:5_4/H:4=4@8=2|L-L%/I:5=3/J:54+43-9
-s^ay-t+pau=hh@3_1/A:0_0_2/B:1-1-3@1-1&4-1#2-1$2-1!2-0;2-0|ay/C:1+1+2/D:in_1/E:content+1@4+1&2+0#2+0/F:content_3/G:5_4/H:4=4@8=2|L-L%/I:5=3/J:54+43-9
-ay^t-pau+hh=er@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+2/D:content_1/E:x+x@x+x&x+x#x+x/F:content_3/G:4_4/H:x=x@1=9|0/I:5=3/J:54+43-9
-t^pau-hh+er=iy@1_2/A:1_1_3/B:1-1-2@1-3&1-5#1-3$1-2!0-3;0-4|er/C:0+0+1/D:content_1/E:content+3@1+3&1+1#0+2/F:in_1/G:4_4/H:5=3@9=1|L-L%/I:0=0/J:54+43-9
-pau^hh-er+iy=ih@2_1/A:1_1_3/B:1-1-2@1-3&1-5#1-3$1-2!0-3;0-4|er/C:0+0+1/D:content_1/E:content+3@1+3&1+1#0+2/F:in_1/G:4_4/H:5=3@9=1|L-L%/I:0=0/J:54+43-9
-hh^er-iy+ih=ng@1_1/A:1_1_2/B:0-0-1@2-2&2-4#1-3$1-2!1-2;1-3|iy/C:0+0+2/D:content_1/E:content+3@1+3&1+1#0+2/F:in_1/G:4_4/H:5=3@9=1|L-L%/I:0=0/J:54+43-9
-er^iy-ih+ng=d@1_2/A:0_0_1/B:0-0-2@3-1&3-3#1-3$1-2!2-1;2-2|ih/C:1+0+3/D:content_1/E:content+3@1+3&1+1#0+2/F:in_1/G:4_4/H:5=3@9=1|L-L%/I:0=0/J:54+43-9
-iy^ih-ng+d=aw@2_1/A:0_0_1/B:0-0-2@3-1&3-3#1-3$1-2!2-1;2-2|ih/C:1+0+3/D:content_1/E:content+3@1+3&1+1#0+2/F:in_1/G:4_4/H:5=3@9=1|L-L%/I:0=0/J:54+43-9
-ih^ng-d+aw=n@1_3/A:0_0_2/B:1-0-3@1-1&4-2#1-2$1-2!3-1;3-1|aw/C:1+1+2/D:content_3/E:in+1@2+2&2+1#1+1/F:content_1/G:4_4/H:5=3@9=1|L-L%/I:0=0/J:54+43-9
-ng^d-aw+n=ih@2_2/A:0_0_2/B:1-0-3@1-1&4-2#1-2$1-2!3-1;3-1|aw/C:1+1+2/D:content_3/E:in+1@2+2&2+1#1+1/F:content_1/G:4_4/H:5=3@9=1|L-L%/I:0=0/J:54+43-9
-d^aw-n+ih=t@3_1/A:0_0_2/B:1-0-3@1-1&4-2#1-2$1-2!3-1;3-1|aw/C:1+1+2/D:content_3/E:in+1@2+2&2+1#1+1/F:content_1/G:4_4/H:5=3@9=1|L-L%/I:0=0/J:54+43-9
-aw^n-ih+t=pau@1_2/A:1_0_3/B:1-1-2@1-1&5-1#2-1$1-1!1-0;4-0|ih/C:0+0+0/D:in_1/E:content+1@3+1&2+0#2+0/F:0_0/G:4_4/H:5=3@9=1|L-L%/I:0=0/J:54+43-9
-n^ih-t+pau=x@2_1/A:1_0_3/B:1-1-2@1-1&5-1#2-1$1-1!1-0;4-0|ih/C:0+0+0/D:in_1/E:content+1@3+1&2+0#2+0/F:0_0/G:4_4/H:5=3@9=1|L-L%/I:0=0/J:54+43-9
-ih^t-pau+x=x@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:content_1/E:x+x@x+x&x+x#x+x/F:0_0/G:5_3/H:x=x@1=9|0/I:0=0/J:54+43-9
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice38.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice38.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice38.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice38.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,120 +0,0 @@
-x^x-pau+dh=eh@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+3/D:0_0/E:x+x@x+x&x+x#x+x/F:content_1/G:0_0/H:x=x@1=9|0/I:6=5/J:44+38-9
-x^pau-dh+eh=r@1_3/A:0_0_0/B:1-1-3@1-1&1-6#1-4$1-4!0-1;0-2|eh/C:1+0+3/D:0_0/E:content+1@1+5&1+2#0+2/F:aux_1/G:0_0/H:6=5@1=9|L-L%/I:3=3/J:44+38-9
-pau^dh-eh+r=w@2_2/A:0_0_0/B:1-1-3@1-1&1-6#1-4$1-4!0-1;0-2|eh/C:1+0+3/D:0_0/E:content+1@1+5&1+2#0+2/F:aux_1/G:0_0/H:6=5@1=9|L-L%/I:3=3/J:44+38-9
-dh^eh-r+w=aa@3_1/A:0_0_0/B:1-1-3@1-1&1-6#1-4$1-4!0-1;0-2|eh/C:1+0+3/D:0_0/E:content+1@1+5&1+2#0+2/F:aux_1/G:0_0/H:6=5@1=9|L-L%/I:3=3/J:44+38-9
-eh^r-w+aa=z@1_3/A:1_1_3/B:1-0-3@1-1&2-5#1-3$1-4!1-1;1-1|aa/C:1+1+3/D:content_1/E:aux+1@2+4&2+2#1+1/F:content_1/G:0_0/H:6=5@1=9|L-L%/I:3=3/J:44+38-9
-r^w-aa+z=n@2_2/A:1_1_3/B:1-0-3@1-1&2-5#1-3$1-4!1-1;1-1|aa/C:1+1+3/D:content_1/E:aux+1@2+4&2+2#1+1/F:content_1/G:0_0/H:6=5@1=9|L-L%/I:3=3/J:44+38-9
-w^aa-z+n=aa@3_1/A:1_1_3/B:1-0-3@1-1&2-5#1-3$1-4!1-1;1-1|aa/C:1+1+3/D:content_1/E:aux+1@2+4&2+2#1+1/F:content_1/G:0_0/H:6=5@1=9|L-L%/I:3=3/J:44+38-9
-aa^z-n+aa=t@1_3/A:1_0_3/B:1-1-3@1-1&3-4#2-2$1-3!1-2;2-2|aa/C:0+0+1/D:aux_1/E:content+1@3+3&2+1#2+2/F:det_1/G:0_0/H:6=5@1=9|L-L%/I:3=3/J:44+38-9
-z^n-aa+t=ax@2_2/A:1_0_3/B:1-1-3@1-1&3-4#2-2$1-3!1-2;2-2|aa/C:0+0+1/D:aux_1/E:content+1@3+3&2+1#2+2/F:det_1/G:0_0/H:6=5@1=9|L-L%/I:3=3/J:44+38-9
-n^aa-t+ax=m@3_1/A:1_0_3/B:1-1-3@1-1&3-4#2-2$1-3!1-2;2-2|aa/C:0+0+1/D:aux_1/E:content+1@3+3&2+1#2+2/F:det_1/G:0_0/H:6=5@1=9|L-L%/I:3=3/J:44+38-9
-aa^t-ax+m=ow@1_1/A:1_1_3/B:0-0-1@1-1&4-3#3-2$2-3!1-1;1-1|ax/C:1+1+3/D:content_1/E:det+1@4+2&3+1#1+1/F:content_2/G:0_0/H:6=5@1=9|L-L%/I:3=3/J:44+38-9
-t^ax-m+ow=m@1_3/A:0_0_1/B:1-1-3@1-2&5-2#3-1$2-2!2-0;2-1|ow/C:0+1+3/D:det_1/E:content+2@5+1&3+0#2+0/F:to_1/G:0_0/H:6=5@1=9|L-L%/I:3=3/J:44+38-9
-ax^m-ow+m=ax@2_2/A:0_0_1/B:1-1-3@1-2&5-2#3-1$2-2!2-0;2-1|ow/C:0+1+3/D:det_1/E:content+2@5+1&3+0#2+0/F:to_1/G:0_0/H:6=5@1=9|L-L%/I:3=3/J:44+38-9
-m^ow-m+ax=n@3_1/A:0_0_1/B:1-1-3@1-2&5-2#3-1$2-2!2-0;2-1|ow/C:0+1+3/D:det_1/E:content+2@5+1&3+0#2+0/F:to_1/G:0_0/H:6=5@1=9|L-L%/I:3=3/J:44+38-9
-ow^m-ax+n=t@1_3/A:1_1_3/B:0-1-3@2-1&6-1#4-1$3-1!1-0;1-0|ax/C:0+0+2/D:det_1/E:content+2@5+1&3+0#2+0/F:to_1/G:0_0/H:6=5@1=9|L-L%/I:3=3/J:44+38-9
-m^ax-n+t=pau@2_2/A:1_1_3/B:0-1-3@2-1&6-1#4-1$3-1!1-0;1-0|ax/C:0+0+2/D:det_1/E:content+2@5+1&3+0#2+0/F:to_1/G:0_0/H:6=5@1=9|L-L%/I:3=3/J:44+38-9
-ax^n-t+pau=t@3_1/A:1_1_3/B:0-1-3@2-1&6-1#4-1$3-1!1-0;1-0|ax/C:0+0+2/D:det_1/E:content+2@5+1&3+0#2+0/F:to_1/G:0_0/H:6=5@1=9|L-L%/I:3=3/J:44+38-9
-n^t-pau+t=ax@x_x/A:0_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+2/D:content_2/E:x+x@x+x&x+x#x+x/F:to_1/G:6_5/H:x=x@1=9|0/I:3=3/J:44+38-9
-t^pau-t+ax=b@1_2/A:0_1_3/B:0-0-2@1-1&1-3#1-3$1-2!0-1;0-2|ax/C:1+0+2/D:content_2/E:to+1@1+3&1+1#0+2/F:aux_1/G:6_5/H:3=3@2=8|L-L%/I:8=6/J:44+38-9
-pau^t-ax+b=iy@2_1/A:0_1_3/B:0-0-2@1-1&1-3#1-3$1-2!0-1;0-2|ax/C:1+0+2/D:content_2/E:to+1@1+3&1+1#0+2/F:aux_1/G:6_5/H:3=3@2=8|L-L%/I:8=6/J:44+38-9
-t^ax-b+iy=l@1_2/A:0_0_2/B:1-0-2@1-1&2-2#1-2$1-2!0-1;0-1|iy/C:1+1+4/D:to_1/E:aux+1@2+2&1+1#0+1/F:content_1/G:6_5/H:3=3@2=8|L-L%/I:8=6/J:44+38-9
-ax^b-iy+l=ao@2_1/A:0_0_2/B:1-0-2@1-1&2-2#1-2$1-2!0-1;0-1|iy/C:1+1+4/D:to_1/E:aux+1@2+2&1+1#0+1/F:content_1/G:6_5/H:3=3@2=8|L-L%/I:8=6/J:44+38-9
-b^iy-l+ao=s@1_4/A:1_0_2/B:1-1-4@1-1&3-1#2-1$1-1!1-0;0-0|ao/C:0+0+2/D:aux_1/E:content+1@3+1&1+0#0+0/F:content_2/G:6_5/H:3=3@2=8|L-L%/I:8=6/J:44+38-9
-iy^l-ao+s=t@2_3/A:1_0_2/B:1-1-4@1-1&3-1#2-1$1-1!1-0;0-0|ao/C:0+0+2/D:aux_1/E:content+1@3+1&1+0#0+0/F:content_2/G:6_5/H:3=3@2=8|L-L%/I:8=6/J:44+38-9
-l^ao-s+t=pau@3_2/A:1_0_2/B:1-1-4@1-1&3-1#2-1$1-1!1-0;0-0|ao/C:0+0+2/D:aux_1/E:content+1@3+1&1+0#0+0/F:content_2/G:6_5/H:3=3@2=8|L-L%/I:8=6/J:44+38-9
-ao^s-t+pau=ax@4_1/A:1_0_2/B:1-1-4@1-1&3-1#2-1$1-1!1-0;0-0|ao/C:0+0+2/D:aux_1/E:content+1@3+1&1+0#0+0/F:content_2/G:6_5/H:3=3@2=8|L-L%/I:8=6/J:44+38-9
-s^t-pau+ax=w@x_x/A:1_1_4/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+2/D:content_1/E:x+x@x+x&x+x#x+x/F:content_2/G:3_3/H:x=x@1=9|0/I:8=6/J:44+38-9
-t^pau-ax+w=ey@1_2/A:1_1_4/B:0-0-2@1-2&1-8#1-6$1-4!0-1;0-1|ax/C:1+1+1/D:content_1/E:content+2@1+6&1+4#0+1/F:content_1/G:3_3/H:8=6@3=7|L-L%/I:5=5/J:44+38-9
-pau^ax-w+ey=w@2_1/A:1_1_4/B:0-0-2@1-2&1-8#1-6$1-4!0-1;0-1|ax/C:1+1+1/D:content_1/E:content+2@1+6&1+4#0+1/F:content_1/G:3_3/H:8=6@3=7|L-L%/I:5=5/J:44+38-9
-ax^w-ey+w=eh@1_1/A:0_0_2/B:1-1-1@2-1&2-7#1-5$1-3!0-1;0-2|ey/C:1+0+4/D:content_1/E:content+2@1+6&1+4#0+1/F:content_1/G:3_3/H:8=6@3=7|L-L%/I:5=5/J:44+38-9
-w^ey-w+eh=n@1_4/A:1_1_1/B:1-0-4@1-1&3-6#2-4$2-3!1-1;1-1|eh/C:1+1+2/D:content_2/E:content+1@2+5&2+3#1+1/F:content_2/G:3_3/H:8=6@3=7|L-L%/I:5=5/J:44+38-9
-ey^w-eh+n=t@2_3/A:1_1_1/B:1-0-4@1-1&3-6#2-4$2-3!1-1;1-1|eh/C:1+1+2/D:content_2/E:content+1@2+5&2+3#1+1/F:content_2/G:3_3/H:8=6@3=7|L-L%/I:5=5/J:44+38-9
-w^eh-n+t=ae@3_2/A:1_1_1/B:1-0-4@1-1&3-6#2-4$2-3!1-1;1-1|eh/C:1+1+2/D:content_2/E:content+1@2+5&2+3#1+1/F:content_2/G:3_3/H:8=6@3=7|L-L%/I:5=5/J:44+38-9
-eh^n-t+ae=l@4_1/A:1_1_1/B:1-0-4@1-1&3-6#2-4$2-3!1-1;1-1|eh/C:1+1+2/D:content_2/E:content+1@2+5&2+3#1+1/F:content_2/G:3_3/H:8=6@3=7|L-L%/I:5=5/J:44+38-9
-n^t-ae+l=ax@1_2/A:1_0_4/B:1-1-2@1-2&4-5#3-3$2-2!1-2;2-4|ae/C:0+0+2/D:content_1/E:content+2@3+4&3+2#1+1/F:content_1/G:3_3/H:8=6@3=7|L-L%/I:5=5/J:44+38-9
-t^ae-l+ax=s@2_1/A:1_0_4/B:1-1-2@1-2&4-5#3-3$2-2!1-2;2-4|ae/C:0+0+2/D:content_1/E:content+2@3+4&3+2#1+1/F:content_1/G:3_3/H:8=6@3=7|L-L%/I:5=5/J:44+38-9
-ae^l-ax+s=l@1_2/A:1_1_2/B:0-0-2@2-1&5-4#4-3$3-2!1-1;1-3|ax/C:1+0+3/D:content_1/E:content+2@3+4&3+2#1+1/F:content_1/G:3_3/H:8=6@3=7|L-L%/I:5=5/J:44+38-9
-l^ax-s+l=ay@2_1/A:1_1_2/B:0-0-2@2-1&5-4#4-3$3-2!1-1;1-3|ax/C:1+0+3/D:content_1/E:content+2@3+4&3+2#1+1/F:content_1/G:3_3/H:8=6@3=7|L-L%/I:5=5/J:44+38-9
-ax^s-l+ay=k@1_3/A:0_0_2/B:1-0-3@1-1&6-3#4-2$3-2!2-2;2-2|ay/C:0+0+2/D:content_2/E:content+1@4+3&4+1#1+2/F:det_1/G:3_3/H:8=6@3=7|L-L%/I:5=5/J:44+38-9
-s^l-ay+k=dh@2_2/A:0_0_2/B:1-0-3@1-1&6-3#4-2$3-2!2-2;2-2|ay/C:0+0+2/D:content_2/E:content+1@4+3&4+1#1+2/F:det_1/G:3_3/H:8=6@3=7|L-L%/I:5=5/J:44+38-9
-l^ay-k+dh=ax@3_1/A:0_0_2/B:1-0-3@1-1&6-3#4-2$3-2!2-2;2-2|ay/C:0+0+2/D:content_2/E:content+1@4+3&4+1#1+2/F:det_1/G:3_3/H:8=6@3=7|L-L%/I:5=5/J:44+38-9
-ay^k-dh+ax=w@1_2/A:1_0_3/B:0-0-2@1-1&7-2#5-2$3-2!1-1;3-1|ax/C:1+1+4/D:content_1/E:det+1@5+2&5+1#1+1/F:content_1/G:3_3/H:8=6@3=7|L-L%/I:5=5/J:44+38-9
-k^dh-ax+w=ih@2_1/A:1_0_3/B:0-0-2@1-1&7-2#5-2$3-2!1-1;3-1|ax/C:1+1+4/D:content_1/E:det+1@5+2&5+1#1+1/F:content_1/G:3_3/H:8=6@3=7|L-L%/I:5=5/J:44+38-9
-dh^ax-w+ih=n@1_4/A:0_0_2/B:1-1-4@1-1&8-1#5-1$3-1!2-0;4-0|ih/C:1+0+3/D:det_1/E:content+1@6+1&5+0#2+0/F:cc_1/G:3_3/H:8=6@3=7|L-L%/I:5=5/J:44+38-9
-ax^w-ih+n=d@2_3/A:0_0_2/B:1-1-4@1-1&8-1#5-1$3-1!2-0;4-0|ih/C:1+0+3/D:det_1/E:content+1@6+1&5+0#2+0/F:cc_1/G:3_3/H:8=6@3=7|L-L%/I:5=5/J:44+38-9
-w^ih-n+d=pau@3_2/A:0_0_2/B:1-1-4@1-1&8-1#5-1$3-1!2-0;4-0|ih/C:1+0+3/D:det_1/E:content+1@6+1&5+0#2+0/F:cc_1/G:3_3/H:8=6@3=7|L-L%/I:5=5/J:44+38-9
-ih^n-d+pau=ae@4_1/A:0_0_2/B:1-1-4@1-1&8-1#5-1$3-1!2-0;4-0|ih/C:1+0+3/D:det_1/E:content+1@6+1&5+0#2+0/F:cc_1/G:3_3/H:8=6@3=7|L-L%/I:5=5/J:44+38-9
-n^d-pau+ae=n@x_x/A:1_1_4/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:cc_1/G:8_6/H:x=x@1=9|0/I:5=5/J:44+38-9
-d^pau-ae+n=d@1_3/A:1_1_4/B:1-0-3@1-1&1-5#1-4$1-3!0-1;0-2|ae/C:1+0+3/D:content_1/E:cc+1@1+5&1+2#0+2/F:aux_1/G:8_6/H:5=5@4=6|L-L%/I:4=4/J:44+38-9
-pau^ae-n+d=w@2_2/A:1_1_4/B:1-0-3@1-1&1-5#1-4$1-3!0-1;0-2|ae/C:1+0+3/D:content_1/E:cc+1@1+5&1+2#0+2/F:aux_1/G:8_6/H:5=5@4=6|L-L%/I:4=4/J:44+38-9
-ae^n-d+w=aa@3_1/A:1_1_4/B:1-0-3@1-1&1-5#1-4$1-3!0-1;0-2|ae/C:1+0+3/D:content_1/E:cc+1@1+5&1+2#0+2/F:aux_1/G:8_6/H:5=5@4=6|L-L%/I:4=4/J:44+38-9
-n^d-w+aa=z@1_3/A:1_0_3/B:1-0-3@1-1&2-4#1-3$1-3!1-1;0-1|aa/C:1+1+4/D:cc_1/E:aux+1@2+4&1+2#0+1/F:content_1/G:8_6/H:5=5@4=6|L-L%/I:4=4/J:44+38-9
-d^w-aa+z=jh@2_2/A:1_0_3/B:1-0-3@1-1&2-4#1-3$1-3!1-1;0-1|aa/C:1+1+4/D:cc_1/E:aux+1@2+4&1+2#0+1/F:content_1/G:8_6/H:5=5@4=6|L-L%/I:4=4/J:44+38-9
-w^aa-z+jh=ah@3_1/A:1_0_3/B:1-0-3@1-1&2-4#1-3$1-3!1-1;0-1|aa/C:1+1+4/D:cc_1/E:aux+1@2+4&1+2#0+1/F:content_1/G:8_6/H:5=5@4=6|L-L%/I:4=4/J:44+38-9
-aa^z-jh+ah=s@1_4/A:1_0_3/B:1-1-4@1-1&3-3#2-2$1-2!1-2;0-2|ah/C:0+0+2/D:aux_1/E:content+1@3+3&1+1#0+2/F:in_1/G:8_6/H:5=5@4=6|L-L%/I:4=4/J:44+38-9
-z^jh-ah+s=t@2_3/A:1_0_3/B:1-1-4@1-1&3-3#2-2$1-2!1-2;0-2|ah/C:0+0+2/D:aux_1/E:content+1@3+3&1+1#0+2/F:in_1/G:8_6/H:5=5@4=6|L-L%/I:4=4/J:44+38-9
-jh^ah-s+t=ih@3_2/A:1_0_3/B:1-1-4@1-1&3-3#2-2$1-2!1-2;0-2|ah/C:0+0+2/D:aux_1/E:content+1@3+3&1+1#0+2/F:in_1/G:8_6/H:5=5@4=6|L-L%/I:4=4/J:44+38-9
-ah^s-t+ih=n@4_1/A:1_0_3/B:1-1-4@1-1&3-3#2-2$1-2!1-2;0-2|ah/C:0+0+2/D:aux_1/E:content+1@3+3&1+1#0+2/F:in_1/G:8_6/H:5=5@4=6|L-L%/I:4=4/J:44+38-9
-s^t-ih+n=t@1_2/A:1_1_4/B:0-0-2@1-1&4-2#3-2$2-2!1-1;1-1|ih/C:1+1+3/D:content_1/E:in+1@4+2&2+1#1+1/F:content_1/G:8_6/H:5=5@4=6|L-L%/I:4=4/J:44+38-9
-t^ih-n+t=ay@2_1/A:1_1_4/B:0-0-2@1-1&4-2#3-2$2-2!1-1;1-1|ih/C:1+1+3/D:content_1/E:in+1@4+2&2+1#1+1/F:content_1/G:8_6/H:5=5@4=6|L-L%/I:4=4/J:44+38-9
-ih^n-t+ay=m@1_3/A:0_0_2/B:1-1-3@1-1&5-1#3-1$2-1!2-0;2-0|ay/C:0+0+2/D:in_1/E:content+1@5+1&2+0#2+0/F:to_1/G:8_6/H:5=5@4=6|L-L%/I:4=4/J:44+38-9
-n^t-ay+m=pau@2_2/A:0_0_2/B:1-1-3@1-1&5-1#3-1$2-1!2-0;2-0|ay/C:0+0+2/D:in_1/E:content+1@5+1&2+0#2+0/F:to_1/G:8_6/H:5=5@4=6|L-L%/I:4=4/J:44+38-9
-t^ay-m+pau=t@3_1/A:0_0_2/B:1-1-3@1-1&5-1#3-1$2-1!2-0;2-0|ay/C:0+0+2/D:in_1/E:content+1@5+1&2+0#2+0/F:to_1/G:8_6/H:5=5@4=6|L-L%/I:4=4/J:44+38-9
-ay^m-pau+t=ax@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+2/D:content_1/E:x+x@x+x&x+x#x+x/F:to_1/G:5_5/H:x=x@1=9|0/I:4=4/J:44+38-9
-m^pau-t+ax=hh@1_2/A:1_1_3/B:0-0-2@1-1&1-4#1-4$1-4!0-1;0-1|ax/C:1+1+3/D:content_1/E:to+1@1+4&1+3#0+1/F:content_1/G:5_5/H:4=4@5=5|L-L%/I:6=5/J:44+38-9
-pau^t-ax+hh=ih@2_1/A:1_1_3/B:0-0-2@1-1&1-4#1-4$1-4!0-1;0-1|ax/C:1+1+3/D:content_1/E:to+1@1+4&1+3#0+1/F:content_1/G:5_5/H:4=4@5=5|L-L%/I:6=5/J:44+38-9
-t^ax-hh+ih=r@1_3/A:0_0_2/B:1-1-3@1-1&2-3#1-3$1-3!0-1;0-1|ih/C:1+1+2/D:to_1/E:content+1@2+3&1+2#0+1/F:content_1/G:5_5/H:4=4@5=5|L-L%/I:6=5/J:44+38-9
-ax^hh-ih+r=ih@2_2/A:0_0_2/B:1-1-3@1-1&2-3#1-3$1-3!0-1;0-1|ih/C:1+1+2/D:to_1/E:content+1@2+3&1+2#0+1/F:content_1/G:5_5/H:4=4@5=5|L-L%/I:6=5/J:44+38-9
-hh^ih-r+ih=t@3_1/A:0_0_2/B:1-1-3@1-1&2-3#1-3$1-3!0-1;0-1|ih/C:1+1+2/D:to_1/E:content+1@2+3&1+2#0+1/F:content_1/G:5_5/H:4=4@5=5|L-L%/I:6=5/J:44+38-9
-ih^r-ih+t=s@1_2/A:1_1_3/B:1-1-2@1-1&3-2#2-2$2-2!1-1;1-1|ih/C:1+1+2/D:content_1/E:content+1@3+2&2+1#1+1/F:content_1/G:5_5/H:4=4@5=5|L-L%/I:6=5/J:44+38-9
-r^ih-t+s=ey@2_1/A:1_1_3/B:1-1-2@1-1&3-2#2-2$2-2!1-1;1-1|ih/C:1+1+2/D:content_1/E:content+1@3+2&2+1#1+1/F:content_1/G:5_5/H:4=4@5=5|L-L%/I:6=5/J:44+38-9
-ih^t-s+ey=pau@1_2/A:1_1_2/B:1-1-2@1-1&4-1#3-1$3-1!1-0;1-0|ey/C:1+0+2/D:content_1/E:content+1@4+1&3+0#1+0/F:in_1/G:5_5/H:4=4@5=5|L-L%/I:6=5/J:44+38-9
-t^s-ey+pau=ae@2_1/A:1_1_2/B:1-1-2@1-1&4-1#3-1$3-1!1-0;1-0|ey/C:1+0+2/D:content_1/E:content+1@4+1&3+0#1+0/F:in_1/G:5_5/H:4=4@5=5|L-L%/I:6=5/J:44+38-9
-s^ey-pau+ae=z@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:content_1/E:x+x@x+x&x+x#x+x/F:in_1/G:4_4/H:x=x@1=9|0/I:6=5/J:44+38-9
-ey^pau-ae+z=ih@1_2/A:1_1_2/B:1-0-2@1-1&1-6#1-4$1-5!0-1;0-1|ae/C:1+1+2/D:content_1/E:in+1@1+5&1+3#0+1/F:content_1/G:4_4/H:6=5@6=4|L-L%/I:3=3/J:44+38-9
-pau^ae-z+ih=t@2_1/A:1_1_2/B:1-0-2@1-1&1-6#1-4$1-5!0-1;0-1|ae/C:1+1+2/D:content_1/E:in+1@1+5&1+3#0+1/F:content_1/G:4_4/H:6=5@6=4|L-L%/I:3=3/J:44+38-9
-ae^z-ih+t=t@1_2/A:1_0_2/B:1-1-2@1-1&2-5#1-3$1-4!1-1;0-1|ih/C:1+1+4/D:in_1/E:content+1@2+4&1+2#0+1/F:content_1/G:4_4/H:6=5@6=4|L-L%/I:3=3/J:44+38-9
-z^ih-t+t=er@2_1/A:1_0_2/B:1-1-2@1-1&2-5#1-3$1-4!1-1;0-1|ih/C:1+1+4/D:in_1/E:content+1@2+4&1+2#0+1/F:content_1/G:4_4/H:6=5@6=4|L-L%/I:3=3/J:44+38-9
-ih^t-t+er=n@1_4/A:1_1_2/B:1-1-4@1-1&3-4#2-2$2-3!1-2;1-2|er/C:0+0+1/D:content_1/E:content+1@3+3&2+1#1+2/F:det_1/G:4_4/H:6=5@6=4|L-L%/I:3=3/J:44+38-9
-t^t-er+n=d@2_3/A:1_1_2/B:1-1-4@1-1&3-4#2-2$2-3!1-2;1-2|er/C:0+0+1/D:content_1/E:content+1@3+3&2+1#1+2/F:det_1/G:4_4/H:6=5@6=4|L-L%/I:3=3/J:44+38-9
-t^er-n+d=ax@3_2/A:1_1_2/B:1-1-4@1-1&3-4#2-2$2-3!1-2;1-2|er/C:0+0+1/D:content_1/E:content+1@3+3&2+1#1+2/F:det_1/G:4_4/H:6=5@6=4|L-L%/I:3=3/J:44+38-9
-er^n-d+ax=k@4_1/A:1_1_2/B:1-1-4@1-1&3-4#2-2$2-3!1-2;1-2|er/C:0+0+1/D:content_1/E:content+1@3+3&2+1#1+2/F:det_1/G:4_4/H:6=5@6=4|L-L%/I:3=3/J:44+38-9
-n^d-ax+k=ao@1_1/A:1_1_4/B:0-0-1@1-1&4-3#3-2$3-3!1-1;1-1|ax/C:1+1+3/D:content_1/E:det+1@4+2&3+1#1+1/F:content_2/G:4_4/H:6=5@6=4|L-L%/I:3=3/J:44+38-9
-d^ax-k+ao=r@1_3/A:0_0_1/B:1-1-3@1-2&5-2#3-1$3-2!2-0;2-1|ao/C:0+1+2/D:det_1/E:content+2@5+1&3+0#2+0/F:content_1/G:4_4/H:6=5@6=4|L-L%/I:3=3/J:44+38-9
-ax^k-ao+r=n@2_2/A:0_0_1/B:1-1-3@1-2&5-2#3-1$3-2!2-0;2-1|ao/C:0+1+2/D:det_1/E:content+2@5+1&3+0#2+0/F:content_1/G:4_4/H:6=5@6=4|L-L%/I:3=3/J:44+38-9
-k^ao-r+n=er@3_1/A:0_0_1/B:1-1-3@1-2&5-2#3-1$3-2!2-0;2-1|ao/C:0+1+2/D:det_1/E:content+2@5+1&3+0#2+0/F:content_1/G:4_4/H:6=5@6=4|L-L%/I:3=3/J:44+38-9
-ao^r-n+er=pau@1_2/A:1_1_3/B:0-1-2@2-1&6-1#4-1$4-1!1-0;1-0|er/C:1+0+1/D:det_1/E:content+2@5+1&3+0#2+0/F:content_1/G:4_4/H:6=5@6=4|L-L%/I:3=3/J:44+38-9
-r^n-er+pau=ow@2_1/A:1_1_3/B:0-1-2@2-1&6-1#4-1$4-1!1-0;1-0|er/C:1+0+1/D:det_1/E:content+2@5+1&3+0#2+0/F:content_1/G:4_4/H:6=5@6=4|L-L%/I:3=3/J:44+38-9
-n^er-pau+ow=m@x_x/A:0_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+1/D:content_2/E:x+x@x+x&x+x#x+x/F:content_1/G:6_5/H:x=x@1=9|0/I:3=3/J:44+38-9
-er^pau-ow+m=ay@1_1/A:0_1_2/B:1-0-1@1-1&1-3#1-3$1-3!0-1;0-1|ow/C:1+1+2/D:content_2/E:content+1@1+3&1+2#0+1/F:content_1/G:6_5/H:3=3@7=3|L-L%/I:3=2/J:44+38-9
-pau^ow-m+ay=ih@1_2/A:1_0_1/B:1-1-2@1-1&2-2#1-2$1-2!1-1;0-1|ay/C:1+1+3/D:content_1/E:content+1@2+2&2+1#1+1/F:content_1/G:6_5/H:3=3@7=3|L-L%/I:3=2/J:44+38-9
-ow^m-ay+ih=r@2_1/A:1_0_1/B:1-1-2@1-1&2-2#1-2$1-2!1-1;0-1|ay/C:1+1+3/D:content_1/E:content+1@2+2&2+1#1+1/F:content_1/G:6_5/H:3=3@7=3|L-L%/I:3=2/J:44+38-9
-m^ay-ih+r=z@1_3/A:1_1_2/B:1-1-3@1-1&3-1#2-1$2-1!1-0;1-0|ih/C:1+0+3/D:content_1/E:content+1@3+1&3+0#1+0/F:cc_1/G:6_5/H:3=3@7=3|L-L%/I:3=2/J:44+38-9
-ay^ih-r+z=pau@2_2/A:1_1_2/B:1-1-3@1-1&3-1#2-1$2-1!1-0;1-0|ih/C:1+0+3/D:content_1/E:content+1@3+1&3+0#1+0/F:cc_1/G:6_5/H:3=3@7=3|L-L%/I:3=2/J:44+38-9
-ih^r-z+pau=ae@3_1/A:1_1_2/B:1-1-3@1-1&3-1#2-1$2-1!1-0;1-0|ih/C:1+0+3/D:content_1/E:content+1@3+1&3+0#1+0/F:cc_1/G:6_5/H:3=3@7=3|L-L%/I:3=2/J:44+38-9
-r^z-pau+ae=n@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:cc_1/G:3_3/H:x=x@1=9|0/I:3=2/J:44+38-9
-z^pau-ae+n=d@1_3/A:1_1_3/B:1-0-3@1-1&1-3#1-2$1-3!0-1;0-1|ae/C:1+1+3/D:content_1/E:cc+1@1+2&1+1#0+1/F:content_2/G:3_3/H:3=2@8=2|L-L%/I:6=5/J:44+38-9
-pau^ae-n+d=w@2_2/A:1_1_3/B:1-0-3@1-1&1-3#1-2$1-3!0-1;0-1|ae/C:1+1+3/D:content_1/E:cc+1@1+2&1+1#0+1/F:content_2/G:3_3/H:3=2@8=2|L-L%/I:6=5/J:44+38-9
-ae^n-d+w=ih@3_1/A:1_1_3/B:1-0-3@1-1&1-3#1-2$1-3!0-1;0-1|ae/C:1+1+3/D:content_1/E:cc+1@1+2&1+1#0+1/F:content_2/G:3_3/H:3=2@8=2|L-L%/I:6=5/J:44+38-9
-n^d-w+ih=s@1_3/A:1_0_3/B:1-1-3@1-2&2-2#1-1$1-2!1-0;0-1|ih/C:0+1+3/D:cc_1/E:content+2@2+1&1+0#0+0/F:wp_1/G:3_3/H:3=2@8=2|L-L%/I:6=5/J:44+38-9
-d^w-ih+s=k@2_2/A:1_0_3/B:1-1-3@1-2&2-2#1-1$1-2!1-0;0-1|ih/C:0+1+3/D:cc_1/E:content+2@2+1&1+0#0+0/F:wp_1/G:3_3/H:3=2@8=2|L-L%/I:6=5/J:44+38-9
-w^ih-s+k=er@3_1/A:1_0_3/B:1-1-3@1-2&2-2#1-1$1-2!1-0;0-1|ih/C:0+1+3/D:cc_1/E:content+2@2+1&1+0#0+0/F:wp_1/G:3_3/H:3=2@8=2|L-L%/I:6=5/J:44+38-9
-ih^s-k+er=z@1_3/A:1_1_3/B:0-1-3@2-1&3-1#2-1$2-1!1-0;1-0|er/C:1+0+2/D:cc_1/E:content+2@2+1&1+0#0+0/F:wp_1/G:3_3/H:3=2@8=2|L-L%/I:6=5/J:44+38-9
-s^k-er+z=pau@2_2/A:1_1_3/B:0-1-3@2-1&3-1#2-1$2-1!1-0;1-0|er/C:1+0+2/D:cc_1/E:content+2@2+1&1+0#0+0/F:wp_1/G:3_3/H:3=2@8=2|L-L%/I:6=5/J:44+38-9
-k^er-z+pau=hh@3_1/A:1_1_3/B:0-1-3@2-1&3-1#2-1$2-1!1-0;1-0|er/C:1+0+2/D:cc_1/E:content+2@2+1&1+0#0+0/F:wp_1/G:3_3/H:3=2@8=2|L-L%/I:6=5/J:44+38-9
-er^z-pau+hh=aw@x_x/A:0_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:content_2/E:x+x@x+x&x+x#x+x/F:wp_1/G:3_2/H:x=x@1=9|0/I:6=5/J:44+38-9
-z^pau-hh+aw=l@1_2/A:0_1_3/B:1-0-2@1-1&1-6#1-4$1-5!0-1;0-1|aw/C:1+1+3/D:content_2/E:wp+1@1+5&1+4#0+1/F:content_1/G:3_2/H:6=5@9=1|L-L%/I:0=0/J:44+38-9
-pau^hh-aw+l=ey@2_1/A:0_1_3/B:1-0-2@1-1&1-6#1-4$1-5!0-1;0-1|aw/C:1+1+3/D:content_2/E:wp+1@1+5&1+4#0+1/F:content_1/G:3_2/H:6=5@9=1|L-L%/I:0=0/J:44+38-9
-hh^aw-l+ey=t@1_3/A:1_0_2/B:1-1-3@1-1&2-5#1-3$1-4!1-1;0-1|ey/C:1+1+2/D:wp_1/E:content+1@2+4&1+3#0+1/F:content_1/G:3_2/H:6=5@9=1|L-L%/I:0=0/J:44+38-9
-aw^l-ey+t=ih@2_2/A:1_0_2/B:1-1-3@1-1&2-5#1-3$1-4!1-1;0-1|ey/C:1+1+2/D:wp_1/E:content+1@2+4&1+3#0+1/F:content_1/G:3_2/H:6=5@9=1|L-L%/I:0=0/J:44+38-9
-l^ey-t+ih=t@3_1/A:1_0_2/B:1-1-3@1-1&2-5#1-3$1-4!1-1;0-1|ey/C:1+1+2/D:wp_1/E:content+1@2+4&1+3#0+1/F:content_1/G:3_2/H:6=5@9=1|L-L%/I:0=0/J:44+38-9
-ey^t-ih+t=s@1_2/A:1_1_3/B:1-1-2@1-1&3-4#2-2$2-3!1-2;1-2|ih/C:0+0+1/D:content_1/E:content+1@3+3&2+2#1+1/F:content_1/G:3_2/H:6=5@9=1|L-L%/I:0=0/J:44+38-9
-t^ih-t+s=g@2_1/A:1_1_3/B:1-1-2@1-1&3-4#2-2$2-3!1-2;1-2|ih/C:0+0+1/D:content_1/E:content+1@3+3&2+2#1+1/F:content_1/G:3_2/H:6=5@9=1|L-L%/I:0=0/J:44+38-9
-ih^t-s+g=eh@1_1/A:1_1_2/B:0-0-1@1-1&4-3#3-2$3-3!1-1;1-1|novowel/C:1+1+3/D:content_1/E:content+1@4+2&3+1#1+1/F:content_2/G:3_2/H:6=5@9=1|L-L%/I:0=0/J:44+38-9
-t^s-g+eh=t@1_3/A:0_0_1/B:1-1-3@1-2&5-2#3-1$3-2!2-0;2-1|eh/C:0+1+2/D:content_1/E:content+2@5+1&4+0#1+0/F:0_0/G:3_2/H:6=5@9=1|L-L%/I:0=0/J:44+38-9
-s^g-eh+t=ih@2_2/A:0_0_1/B:1-1-3@1-2&5-2#3-1$3-2!2-0;2-1|eh/C:0+1+2/D:content_1/E:content+2@5+1&4+0#1+0/F:0_0/G:3_2/H:6=5@9=1|L-L%/I:0=0/J:44+38-9
-g^eh-t+ih=ng@3_1/A:0_0_1/B:1-1-3@1-2&5-2#3-1$3-2!2-0;2-1|eh/C:0+1+2/D:content_1/E:content+2@5+1&4+0#1+0/F:0_0/G:3_2/H:6=5@9=1|L-L%/I:0=0/J:44+38-9
-eh^t-ih+ng=pau@1_2/A:1_1_3/B:0-1-2@2-1&6-1#4-1$4-1!1-0;1-0|ih/C:0+0+0/D:content_1/E:content+2@5+1&4+0#1+0/F:0_0/G:3_2/H:6=5@9=1|L-L%/I:0=0/J:44+38-9
-t^ih-ng+pau=x@2_1/A:1_1_3/B:0-1-2@2-1&6-1#4-1$4-1!1-0;1-0|ih/C:0+0+0/D:content_1/E:content+2@5+1&4+0#1+0/F:0_0/G:3_2/H:6=5@9=1|L-L%/I:0=0/J:44+38-9
-ih^ng-pau+x=x@x_x/A:0_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:content_2/E:x+x@x+x&x+x#x+x/F:0_0/G:6_5/H:x=x@1=9|0/I:0=0/J:44+38-9
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice39.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice39.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice39.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice39.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,128 +0,0 @@
-x^x-pau+sh=iy@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+2/D:0_0/E:x+x@x+x&x+x#x+x/F:content_1/G:0_0/H:x=x@1=7|0/I:7=6/J:46+40-7
-x^pau-sh+iy=w@1_2/A:0_0_0/B:1-1-2@1-1&1-7#1-6$1-3!0-1;0-2|iy/C:1+0+3/D:0_0/E:content+1@1+6&1+3#0+2/F:aux_1/G:0_0/H:7=6@1=7|L-L%/I:5=4/J:46+40-7
-pau^sh-iy+w=aa@2_1/A:0_0_0/B:1-1-2@1-1&1-7#1-6$1-3!0-1;0-2|iy/C:1+0+3/D:0_0/E:content+1@1+6&1+3#0+2/F:aux_1/G:0_0/H:7=6@1=7|L-L%/I:5=4/J:46+40-7
-sh^iy-w+aa=z@1_3/A:1_1_2/B:1-0-3@1-1&2-6#1-5$1-3!1-1;1-1|aa/C:1+1+4/D:content_1/E:aux+1@2+5&2+3#1+1/F:content_1/G:0_0/H:7=6@1=7|L-L%/I:5=4/J:46+40-7
-iy^w-aa+z=k@2_2/A:1_1_2/B:1-0-3@1-1&2-6#1-5$1-3!1-1;1-1|aa/C:1+1+4/D:content_1/E:aux+1@2+5&2+3#1+1/F:content_1/G:0_0/H:7=6@1=7|L-L%/I:5=4/J:46+40-7
-w^aa-z+k=l@3_1/A:1_1_2/B:1-0-3@1-1&2-6#1-5$1-3!1-1;1-1|aa/C:1+1+4/D:content_1/E:aux+1@2+5&2+3#1+1/F:content_1/G:0_0/H:7=6@1=7|L-L%/I:5=4/J:46+40-7
-aa^z-k+l=ow@1_4/A:1_0_3/B:1-1-4@1-1&3-5#2-4$1-2!1-2;2-4|ow/C:0+0+3/D:aux_1/E:content+1@3+4&2+2#2+1/F:content_2/G:0_0/H:7=6@1=7|L-L%/I:5=4/J:46+40-7
-z^k-l+ow=s@2_3/A:1_0_3/B:1-1-4@1-1&3-5#2-4$1-2!1-2;2-4|ow/C:0+0+3/D:aux_1/E:content+1@3+4&2+2#2+1/F:content_2/G:0_0/H:7=6@1=7|L-L%/I:5=4/J:46+40-7
-k^l-ow+s=b@3_2/A:1_0_3/B:1-1-4@1-1&3-5#2-4$1-2!1-2;2-4|ow/C:0+0+3/D:aux_1/E:content+1@3+4&2+2#2+1/F:content_2/G:0_0/H:7=6@1=7|L-L%/I:5=4/J:46+40-7
-l^ow-s+b=ih@4_1/A:1_0_3/B:1-1-4@1-1&3-5#2-4$1-2!1-2;2-4|ow/C:0+0+3/D:aux_1/E:content+1@3+4&2+2#2+1/F:content_2/G:0_0/H:7=6@1=7|L-L%/I:5=4/J:46+40-7
-ow^s-b+ih=hh@1_3/A:1_1_4/B:0-0-3@1-2&4-4#3-4$2-2!1-1;1-3|ih/C:1+0+3/D:content_1/E:content+2@4+3&3+1#1+1/F:content_1/G:0_0/H:7=6@1=7|L-L%/I:5=4/J:46+40-7
-s^b-ih+hh=ay@2_2/A:1_1_4/B:0-0-3@1-2&4-4#3-4$2-2!1-1;1-3|ih/C:1+0+3/D:content_1/E:content+2@4+3&3+1#1+1/F:content_1/G:0_0/H:7=6@1=7|L-L%/I:5=4/J:46+40-7
-b^ih-hh+ay=n@3_1/A:1_1_4/B:0-0-3@1-2&4-4#3-4$2-2!1-1;1-3|ih/C:1+0+3/D:content_1/E:content+2@4+3&3+1#1+1/F:content_1/G:0_0/H:7=6@1=7|L-L%/I:5=4/J:46+40-7
-ih^hh-ay+n=d@1_3/A:0_0_3/B:1-0-3@2-1&5-3#3-3$2-2!2-1;2-2|ay/C:1+0+2/D:content_1/E:content+2@4+3&3+1#1+1/F:content_1/G:0_0/H:7=6@1=7|L-L%/I:5=4/J:46+40-7
-hh^ay-n+d=ih@2_2/A:0_0_3/B:1-0-3@2-1&5-3#3-3$2-2!2-1;2-2|ay/C:1+0+2/D:content_1/E:content+2@4+3&3+1#1+1/F:content_1/G:0_0/H:7=6@1=7|L-L%/I:5=4/J:46+40-7
-ay^n-d+ih=t@3_1/A:0_0_3/B:1-0-3@2-1&5-3#3-3$2-2!2-1;2-2|ay/C:1+0+2/D:content_1/E:content+2@4+3&3+1#1+1/F:content_1/G:0_0/H:7=6@1=7|L-L%/I:5=4/J:46+40-7
-n^d-ih+t=w@1_2/A:1_0_3/B:1-0-2@1-1&6-2#4-2$2-2!1-1;3-1|ih/C:1+1+3/D:content_2/E:content+1@5+2&4+0#1+0/F:wp_1/G:0_0/H:7=6@1=7|L-L%/I:5=4/J:46+40-7
-d^ih-t+w=eh@2_1/A:1_0_3/B:1-0-2@1-1&6-2#4-2$2-2!1-1;3-1|ih/C:1+1+3/D:content_2/E:content+1@5+2&4+0#1+0/F:wp_1/G:0_0/H:7=6@1=7|L-L%/I:5=4/J:46+40-7
-ih^t-w+eh=n@1_3/A:1_0_2/B:1-1-3@1-1&7-1#5-1$2-1!1-0;4-0|eh/C:1+0+2/D:content_1/E:wp+1@6+1&5+0#1+0/F:content_1/G:0_0/H:7=6@1=7|L-L%/I:5=4/J:46+40-7
-t^w-eh+n=pau@2_2/A:1_0_2/B:1-1-3@1-1&7-1#5-1$2-1!1-0;4-0|eh/C:1+0+2/D:content_1/E:wp+1@6+1&5+0#1+0/F:content_1/G:0_0/H:7=6@1=7|L-L%/I:5=4/J:46+40-7
-w^eh-n+pau=sh@3_1/A:1_0_2/B:1-1-3@1-1&7-1#5-1$2-1!1-0;4-0|eh/C:1+0+2/D:content_1/E:wp+1@6+1&5+0#1+0/F:content_1/G:0_0/H:7=6@1=7|L-L%/I:5=4/J:46+40-7
-eh^n-pau+sh=iy@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:wp_1/E:x+x@x+x&x+x#x+x/F:content_1/G:7_6/H:x=x@1=7|0/I:5=4/J:46+40-7
-n^pau-sh+iy=t@1_2/A:1_1_3/B:1-0-2@1-1&1-5#1-3$1-3!0-1;0-1|iy/C:1+1+4/D:wp_1/E:content+1@1+4&1+2#0+1/F:content_1/G:7_6/H:5=4@2=6|L-L%/I:11=9/J:46+40-7
-pau^sh-iy+t=er@2_1/A:1_1_3/B:1-0-2@1-1&1-5#1-3$1-3!0-1;0-1|iy/C:1+1+4/D:wp_1/E:content+1@1+4&1+2#0+1/F:content_1/G:7_6/H:5=4@2=6|L-L%/I:11=9/J:46+40-7
-sh^iy-t+er=n@1_4/A:1_0_2/B:1-1-4@1-1&2-4#1-2$1-2!1-2;0-3|er/C:0+0+2/D:content_1/E:content+1@2+3&2+1#1+2/F:det_1/G:7_6/H:5=4@2=6|L-L%/I:11=9/J:46+40-7
-iy^t-er+n=d@2_3/A:1_0_2/B:1-1-4@1-1&2-4#1-2$1-2!1-2;0-3|er/C:0+0+2/D:content_1/E:content+1@2+3&2+1#1+2/F:det_1/G:7_6/H:5=4@2=6|L-L%/I:11=9/J:46+40-7
-t^er-n+d=dh@3_2/A:1_0_2/B:1-1-4@1-1&2-4#1-2$1-2!1-2;0-3|er/C:0+0+2/D:content_1/E:content+1@2+3&2+1#1+2/F:det_1/G:7_6/H:5=4@2=6|L-L%/I:11=9/J:46+40-7
-er^n-d+dh=ax@4_1/A:1_0_2/B:1-1-4@1-1&2-4#1-2$1-2!1-2;0-3|er/C:0+0+2/D:content_1/E:content+1@2+3&2+1#1+2/F:det_1/G:7_6/H:5=4@2=6|L-L%/I:11=9/J:46+40-7
-n^d-dh+ax=k@1_2/A:1_1_4/B:0-0-2@1-1&3-3#2-2$2-2!1-1;1-2|ax/C:1+0+3/D:content_1/E:det+1@3+2&3+1#1+1/F:content_2/G:7_6/H:5=4@2=6|L-L%/I:11=9/J:46+40-7
-d^dh-ax+k=ao@2_1/A:1_1_4/B:0-0-2@1-1&3-3#2-2$2-2!1-1;1-2|ax/C:1+0+3/D:content_1/E:det+1@3+2&3+1#1+1/F:content_2/G:7_6/H:5=4@2=6|L-L%/I:11=9/J:46+40-7
-dh^ax-k+ao=r@1_3/A:0_0_2/B:1-0-3@1-2&4-2#2-1$2-2!2-0;2-1|ao/C:0+1+2/D:det_1/E:content+2@4+1&3+0#2+0/F:cc_1/G:7_6/H:5=4@2=6|L-L%/I:11=9/J:46+40-7
-ax^k-ao+r=n@2_2/A:0_0_2/B:1-0-3@1-2&4-2#2-1$2-2!2-0;2-1|ao/C:0+1+2/D:det_1/E:content+2@4+1&3+0#2+0/F:cc_1/G:7_6/H:5=4@2=6|L-L%/I:11=9/J:46+40-7
-k^ao-r+n=er@3_1/A:0_0_2/B:1-0-3@1-2&4-2#2-1$2-2!2-0;2-1|ao/C:0+1+2/D:det_1/E:content+2@4+1&3+0#2+0/F:cc_1/G:7_6/H:5=4@2=6|L-L%/I:11=9/J:46+40-7
-ao^r-n+er=pau@1_2/A:1_0_3/B:0-1-2@2-1&5-1#3-1$2-1!1-0;3-0|er/C:1+0+3/D:det_1/E:content+2@4+1&3+0#2+0/F:cc_1/G:7_6/H:5=4@2=6|L-L%/I:11=9/J:46+40-7
-r^n-er+pau=b@2_1/A:1_0_3/B:0-1-2@2-1&5-1#3-1$2-1!1-0;3-0|er/C:1+0+3/D:det_1/E:content+2@4+1&3+0#2+0/F:cc_1/G:7_6/H:5=4@2=6|L-L%/I:11=9/J:46+40-7
-n^er-pau+b=ah@x_x/A:0_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_2/E:x+x@x+x&x+x#x+x/F:cc_1/G:5_4/H:x=x@1=7|0/I:11=9/J:46+40-7
-er^pau-b+ah=t@1_3/A:0_1_2/B:1-0-3@1-1&1-11#1-7$1-4!0-2;0-2|ah/C:0+0+2/D:content_2/E:cc+1@1+9&1+3#0+2/F:det_1/G:5_4/H:11=9@3=5|L-L%/I:7=6/J:46+40-7
-pau^b-ah+t=dh@2_2/A:0_1_2/B:1-0-3@1-1&1-11#1-7$1-4!0-2;0-2|ah/C:0+0+2/D:content_2/E:cc+1@1+9&1+3#0+2/F:det_1/G:5_4/H:11=9@3=5|L-L%/I:7=6/J:46+40-7
-b^ah-t+dh=ax@3_1/A:0_1_2/B:1-0-3@1-1&1-11#1-7$1-4!0-2;0-2|ah/C:0+0+2/D:content_2/E:cc+1@1+9&1+3#0+2/F:det_1/G:5_4/H:11=9@3=5|L-L%/I:7=6/J:46+40-7
-ah^t-dh+ax=r@1_2/A:1_0_3/B:0-0-2@1-1&2-10#1-7$1-4!1-1;0-1|ax/C:1+1+3/D:cc_1/E:det+1@2+8&1+3#0+1/F:content_2/G:5_4/H:11=9@3=5|L-L%/I:7=6/J:46+40-7
-t^dh-ax+r=ae@2_1/A:1_0_3/B:0-0-2@1-1&2-10#1-7$1-4!1-1;0-1|ax/C:1+1+3/D:cc_1/E:det+1@2+8&1+3#0+1/F:content_2/G:5_4/H:11=9@3=5|L-L%/I:7=6/J:46+40-7
-dh^ax-r+ae=b@1_3/A:0_0_2/B:1-1-3@1-2&3-9#1-6$1-3!2-2;0-4|ae/C:0+0+2/D:det_1/E:content+2@3+7&1+2#0+3/F:aux_1/G:5_4/H:11=9@3=5|L-L%/I:7=6/J:46+40-7
-ax^r-ae+b=ax@2_2/A:0_0_2/B:1-1-3@1-2&3-9#1-6$1-3!2-2;0-4|ae/C:0+0+2/D:det_1/E:content+2@3+7&1+2#0+3/F:aux_1/G:5_4/H:11=9@3=5|L-L%/I:7=6/J:46+40-7
-r^ae-b+ax=t@3_1/A:0_0_2/B:1-1-3@1-2&3-9#1-6$1-3!2-2;0-4|ae/C:0+0+2/D:det_1/E:content+2@3+7&1+2#0+3/F:aux_1/G:5_4/H:11=9@3=5|L-L%/I:7=6/J:46+40-7
-ae^b-ax+t=w@1_2/A:1_1_3/B:0-0-2@2-1&4-8#2-6$2-3!1-1;1-3|ax/C:1+0+3/D:det_1/E:content+2@3+7&1+2#0+3/F:aux_1/G:5_4/H:11=9@3=5|L-L%/I:7=6/J:46+40-7
-b^ax-t+w=aa@2_1/A:1_1_3/B:0-0-2@2-1&4-8#2-6$2-3!1-1;1-3|ax/C:1+0+3/D:det_1/E:content+2@3+7&1+2#0+3/F:aux_1/G:5_4/H:11=9@3=5|L-L%/I:7=6/J:46+40-7
-ax^t-w+aa=z@1_3/A:0_0_2/B:1-0-3@1-1&5-7#2-5$2-3!2-1;2-2|aa/C:1+0+2/D:content_2/E:aux+1@4+6&2+2#1+2/F:det_1/G:5_4/H:11=9@3=5|L-L%/I:7=6/J:46+40-7
-t^w-aa+z=n@2_2/A:0_0_2/B:1-0-3@1-1&5-7#2-5$2-3!2-1;2-2|aa/C:1+0+2/D:content_2/E:aux+1@4+6&2+2#1+2/F:det_1/G:5_4/H:11=9@3=5|L-L%/I:7=6/J:46+40-7
-w^aa-z+n=ow@3_1/A:0_0_2/B:1-0-3@1-1&5-7#2-5$2-3!2-1;2-2|aa/C:1+0+2/D:content_2/E:aux+1@4+6&2+2#1+2/F:det_1/G:5_4/H:11=9@3=5|L-L%/I:7=6/J:46+40-7
-aa^z-n+ow=l@1_2/A:1_0_3/B:1-0-2@1-1&6-6#3-4$2-3!1-1;3-1|ow/C:1+1+4/D:aux_1/E:det+1@5+5&2+2#2+1/F:content_2/G:5_4/H:11=9@3=5|L-L%/I:7=6/J:46+40-7
-z^n-ow+l=ao@2_1/A:1_0_3/B:1-0-2@1-1&6-6#3-4$2-3!1-1;3-1|ow/C:1+1+4/D:aux_1/E:det+1@5+5&2+2#2+1/F:content_2/G:5_4/H:11=9@3=5|L-L%/I:7=6/J:46+40-7
-n^ow-l+ao=ng@1_4/A:1_0_2/B:1-1-4@1-2&7-5#4-3$2-2!1-3;4-4|ao/C:0+0+1/D:det_1/E:content+2@6+4&2+1#3+3/F:to_1/G:5_4/H:11=9@3=5|L-L%/I:7=6/J:46+40-7
-ow^l-ao+ng=g@2_3/A:1_0_2/B:1-1-4@1-2&7-5#4-3$2-2!1-3;4-4|ao/C:0+0+1/D:det_1/E:content+2@6+4&2+1#3+3/F:to_1/G:5_4/H:11=9@3=5|L-L%/I:7=6/J:46+40-7
-l^ao-ng+g=er@3_2/A:1_0_2/B:1-1-4@1-2&7-5#4-3$2-2!1-3;4-4|ao/C:0+0+1/D:det_1/E:content+2@6+4&2+1#3+3/F:to_1/G:5_4/H:11=9@3=5|L-L%/I:7=6/J:46+40-7
-ao^ng-g+er=t@4_1/A:1_0_2/B:1-1-4@1-2&7-5#4-3$2-2!1-3;4-4|ao/C:0+0+1/D:det_1/E:content+2@6+4&2+1#3+3/F:to_1/G:5_4/H:11=9@3=5|L-L%/I:7=6/J:46+40-7
-ng^g-er+t=ax@1_1/A:1_1_4/B:0-0-1@2-1&8-4#5-3$3-2!1-2;1-3|er/C:0+0+2/D:det_1/E:content+2@6+4&2+1#3+3/F:to_1/G:5_4/H:11=9@3=5|L-L%/I:7=6/J:46+40-7
-g^er-t+ax=b@1_2/A:0_0_1/B:0-0-2@1-1&9-3#5-3$3-2!2-1;2-2|ax/C:1+0+2/D:content_2/E:to+1@7+3&3+1#1+2/F:aux_1/G:5_4/H:11=9@3=5|L-L%/I:7=6/J:46+40-7
-er^t-ax+b=iy@2_1/A:0_0_1/B:0-0-2@1-1&9-3#5-3$3-2!2-1;2-2|ax/C:1+0+2/D:content_2/E:to+1@7+3&3+1#1+2/F:aux_1/G:5_4/H:11=9@3=5|L-L%/I:7=6/J:46+40-7
-t^ax-b+iy=s@1_2/A:0_0_2/B:1-0-2@1-1&10-2#5-2$3-2!3-1;3-1|iy/C:1+1+3/D:to_1/E:aux+1@8+2&3+1#2+1/F:content_1/G:5_4/H:11=9@3=5|L-L%/I:7=6/J:46+40-7
-ax^b-iy+s=iy@2_1/A:0_0_2/B:1-0-2@1-1&10-2#5-2$3-2!3-1;3-1|iy/C:1+1+3/D:to_1/E:aux+1@8+2&3+1#2+1/F:content_1/G:5_4/H:11=9@3=5|L-L%/I:7=6/J:46+40-7
-b^iy-s+iy=n@1_3/A:1_0_2/B:1-1-3@1-1&11-1#6-1$3-1!1-0;4-0|iy/C:1+0+2/D:aux_1/E:content+1@9+1&3+0#3+0/F:content_1/G:5_4/H:11=9@3=5|L-L%/I:7=6/J:46+40-7
-iy^s-iy+n=pau@2_2/A:1_0_2/B:1-1-3@1-1&11-1#6-1$3-1!1-0;4-0|iy/C:1+0+2/D:aux_1/E:content+1@9+1&3+0#3+0/F:content_1/G:5_4/H:11=9@3=5|L-L%/I:7=6/J:46+40-7
-s^iy-n+pau=sh@3_1/A:1_0_2/B:1-1-3@1-1&11-1#6-1$3-1!1-0;4-0|iy/C:1+0+2/D:aux_1/E:content+1@9+1&3+0#3+0/F:content_1/G:5_4/H:11=9@3=5|L-L%/I:7=6/J:46+40-7
-iy^n-pau+sh=iy@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:content_1/E:x+x@x+x&x+x#x+x/F:content_1/G:11_9/H:x=x@1=7|0/I:7=6/J:46+40-7
-n^pau-sh+iy=f@1_2/A:1_1_3/B:1-0-2@1-1&1-7#1-4$1-3!0-1;0-1|iy/C:1+1+4/D:content_1/E:content+1@1+6&1+3#0+1/F:content_1/G:11_9/H:7=6@4=4|L-L%/I:2=2/J:46+40-7
-pau^sh-iy+f=aw@2_1/A:1_1_3/B:1-0-2@1-1&1-7#1-4$1-3!0-1;0-1|iy/C:1+1+4/D:content_1/E:content+1@1+6&1+3#0+1/F:content_1/G:11_9/H:7=6@4=4|L-L%/I:2=2/J:46+40-7
-sh^iy-f+aw=n@1_4/A:1_0_2/B:1-1-4@1-1&2-6#1-3$1-2!1-2;0-5|aw/C:0+0+3/D:content_1/E:content+1@2+5&2+2#1+1/F:content_2/G:11_9/H:7=6@4=4|L-L%/I:2=2/J:46+40-7
-iy^f-aw+n=d@2_3/A:1_0_2/B:1-1-4@1-1&2-6#1-3$1-2!1-2;0-5|aw/C:0+0+3/D:content_1/E:content+1@2+5&2+2#1+1/F:content_2/G:11_9/H:7=6@4=4|L-L%/I:2=2/J:46+40-7
-f^aw-n+d=hh@3_2/A:1_0_2/B:1-1-4@1-1&2-6#1-3$1-2!1-2;0-5|aw/C:0+0+3/D:content_1/E:content+1@2+5&2+2#1+1/F:content_2/G:11_9/H:7=6@4=4|L-L%/I:2=2/J:46+40-7
-aw^n-d+hh=er@4_1/A:1_0_2/B:1-1-4@1-1&2-6#1-3$1-2!1-2;0-5|aw/C:0+0+3/D:content_1/E:content+1@2+5&2+2#1+1/F:content_2/G:11_9/H:7=6@4=4|L-L%/I:2=2/J:46+40-7
-n^d-hh+er=s@1_3/A:1_1_4/B:0-0-3@1-2&3-5#2-3$2-2!1-1;1-4|er/C:1+0+3/D:content_1/E:content+2@3+4&3+1#1+3/F:in_1/G:11_9/H:7=6@4=4|L-L%/I:2=2/J:46+40-7
-d^hh-er+s=eh@2_2/A:1_1_4/B:0-0-3@1-2&3-5#2-3$2-2!1-1;1-4|er/C:1+0+3/D:content_1/E:content+2@3+4&3+1#1+3/F:in_1/G:11_9/H:7=6@4=4|L-L%/I:2=2/J:46+40-7
-hh^er-s+eh=l@3_1/A:1_1_4/B:0-0-3@1-2&3-5#2-3$2-2!1-1;1-4|er/C:1+0+3/D:content_1/E:content+2@3+4&3+1#1+3/F:in_1/G:11_9/H:7=6@4=4|L-L%/I:2=2/J:46+40-7
-er^s-eh+l=f@1_3/A:0_0_3/B:1-0-3@2-1&4-4#2-2$2-2!2-3;2-3|eh/C:0+0+2/D:content_1/E:content+2@3+4&3+1#1+3/F:in_1/G:11_9/H:7=6@4=4|L-L%/I:2=2/J:46+40-7
-s^eh-l+f=ih@2_2/A:0_0_3/B:1-0-3@2-1&4-4#2-2$2-2!2-3;2-3|eh/C:0+0+2/D:content_1/E:content+2@3+4&3+1#1+3/F:in_1/G:11_9/H:7=6@4=4|L-L%/I:2=2/J:46+40-7
-eh^l-f+ih=n@3_1/A:0_0_3/B:1-0-3@2-1&4-4#2-2$2-2!2-3;2-3|eh/C:0+0+2/D:content_1/E:content+2@3+4&3+1#1+3/F:in_1/G:11_9/H:7=6@4=4|L-L%/I:2=2/J:46+40-7
-l^f-ih+n=ax@1_2/A:1_0_3/B:0-0-2@1-1&5-3#3-2$2-2!1-2;3-2|ih/C:0+0+1/D:content_2/E:in+1@4+3&4+1#1+2/F:det_1/G:11_9/H:7=6@4=4|L-L%/I:2=2/J:46+40-7
-f^ih-n+ax=l@2_1/A:1_0_3/B:0-0-2@1-1&5-3#3-2$2-2!1-2;3-2|ih/C:0+0+1/D:content_2/E:in+1@4+3&4+1#1+2/F:det_1/G:11_9/H:7=6@4=4|L-L%/I:2=2/J:46+40-7
-ih^n-ax+l=ao@1_1/A:0_0_2/B:0-0-1@1-1&6-2#3-2$2-2!2-1;4-1|ax/C:1+1+3/D:in_1/E:det+1@5+2&4+1#2+1/F:content_1/G:11_9/H:7=6@4=4|L-L%/I:2=2/J:46+40-7
-n^ax-l+ao=ng@1_3/A:0_0_1/B:1-1-3@1-1&7-1#3-1$2-1!3-0;5-0|ao/C:1+0+2/D:det_1/E:content+1@6+1&4+0#3+0/F:content_1/G:11_9/H:7=6@4=4|L-L%/I:2=2/J:46+40-7
-ax^l-ao+ng=pau@2_2/A:0_0_1/B:1-1-3@1-1&7-1#3-1$2-1!3-0;5-0|ao/C:1+0+2/D:det_1/E:content+1@6+1&4+0#3+0/F:content_1/G:11_9/H:7=6@4=4|L-L%/I:2=2/J:46+40-7
-l^ao-ng+pau=l@3_1/A:0_0_1/B:1-1-3@1-1&7-1#3-1$2-1!3-0;5-0|ao/C:1+0+2/D:det_1/E:content+1@6+1&4+0#3+0/F:content_1/G:11_9/H:7=6@4=4|L-L%/I:2=2/J:46+40-7
-ao^ng-pau+l=ow@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:content_1/E:x+x@x+x&x+x#x+x/F:content_1/G:7_6/H:x=x@1=7|0/I:2=2/J:46+40-7
-ng^pau-l+ow=hh@1_2/A:1_1_3/B:1-0-2@1-1&1-2#1-2$1-2!0-1;0-1|ow/C:1+1+3/D:content_1/E:content+1@1+2&1+1#0+1/F:content_1/G:7_6/H:2=2@5=3|L-L%/I:9=9/J:46+40-7
-pau^l-ow+hh=ao@2_1/A:1_1_3/B:1-0-2@1-1&1-2#1-2$1-2!0-1;0-1|ow/C:1+1+3/D:content_1/E:content+1@1+2&1+1#0+1/F:content_1/G:7_6/H:2=2@5=3|L-L%/I:9=9/J:46+40-7
-l^ow-hh+ao=l@1_3/A:1_0_2/B:1-1-3@1-1&2-1#1-1$1-1!1-0;0-0|ao/C:1+0+3/D:content_1/E:content+1@2+1&2+0#1+0/F:content_1/G:7_6/H:2=2@5=3|L-L%/I:9=9/J:46+40-7
-ow^hh-ao+l=pau@2_2/A:1_0_2/B:1-1-3@1-1&2-1#1-1$1-1!1-0;0-0|ao/C:1+0+3/D:content_1/E:content+1@2+1&2+0#1+0/F:content_1/G:7_6/H:2=2@5=3|L-L%/I:9=9/J:46+40-7
-hh^ao-l+pau=w@3_1/A:1_0_2/B:1-1-3@1-1&2-1#1-1$1-1!1-0;0-0|ao/C:1+0+3/D:content_1/E:content+1@2+1&2+0#1+0/F:content_1/G:7_6/H:2=2@5=3|L-L%/I:9=9/J:46+40-7
-ao^l-pau+w=ih@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:content_1/G:2_2/H:x=x@1=7|0/I:9=9/J:46+40-7
-l^pau-w+ih=ch@1_3/A:1_1_3/B:1-0-3@1-1&1-9#1-8$1-3!0-1;0-2|ih/C:1+0+3/D:content_1/E:content+1@1+9&1+3#0+2/F:aux_1/G:2_2/H:9=9@6=2|L-L%/I:5=4/J:46+40-7
-pau^w-ih+ch=w@2_2/A:1_1_3/B:1-0-3@1-1&1-9#1-8$1-3!0-1;0-2|ih/C:1+0+3/D:content_1/E:content+1@1+9&1+3#0+2/F:aux_1/G:2_2/H:9=9@6=2|L-L%/I:5=4/J:46+40-7
-w^ih-ch+w=aa@3_1/A:1_1_3/B:1-0-3@1-1&1-9#1-8$1-3!0-1;0-2|ih/C:1+0+3/D:content_1/E:content+1@1+9&1+3#0+2/F:aux_1/G:2_2/H:9=9@6=2|L-L%/I:5=4/J:46+40-7
-ih^ch-w+aa=z@1_3/A:1_0_3/B:1-0-3@1-1&2-8#1-7$1-3!1-1;0-1|aa/C:1+1+3/D:content_1/E:aux+1@2+8&2+3#1+1/F:content_1/G:2_2/H:9=9@6=2|L-L%/I:5=4/J:46+40-7
-ch^w-aa+z=l@2_2/A:1_0_3/B:1-0-3@1-1&2-8#1-7$1-3!1-1;0-1|aa/C:1+1+3/D:content_1/E:aux+1@2+8&2+3#1+1/F:content_1/G:2_2/H:9=9@6=2|L-L%/I:5=4/J:46+40-7
-w^aa-z+l=ih@3_1/A:1_0_3/B:1-0-3@1-1&2-8#1-7$1-3!1-1;0-1|aa/C:1+1+3/D:content_1/E:aux+1@2+8&2+3#1+1/F:content_1/G:2_2/H:9=9@6=2|L-L%/I:5=4/J:46+40-7
-aa^z-l+ih=t@1_3/A:1_0_3/B:1-1-3@1-1&3-7#2-6$1-2!1-1;0-6|ih/C:1+0+2/D:aux_1/E:content+1@3+7&2+2#2+4/F:in_1/G:2_2/H:9=9@6=2|L-L%/I:5=4/J:46+40-7
-z^l-ih+t=ah@2_2/A:1_0_3/B:1-1-3@1-1&3-7#2-6$1-2!1-1;0-6|ih/C:1+0+2/D:aux_1/E:content+1@3+7&2+2#2+4/F:in_1/G:2_2/H:9=9@6=2|L-L%/I:5=4/J:46+40-7
-l^ih-t+ah=p@3_1/A:1_0_3/B:1-1-3@1-1&3-7#2-6$1-2!1-1;0-6|ih/C:1+0+2/D:aux_1/E:content+1@3+7&2+2#2+4/F:in_1/G:2_2/H:9=9@6=2|L-L%/I:5=4/J:46+40-7
-ih^t-ah+p=b@1_2/A:1_1_3/B:1-0-2@1-1&4-6#3-5$2-2!1-1;1-5|ah/C:1+0+2/D:content_1/E:in+1@4+6&3+2#1+3/F:in_1/G:2_2/H:9=9@6=2|L-L%/I:5=4/J:46+40-7
-t^ah-p+b=ay@2_1/A:1_1_3/B:1-0-2@1-1&4-6#3-5$2-2!1-1;1-5|ah/C:1+0+2/D:content_1/E:in+1@4+6&3+2#1+3/F:in_1/G:2_2/H:9=9@6=2|L-L%/I:5=4/J:46+40-7
-ah^p-b+ay=ax@1_2/A:1_0_2/B:1-0-2@1-1&5-5#4-4$2-2!1-2;2-4|ay/C:0+0+1/D:in_1/E:in+1@5+5&3+2#2+2/F:det_1/G:2_2/H:9=9@6=2|L-L%/I:5=4/J:46+40-7
-p^b-ay+ax=r@2_1/A:1_0_2/B:1-0-2@1-1&5-5#4-4$2-2!1-2;2-4|ay/C:0+0+1/D:in_1/E:in+1@5+5&3+2#2+2/F:det_1/G:2_2/H:9=9@6=2|L-L%/I:5=4/J:46+40-7
-b^ay-ax+r=ow@1_1/A:1_0_2/B:0-0-1@1-1&6-4#5-4$2-2!1-1;3-3|ax/C:1+0+2/D:in_1/E:det+1@6+4&3+2#3+1/F:content_1/G:2_2/H:9=9@6=2|L-L%/I:5=4/J:46+40-7
-ay^ax-r+ow=ah@1_2/A:0_0_1/B:1-0-2@1-1&7-3#5-3$2-2!2-1;4-2|ow/C:1+0+2/D:det_1/E:content+1@7+3&3+1#4+2/F:in_1/G:2_2/H:9=9@6=2|L-L%/I:5=4/J:46+40-7
-ax^r-ow+ah=v@2_1/A:0_0_1/B:1-0-2@1-1&7-3#5-3$2-2!2-1;4-2|ow/C:1+0+2/D:det_1/E:content+1@7+3&3+1#4+2/F:in_1/G:2_2/H:9=9@6=2|L-L%/I:5=4/J:46+40-7
-r^ow-ah+v=l@1_2/A:1_0_2/B:1-0-2@1-1&8-2#6-2$2-2!1-1;5-1|ah/C:1+1+5/D:content_1/E:in+1@8+2&4+1#1+1/F:content_1/G:2_2/H:9=9@6=2|L-L%/I:5=4/J:46+40-7
-ow^ah-v+l=ae@2_1/A:1_0_2/B:1-0-2@1-1&8-2#6-2$2-2!1-1;5-1|ah/C:1+1+5/D:content_1/E:in+1@8+2&4+1#1+1/F:content_1/G:2_2/H:9=9@6=2|L-L%/I:5=4/J:46+40-7
-ah^v-l+ae=m@1_5/A:1_0_2/B:1-1-5@1-1&9-1#7-1$2-1!1-0;6-0|ae/C:1+1+3/D:in_1/E:content+1@9+1&4+0#2+0/F:content_2/G:2_2/H:9=9@6=2|L-L%/I:5=4/J:46+40-7
-v^l-ae+m=p@2_4/A:1_0_2/B:1-1-5@1-1&9-1#7-1$2-1!1-0;6-0|ae/C:1+1+3/D:in_1/E:content+1@9+1&4+0#2+0/F:content_2/G:2_2/H:9=9@6=2|L-L%/I:5=4/J:46+40-7
-l^ae-m+p=s@3_3/A:1_0_2/B:1-1-5@1-1&9-1#7-1$2-1!1-0;6-0|ae/C:1+1+3/D:in_1/E:content+1@9+1&4+0#2+0/F:content_2/G:2_2/H:9=9@6=2|L-L%/I:5=4/J:46+40-7
-ae^m-p+s=pau@4_2/A:1_0_2/B:1-1-5@1-1&9-1#7-1$2-1!1-0;6-0|ae/C:1+1+3/D:in_1/E:content+1@9+1&4+0#2+0/F:content_2/G:2_2/H:9=9@6=2|L-L%/I:5=4/J:46+40-7
-m^p-s+pau=hh@5_1/A:1_0_2/B:1-1-5@1-1&9-1#7-1$2-1!1-0;6-0|ae/C:1+1+3/D:in_1/E:content+1@9+1&4+0#2+0/F:content_2/G:2_2/H:9=9@6=2|L-L%/I:5=4/J:46+40-7
-p^s-pau+hh=ae@x_x/A:1_1_5/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+3/D:content_1/E:x+x@x+x&x+x#x+x/F:content_2/G:9_9/H:x=x@1=7|0/I:5=4/J:46+40-7
-s^pau-hh+ae=ng@1_3/A:1_1_5/B:1-1-3@1-2&1-5#1-3$1-2!0-2;0-4|ae/C:0+0+2/D:content_1/E:content+2@1+4&1+1#0+3/F:in_1/G:9_9/H:5=4@7=1|L-L%/I:0=0/J:46+40-7
-pau^hh-ae+ng=ih@2_2/A:1_1_5/B:1-1-3@1-2&1-5#1-3$1-2!0-2;0-4|ae/C:0+0+2/D:content_1/E:content+2@1+4&1+1#0+3/F:in_1/G:9_9/H:5=4@7=1|L-L%/I:0=0/J:46+40-7
-hh^ae-ng+ih=ng@3_1/A:1_1_5/B:1-1-3@1-2&1-5#1-3$1-2!0-2;0-4|ae/C:0+0+2/D:content_1/E:content+2@1+4&1+1#0+3/F:in_1/G:9_9/H:5=4@7=1|L-L%/I:0=0/J:46+40-7
-ae^ng-ih+ng=f@1_2/A:1_1_3/B:0-0-2@2-1&2-4#1-3$1-2!1-1;1-3|ih/C:1+0+4/D:content_1/E:content+2@1+4&1+1#0+3/F:in_1/G:9_9/H:5=4@7=1|L-L%/I:0=0/J:46+40-7
-ng^ih-ng+f=r@2_1/A:1_1_3/B:0-0-2@2-1&2-4#1-3$1-2!1-1;1-3|ih/C:1+0+4/D:content_1/E:content+2@1+4&1+1#0+3/F:in_1/G:9_9/H:5=4@7=1|L-L%/I:0=0/J:46+40-7
-ih^ng-f+r=ah@1_4/A:0_0_2/B:1-0-4@1-1&3-3#1-2$1-2!2-2;2-2|ah/C:0+0+2/D:content_2/E:in+1@2+3&2+1#1+2/F:det_1/G:9_9/H:5=4@7=1|L-L%/I:0=0/J:46+40-7
-ng^f-r+ah=m@2_3/A:0_0_2/B:1-0-4@1-1&3-3#1-2$1-2!2-2;2-2|ah/C:0+0+2/D:content_2/E:in+1@2+3&2+1#1+2/F:det_1/G:9_9/H:5=4@7=1|L-L%/I:0=0/J:46+40-7
-f^r-ah+m=dh@3_2/A:0_0_2/B:1-0-4@1-1&3-3#1-2$1-2!2-2;2-2|ah/C:0+0+2/D:content_2/E:in+1@2+3&2+1#1+2/F:det_1/G:9_9/H:5=4@7=1|L-L%/I:0=0/J:46+40-7
-r^ah-m+dh=ax@4_1/A:0_0_2/B:1-0-4@1-1&3-3#1-2$1-2!2-2;2-2|ah/C:0+0+2/D:content_2/E:in+1@2+3&2+1#1+2/F:det_1/G:9_9/H:5=4@7=1|L-L%/I:0=0/J:46+40-7
-ah^m-dh+ax=r@1_2/A:1_0_4/B:0-0-2@1-1&4-2#2-2$1-2!1-1;3-1|ax/C:1+1+3/D:in_1/E:det+1@3+2&2+1#2+1/F:content_1/G:9_9/H:5=4@7=1|L-L%/I:0=0/J:46+40-7
-m^dh-ax+r=uw@2_1/A:1_0_4/B:0-0-2@1-1&4-2#2-2$1-2!1-1;3-1|ax/C:1+1+3/D:in_1/E:det+1@3+2&2+1#2+1/F:content_1/G:9_9/H:5=4@7=1|L-L%/I:0=0/J:46+40-7
-dh^ax-r+uw=f@1_3/A:0_0_2/B:1-1-3@1-1&5-1#2-1$1-1!2-0;4-0|uw/C:0+0+0/D:det_1/E:content+1@4+1&2+0#3+0/F:0_0/G:9_9/H:5=4@7=1|L-L%/I:0=0/J:46+40-7
-ax^r-uw+f=pau@2_2/A:0_0_2/B:1-1-3@1-1&5-1#2-1$1-1!2-0;4-0|uw/C:0+0+0/D:det_1/E:content+1@4+1&2+0#3+0/F:0_0/G:9_9/H:5=4@7=1|L-L%/I:0=0/J:46+40-7
-r^uw-f+pau=x@3_1/A:0_0_2/B:1-1-3@1-1&5-1#2-1$1-1!2-0;4-0|uw/C:0+0+0/D:det_1/E:content+1@4+1&2+0#3+0/F:0_0/G:9_9/H:5=4@7=1|L-L%/I:0=0/J:46+40-7
-uw^f-pau+x=x@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:content_1/E:x+x@x+x&x+x#x+x/F:0_0/G:5_4/H:x=x@1=7|0/I:0=0/J:46+40-7
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice40.lab HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice40.lab
--- HTS-demo_CMU-ARCTIC-SLT/data/labels/gen/alice40.lab	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/labels/gen/alice40.lab	1970-01-01 01:00:00.000000000 +0100
@@ -1,144 +0,0 @@
-x^x-pau+dh=eh@x_x/A:0_0_0/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+3/D:0_0/E:x+x@x+x&x+x#x+x/F:content_1/G:0_0/H:x=x@1=8|0/I:7=7/J:56+45-8
-x^pau-dh+eh=r@1_3/A:0_0_0/B:1-1-3@1-1&1-7#1-5$1-4!0-2;0-2|eh/C:0+0+2/D:0_0/E:content+1@1+7&1+3#0+2/F:aux_1/G:0_0/H:7=7@1=8|L-L%/I:5=5/J:56+45-8
-pau^dh-eh+r=w@2_2/A:0_0_0/B:1-1-3@1-1&1-7#1-5$1-4!0-2;0-2|eh/C:0+0+2/D:0_0/E:content+1@1+7&1+3#0+2/F:aux_1/G:0_0/H:7=7@1=8|L-L%/I:5=5/J:56+45-8
-dh^eh-r+w=er@3_1/A:0_0_0/B:1-1-3@1-1&1-7#1-5$1-4!0-2;0-2|eh/C:0+0+2/D:0_0/E:content+1@1+7&1+3#0+2/F:aux_1/G:0_0/H:7=7@1=8|L-L%/I:5=5/J:56+45-8
-eh^r-w+er=d@1_2/A:1_1_3/B:0-0-2@1-1&2-6#1-5$1-4!1-1;1-1|er/C:1+1+4/D:content_1/E:aux+1@2+6&2+3#1+1/F:content_1/G:0_0/H:7=7@1=8|L-L%/I:5=5/J:56+45-8
-r^w-er+d=ao@2_1/A:1_1_3/B:0-0-2@1-1&2-6#1-5$1-4!1-1;1-1|er/C:1+1+4/D:content_1/E:aux+1@2+6&2+3#1+1/F:content_1/G:0_0/H:7=7@1=8|L-L%/I:5=5/J:56+45-8
-w^er-d+ao=r@1_4/A:0_0_2/B:1-1-4@1-1&3-5#1-4$1-3!2-1;2-2|ao/C:1+0+2/D:aux_1/E:content+1@3+5&2+2#2+2/F:det_1/G:0_0/H:7=7@1=8|L-L%/I:5=5/J:56+45-8
-er^d-ao+r=z@2_3/A:0_0_2/B:1-1-4@1-1&3-5#1-4$1-3!2-1;2-2|ao/C:1+0+2/D:aux_1/E:content+1@3+5&2+2#2+2/F:det_1/G:0_0/H:7=7@1=8|L-L%/I:5=5/J:56+45-8
-d^ao-r+z=ao@3_2/A:0_0_2/B:1-1-4@1-1&3-5#1-4$1-3!2-1;2-2|ao/C:1+0+2/D:aux_1/E:content+1@3+5&2+2#2+2/F:det_1/G:0_0/H:7=7@1=8|L-L%/I:5=5/J:56+45-8
-ao^r-z+ao=l@4_1/A:0_0_2/B:1-1-4@1-1&3-5#1-4$1-3!2-1;2-2|ao/C:1+0+2/D:aux_1/E:content+1@3+5&2+2#2+2/F:det_1/G:0_0/H:7=7@1=8|L-L%/I:5=5/J:56+45-8
-r^z-ao+l=r@1_2/A:1_1_4/B:1-0-2@1-1&4-4#2-3$2-3!1-1;1-1|ao/C:1+1+4/D:content_1/E:det+1@4+4&3+2#1+1/F:content_1/G:0_0/H:7=7@1=8|L-L%/I:5=5/J:56+45-8
-z^ao-l+r=aw@2_1/A:1_1_4/B:1-0-2@1-1&4-4#2-3$2-3!1-1;1-1|ao/C:1+1+4/D:content_1/E:det+1@4+4&3+2#1+1/F:content_1/G:0_0/H:7=7@1=8|L-L%/I:5=5/J:56+45-8
-ao^l-r+aw=n@1_4/A:1_0_2/B:1-1-4@1-1&5-3#3-2$2-2!1-2;2-2|aw/C:0+0+2/D:det_1/E:content+1@5+3&3+1#2+2/F:det_1/G:0_0/H:7=7@1=8|L-L%/I:5=5/J:56+45-8
-l^r-aw+n=d@2_3/A:1_0_2/B:1-1-4@1-1&5-3#3-2$2-2!1-2;2-2|aw/C:0+0+2/D:det_1/E:content+1@5+3&3+1#2+2/F:det_1/G:0_0/H:7=7@1=8|L-L%/I:5=5/J:56+45-8
-r^aw-n+d=dh@3_2/A:1_0_2/B:1-1-4@1-1&5-3#3-2$2-2!1-2;2-2|aw/C:0+0+2/D:det_1/E:content+1@5+3&3+1#2+2/F:det_1/G:0_0/H:7=7@1=8|L-L%/I:5=5/J:56+45-8
-aw^n-d+dh=ax@4_1/A:1_0_2/B:1-1-4@1-1&5-3#3-2$2-2!1-2;2-2|aw/C:0+0+2/D:det_1/E:content+1@5+3&3+1#2+2/F:det_1/G:0_0/H:7=7@1=8|L-L%/I:5=5/J:56+45-8
-n^d-dh+ax=hh@1_2/A:1_1_4/B:0-0-2@1-1&6-2#4-2$3-2!1-1;1-1|ax/C:1+1+3/D:content_1/E:det+1@6+2&4+1#1+1/F:content_1/G:0_0/H:7=7@1=8|L-L%/I:5=5/J:56+45-8
-d^dh-ax+hh=ao@2_1/A:1_1_4/B:0-0-2@1-1&6-2#4-2$3-2!1-1;1-1|ax/C:1+1+3/D:content_1/E:det+1@6+2&4+1#1+1/F:content_1/G:0_0/H:7=7@1=8|L-L%/I:5=5/J:56+45-8
-dh^ax-hh+ao=l@1_3/A:0_0_2/B:1-1-3@1-1&7-1#4-1$3-1!2-0;2-0|ao/C:1+0+3/D:det_1/E:content+1@7+1&4+0#2+0/F:cc_1/G:0_0/H:7=7@1=8|L-L%/I:5=5/J:56+45-8
-ax^hh-ao+l=pau@2_2/A:0_0_2/B:1-1-3@1-1&7-1#4-1$3-1!2-0;2-0|ao/C:1+0+3/D:det_1/E:content+1@7+1&4+0#2+0/F:cc_1/G:0_0/H:7=7@1=8|L-L%/I:5=5/J:56+45-8
-hh^ao-l+pau=b@3_1/A:0_0_2/B:1-1-3@1-1&7-1#4-1$3-1!2-0;2-0|ao/C:1+0+3/D:det_1/E:content+1@7+1&4+0#2+0/F:cc_1/G:0_0/H:7=7@1=8|L-L%/I:5=5/J:56+45-8
-ao^l-pau+b=ah@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:cc_1/G:7_7/H:x=x@1=8|0/I:5=5/J:56+45-8
-l^pau-b+ah=t@1_3/A:1_1_3/B:1-0-3@1-1&1-5#1-4$1-3!0-1;0-1|ah/C:1+1+2/D:content_1/E:cc+1@1+5&1+2#0+1/F:content_1/G:7_7/H:5=5@2=7|L-L%/I:9=8/J:56+45-8
-pau^b-ah+t=dh@2_2/A:1_1_3/B:1-0-3@1-1&1-5#1-4$1-3!0-1;0-1|ah/C:1+1+2/D:content_1/E:cc+1@1+5&1+2#0+1/F:content_1/G:7_7/H:5=5@2=7|L-L%/I:9=8/J:56+45-8
-b^ah-t+dh=ey@3_1/A:1_1_3/B:1-0-3@1-1&1-5#1-4$1-3!0-1;0-1|ah/C:1+1+2/D:content_1/E:cc+1@1+5&1+2#0+1/F:content_1/G:7_7/H:5=5@2=7|L-L%/I:9=8/J:56+45-8
-ah^t-dh+ey=w@1_2/A:1_0_3/B:1-1-2@1-1&2-4#1-3$1-2!1-2;0-3|ey/C:0+0+2/D:cc_1/E:content+1@2+4&1+1#0+3/F:aux_1/G:7_7/H:5=5@2=7|L-L%/I:9=8/J:56+45-8
-t^dh-ey+w=er@2_1/A:1_0_3/B:1-1-2@1-1&2-4#1-3$1-2!1-2;0-3|ey/C:0+0+2/D:cc_1/E:content+1@2+4&1+1#0+3/F:aux_1/G:7_7/H:5=5@2=7|L-L%/I:9=8/J:56+45-8
-dh^ey-w+er=ao@1_2/A:1_1_2/B:0-0-2@1-1&3-3#2-3$2-2!1-1;1-2|er/C:1+0+2/D:content_1/E:aux+1@3+3&2+1#1+2/F:det_1/G:7_7/H:5=5@2=7|L-L%/I:9=8/J:56+45-8
-ey^w-er+ao=l@2_1/A:1_1_2/B:0-0-2@1-1&3-3#2-3$2-2!1-1;1-2|er/C:1+0+2/D:content_1/E:aux+1@3+3&2+1#1+2/F:det_1/G:7_7/H:5=5@2=7|L-L%/I:9=8/J:56+45-8
-w^er-ao+l=l@1_2/A:0_0_2/B:1-0-2@1-1&4-2#2-2$2-2!2-1;2-1|ao/C:1+1+4/D:aux_1/E:det+1@4+2&2+1#2+1/F:content_1/G:7_7/H:5=5@2=7|L-L%/I:9=8/J:56+45-8
-er^ao-l+l=aa@2_1/A:0_0_2/B:1-0-2@1-1&4-2#2-2$2-2!2-1;2-1|ao/C:1+1+4/D:aux_1/E:det+1@4+2&2+1#2+1/F:content_1/G:7_7/H:5=5@2=7|L-L%/I:9=8/J:56+45-8
-ao^l-l+aa=k@1_4/A:1_0_2/B:1-1-4@1-1&5-1#3-1$2-1!1-0;3-0|aa/C:1+0+3/D:det_1/E:content+1@5+1&2+0#3+0/F:cc_1/G:7_7/H:5=5@2=7|L-L%/I:9=8/J:56+45-8
-l^l-aa+k=t@2_3/A:1_0_2/B:1-1-4@1-1&5-1#3-1$2-1!1-0;3-0|aa/C:1+0+3/D:det_1/E:content+1@5+1&2+0#3+0/F:cc_1/G:7_7/H:5=5@2=7|L-L%/I:9=8/J:56+45-8
-l^aa-k+t=pau@3_2/A:1_0_2/B:1-1-4@1-1&5-1#3-1$2-1!1-0;3-0|aa/C:1+0+3/D:det_1/E:content+1@5+1&2+0#3+0/F:cc_1/G:7_7/H:5=5@2=7|L-L%/I:9=8/J:56+45-8
-aa^k-t+pau=ae@4_1/A:1_0_2/B:1-1-4@1-1&5-1#3-1$2-1!1-0;3-0|aa/C:1+0+3/D:det_1/E:content+1@5+1&2+0#3+0/F:cc_1/G:7_7/H:5=5@2=7|L-L%/I:9=8/J:56+45-8
-k^t-pau+ae=n@x_x/A:1_1_4/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:cc_1/G:5_5/H:x=x@1=8|0/I:9=8/J:56+45-8
-t^pau-ae+n=d@1_3/A:1_1_4/B:1-0-3@1-1&1-9#1-7$1-2!0-1;0-8|ae/C:1+0+3/D:content_1/E:cc+1@1+8&1+3#0+2/F:wp_1/G:5_5/H:9=8@3=6|L-L%/I:8=7/J:56+45-8
-pau^ae-n+d=w@2_2/A:1_1_4/B:1-0-3@1-1&1-9#1-7$1-2!0-1;0-8|ae/C:1+0+3/D:content_1/E:cc+1@1+8&1+3#0+2/F:wp_1/G:5_5/H:9=8@3=6|L-L%/I:8=7/J:56+45-8
-ae^n-d+w=eh@3_1/A:1_1_4/B:1-0-3@1-1&1-9#1-7$1-2!0-1;0-8|ae/C:1+0+3/D:content_1/E:cc+1@1+8&1+3#0+2/F:wp_1/G:5_5/H:9=8@3=6|L-L%/I:8=7/J:56+45-8
-n^d-w+eh=n@1_3/A:1_0_3/B:1-0-3@1-1&2-8#1-6$1-2!1-1;0-7|eh/C:1+0+2/D:cc_1/E:wp+1@2+7&1+3#0+1/F:content_2/G:5_5/H:9=8@3=6|L-L%/I:8=7/J:56+45-8
-d^w-eh+n=ae@2_2/A:1_0_3/B:1-0-3@1-1&2-8#1-6$1-2!1-1;0-7|eh/C:1+0+2/D:cc_1/E:wp+1@2+7&1+3#0+1/F:content_2/G:5_5/H:9=8@3=6|L-L%/I:8=7/J:56+45-8
-w^eh-n+ae=l@3_1/A:1_0_3/B:1-0-3@1-1&2-8#1-6$1-2!1-1;0-7|eh/C:1+0+2/D:cc_1/E:wp+1@2+7&1+3#0+1/F:content_2/G:5_5/H:9=8@3=6|L-L%/I:8=7/J:56+45-8
-eh^n-ae+l=ax@1_2/A:1_0_3/B:1-0-2@1-2&3-7#2-5$1-2!1-2;0-6|ae/C:0+0+2/D:wp_1/E:content+2@3+6&1+2#0+2/F:aux_1/G:5_5/H:9=8@3=6|L-L%/I:8=7/J:56+45-8
-n^ae-l+ax=s@2_1/A:1_0_3/B:1-0-2@1-2&3-7#2-5$1-2!1-2;0-6|ae/C:0+0+2/D:wp_1/E:content+2@3+6&1+2#0+2/F:aux_1/G:5_5/H:9=8@3=6|L-L%/I:8=7/J:56+45-8
-ae^l-ax+s=hh@1_2/A:1_0_2/B:0-0-2@2-1&4-6#3-5$1-2!1-1;0-5|ax/C:1+0+3/D:wp_1/E:content+2@3+6&1+2#0+2/F:aux_1/G:5_5/H:9=8@3=6|L-L%/I:8=7/J:56+45-8
-l^ax-s+hh=ae@2_1/A:1_0_2/B:0-0-2@2-1&4-6#3-5$1-2!1-1;0-5|ax/C:1+0+3/D:wp_1/E:content+2@3+6&1+2#0+2/F:aux_1/G:5_5/H:9=8@3=6|L-L%/I:8=7/J:56+45-8
-ax^s-hh+ae=d@1_3/A:0_0_2/B:1-0-3@1-1&5-5#3-4$1-2!2-1;0-4|ae/C:1+0+3/D:content_2/E:aux+1@4+5&2+2#1+1/F:content_1/G:5_5/H:9=8@3=6|L-L%/I:8=7/J:56+45-8
-s^hh-ae+d=b@2_2/A:0_0_2/B:1-0-3@1-1&5-5#3-4$1-2!2-1;0-4|ae/C:1+0+3/D:content_2/E:aux+1@4+5&2+2#1+1/F:content_1/G:5_5/H:9=8@3=6|L-L%/I:8=7/J:56+45-8
-hh^ae-d+b=ih@3_1/A:0_0_2/B:1-0-3@1-1&5-5#3-4$1-2!2-1;0-4|ae/C:1+0+3/D:content_2/E:aux+1@4+5&2+2#1+1/F:content_1/G:5_5/H:9=8@3=6|L-L%/I:8=7/J:56+45-8
-ae^d-b+ih=n@1_3/A:1_0_3/B:1-0-3@1-1&6-4#4-3$1-2!1-1;0-3|ih/C:1+0+2/D:aux_1/E:content+1@5+4&2+1#2+3/F:det_1/G:5_5/H:9=8@3=6|L-L%/I:8=7/J:56+45-8
-d^b-ih+n=ao@2_2/A:1_0_3/B:1-0-3@1-1&6-4#4-3$1-2!1-1;0-3|ih/C:1+0+2/D:aux_1/E:content+1@5+4&2+1#2+3/F:det_1/G:5_5/H:9=8@3=6|L-L%/I:8=7/J:56+45-8
-b^ih-n+ao=l@3_1/A:1_0_3/B:1-0-3@1-1&6-4#4-3$1-2!1-1;0-3|ih/C:1+0+2/D:aux_1/E:content+1@5+4&2+1#2+3/F:det_1/G:5_5/H:9=8@3=6|L-L%/I:8=7/J:56+45-8
-ih^n-ao+l=dh@1_2/A:1_0_3/B:1-0-2@1-1&7-3#5-2$1-2!1-2;0-2|ao/C:0+0+2/D:content_1/E:det+1@6+3&3+1#1+2/F:det_1/G:5_5/H:9=8@3=6|L-L%/I:8=7/J:56+45-8
-n^ao-l+dh=ax@2_1/A:1_0_3/B:1-0-2@1-1&7-3#5-2$1-2!1-2;0-2|ao/C:0+0+2/D:content_1/E:det+1@6+3&3+1#1+2/F:det_1/G:5_5/H:9=8@3=6|L-L%/I:8=7/J:56+45-8
-ao^l-dh+ax=w@1_2/A:1_0_2/B:0-0-2@1-1&8-2#6-2$1-2!1-1;0-1|ax/C:1+1+2/D:det_1/E:det+1@7+2&3+1#2+1/F:content_1/G:5_5/H:9=8@3=6|L-L%/I:8=7/J:56+45-8
-l^dh-ax+w=ey@2_1/A:1_0_2/B:0-0-2@1-1&8-2#6-2$1-2!1-1;0-1|ax/C:1+1+2/D:det_1/E:det+1@7+2&3+1#2+1/F:content_1/G:5_5/H:9=8@3=6|L-L%/I:8=7/J:56+45-8
-dh^ax-w+ey=pau@1_2/A:0_0_2/B:1-1-2@1-1&9-1#6-1$1-1!2-0;0-0|ey/C:1+0+3/D:det_1/E:content+1@8+1&3+0#3+0/F:in_1/G:5_5/H:9=8@3=6|L-L%/I:8=7/J:56+45-8
-ax^w-ey+pau=d@2_1/A:0_0_2/B:1-1-2@1-1&9-1#6-1$1-1!2-0;0-0|ey/C:1+0+3/D:det_1/E:content+1@8+1&3+0#3+0/F:in_1/G:5_5/H:9=8@3=6|L-L%/I:8=7/J:56+45-8
-w^ey-pau+d=aw@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+3/D:content_1/E:x+x@x+x&x+x#x+x/F:in_1/G:9_8/H:x=x@1=8|0/I:8=7/J:56+45-8
-ey^pau-d+aw=n@1_3/A:1_1_2/B:1-0-3@1-1&1-8#1-6$1-5!0-1;0-1|aw/C:1+1+3/D:content_1/E:in+1@1+7&1+3#0+1/F:content_1/G:9_8/H:8=7@4=5|L-L%/I:6=3/J:56+45-8
-pau^d-aw+n=w@2_2/A:1_1_2/B:1-0-3@1-1&1-8#1-6$1-5!0-1;0-1|aw/C:1+1+3/D:content_1/E:in+1@1+7&1+3#0+1/F:content_1/G:9_8/H:8=7@4=5|L-L%/I:6=3/J:56+45-8
-d^aw-n+w=ah@3_1/A:1_1_2/B:1-0-3@1-1&1-8#1-6$1-5!0-1;0-1|aw/C:1+1+3/D:content_1/E:in+1@1+7&1+3#0+1/F:content_1/G:9_8/H:8=7@4=5|L-L%/I:6=3/J:56+45-8
-aw^n-w+ah=n@1_3/A:1_0_3/B:1-1-3@1-1&2-7#1-5$1-4!1-1;0-1|ah/C:1+1+3/D:in_1/E:content+1@2+6&1+2#0+1/F:content_1/G:9_8/H:8=7@4=5|L-L%/I:6=3/J:56+45-8
-n^w-ah+n=s@2_2/A:1_0_3/B:1-1-3@1-1&2-7#1-5$1-4!1-1;0-1|ah/C:1+1+3/D:in_1/E:content+1@2+6&1+2#0+1/F:content_1/G:9_8/H:8=7@4=5|L-L%/I:6=3/J:56+45-8
-w^ah-n+s=ay@3_1/A:1_0_3/B:1-1-3@1-1&2-7#1-5$1-4!1-1;0-1|ah/C:1+1+3/D:in_1/E:content+1@2+6&1+2#0+1/F:content_1/G:9_8/H:8=7@4=5|L-L%/I:6=3/J:56+45-8
-ah^n-s+ay=d@1_3/A:1_1_3/B:1-1-3@1-1&3-6#2-4$2-3!1-1;1-4|ay/C:1+0+3/D:content_1/E:content+1@3+5&2+1#1+4/F:cc_1/G:9_8/H:8=7@4=5|L-L%/I:6=3/J:56+45-8
-n^s-ay+d=ae@2_2/A:1_1_3/B:1-1-3@1-1&3-6#2-4$2-3!1-1;1-4|ay/C:1+0+3/D:content_1/E:content+1@3+5&2+1#1+4/F:cc_1/G:9_8/H:8=7@4=5|L-L%/I:6=3/J:56+45-8
-s^ay-d+ae=n@3_1/A:1_1_3/B:1-1-3@1-1&3-6#2-4$2-3!1-1;1-4|ay/C:1+0+3/D:content_1/E:content+1@3+5&2+1#1+4/F:cc_1/G:9_8/H:8=7@4=5|L-L%/I:6=3/J:56+45-8
-ay^d-ae+n=d@1_3/A:1_1_3/B:1-0-3@1-1&4-5#3-3$3-3!1-1;1-3|ae/C:1+0+2/D:content_1/E:cc+1@4+4&3+1#1+3/F:in_1/G:9_8/H:8=7@4=5|L-L%/I:6=3/J:56+45-8
-d^ae-n+d=ah@2_2/A:1_1_3/B:1-0-3@1-1&4-5#3-3$3-3!1-1;1-3|ae/C:1+0+2/D:content_1/E:cc+1@4+4&3+1#1+3/F:in_1/G:9_8/H:8=7@4=5|L-L%/I:6=3/J:56+45-8
-ae^n-d+ah=p@3_1/A:1_1_3/B:1-0-3@1-1&4-5#3-3$3-3!1-1;1-3|ae/C:1+0+2/D:content_1/E:cc+1@4+4&3+1#1+3/F:in_1/G:9_8/H:8=7@4=5|L-L%/I:6=3/J:56+45-8
-n^d-ah+p=dh@1_2/A:1_0_3/B:1-0-2@1-1&5-4#4-2$3-3!1-2;2-2|ah/C:0+0+2/D:cc_1/E:in+1@5+3&3+1#2+2/F:det_1/G:9_8/H:8=7@4=5|L-L%/I:6=3/J:56+45-8
-d^ah-p+dh=ax@2_1/A:1_0_3/B:1-0-2@1-1&5-4#4-2$3-3!1-2;2-2|ah/C:0+0+2/D:cc_1/E:in+1@5+3&3+1#2+2/F:det_1/G:9_8/H:8=7@4=5|L-L%/I:6=3/J:56+45-8
-ah^p-dh+ax=ah@1_2/A:1_0_2/B:0-0-2@1-1&6-3#5-2$3-3!1-1;3-1|ax/C:1+1+2/D:in_1/E:det+1@6+2&3+1#3+1/F:content_2/G:9_8/H:8=7@4=5|L-L%/I:6=3/J:56+45-8
-p^dh-ax+ah=dh@2_1/A:1_0_2/B:0-0-2@1-1&6-3#5-2$3-3!1-1;3-1|ax/C:1+1+2/D:in_1/E:det+1@6+2&3+1#3+1/F:content_2/G:9_8/H:8=7@4=5|L-L%/I:6=3/J:56+45-8
-dh^ax-ah+dh=er@1_2/A:0_0_2/B:1-1-2@1-2&7-2#5-1$3-2!2-0;4-1|ah/C:0+1+1/D:det_1/E:content+2@7+1&3+0#4+0/F:content_2/G:9_8/H:8=7@4=5|L-L%/I:6=3/J:56+45-8
-ax^ah-dh+er=pau@2_1/A:0_0_2/B:1-1-2@1-2&7-2#5-1$3-2!2-0;4-1|ah/C:0+1+1/D:det_1/E:content+2@7+1&3+0#4+0/F:content_2/G:9_8/H:8=7@4=5|L-L%/I:6=3/J:56+45-8
-ah^dh-er+pau=t@1_1/A:1_1_2/B:0-1-1@2-1&8-1#6-1$4-1!1-0;1-0|er/C:1+1+3/D:det_1/E:content+2@7+1&3+0#4+0/F:content_2/G:9_8/H:8=7@4=5|L-L%/I:6=3/J:56+45-8
-dh^er-pau+t=r@x_x/A:0_1_1/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+3/D:content_2/E:x+x@x+x&x+x#x+x/F:content_2/G:8_7/H:x=x@1=8|0/I:6=3/J:56+45-8
-er^pau-t+r=ay@1_3/A:0_1_1/B:1-1-3@1-2&1-6#1-3$1-2!0-2;0-5|ay/C:0+0+2/D:content_2/E:content+2@1+3&1+1#0+2/F:det_3/G:8_7/H:6=3@5=4|L-L%/I:8=6/J:56+45-8
-pau^t-r+ay=ih@2_2/A:0_1_1/B:1-1-3@1-2&1-6#1-3$1-2!0-2;0-5|ay/C:0+0+2/D:content_2/E:content+2@1+3&1+1#0+2/F:det_3/G:8_7/H:6=3@5=4|L-L%/I:8=6/J:56+45-8
-t^r-ay+ih=ng@3_1/A:0_1_1/B:1-1-3@1-2&1-6#1-3$1-2!0-2;0-5|ay/C:0+0+2/D:content_2/E:content+2@1+3&1+1#0+2/F:det_3/G:8_7/H:6=3@5=4|L-L%/I:8=6/J:56+45-8
-r^ay-ih+ng=eh@1_2/A:1_1_3/B:0-0-2@2-1&2-5#1-3$1-2!1-1;1-4|ih/C:1+0+2/D:content_2/E:content+2@1+3&1+1#0+2/F:det_3/G:8_7/H:6=3@5=4|L-L%/I:8=6/J:56+45-8
-ay^ih-ng+eh=v@2_1/A:1_1_3/B:0-0-2@2-1&2-5#1-3$1-2!1-1;1-4|ih/C:1+0+2/D:content_2/E:content+2@1+3&1+1#0+2/F:det_3/G:8_7/H:6=3@5=4|L-L%/I:8=6/J:56+45-8
-ih^ng-eh+v=er@1_2/A:0_0_2/B:1-0-2@1-3&3-4#1-2$1-2!2-3;2-3|eh/C:0+0+1/D:content_2/E:det+3@2+2&2+1#1+1/F:content_1/G:8_7/H:6=3@5=4|L-L%/I:8=6/J:56+45-8
-ng^eh-v+er=iy@2_1/A:0_0_2/B:1-0-2@1-3&3-4#1-2$1-2!2-3;2-3|eh/C:0+0+1/D:content_2/E:det+3@2+2&2+1#1+1/F:content_1/G:8_7/H:6=3@5=4|L-L%/I:8=6/J:56+45-8
-eh^v-er+iy=d@1_1/A:1_0_2/B:0-0-1@2-2&4-3#2-2$1-2!1-2;3-2|er/C:0+0+1/D:content_2/E:det+3@2+2&2+1#1+1/F:content_1/G:8_7/H:6=3@5=4|L-L%/I:8=6/J:56+45-8
-v^er-iy+d=ao@1_1/A:0_0_1/B:0-0-1@3-1&5-2#2-2$1-2!2-1;4-1|iy/C:1+1+3/D:content_2/E:det+3@2+2&2+1#1+1/F:content_1/G:8_7/H:6=3@5=4|L-L%/I:8=6/J:56+45-8
-er^iy-d+ao=r@1_3/A:0_0_1/B:1-1-3@1-1&6-1#2-1$1-1!3-0;5-0|ao/C:1+0+2/D:det_3/E:content+1@3+1&2+0#2+0/F:content_1/G:8_7/H:6=3@5=4|L-L%/I:8=6/J:56+45-8
-iy^d-ao+r=pau@2_2/A:0_0_1/B:1-1-3@1-1&6-1#2-1$1-1!3-0;5-0|ao/C:1+0+2/D:det_3/E:content+1@3+1&2+0#2+0/F:content_1/G:8_7/H:6=3@5=4|L-L%/I:8=6/J:56+45-8
-d^ao-r+pau=sh@3_1/A:0_0_1/B:1-1-3@1-1&6-1#2-1$1-1!3-0;5-0|ao/C:1+0+2/D:det_3/E:content+1@3+1&2+0#2+0/F:content_1/G:8_7/H:6=3@5=4|L-L%/I:8=6/J:56+45-8
-ao^r-pau+sh=iy@x_x/A:1_1_3/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+0+2/D:content_1/E:x+x@x+x&x+x#x+x/F:content_1/G:6_3/H:x=x@1=8|0/I:8=6/J:56+45-8
-r^pau-sh+iy=w@1_2/A:1_1_3/B:1-0-2@1-1&1-8#1-5$1-5!0-1;0-1|iy/C:1+1+4/D:content_1/E:content+1@1+6&1+3#0+1/F:content_1/G:6_3/H:8=6@6=3|L-L%/I:8=5/J:56+45-8
-pau^sh-iy+w=ao@2_1/A:1_1_3/B:1-0-2@1-1&1-8#1-5$1-5!0-1;0-1|iy/C:1+1+4/D:content_1/E:content+1@1+6&1+3#0+1/F:content_1/G:6_3/H:8=6@6=3|L-L%/I:8=5/J:56+45-8
-sh^iy-w+ao=k@1_4/A:1_0_2/B:1-1-4@1-1&2-7#1-4$1-4!1-1;0-1|ao/C:1+1+3/D:content_1/E:content+1@2+5&2+2#1+1/F:content_2/G:6_3/H:8=6@6=3|L-L%/I:8=5/J:56+45-8
-iy^w-ao+k=t@2_3/A:1_0_2/B:1-1-4@1-1&2-7#1-4$1-4!1-1;0-1|ao/C:1+1+3/D:content_1/E:content+1@2+5&2+2#1+1/F:content_2/G:6_3/H:8=6@6=3|L-L%/I:8=5/J:56+45-8
-w^ao-k+t=s@3_2/A:1_0_2/B:1-1-4@1-1&2-7#1-4$1-4!1-1;0-1|ao/C:1+1+3/D:content_1/E:content+1@2+5&2+2#1+1/F:content_2/G:6_3/H:8=6@6=3|L-L%/I:8=5/J:56+45-8
-ao^k-t+s=ae@4_1/A:1_0_2/B:1-1-4@1-1&2-7#1-4$1-4!1-1;0-1|ao/C:1+1+3/D:content_1/E:content+1@2+5&2+2#1+1/F:content_2/G:6_3/H:8=6@6=3|L-L%/I:8=5/J:56+45-8
-k^t-s+ae=d@1_3/A:1_1_4/B:1-1-3@1-2&3-6#2-3$2-3!1-2;1-4|ae/C:0+0+2/D:content_1/E:content+2@3+4&3+1#1+3/F:in_1/G:6_3/H:8=6@6=3|L-L%/I:8=5/J:56+45-8
-t^s-ae+d=l@2_2/A:1_1_4/B:1-1-3@1-2&3-6#2-3$2-3!1-2;1-4|ae/C:0+0+2/D:content_1/E:content+2@3+4&3+1#1+3/F:in_1/G:6_3/H:8=6@6=3|L-L%/I:8=5/J:56+45-8
-s^ae-d+l=iy@3_1/A:1_1_4/B:1-1-3@1-2&3-6#2-3$2-3!1-2;1-4|ae/C:0+0+2/D:content_1/E:content+2@3+4&3+1#1+3/F:in_1/G:6_3/H:8=6@6=3|L-L%/I:8=5/J:56+45-8
-ae^d-l+iy=d@1_2/A:1_1_3/B:0-0-2@2-1&4-5#3-3$3-3!1-1;1-3|iy/C:1+0+3/D:content_1/E:content+2@3+4&3+1#1+3/F:in_1/G:6_3/H:8=6@6=3|L-L%/I:8=5/J:56+45-8
-d^l-iy+d=aw@2_1/A:1_1_3/B:0-0-2@2-1&4-5#3-3$3-3!1-1;1-3|iy/C:1+0+3/D:content_1/E:content+2@3+4&3+1#1+3/F:in_1/G:6_3/H:8=6@6=3|L-L%/I:8=5/J:56+45-8
-l^iy-d+aw=n@1_3/A:0_0_2/B:1-0-3@1-1&5-4#3-2$3-3!2-2;2-2|aw/C:0+0+2/D:content_2/E:in+1@4+3&4+1#1+2/F:det_1/G:6_3/H:8=6@6=3|L-L%/I:8=5/J:56+45-8
-iy^d-aw+n=dh@2_2/A:0_0_2/B:1-0-3@1-1&5-4#3-2$3-3!2-2;2-2|aw/C:0+0+2/D:content_2/E:in+1@4+3&4+1#1+2/F:det_1/G:6_3/H:8=6@6=3|L-L%/I:8=5/J:56+45-8
-d^aw-n+dh=ax@3_1/A:0_0_2/B:1-0-3@1-1&5-4#3-2$3-3!2-2;2-2|aw/C:0+0+2/D:content_2/E:in+1@4+3&4+1#1+2/F:det_1/G:6_3/H:8=6@6=3|L-L%/I:8=5/J:56+45-8
-aw^n-dh+ax=m@1_2/A:1_0_3/B:0-0-2@1-1&6-3#4-2$3-3!1-1;3-1|ax/C:1+1+3/D:in_1/E:det+1@5+2&4+1#2+1/F:content_2/G:6_3/H:8=6@6=3|L-L%/I:8=5/J:56+45-8
-n^dh-ax+m=ih@2_1/A:1_0_3/B:0-0-2@1-1&6-3#4-2$3-3!1-1;3-1|ax/C:1+1+3/D:in_1/E:det+1@5+2&4+1#2+1/F:content_2/G:6_3/H:8=6@6=3|L-L%/I:8=5/J:56+45-8
-dh^ax-m+ih=d@1_3/A:0_0_2/B:1-1-3@1-2&7-2#4-1$3-2!2-0;4-1|ih/C:0+1+2/D:det_1/E:content+2@6+1&4+0#3+0/F:content_3/G:6_3/H:8=6@6=3|L-L%/I:8=5/J:56+45-8
-ax^m-ih+d=ax@2_2/A:0_0_2/B:1-1-3@1-2&7-2#4-1$3-2!2-0;4-1|ih/C:0+1+2/D:det_1/E:content+2@6+1&4+0#3+0/F:content_3/G:6_3/H:8=6@6=3|L-L%/I:8=5/J:56+45-8
-m^ih-d+ax=l@3_1/A:0_0_2/B:1-1-3@1-2&7-2#4-1$3-2!2-0;4-1|ih/C:0+1+2/D:det_1/E:content+2@6+1&4+0#3+0/F:content_3/G:6_3/H:8=6@6=3|L-L%/I:8=5/J:56+45-8
-ih^d-ax+l=pau@1_2/A:1_1_3/B:0-1-2@2-1&8-1#5-1$4-1!1-0;1-0|ax/C:1+1+4/D:det_1/E:content+2@6+1&4+0#3+0/F:content_3/G:6_3/H:8=6@6=3|L-L%/I:8=5/J:56+45-8
-d^ax-l+pau=w@2_1/A:1_1_3/B:0-1-2@2-1&8-1#5-1$4-1!1-0;1-0|ax/C:1+1+4/D:det_1/E:content+2@6+1&4+0#3+0/F:content_3/G:6_3/H:8=6@6=3|L-L%/I:8=5/J:56+45-8
-ax^l-pau+w=ah@x_x/A:0_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:1+1+4/D:content_2/E:x+x@x+x&x+x#x+x/F:content_3/G:8_6/H:x=x@1=8|0/I:8=5/J:56+45-8
-l^pau-w+ah=n@1_4/A:0_1_2/B:1-1-4@1-3&1-8#1-5$1-3!0-3;0-6|ah/C:0+0+1/D:content_2/E:content+3@1+5&1+2#0+2/F:wp_1/G:8_6/H:8=5@7=2|L-L%/I:5=4/J:56+45-8
-pau^w-ah+n=d@2_3/A:0_1_2/B:1-1-4@1-3&1-8#1-5$1-3!0-3;0-6|ah/C:0+0+1/D:content_2/E:content+3@1+5&1+2#0+2/F:wp_1/G:8_6/H:8=5@7=2|L-L%/I:5=4/J:56+45-8
-w^ah-n+d=er@3_2/A:0_1_2/B:1-1-4@1-3&1-8#1-5$1-3!0-3;0-6|ah/C:0+0+1/D:content_2/E:content+3@1+5&1+2#0+2/F:wp_1/G:8_6/H:8=5@7=2|L-L%/I:5=4/J:56+45-8
-ah^n-d+er=ih@4_1/A:0_1_2/B:1-1-4@1-3&1-8#1-5$1-3!0-3;0-6|ah/C:0+0+1/D:content_2/E:content+3@1+5&1+2#0+2/F:wp_1/G:8_6/H:8=5@7=2|L-L%/I:5=4/J:56+45-8
-n^d-er+ih=ng@1_1/A:1_1_4/B:0-0-1@2-2&2-7#1-5$1-3!1-2;1-5|er/C:0+0+2/D:content_2/E:content+3@1+5&1+2#0+2/F:wp_1/G:8_6/H:8=5@7=2|L-L%/I:5=4/J:56+45-8
-d^er-ih+ng=hh@1_2/A:0_0_1/B:0-0-2@3-1&3-6#1-5$1-3!2-1;2-4|ih/C:1+0+2/D:content_2/E:content+3@1+5&1+2#0+2/F:wp_1/G:8_6/H:8=5@7=2|L-L%/I:5=4/J:56+45-8
-er^ih-ng+hh=aw@2_1/A:0_0_1/B:0-0-2@3-1&3-6#1-5$1-3!2-1;2-4|ih/C:1+0+2/D:content_2/E:content+3@1+5&1+2#0+2/F:wp_1/G:8_6/H:8=5@7=2|L-L%/I:5=4/J:56+45-8
-ih^ng-hh+aw=sh@1_2/A:0_0_2/B:1-0-2@1-1&4-5#1-4$1-3!3-1;3-3|aw/C:1+0+2/D:content_3/E:wp+1@2+4&2+2#1+1/F:content_1/G:8_6/H:8=5@7=2|L-L%/I:5=4/J:56+45-8
-ng^hh-aw+sh=iy@2_1/A:0_0_2/B:1-0-2@1-1&4-5#1-4$1-3!3-1;3-3|aw/C:1+0+2/D:content_3/E:wp+1@2+4&2+2#1+1/F:content_1/G:8_6/H:8=5@7=2|L-L%/I:5=4/J:56+45-8
-hh^aw-sh+iy=w@1_2/A:1_0_2/B:1-0-2@1-1&5-4#2-3$1-3!1-1;4-2|iy/C:1+0+3/D:wp_1/E:content+1@3+3&2+1#2+2/F:aux_1/G:8_6/H:8=5@7=2|L-L%/I:5=4/J:56+45-8
-aw^sh-iy+w=aa@2_1/A:1_0_2/B:1-0-2@1-1&5-4#2-3$1-3!1-1;4-2|iy/C:1+0+3/D:wp_1/E:content+1@3+3&2+1#2+2/F:aux_1/G:8_6/H:8=5@7=2|L-L%/I:5=4/J:56+45-8
-sh^iy-w+aa=z@1_3/A:1_0_2/B:1-0-3@1-1&6-3#3-2$1-3!1-1;5-1|aa/C:1+1+2/D:content_1/E:aux+1@4+2&3+1#1+1/F:content_2/G:8_6/H:8=5@7=2|L-L%/I:5=4/J:56+45-8
-iy^w-aa+z=eh@2_2/A:1_0_2/B:1-0-3@1-1&6-3#3-2$1-3!1-1;5-1|aa/C:1+1+2/D:content_1/E:aux+1@4+2&3+1#1+1/F:content_2/G:8_6/H:8=5@7=2|L-L%/I:5=4/J:56+45-8
-w^aa-z+eh=v@3_1/A:1_0_2/B:1-0-3@1-1&6-3#3-2$1-3!1-1;5-1|aa/C:1+1+2/D:content_1/E:aux+1@4+2&3+1#1+1/F:content_2/G:8_6/H:8=5@7=2|L-L%/I:5=4/J:56+45-8
-aa^z-eh+v=er@1_2/A:1_0_3/B:1-1-2@1-2&7-2#4-1$1-2!1-0;6-1|eh/C:0+1+1/D:aux_1/E:content+2@5+1&3+0#2+0/F:to_1/G:8_6/H:8=5@7=2|L-L%/I:5=4/J:56+45-8
-z^eh-v+er=pau@2_1/A:1_0_3/B:1-1-2@1-2&7-2#4-1$1-2!1-0;6-1|eh/C:0+1+1/D:aux_1/E:content+2@5+1&3+0#2+0/F:to_1/G:8_6/H:8=5@7=2|L-L%/I:5=4/J:56+45-8
-eh^v-er+pau=t@1_1/A:1_1_2/B:0-1-1@2-1&8-1#5-1$2-1!1-0;1-0|er/C:0+0+2/D:aux_1/E:content+2@5+1&3+0#2+0/F:to_1/G:8_6/H:8=5@7=2|L-L%/I:5=4/J:56+45-8
-v^er-pau+t=ax@x_x/A:0_1_1/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+2/D:content_2/E:x+x@x+x&x+x#x+x/F:to_1/G:8_5/H:x=x@1=8|0/I:5=4/J:56+45-8
-er^pau-t+ax=g@1_2/A:0_1_1/B:0-0-2@1-1&1-5#1-4$1-4!0-1;0-1|ax/C:1+1+3/D:content_2/E:to+1@1+4&1+3#0+1/F:content_1/G:8_5/H:5=4@8=1|L-L%/I:0=0/J:56+45-8
-pau^t-ax+g=eh@2_1/A:0_1_1/B:0-0-2@1-1&1-5#1-4$1-4!0-1;0-1|ax/C:1+1+3/D:content_2/E:to+1@1+4&1+3#0+1/F:content_1/G:8_5/H:5=4@8=1|L-L%/I:0=0/J:56+45-8
-t^ax-g+eh=t@1_3/A:0_0_2/B:1-1-3@1-1&2-4#1-3$1-3!0-1;0-1|eh/C:1+1+2/D:to_1/E:content+1@2+3&1+2#0+1/F:content_1/G:8_5/H:5=4@8=1|L-L%/I:0=0/J:56+45-8
-ax^g-eh+t=aw@2_2/A:0_0_2/B:1-1-3@1-1&2-4#1-3$1-3!0-1;0-1|eh/C:1+1+2/D:to_1/E:content+1@2+3&1+2#0+1/F:content_1/G:8_5/H:5=4@8=1|L-L%/I:0=0/J:56+45-8
-g^eh-t+aw=t@3_1/A:0_0_2/B:1-1-3@1-1&2-4#1-3$1-3!0-1;0-1|eh/C:1+1+2/D:to_1/E:content+1@2+3&1+2#0+1/F:content_1/G:8_5/H:5=4@8=1|L-L%/I:0=0/J:56+45-8
-eh^t-aw+t=ax@1_2/A:1_1_3/B:1-1-2@1-1&3-3#2-2$2-2!1-2;1-2|aw/C:0+0+2/D:content_1/E:content+1@3+2&2+1#1+1/F:content_2/G:8_5/H:5=4@8=1|L-L%/I:0=0/J:56+45-8
-t^aw-t+ax=g@2_1/A:1_1_3/B:1-1-2@1-1&3-3#2-2$2-2!1-2;1-2|aw/C:0+0+2/D:content_1/E:content+1@3+2&2+1#1+1/F:content_2/G:8_5/H:5=4@8=1|L-L%/I:0=0/J:56+45-8
-aw^t-ax+g=eh@1_2/A:1_1_2/B:0-0-2@1-2&4-2#3-2$3-2!1-1;1-1|ax/C:1+1+2/D:content_1/E:content+2@4+1&3+0#1+0/F:0_0/G:8_5/H:5=4@8=1|L-L%/I:0=0/J:56+45-8
-t^ax-g+eh=n@2_1/A:1_1_2/B:0-0-2@1-2&4-2#3-2$3-2!1-1;1-1|ax/C:1+1+2/D:content_1/E:content+2@4+1&3+0#1+0/F:0_0/G:8_5/H:5=4@8=1|L-L%/I:0=0/J:56+45-8
-ax^g-eh+n=pau@1_2/A:0_0_2/B:1-1-2@2-1&5-1#3-1$3-1!2-0;2-0|eh/C:0+0+0/D:content_1/E:content+2@4+1&3+0#1+0/F:0_0/G:8_5/H:5=4@8=1|L-L%/I:0=0/J:56+45-8
-g^eh-n+pau=x@2_1/A:0_0_2/B:1-1-2@2-1&5-1#3-1$3-1!2-0;2-0|eh/C:0+0+0/D:content_1/E:content+2@4+1&3+0#1+0/F:0_0/G:8_5/H:5=4@8=1|L-L%/I:0=0/J:56+45-8
-eh^n-pau+x=x@x_x/A:1_1_2/B:x-x-x@x-x&x-x#x-x$x-x!x-x;x-x|x/C:0+0+0/D:content_2/E:x+x@x+x&x+x#x+x/F:0_0/G:5_4/H:x=x@1=8|0/I:0=0/J:56+45-8
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/Makefile.in HTS-demo_CMU-ARCTIC-SLT-mary/data/Makefile.in
--- HTS-demo_CMU-ARCTIC-SLT/data/Makefile.in	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/Makefile.in	2009-03-13 18:12:52.000000000 +0100
@@ -59,6 +59,8 @@ X2X     = @X2X@
 FRAME   = @FRAME@
 WINDOW  = @WINDOW@
 MGCEP   = @MGCEP@
+GCEP    = @GCEP@
+IGLSADF = @IGLSADF@
 LPC2LSP = @LPC2LSP@
 STEP    = @STEP@
 MERGE   = @MERGE@
@@ -71,6 +73,12 @@ NAN     = @NAN@
 # dumpfeats to extract utterance information
 DUMPFEATS = @DUMPFEATS@
 
+# Mary Language
+VOICELANG = @VOICELANG@
+# Mary feature List 
+# Requested features for the fullcontext names and tree questions 
+FEATURELIST = @FEATURELIST@
+
 # speech analysis conditions
 BYTESWAP    = @BYTESWAP@     # Little Endian (i*86, x86_64, Alpha, etc.) => 0    Big Endian (PowerPC, SPARC, 680x0, etc.) => 1
 SAMPFREQ    = @SAMPFREQ@ # Sampling frequency (16kHz)
@@ -82,6 +90,8 @@ FFTLEN      = @FFTLEN@   # FFT length in
 FREQWARP    = @FREQWARP@  # frequency warping factor
 GAMMA       = @GAMMA@     # pole/zero weight for mel-generalized cepstral (MGC) analysis
 MGCORDER    = @MGCORDER@    # order of MGC analysis
+STRORDER    = @STRORDER@     # order of STR analysis, number of filter banks for mixed excitation
+MAGORDER    = @MAGORDER@    # order of Fourier magnitudes for pulse excitation generation
 MGCLSP      = @MGCLSP@     # convert MGC coefficients into MGC-LSP form 
 LNGAIN      = @LNGAIN@     # use logarithmic gain rather than linear gain
 LOWERF0     = @LOWERF0@    # lower limit for f0 extraction (Hz) (get_f0's default is 60 Hz)
@@ -90,21 +100,31 @@ NOISEMASK   = @NOISEMASK@    # standard 
 
 # windows for calculating delta features
 MGCWIN      = win/mgc.win
+# Mary added str for mixed excitation
+STRWIN       = win/str.win
+# Mary added mag for pulse excitation generation out of Fourier magnitudes
+MAGWIN       = win/mag.win
 LF0WIN      = win/lf0.win
 NMGCWIN     = @NMGCWIN@
+NSTRWIN      = @NSTRWIN@   # Mary added str for mixed excitation
+NMAGWIN      = @NMAGWIN@   # Mary added mag for pulse excitation generation out of Fourier magnitudes
 NLF0WIN     = @NLF0WIN@
 
 all: analysis labels
+all-mary: analysis-mary-mix labels-mary
 
 analysis: mgc lf0 cmp gv
+analysis-mary-mix: mgc lf0 str mag cmp-mary gv-mary gv
 
 labels: label mlf list scp
+labels-mary: label-mary count-mary mlf list scp
+# questions in the mary version are done now in Java with the HMMVoiceMakeData
 
 mgc:
 	# Extracting MGC or MGC-LSP coefficients from raw audio
 	mkdir -p mgc
 	
-	for raw in raw/$(DATASET)_$(SPEAKER)_*.raw; do \
+	for raw in raw/*.raw; do \
 		base=`basename $${raw} .raw`; \
 		if [ -s $${raw} ]; then \
 			if [ $(BYTESWAP) -eq 1 ]; then \
@@ -144,7 +164,7 @@ lf0:
 	# Extracting log f0 sequence from raw audio
 	mkdir -p lf0
 	
-	for raw in raw/$(DATASET)_$(SPEAKER)_*.raw; do \
+	for raw in raw/*.raw; do \
 		base=`basename $${raw} .raw`; \
 		if [ -s $${raw} ]; then \
 			echo "Extracting f0 from $${raw}"; \
@@ -170,6 +190,66 @@ lf0:
 	
 	rm -f tmp tmp.head tmp.tail tmp.raw
 
+
+
+# Mary added str for mixed excitation: extract voicing strenghts
+str:
+	# Extracting strengths from $(STRORDER) filtered bands of raw audio, it requires $(STRORDER) filters.  
+        # By default the number of filters is 5 and located in ../data/filters/mix_excitation_filters.txt 
+        # (see a description of this file format in ../data/get_str.tcl) 
+	mkdir -p str
+	for raw in raw/*.raw; do \
+		base=`basename $${raw} .raw`; \
+		if [ -s $${raw} ]; then \
+			echo "Extracting strengths from $${raw}"; \
+			count=`echo "0.005 * $(SAMPFREQ)" | bc -l`; \
+			$(STEP) -l `printf "%.0f" $${count}` | \
+			$(X2X) +fs > tmp.head; \
+			count=`echo "0.025 * $(SAMPFREQ)" | bc -l`; \
+			$(STEP) -l `printf "%.0f" $${count}` | \
+			$(X2X) +fs > tmp.tail; \
+			cat tmp.head $${raw} tmp.tail > tmp; \
+			$(TCLSH) scripts/get_str.tcl -l -H $(UPPERF0) -L $(LOWERF0) -p $(FRAMESHIFT) -r $(SAMPFREQ) -f $(STRORDER) tmp | \
+			$(X2X) +af > str/$${base}.str; \
+		fi; \
+	done
+	rm -f tmp tmp.head tmp.tail
+
+
+
+# Mary added mag for mixed excitation: extract Fourier magnitudes 
+mag:
+	# Extracts first the residual from inverse filtering using SPTK, then it uses snack to
+        # extract F0 and with this values searchs for the first ten or more harmonics. 
+	mkdir -p mag
+	for raw in raw/*.raw; do \
+		base=`basename $${raw} .raw`; \
+		if [ -s $${raw} ]; then \
+			echo "Extracting Fourier magnitudes from $${raw}"; \
+			count=`echo "0.005 * $(SAMPFREQ)" | bc -l`; \
+			$(STEP) -l `printf "%.0f" $${count}` | \
+			$(X2X) +fs > tmp.head; \
+			count=`echo "0.015 * $(SAMPFREQ)" | bc -l`; \
+			$(STEP) -l `printf "%.0f" $${count}` | \
+			$(X2X) +fs > tmp.tail; \
+			cat tmp.head $${raw} tmp.tail > tmp.raw; \
+			if [ $(BYTESWAP) -eq 1 ]; then \
+				$(SWAB) +s tmp.raw | $(X2X) +sf > tmp;  \
+			else \
+				$(X2X) +sf tmp.raw > tmp; \
+			fi; \
+			#echo "Using inverse filtering to extract a residual signal from $${raw}"; \
+			$(FRAME) +f -p $(FRAMESHIFT) tmp | \
+			$(WINDOW) -w $(WINDOWTYPE) -n $(NORMALIZE) | \
+			$(GCEP) -c 2 -m $(MGCORDER) > tmp.gcep; \
+			$(IGLSADF) -k -c 2 -m $(MGCORDER) -p $(FRAMESHIFT) tmp.gcep < tmp > tmp.res; \
+			$(TCLSH) scripts/get_mag.tcl -l -H $(UPPERF0) -L $(LOWERF0) -m $(MAGORDER) -p $(FRAMESHIFT) -r $(SAMPFREQ) tmp.raw tmp.res | \
+			$(X2X) +af > mag/$${base}.mag; \
+		fi; \
+	done
+	rm -f tmp tmp.head tmp.tail tmp.res tmp.raw tmp.head tmp.gcep
+
+
 cmp: 
 	# Composing training data files from mgc and lf0 files
 	mkdir -p cmp
@@ -180,7 +260,7 @@ cmp: 
 		MGCWINDIM=`expr $(NMGCWIN) \* $${MGCDIM}`; \
 		LF0WINDIM=`expr $(NLF0WIN) \* $${LF0DIM}`; \
 		BYTEPERFRAME=`expr 4 \* \( $${MGCWINDIM} + $${LF0WINDIM} \)`; \
-		for mgc in mgc/$(DATASET)_$(SPEAKER)_*.mgc; do \
+		for mgc in mgc/*.mgc; do \
 			base=`basename $${mgc} .mgc`; \
 			MGCWINS=""; \
 			LF0WINS=""; \
@@ -205,16 +285,100 @@ cmp: 
 	done
 	rm -f cmp/tmp*
 
+
+# Mary added str and mag for mixed excitation
+cmp-mary: 
+	# Composing training data files from mgc, lf0, str and mag files
+	mkdir -p cmp
+	for j in 1; do \
+		MGCDIM=`expr $(MGCORDER) + 1`; \
+		LF0DIM=1; \
+                STRDIM=$(STRORDER); \
+		MAGDIM=$(MAGORDER); \
+                echo "STRDIM=$${STRDIM}"; \
+		echo "MAGDIM=$${MAGDIM}"; \
+		MGCWINDIM=`expr $(NMGCWIN) \* $${MGCDIM}`; \
+		LF0WINDIM=`expr $(NLF0WIN) \* $${LF0DIM}`; \
+                STRWINDIM=`expr $(NSTRWIN) \* $${STRDIM}`; \
+		MAGWINDIM=`expr $(NMAGWIN) \* $${MAGDIM}`; \
+                MGCPLUSLF0=`expr $${MGCWINDIM} + $${LF0WINDIM}`; \
+		MGCPLUSLF0PLUSSTR=`expr $${MGCWINDIM} + $${LF0WINDIM} + $${STRWINDIM}`; \
+                echo "MGCWINDIM=$${MGCWINDIM}"; \
+                echo "LF0WINDIM=$${LF0WINDIM}"; \
+                echo "STRWINDIM=$${STRWINDIM}"; \
+		echo "MAGWINDIM=$${MAGWINDIM}"; \
+                echo "MGCPLUSLF0=$${MGCPLUSLF0}"; \
+		echo "MGCPLUSLF0PLUSSTR=$${MGCPLUSLF0PLUSSTR}"; \
+		BYTEPERFRAME=`expr 4 \* \( $${MGCWINDIM} + $${LF0WINDIM} + $${STRWINDIM} + $${MAGWINDIM} \)`; \
+                echo "BYTEPERFRAME=$${BYTEPERFRAME}"; \
+		#for mcp in mcp/*.mcp; do \
+		for mgc in mgc/*.mgc; do \
+			base=`basename $${mgc} .mgc`; \
+			MGCWINS=""; \
+			LF0WINS=""; \
+			STRWINS=""; \
+			MAGWINS=""; \
+			if [ -s $${mgc} -a -s lf0/$${base}.lf0 -a -s str/$${base}.str -a -s mag/$${base}.mag ]; then \
+                                # for mgc \
+				i=1; \
+				echo "Composing training data (mgc+lf0+str+mag) for $${base}"; \
+				while [ $${i} -le $(NMGCWIN) ]; do \
+					eval MGCWINS=\"$${MGCWINS} $(MGCWIN)$${i}\"; \
+					i=`expr $${i} + 1`; \
+				done; \
+				$(PERL) scripts/window.pl $${MGCDIM} $${mgc} $${MGCWINS} > cmp/tmp.mgc; \
+                                # for lf0 \
+				i=1; \
+				while [ $${i} -le $(NLF0WIN) ]; do \
+					eval LF0WINS=\"$${LF0WINS} $(LF0WIN)$${i}\"; \
+					i=`expr $${i} + 1`; \
+				done; \
+				$(PERL) scripts/window.pl $${LF0DIM} lf0/$${base}.lf0 $${LF0WINS} > cmp/tmp.lf0; \
+                                # for strengths \
+				i=1; \
+				while [ $${i} -le $(NSTRWIN) ]; do \
+					eval STRWINS=\"$${STRWINS} $(STRWIN)$${i}\"; \
+					i=`expr $${i} + 1`; \
+				done; \
+                                #echo "STRWINS=$${STRWINS}"; \
+				$(PERL) scripts/window.pl $${STRDIM} str/$${base}.str $${STRWINS} > cmp/tmp.str; \
+                                # for Fourier magnitudes \
+				i=1; \
+				while [ $${i} -le $(NMAGWIN) ]; do \
+					eval MAGWINS=\"$${MAGWINS} $(MAGWIN)$${i}\"; \
+					i=`expr $${i} + 1`; \
+				done; \
+                                #echo "MAGWINS=$${MAGWINS}"; \
+				$(PERL) scripts/window.pl $${MAGDIM} mag/$${base}.mag $${MAGWINS} > cmp/tmp.mag; \
+                                # now merge temporary files: tmp.mgc, tmp.lf0, tmp.str, tmp.mag  \
+				$(MERGE) +f -s 0 -l $${LF0WINDIM} -L $${MGCWINDIM} cmp/tmp.mgc < cmp/tmp.lf0 > cmp/tmp.cmp1; \
+                                $(MERGE) +f -s 0 -l $${STRWINDIM} -L $${MGCPLUSLF0} cmp/tmp.cmp1 < cmp/tmp.str > cmp/tmp.cmp2; \
+				$(MERGE) +f -s 0 -l $${MAGWINDIM} -L $${MGCPLUSLF0PLUSSTR} cmp/tmp.cmp2 < cmp/tmp.mag > cmp/tmp.cmp; \
+                                # add HTK header \
+				$(PERL) scripts/addhtkheader.pl $(SAMPFREQ) $(FRAMESHIFT) $${BYTEPERFRAME} 9 cmp/tmp.cmp > cmp/$${base}.cmp; \
+			fi; \
+		done; \
+	done
+	rm -f cmp/tmp*
+
+
+# Added calculation of gv for str and mag, just to avoid errors when generating parameters with HMGenS (In Mary they are not used)
 gv:
 	mkdir -p gv
-	rm -f gvdata_mgc gvdata_lf0
+	rm -f gvdata_mgc gvdata_str gvdata_mag gvdata_lf0
 
 	# generating GV data
-	for raw in raw/$(DATASET)_$(SPEAKER)_*.raw; do \
+	for raw in raw/*.raw; do \
 		base=`basename $${raw} .raw`; \
 		if [ -s mgc/$${base}.mgc ]; then \
 			$(VSTAT) -n $(MGCORDER) -o 2 -d mgc/$${base}.mgc >> gvdata_mgc; \
 		fi; \
+		if [ -s str/$${base}.str ]; then \
+			$(VSTAT) -l $(STRORDER) -o 2 -d str/$${base}.str >> gvdata_str; \
+		fi; \
+		if [ -s mag/$${base}.mag ]; then \
+			$(VSTAT) -l $(MAGORDER) -o 2 -d mag/$${base}.mag >> gvdata_mag; \
+		fi; \
 		if [ -s lf0/$${base}.lf0 ]; then \
 			$(X2X) +fa lf0/$${base}.lf0 | grep -v '\-1e+10' | $(X2X) +af | $(VSTAT) -l 1 -o 2 -d >> gvdata_lf0; \
 		fi; \
@@ -222,6 +386,8 @@ gv:
 	
 	# calculating GV pdfs
 	$(VSTAT) -n $(MGCORDER) -o 0 -d gvdata_mgc > gv/gv-mgc.pdf
+	$(VSTAT) -l $(STRORDER) -o 0 -d gvdata_str > gv/gv-str.pdf; \
+	$(VSTAT) -l $(MAGORDER) -o 0 -d gvdata_mag > gv/gv-mag.pdf; \
 	$(VSTAT) -l 1 -o 0 -d gvdata_lf0 > gv/gv-lf0.pdf
 
 	# GV pdfs in big endian (for hts_engine)
@@ -232,6 +398,12 @@ gv:
 		echo $${MGCDIM} | $(X2X) +ai >  gv/gv-mgc.pdf.big; \
 		echo "1"        | $(X2X) +ai >> gv/gv-mgc.pdf.big; \
 		cat  gv/gv-mgc.pdf           >> gv/gv-mgc.pdf.big; \
+		echo $${STRORDER} | $(X2X) +ai >  gv/gv-str.pdf.big; \
+		echo "1"          | $(X2X) +ai >> gv/gv-str.pdf.big; \
+		cat  gv/gv-str.pdf             >> gv/gv-str.pdf.big; \
+		echo $${MAGORDER} | $(X2X) +ai >  gv/gv-mag.pdf.big; \
+		echo "1"          | $(X2X) +ai >> gv/gv-mag.pdf.big; \
+		cat  gv/gv-mag.pdf             >> gv/gv-mag.pdf.big; \
 		echo $${LF0DIM} | $(X2X) +ai >  gv/gv-lf0.pdf.big; \
 		echo "1"        | $(X2X) +ai >> gv/gv-lf0.pdf.big; \
 		cat  gv/gv-lf0.pdf           >> gv/gv-lf0.pdf.big; \
@@ -241,18 +413,71 @@ gv:
 		echo $${MGCDIM} | $(X2X) +ai | $(SWAB) +f >  gv/gv-mgc.pdf.big; \
 		echo "1"        | $(X2X) +ai | $(SWAB) +f >> gv/gv-mgc.pdf.big; \
 		$(SWAB) +f gv/gv-mgc.pdf                  >> gv/gv-mgc.pdf.big; \
+		echo $${STRORDER} | $(X2X) +ai | $(SWAB) +f >  gv/gv-str.pdf.big; \
+		echo "1"          | $(X2X) +ai | $(SWAB) +f >> gv/gv-str.pdf.big; \
+		$(SWAB) +f gv/gv-str.pdf                    >> gv/gv-str.pdf.big; \
+		echo $${MAGORDER} | $(X2X) +ai | $(SWAB) +f >  gv/gv-mag.pdf.big; \
+		echo "1"          | $(X2X) +ai | $(SWAB) +f >> gv/gv-mag.pdf.big; \
+		$(SWAB) +f gv/gv-mag.pdf                    >> gv/gv-mag.pdf.big; \
 		echo $${LF0DIM} | $(X2X) +ai | $(SWAB) +f >  gv/gv-lf0.pdf.big; \
 		echo "1"        | $(X2X) +ai | $(SWAB) +f >> gv/gv-lf0.pdf.big; \
 		$(SWAB) +f gv/gv-lf0.pdf                  >> gv/gv-lf0.pdf.big; \
 	fi; \
-	rm -f gvdata_mgc gvdata_lf0
+	rm -f gvdata_mgc gvdata_str gvdata_mag gvdata_lf0
 
+
+
+# Calculating GV and saving in Mary format.
+# When calculating mean and variances for str, use the option -l $(STRORDER)
+# because -n option is order of vector which is (l-1)
+# The pdf's created are big-endian, here it is used swab to convert them
+# to little endian (files gv-*-littend.pdf), it is added a header of 1 short 
+# to indicate the order of the vectors.
+gv-mary:
+	mkdir -p gv
+	rm -f gvdata_mgc gvdata_str gvdata_lf0
+
+	for raw in raw/*.raw; do \
+		base=`basename $${raw} .raw`; \
+		if [ -s mgc/$${base}.mgc ]; then \
+			$(VSTAT) -n $(MGCORDER) -o 2 -d mgc/$${base}.mgc >> gvdata_mgc; \
+		fi; \
+		if [ -s str/$${base}.str ]; then \
+			$(VSTAT) -l $(STRORDER) -o 2 -d str/$${base}.str >> gvdata_str; \
+		fi; \
+		if [ -s mag/$${base}.mag ]; then \
+			$(VSTAT) -l $(MAGORDER) -o 2 -d mag/$${base}.mag >> gvdata_mag; \
+		fi; \
+		if [ -s lf0/$${base}.lf0 ]; then \
+			$(X2X) +fa lf0/$${base}.lf0 | grep -v '\-1e+10' | $(X2X) +af | $(VSTAT) -l 1 -o 2 -d >> gvdata_lf0; \
+		fi; \
+	done
+	MGCDIM=`expr $(MGCORDER) + 1`; \
+	echo "$${MGCDIM}"; \
+	$(VSTAT) -n $(MGCORDER) -o 0 -d gvdata_mgc > gv/gv-mgc.pdf; \
+	echo "$${MGCDIM}" | $(X2X) +as | $(SWAB) +s > gv/gv-mgc-littend.pdf; \
+	$(SWAB) +f gv/gv-mgc.pdf >> gv/gv-mgc-littend.pdf; \
+	$(VSTAT) -l $(STRORDER) -o 0 -d gvdata_str > gv/gv-str.pdf; \
+	echo $(STRORDER) | $(X2X) +as | $(SWAB) +s  > gv/gv-str-littend.pdf; \
+	$(SWAB) +f gv/gv-str.pdf >> gv/gv-str-littend.pdf; \
+        $(VSTAT) -l $(MAGORDER) -o 0 -d gvdata_mag > gv/gv-mag.pdf; \
+	echo $(MAGORDER) | $(X2X) +as | $(SWAB) +s  > gv/gv-mag-littend.pdf; \
+	$(SWAB) +f gv/gv-mag.pdf >> gv/gv-mag-littend.pdf; \
+	$(VSTAT) -l 1           -o 0 -d gvdata_lf0 > gv/gv-lf0.pdf; \
+	echo 1 | $(X2X) +as | $(SWAB) +s > gv/gv-lf0-littend.pdf; \
+	$(SWAB) +f gv/gv-lf0.pdf >> gv/gv-lf0-littend.pdf; \
+	
+	rm -f gvdata_mgc gvdata_str gvdata_mag gvdata_lf0; \
+   
+
+
+# Festival label
 label:
 	mkdir -p labels/mono
 	mkdir -p labels/full
 
 	# Extracting monophone and fullcontext labels from utterance files
-	for utt in utts/$(DATASET)_$(SPEAKER)_*.utt; do \
+	for utt in utts/*.utt; do \
 		base=`basename $${utt} .utt`; \
 		if [ -s $${utt} ]; then \
 			$(DUMPFEATS)    -eval     scripts/extra_feats.scm \
@@ -266,20 +491,58 @@ label:
 	done
 	rm -f tmp
 
+
+
+# Mary label
+label-mary:
+	mkdir -p labels/mono
+	mkdir -p labels/full
+
+	# Extracting monophone and fullcontext labels from phonelab and phonefeature files        
+	#for utt in phonelab/*.lab; do \
+	for utt in phonelab/*.lab; do \
+            base=`basename $${utt} .lab`; \
+            echo "Extracting monophone and fullcontext labels from phonelab/$${base}.lab and phonefeatures/$${base}.pfeats"; \
+  	    $(PERL) scripts/make_labels_mono.pl $(FEATURELIST) phonelab/$${base}.lab  >  labels/mono/$${base}.lab; \
+	    $(PERL) scripts/make_labels_full.pl $(FEATURELIST) phonefeatures/$${base}.pfeats  phonelab/$${base}.lab >  labels/full/$${base}.lab; \
+	done
+
+	# Extracting fullcontext labels from phonelab and phonefeature files for examples of synthesized utterances
+	mkdir -p labels/gen
+	for utt in phonefeatures/gen/*.pfeats; do \
+		base=`basename $${utt} .pfeats`; \
+		echo "Extracting fullcontext labels from phonelab/$${base}.pfeats for the synthesized utterances"; \
+		$(PERL) scripts/make_labels_full.pl $(FEATURELIST) phonefeatures/gen/$${base}.pfeats  >  labels/gen/gen_$${base}.lab; \
+	done
+
+
+count-mary:
+	# Counting the phone occurrences and extracting the phonesets
+	mkdir -p count
+
+	# Phone counts for one speaker
+	cat labels/mono/*.lab | $(PERL) -ane 'if ( s/^\s*[0-9]+\s+[0-9]+\s+(.*)$$/$$1/g ) { print; }' | sort | uniq -c > count/mono_count_all.txt; \
+	cat labels/full/*.lab | $(PERL) -ane 'if ( s/^\s*[0-9]+\s+[0-9]+\s+(.*)$$/$$1/g ) { print; }' | sort | uniq -c > count/full_count_all.txt; \
+
+	# Extracting the phoneme sets
+	cat count/mono_count_all.txt | $(PERL) -ane 's/^\s*[0-9]+\s+(.*)$$/$$1/g; print' | sort | uniq > count/mono_set_all.txt;
+
+
+
 mlf:
 	# Generating monophone and fullcontext Master Label Files (MLF)
 	echo "#!MLF!#" > labels/mono.mlf
-	echo "\"*/$(DATASET)_$(SPEAKER)_*.lab\" -> \"@PWD@/data/labels/mono\"" >> labels/mono.mlf
+	echo "\"*/*.lab\" -> \"@PWD@/data/labels/mono\"" >> labels/mono.mlf
 
 	echo "#!MLF!#" > labels/full.mlf
-	echo "\"*/$(DATASET)_$(SPEAKER)_*.lab\" -> \"@PWD@/data/labels/full\"" >> labels/full.mlf
+	echo "\"*/*.lab\" -> \"@PWD@/data/labels/full\"" >> labels/full.mlf
 
 list:
 	mkdir -p lists
 
 	# Generating a fullcntext model list occurred in the training data
 	rm -f tmp
-	for lab in labels/full/$(DATASET)_$(SPEAKER)_*.lab; do \
+	for lab in labels/full/*.lab; do \
 		if [ -s $${lab} -a -s labels/mono/`basename $${lab}` -a -s cmp/`basename $${lab} .lab`.cmp ]; then \
 			sed -e "s/.* //g" $${lab} >> tmp; \
 		fi \
@@ -298,7 +561,7 @@ list:
 
 	# Generating a monophone list 
 	rm -f tmp
-	for lab in labels/mono/$(DATASET)_$(SPEAKER)_*.lab; do \
+	for lab in labels/mono/*.lab; do \
 		if [ -s $${lab} -a -s labels/full/`basename $${lab}` -a -s cmp/`basename $${lab} .lab`.cmp ]; then \
 			sed -e "s/.* //g" $${lab} >> tmp; \
 		fi \
@@ -311,7 +574,7 @@ scp:
 	
 	# Generating a trainig data script
 	rm -f scp/train.scp
-	for cmp in @PWD@/data/cmp/$(DATASET)_$(SPEAKER)_*.cmp; do \
+	for cmp in @PWD@/data/cmp/*.cmp; do \
 		if [ -s $${cmp} -a -s labels/mono/`basename $${cmp} .cmp`.lab -a -s labels/full/`basename $${cmp} .cmp`.lab ]; then \
 			echo $${cmp} >> scp/train.scp; \
 		fi \
@@ -326,12 +589,21 @@ scp:
 
 clean: clean-mgc clean-lf0 clean-cmp clean-gv clean-label clean-mlf clean-list clean-scp
 
+clean-mary: clean-mgc clean-lf0 clean-str clean-mag clean-cmp clean-gv clean-label clean-count clean-questions clean-mlf clean-list clean-scp
+
+
 clean-mgc:
 	rm -rf mgc
 
 clean-lf0:
 	rm -rf lf0
 
+clean-str:
+	rm -rf str
+
+clean-mag:
+	rm -rf mag
+
 clean-cmp:
 	rm -rf cmp
 
@@ -342,6 +614,12 @@ clean-label:
 	rm -rf labels/mono
 	rm -rf labels/full
 
+clean-count:
+	rm -rf count
+
+clean-questions:
+	rm -rf questions
+
 clean-mlf:
 	rm -f labels/*.mlf
 	
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/questions/questions_qst001.hed HTS-demo_CMU-ARCTIC-SLT-mary/data/questions/questions_qst001.hed
--- HTS-demo_CMU-ARCTIC-SLT/data/questions/questions_qst001.hed	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/questions/questions_qst001.hed	1970-01-01 01:00:00.000000000 +0100
@@ -1,1673 +0,0 @@
-QS "LL-Vowel"				{aa^*,ae^*,ah^*,ao^*,aw^*,ax^*,axr^*,ay^*,eh^*,el^*,em^*,en^*,er^*,ey^*,ih^*,ix^*,iy^*,ow^*,oy^*,uh^*,uw^*}
-QS "LL-Consonant"			{b^*,ch^*,d^*,dh^*,dx^*,f^*,g^*,hh^*,hv^*,jh^*,k^*,l^*,m^*,n^*,nx^*,ng^*,p^*,r^*,s^*,sh^*,t^*,th^*,v^*,w^*,y^*,z^*,zh^*}
-QS "LL-Stop"				{b^*,d^*,dx^*,g^*,k^*,p^*,t^*}
-QS "LL-Nasal"				{m^*,n^*,en^*,ng^*}
-QS "LL-Fricative"			{ch^*,dh^*,f^*,hh^*,hv^*,s^*,sh^*,th^*,v^*,z^*,zh^*}
-QS "LL-Liquid"				{el^*,hh^*,l^*,r^*,w^*,y^*}
-QS "LL-Front"				{ae^*,b^*,eh^*,em^*,f^*,ih^*,ix^*,iy^*,m^*,p^*,v^*,w^*}
-QS "LL-Central"				{ah^*,ao^*,axr^*,d^*,dh^*,dx^*,el^*,en^*,er^*,l^*,n^*,r^*,s^*,t^*,th^*,z^*,zh^*}
-QS "LL-Back"				{aa^*,ax^*,ch^*,g^*,hh^*,jh^*,k^*,ng^*,ow^*,sh^*,uh^*,uw^*,y^*}
-QS "LL-Front_Vowel"			{ae^*,eh^*,ey^*,ih^*,iy^*}
-QS "LL-Central_Vowel"		{aa^*,ah^*,ao^*,axr^*,er^*}
-QS "LL-Back_Vowel"			{ax^*,ow^*,uh^*,uw^*}
-QS "LL-Long_Vowel"			{ao^*,aw^*,el^*,em^*,en^*,en^*,iy^*,ow^*,uw^*}
-QS "LL-Short_Vowel"			{aa^*,ah^*,ax^*,ay^*,eh^*,ey^*,ih^*,ix^*,oy^*,uh^*}
-QS "LL-Dipthong_Vowel"		{aw^*,axr^*,ay^*,el^*,em^*,en^*,er^*,ey^*,oy^*}
-QS "LL-Front_Start_Vowel"	{aw^*,axr^*,er^*,ey^*}
-QS "LL-Fronting_Vowel"		{ay^*,ey^*,oy^*}
-QS "LL-High_Vowel"			{ih^*,ix^*,iy^*,uh^*,uw^*}
-QS "LL-Medium_Vowel"		{ae^*,ah^*,ax^*,axr^*,eh^*,el^*,em^*,en^*,er^*,ey^*,ow^*}
-QS "LL-Low_Vowel"			{aa^*,ae^*,ah^*,ao^*,aw^*,ay^*,oy^*}
-QS "LL-Rounded_Vowel"		{ao^*,ow^*,oy^*,uh^*,uw^*,w^*}
-QS "LL-Unrounded_Vowel"		{aa^*,ae^*,ah^*,aw^*,ax^*,axr^*,ay^*,eh^*,el^*,em^*,en^*,er^*,ey^*,hh^*,ih^*,ix^*,iy^*,l^*,r^*,y^*}
-QS "LL-Reduced_Vowel"		{ax^*,axr^*,ix^*}
-QS "LL-IVowel"				{ih^*,ix^*,iy^*}
-QS "LL-EVowel"				{eh^*,ey^*}
-QS "LL-AVowel"				{aa^*,ae^*,aw^*,axr^*,ay^*,er^*}
-QS "LL-OVowel"				{ao^*,ow^*,oy^*}
-QS "LL-UVowel"				{ah^*,ax^*,el^*,em^*,en^*,uh^*,uw^*}
-QS "LL-Unvoiced_Consonant"	{ch^*,f^*,hh^*,k^*,p^*,s^*,sh^*,t^*,th^*}
-QS "LL-Voiced_Consonant"	{b^*,d^*,dh^*,dx^*,el^*,em^*,en^*,g^*,jh^*,l^*,m^*,n^*,ng^*,r^*,v^*,w^*,y^*}
-QS "LL-Front_Consonant"		{b^*,em^*,f^*,m^*,p^*,v^*,w^*}
-QS "LL-Central_Consonant"	{d^*,dh^*,dx^*,el^*,en^*,l^*,n^*,r^*,s^*,t^*,th^*,z^*,zh^*}
-QS "LL-Back_Consonant"		{ch^*,g^*,hh^*,jh^*,k^*,ng^*,sh^*,y^*}
-QS "LL-Fortis_Consonant"	{ch^*,f^*,k^*,p^*,s^*,sh^*,t^*,th^*}
-QS "LL-Lenis_Consonant"		{b^*,d^*,dh^*,g^*,jh^*,v^*,z^*,zh^*}
-QS "LL-Neigther_F_or_L"		{el^*,em^*,en^*,hh^*,l^*,m^*,n^*,ng^*,r^*,w^*,y^*}
-QS "LL-Coronal_Consonant"	{ch^*,d^*,dh^*,dx^*,el^*,en^*,jh^*,l^*,n^*,r^*,s^*,sh^*,t^*,th^*,z^*,zh^*}
-QS "LL-Non_Coronal"			{b^*,em^*,f^*,g^*,hh^*,k^*,m^*,ng^*,p^*,v^*,w^*,y^*}
-QS "LL-Anterior_Consonant"	{b^*,d^*,dh^*,dx^*,el^*,em^*,en^*,f^*,l^*,m^*,n^*,p^*,s^*,t^*,th^*,v^*,w^*,z^*}
-QS "LL-Non_Anterior"		{ch^*,g^*,hh^*,jh^*,k^*,ng^*,r^*,sh^*,y^*,zh^*}
-QS "LL-Continuent"			{dh^*,el^*,em^*,en^*,f^*,hh^*,l^*,m^*,n^*,ng^*,r^*,s^*,sh^*,th^*,v^*,w^*,y^*,z^*,zh^*}
-QS "LL-No_Continuent"		{b^*,ch^*,d^*,g^*,jh^*,k^*,p^*,t^*}
-QS "LL-Positive_Strident"	{ch^*,jh^*,s^*,sh^*,z^*,zh^*}
-QS "LL-Negative_Strident"	{dh^*,f^*,hh^*,th^*,v^*}
-QS "LL-Neutral_Strident"	{b^*,d^*,el^*,em^*,en^*,g^*,k^*,l^*,m^*,n^*,ng^*,p^*,r^*,t^*,w^*,y^*}
-QS "LL-Glide"				{hh^*,l^*,el^*,r^*,y^*,w^*}
-QS "LL-Syllabic_Consonant"	{axr^*,el^*,em^*,en^*,er^*}
-QS "LL-Voiced_Stop"			{b^*,d^*,g^*}
-QS "LL-Unvoiced_Stop"		{p^*,t^*,k^*}
-QS "LL-Front_Stop"			{b^*,p^*}
-QS "LL-Central_Stop"		{d^*,t^*}
-QS "LL-Back_Stop"			{g^*,k^*}
-QS "LL-Voiced_Fricative"	{jh^*,dh^*,v^*,z^*,zh^*}
-QS "LL-Unvoiced_Fricative"	{ch^*,f^*,s^*,sh^*,th^*}
-QS "LL-Front_Fricative"		{f^*,v^*}
-QS "LL-Central_Fricative"	{dh^*,s^*,th^*,z^*}
-QS "LL-Back_Fricative"		{ch^*,jh^*,sh^*,zh^*}
-QS "LL-Affricate_Consonant"	{ch^*,jh^*}
-QS "LL-Not_Affricate"		{dh^*,f^*,s^*,sh^*,th^*,v^*,z^*,zh^*}
-QS "LL-silences"			{pau^*,h#^*,brth^*}
-QS "LL-aa"					{aa^*}
-QS "LL-ae"					{ae^*}
-QS "LL-ah"					{ah^*}
-QS "LL-ao"					{ao^*}
-QS "LL-aw"					{aw^*}
-QS "LL-ax"					{ax^*}
-QS "LL-axr"					{axr^*}
-QS "LL-ay"					{ay^*}
-QS "LL-b"					{b^*}
-QS "LL-ch"					{ch^*}
-QS "LL-d"					{d^*}
-QS "LL-dh"					{dh^*}
-QS "LL-dx"					{dx^*}
-QS "LL-eh"					{eh^*}
-QS "LL-el"					{el^*}
-QS "LL-em"					{em^*}
-QS "LL-en"					{en^*}
-QS "LL-er"					{er^*}
-QS "LL-ey"					{ey^*}
-QS "LL-f"					{f^*}
-QS "LL-g"					{g^*}
-QS "LL-hh"					{hh^*}
-QS "LL-hv"					{hv^*}
-QS "LL-ih"					{ih^*}
-QS "LL-iy"					{iy^*}
-QS "LL-jh"					{jh^*}
-QS "LL-k"					{k^*}
-QS "LL-l"					{l^*}
-QS "LL-m"					{m^*}
-QS "LL-n"					{n^*}
-QS "LL-nx"					{nx^*}
-QS "LL-ng"					{ng^*}
-QS "LL-ow"					{ow^*}
-QS "LL-oy"					{oy^*}
-QS "LL-p"					{p^*}
-QS "LL-r"					{r^*}
-QS "LL-s"					{s^*}
-QS "LL-sh"					{sh^*}
-QS "LL-t"					{t^*}
-QS "LL-th"					{th^*}
-QS "LL-uh"					{uh^*}
-QS "LL-uw"					{uw^*}
-QS "LL-v"					{v^*}
-QS "LL-w"					{w^*}
-QS "LL-y"					{y^*}
-QS "LL-z"					{z^*}
-QS "LL-zh"					{zh^*}
-QS "LL-pau"					{pau^*}
-QS "LL-h#"					{h#^*}
-QS "LL-brth"				{brth^*}
-
-
-QS "L-Vowel"				{*^aa-*,*^ae-*,*^ah-*,*^ao-*,*^aw-*,*^ax-*,*^axr-*,*^ay-*,*^eh-*,*^el-*,*^em-*,*^en-*,*^er-*,*^ey-*,*^ih-*,*^ix-*,*^iy-*,*^ow-*,*^oy-*,*^uh-*,*^uw-*}
-QS "L-Consonant"			{*^b-*,*^ch-*,*^d-*,*^dh-*,*^dx-*,*^f-*,*^g-*,*^hh-*,*^hv-*,*^jh-*,*^k-*,*^l-*,*^m-*,*^n-*,*^nx-*,*^ng-*,*^p-*,*^r-*,*^s-*,*^sh-*,*^t-*,*^th-*,*^v-*,*^w-*,*^y-*,*^z-*,*^zh-*}
-QS "L-Stop"					{*^b-*,*^d-*,*^dx-*,*^g-*,*^k-*,*^p-*,*^t-*}
-QS "L-Nasal"				{*^m-*,*^n-*,*^en-*,*^ng-*}
-QS "L-Fricative"			{*^ch-*,*^dh-*,*^f-*,*^hh-*,*^hv-*,*^s-*,*^sh-*,*^th-*,*^v-*,*^z-*,*^zh-*}
-QS "L-Liquid"				{*^el-*,*^hh-*,*^l-*,*^r-*,*^w-*,*^y-*}
-QS "L-Front"				{*^ae-*,*^b-*,*^eh-*,*^em-*,*^f-*,*^ih-*,*^ix-*,*^iy-*,*^m-*,*^p-*,*^v-*,*^w-*}
-QS "L-Central"				{*^ah-*,*^ao-*,*^axr-*,*^d-*,*^dh-*,*^dx-*,*^el-*,*^en-*,*^er-*,*^l-*,*^n-*,*^r-*,*^s-*,*^t-*,*^th-*,*^z-*,*^zh-*}
-QS "L-Back"					{*^aa-*,*^ax-*,*^ch-*,*^g-*,*^hh-*,*^jh-*,*^k-*,*^ng-*,*^ow-*,*^sh-*,*^uh-*,*^uw-*,*^y-*}
-QS "L-Front_Vowel"			{*^ae-*,*^eh-*,*^ey-*,*^ih-*,*^iy-*}
-QS "L-Central_Vowel"		{*^aa-*,*^ah-*,*^ao-*,*^axr-*,*^er-*}
-QS "L-Back_Vowel"			{*^ax-*,*^ow-*,*^uh-*,*^uw-*}
-QS "L-Long_Vowel"			{*^ao-*,*^aw-*,*^el-*,*^em-*,*^en-*,*^en-*,*^iy-*,*^ow-*,*^uw-*}
-QS "L-Short_Vowel"			{*^aa-*,*^ah-*,*^ax-*,*^ay-*,*^eh-*,*^ey-*,*^ih-*,*^ix-*,*^oy-*,*^uh-*}
-QS "L-Dipthong_Vowel"		{*^aw-*,*^axr-*,*^ay-*,*^el-*,*^em-*,*^en-*,*^er-*,*^ey-*,*^oy-*}
-QS "L-Front_Start_Vowel"	{*^aw-*,*^axr-*,*^er-*,*^ey-*}
-QS "L-Fronting_Vowel"		{*^ay-*,*^ey-*,*^oy-*}
-QS "L-High_Vowel"			{*^ih-*,*^ix-*,*^iy-*,*^uh-*,*^uw-*}
-QS "L-Medium_Vowel"			{*^ae-*,*^ah-*,*^ax-*,*^axr-*,*^eh-*,*^el-*,*^em-*,*^en-*,*^er-*,*^ey-*,*^ow-*}
-QS "L-Low_Vowel"			{*^aa-*,*^ae-*,*^ah-*,*^ao-*,*^aw-*,*^ay-*,*^oy-*}
-QS "L-Rounded_Vowel"		{*^ao-*,*^ow-*,*^oy-*,*^uh-*,*^uw-*,*^w-*}
-QS "L-Unrounded_Vowel"		{*^aa-*,*^ae-*,*^ah-*,*^aw-*,*^ax-*,*^axr-*,*^ay-*,*^eh-*,*^el-*,*^em-*,*^en-*,*^er-*,*^ey-*,*^hh-*,*^ih-*,*^ix-*,*^iy-*,*^l-*,*^r-*,*^y-*}
-QS "L-Reduced_Vowel"		{*^ax-*,*^axr-*,*^ix-*}
-QS "L-IVowel"				{*^ih-*,*^ix-*,*^iy-*}
-QS "L-EVowel"				{*^eh-*,*^ey-*}
-QS "L-AVowel"				{*^aa-*,*^ae-*,*^aw-*,*^axr-*,*^ay-*,*^er-*}
-QS "L-OVowel"				{*^ao-*,*^ow-*,*^oy-*}
-QS "L-UVowel"				{*^ah-*,*^ax-*,*^el-*,*^em-*,*^en-*,*^uh-*,*^uw-*}
-QS "L-Unvoiced_Consonant"	{*^ch-*,*^f-*,*^hh-*,*^k-*,*^p-*,*^s-*,*^sh-*,*^t-*,*^th-*}
-QS "L-Voiced_Consonant"		{*^b-*,*^d-*,*^dh-*,*^dx-*,*^el-*,*^em-*,*^en-*,*^g-*,*^jh-*,*^l-*,*^m-*,*^n-*,*^ng-*,*^r-*,*^v-*,*^w-*,*^y-*}
-QS "L-Front_Consonant"		{*^b-*,*^em-*,*^f-*,*^m-*,*^p-*,*^v-*,*^w-*}
-QS "L-Central_Consonant"	{*^d-*,*^dh-*,*^dx-*,*^el-*,*^en-*,*^l-*,*^n-*,*^r-*,*^s-*,*^t-*,*^th-*,*^z-*,*^zh-*}
-QS "L-Back_Consonant"		{*^ch-*,*^g-*,*^hh-*,*^jh-*,*^k-*,*^ng-*,*^sh-*,*^y-*}
-QS "L-Fortis_Consonant"		{*^ch-*,*^f-*,*^k-*,*^p-*,*^s-*,*^sh-*,*^t-*,*^th-*}
-QS "L-Lenis_Consonant"		{*^b-*,*^d-*,*^dh-*,*^g-*,*^jh-*,*^v-*,*^z-*,*^zh-*}
-QS "L-Neigther_F_or_L"		{*^el-*,*^em-*,*^en-*,*^hh-*,*^l-*,*^m-*,*^n-*,*^ng-*,*^r-*,*^w-*,*^y-*}
-QS "L-Coronal_Consonant"	{*^ch-*,*^d-*,*^dh-*,*^dx-*,*^el-*,*^en-*,*^jh-*,*^l-*,*^n-*,*^r-*,*^s-*,*^sh-*,*^t-*,*^th-*,*^z-*,*^zh-*}
-QS "L-Non_Coronal"			{*^b-*,*^em-*,*^f-*,*^g-*,*^hh-*,*^k-*,*^m-*,*^ng-*,*^p-*,*^v-*,*^w-*,*^y-*}
-QS "L-Anterior_Consonant"	{*^b-*,*^d-*,*^dh-*,*^dx-*,*^el-*,*^em-*,*^en-*,*^f-*,*^l-*,*^m-*,*^n-*,*^p-*,*^s-*,*^t-*,*^th-*,*^v-*,*^w-*,*^z-*}
-QS "L-Non_Anterior"			{*^ch-*,*^g-*,*^hh-*,*^jh-*,*^k-*,*^ng-*,*^r-*,*^sh-*,*^y-*,*^zh-*}
-QS "L-Continuent"			{*^dh-*,*^el-*,*^em-*,*^en-*,*^f-*,*^hh-*,*^l-*,*^m-*,*^n-*,*^ng-*,*^r-*,*^s-*,*^sh-*,*^th-*,*^v-*,*^w-*,*^y-*,*^z-*,*^zh-*}
-QS "L-No_Continuent"		{*^b-*,*^ch-*,*^d-*,*^g-*,*^jh-*,*^k-*,*^p-*,*^t-*}
-QS "L-Positive_Strident"	{*^ch-*,*^jh-*,*^s-*,*^sh-*,*^z-*,*^zh-*}
-QS "L-Negative_Strident"	{*^dh-*,*^f-*,*^hh-*,*^th-*,*^v-*}
-QS "L-Neutral_Strident"		{*^b-*,*^d-*,*^el-*,*^em-*,*^en-*,*^g-*,*^k-*,*^l-*,*^m-*,*^n-*,*^ng-*,*^p-*,*^r-*,*^t-*,*^w-*,*^y-*}
-QS "L-Glide"				{*^hh-*,*^l-*,*^el-*,*^r-*,*^y-*,*^w-*}
-QS "L-Syllabic_Consonant"	{*^axr-*,*^el-*,*^em-*,*^en-*,*^er-*}
-QS "L-Voiced_Stop"			{*^b-*,*^d-*,*^g-*}
-QS "L-Unvoiced_Stop"		{*^p-*,*^t-*,*^k-*}
-QS "L-Front_Stop"			{*^b-*,*^p-*}
-QS "L-Central_Stop"			{*^d-*,*^t-*}
-QS "L-Back_Stop"			{*^g-*,*^k-*}
-QS "L-Voiced_Fricative"		{*^jh-*,*^dh-*,*^v-*,*^z-*,*^zh-*}
-QS "L-Unvoiced_Fricative"	{*^ch-*,*^f-*,*^s-*,*^sh-*,*^th-*}
-QS "L-Front_Fricative"		{*^f-*,*^v-*}
-QS "L-Central_Fricative"	{*^dh-*,*^s-*,*^th-*,*^z-*}
-QS "L-Back_Fricative"		{*^ch-*,*^jh-*,*^sh-*,*^zh-*}
-QS "L-Affricate_Consonant"	{*^ch-*,*^jh-*}
-QS "L-Not_Affricate"		{*^dh-*,*^f-*,*^s-*,*^sh-*,*^th-*,*^v-*,*^z-*,*^zh-*}
-QS "L-silences"				{*^pau-*,*^h#-*,*^brth-*}
-QS "L-aa"					{*^aa-*}
-QS "L-ae"					{*^ae-*}
-QS "L-ah"					{*^ah-*}
-QS "L-ao"					{*^ao-*}
-QS "L-aw"					{*^aw-*}
-QS "L-ax"					{*^ax-*}
-QS "L-axr"					{*^axr-*}
-QS "L-ay"					{*^ay-*}
-QS "L-b"					{*^b-*}
-QS "L-ch"					{*^ch-*}
-QS "L-d"					{*^d-*}
-QS "L-dh"					{*^dh-*}
-QS "L-dx"					{*^dx-*}
-QS "L-eh"					{*^eh-*}
-QS "L-el"					{*^el-*}
-QS "L-em"					{*^em-*}
-QS "L-en"					{*^en-*}
-QS "L-er"					{*^er-*}
-QS "L-ey"					{*^ey-*}
-QS "L-f"					{*^f-*}
-QS "L-g"					{*^g-*}
-QS "L-hh"					{*^hh-*}
-QS "L-hv"					{*^hv-*}
-QS "L-ih"					{*^ih-*}
-QS "L-iy"					{*^iy-*}
-QS "L-jh"					{*^jh-*}
-QS "L-k"					{*^k-*}
-QS "L-l"					{*^l-*}
-QS "L-m"					{*^m-*}
-QS "L-n"					{*^n-*}
-QS "L-nx"					{*^nx-*}
-QS "L-ng"					{*^ng-*}
-QS "L-ow"					{*^ow-*}
-QS "L-oy"					{*^oy-*}
-QS "L-p"					{*^p-*}
-QS "L-r"					{*^r-*}
-QS "L-s"					{*^s-*}
-QS "L-sh"					{*^sh-*}
-QS "L-t"					{*^t-*}
-QS "L-th"					{*^th-*}
-QS "L-uh"					{*^uh-*}
-QS "L-uw"					{*^uw-*}
-QS "L-v"					{*^v-*}
-QS "L-w"					{*^w-*}
-QS "L-y"					{*^y-*}
-QS "L-z"					{*^z-*}
-QS "L-zh"					{*^zh-*}
-QS "L-pau"					{*^pau-*}
-QS "L-h#"					{*^h#-*}
-QS "L-brth"					{*^brth-*}
-
-
-
-QS "C-Vowel"				{*-aa+*,*-ae+*,*-ah+*,*-ao+*,*-aw+*,*-ax+*,*-axr+*,*-ay+*,*-eh+*,*-el+*,*-em+*,*-en+*,*-er+*,*-ey+*,*-ih+*,*-ix+*,*-iy+*,*-ow+*,*-oy+*,*-uh+*,*-uw+*}
-QS "C-Consonant"			{*-b+*,*-ch+*,*-d+*,*-dh+*,*-dx+*,*-f+*,*-g+*,*-hh+*,*-hv+*,*-jh+*,*-k+*,*-l+*,*-m+*,*-n+*,*-nx+*,*-ng+*,*-p+*,*-r+*,*-s+*,*-sh+*,*-t+*,*-th+*,*-v+*,*-w+*,*-y+*,*-z+*,*-zh+*}
-QS "C-Stop"					{*-b+*,*-d+*,*-dx+*,*-g+*,*-k+*,*-p+*,*-t+*}
-QS "C-Nasal"				{*-m+*,*-n+*,*-en+*,*-ng+*}
-QS "C-Fricative"			{*-ch+*,*-dh+*,*-f+*,*-hh+*,*-hv+*,*-s+*,*-sh+*,*-th+*,*-v+*,*-z+*,*-zh+*}
-QS "C-Liquid"				{*-el+*,*-hh+*,*-l+*,*-r+*,*-w+*,*-y+*}
-QS "C-Front"				{*-ae+*,*-b+*,*-eh+*,*-em+*,*-f+*,*-ih+*,*-ix+*,*-iy+*,*-m+*,*-p+*,*-v+*,*-w+*}
-QS "C-Central"				{*-ah+*,*-ao+*,*-axr+*,*-d+*,*-dh+*,*-dx+*,*-el+*,*-en+*,*-er+*,*-l+*,*-n+*,*-r+*,*-s+*,*-t+*,*-th+*,*-z+*,*-zh+*}
-QS "C-Back"					{*-aa+*,*-ax+*,*-ch+*,*-g+*,*-hh+*,*-jh+*,*-k+*,*-ng+*,*-ow+*,*-sh+*,*-uh+*,*-uw+*,*-y+*}
-QS "C-Front_Vowel"			{*-ae+*,*-eh+*,*-ey+*,*-ih+*,*-iy+*}
-QS "C-Central_Vowel"		{*-aa+*,*-ah+*,*-ao+*,*-axr+*,*-er+*}
-QS "C-Back_Vowel"			{*-ax+*,*-ow+*,*-uh+*,*-uw+*}
-QS "C-Long_Vowel"			{*-ao+*,*-aw+*,*-el+*,*-em+*,*-en+*,*-en+*,*-iy+*,*-ow+*,*-uw+*}
-QS "C-Short_Vowel"			{*-aa+*,*-ah+*,*-ax+*,*-ay+*,*-eh+*,*-ey+*,*-ih+*,*-ix+*,*-oy+*,*-uh+*}
-QS "C-Dipthong_Vowel"		{*-aw+*,*-axr+*,*-ay+*,*-el+*,*-em+*,*-en+*,*-er+*,*-ey+*,*-oy+*}
-QS "C-Front_Start_Vowel"	{*-aw+*,*-axr+*,*-er+*,*-ey+*}
-QS "C-Fronting_Vowel"		{*-ay+*,*-ey+*,*-oy+*}
-QS "C-High_Vowel"			{*-ih+*,*-ix+*,*-iy+*,*-uh+*,*-uw+*}
-QS "C-Medium_Vowel"			{*-ae+*,*-ah+*,*-ax+*,*-axr+*,*-eh+*,*-el+*,*-em+*,*-en+*,*-er+*,*-ey+*,*-ow+*}
-QS "C-Low_Vowel"			{*-aa+*,*-ae+*,*-ah+*,*-ao+*,*-aw+*,*-ay+*,*-oy+*}
-QS "C-Rounded_Vowel"		{*-ao+*,*-ow+*,*-oy+*,*-uh+*,*-uw+*,*-w+*}
-QS "C-Unrounded_Vowel"		{*-aa+*,*-ae+*,*-ah+*,*-aw+*,*-ax+*,*-axr+*,*-ay+*,*-eh+*,*-el+*,*-em+*,*-en+*,*-er+*,*-ey+*,*-hh+*,*-ih+*,*-ix+*,*-iy+*,*-l+*,*-r+*,*-y+*}
-QS "C-Reduced_Vowel"		{*-ax+*,*-axr+*,*-ix+*}
-QS "C-IVowel"				{*-ih+*,*-ix+*,*-iy+*}
-QS "C-EVowel"				{*-eh+*,*-ey+*}
-QS "C-AVowel"				{*-aa+*,*-ae+*,*-aw+*,*-axr+*,*-ay+*,*-er+*}
-QS "C-OVowel"				{*-ao+*,*-ow+*,*-oy+*}
-QS "C-UVowel"				{*-ah+*,*-ax+*,*-el+*,*-em+*,*-en+*,*-uh+*,*-uw+*}
-QS "C-Unvoiced_Consonant"	{*-ch+*,*-f+*,*-hh+*,*-k+*,*-p+*,*-s+*,*-sh+*,*-t+*,*-th+*}
-QS "C-Voiced_Consonant"		{*-b+*,*-d+*,*-dh+*,*-dx+*,*-el+*,*-em+*,*-en+*,*-g+*,*-jh+*,*-l+*,*-m+*,*-n+*,*-ng+*,*-r+*,*-v+*,*-w+*,*-y+*}
-QS "C-Front_Consonant"		{*-b+*,*-em+*,*-f+*,*-m+*,*-p+*,*-v+*,*-w+*}
-QS "C-Central_Consonant"	{*-d+*,*-dh+*,*-dx+*,*-el+*,*-en+*,*-l+*,*-n+*,*-r+*,*-s+*,*-t+*,*-th+*,*-z+*,*-zh+*}
-QS "C-Back_Consonant"		{*-ch+*,*-g+*,*-hh+*,*-jh+*,*-k+*,*-ng+*,*-sh+*,*-y+*}
-QS "C-Fortis_Consonant"		{*-ch+*,*-f+*,*-k+*,*-p+*,*-s+*,*-sh+*,*-t+*,*-th+*}
-QS "C-Lenis_Consonant"		{*-b+*,*-d+*,*-dh+*,*-g+*,*-jh+*,*-v+*,*-z+*,*-zh+*}
-QS "C-Neigther_F_or_L"		{*-el+*,*-em+*,*-en+*,*-hh+*,*-l+*,*-m+*,*-n+*,*-ng+*,*-r+*,*-w+*,*-y+*}
-QS "C-Coronal_Consonant"	{*-ch+*,*-d+*,*-dh+*,*-dx+*,*-el+*,*-en+*,*-jh+*,*-l+*,*-n+*,*-r+*,*-s+*,*-sh+*,*-t+*,*-th+*,*-z+*,*-zh+*}
-QS "C-Non_Coronal"			{*-b+*,*-em+*,*-f+*,*-g+*,*-hh+*,*-k+*,*-m+*,*-ng+*,*-p+*,*-v+*,*-w+*,*-y+*}
-QS "C-Anterior_Consonant"	{*-b+*,*-d+*,*-dh+*,*-dx+*,*-el+*,*-em+*,*-en+*,*-f+*,*-l+*,*-m+*,*-n+*,*-p+*,*-s+*,*-t+*,*-th+*,*-v+*,*-w+*,*-z+*}
-QS "C-Non_Anterior"			{*-ch+*,*-g+*,*-hh+*,*-jh+*,*-k+*,*-ng+*,*-r+*,*-sh+*,*-y+*,*-zh+*}
-QS "C-Continuent"			{*-dh+*,*-el+*,*-em+*,*-en+*,*-f+*,*-hh+*,*-l+*,*-m+*,*-n+*,*-ng+*,*-r+*,*-s+*,*-sh+*,*-th+*,*-v+*,*-w+*,*-y+*,*-z+*,*-zh+*}
-QS "C-No_Continuent"		{*-b+*,*-ch+*,*-d+*,*-g+*,*-jh+*,*-k+*,*-p+*,*-t+*}
-QS "C-Positive_Strident"	{*-ch+*,*-jh+*,*-s+*,*-sh+*,*-z+*,*-zh+*}
-QS "C-Negative_Strident"	{*-dh+*,*-f+*,*-hh+*,*-th+*,*-v+*}
-QS "C-Neutral_Strident"		{*-b+*,*-d+*,*-el+*,*-em+*,*-en+*,*-g+*,*-k+*,*-l+*,*-m+*,*-n+*,*-ng+*,*-p+*,*-r+*,*-t+*,*-w+*,*-y+*}
-QS "C-Glide"				{*-hh+*,*-l+*,*-el+*,*-r+*,*-y+*,*-w+*}
-QS "C-Syllabic_Consonant"	{*-axr+*,*-el+*,*-em+*,*-en+*,*-er+*}
-QS "C-Voiced_Stop"			{*-b+*,*-d+*,*-g+*}
-QS "C-Unvoiced_Stop"		{*-p+*,*-t+*,*-k+*}
-QS "C-Front_Stop"			{*-b+*,*-p+*}
-QS "C-Central_Stop"			{*-d+*,*-t+*}
-QS "C-Back_Stop"			{*-g+*,*-k+*}
-QS "C-Voiced_Fricative"		{*-jh+*,*-dh+*,*-v+*,*-z+*,*-zh+*}
-QS "C-Unvoiced_Fricative"	{*-ch+*,*-f+*,*-s+*,*-sh+*,*-th+*}
-QS "C-Front_Fricative"		{*-f+*,*-v+*}
-QS "C-Central_Fricative"	{*-dh+*,*-s+*,*-th+*,*-z+*}
-QS "C-Back_Fricative"		{*-ch+*,*-jh+*,*-sh+*,*-zh+*}
-QS "C-Affricate_Consonant"	{*-ch+*,*-jh+*}
-QS "C-Not_Affricate"		{*-dh+*,*-f+*,*-s+*,*-sh+*,*-th+*,*-v+*,*-z+*,*-zh+*}
-QS "C-silences"				{*-pau+*,*-h#+*,*-brth+*}
-QS "C-aa"					{*-aa+*}
-QS "C-ae"					{*-ae+*}
-QS "C-ah"					{*-ah+*}
-QS "C-ao"					{*-ao+*}
-QS "C-aw"					{*-aw+*}
-QS "C-ax"					{*-ax+*}
-QS "C-axr"					{*-axr+*}
-QS "C-ay"					{*-ay+*}
-QS "C-b"					{*-b+*}
-QS "C-ch"					{*-ch+*}
-QS "C-d"					{*-d+*}
-QS "C-dh"					{*-dh+*}
-QS "C-dx"					{*-dx+*}
-QS "C-eh"					{*-eh+*}
-QS "C-el"					{*-el+*}
-QS "C-em"					{*-em+*}
-QS "C-en"					{*-en+*}
-QS "C-er"					{*-er+*}
-QS "C-ey"					{*-ey+*}
-QS "C-f"					{*-f+*}
-QS "C-g"					{*-g+*}
-QS "C-hh"					{*-hh+*}
-QS "C-hv"					{*-hv+*}
-QS "C-ih"					{*-ih+*}
-QS "C-iy"					{*-iy+*}
-QS "C-jh"					{*-jh+*}
-QS "C-k"					{*-k+*}
-QS "C-l"					{*-l+*}
-QS "C-m"					{*-m+*}
-QS "C-n"					{*-n+*}
-QS "C-nx"					{*-nx+*}
-QS "C-ng"					{*-ng+*}
-QS "C-ow"					{*-ow+*}
-QS "C-oy"					{*-oy+*}
-QS "C-p"					{*-p+*}
-QS "C-r"					{*-r+*}
-QS "C-s"					{*-s+*}
-QS "C-sh"					{*-sh+*}
-QS "C-t"					{*-t+*}
-QS "C-th"					{*-th+*}
-QS "C-uh"					{*-uh+*}
-QS "C-uw"					{*-uw+*}
-QS "C-v"					{*-v+*}
-QS "C-w"					{*-w+*}
-QS "C-y"					{*-y+*}
-QS "C-z"					{*-z+*}
-QS "C-zh"					{*-zh+*}
-QS "C-pau"					{*-pau+*}
-QS "C-h#"					{*-h#+*}
-QS "C-brth"					{*-brth+*}
-
-
-QS "R-Vowel"				{*+aa=*,*+ae=*,*+ah=*,*+ao=*,*+aw=*,*+ax=*,*+axr=*,*+ay=*,*+eh=*,*+el=*,*+em=*,*+en=*,*+er=*,*+ey=*,*+ih=*,*+ix=*,*+iy=*,*+ow=*,*+oy=*,*+uh=*,*+uw=*}
-QS "R-Consonant"			{*+b=*,*+ch=*,*+d=*,*+dh=*,*+dx=*,*+f=*,*+g=*,*+hh=*,*+hv=*,*+jh=*,*+k=*,*+l=*,*+m=*,*+n=*,*+nx=*,*+ng=*,*+p=*,*+r=*,*+s=*,*+sh=*,*+t=*,*+th=*,*+v=*,*+w=*,*+y=*,*+z=*,*+zh=*}
-QS "R-Stop"					{*+b=*,*+d=*,*+dx=*,*+g=*,*+k=*,*+p=*,*+t=*}
-QS "R-Nasal"				{*+m=*,*+n=*,*+en=*,*+ng=*}
-QS "R-Fricative"			{*+ch=*,*+dh=*,*+f=*,*+hh=*,*+hv=*,*+s=*,*+sh=*,*+th=*,*+v=*,*+z=*,*+zh=*}
-QS "R-Liquid"				{*+el=*,*+hh=*,*+l=*,*+r=*,*+w=*,*+y=*}
-QS "R-Front"				{*+ae=*,*+b=*,*+eh=*,*+em=*,*+f=*,*+ih=*,*+ix=*,*+iy=*,*+m=*,*+p=*,*+v=*,*+w=*}
-QS "R-Central"				{*+ah=*,*+ao=*,*+axr=*,*+d=*,*+dh=*,*+dx=*,*+el=*,*+en=*,*+er=*,*+l=*,*+n=*,*+r=*,*+s=*,*+t=*,*+th=*,*+z=*,*+zh=*}
-QS "R-Back"					{*+aa=*,*+ax=*,*+ch=*,*+g=*,*+hh=*,*+jh=*,*+k=*,*+ng=*,*+ow=*,*+sh=*,*+uh=*,*+uw=*,*+y=*}
-QS "R-Front_Vowel"			{*+ae=*,*+eh=*,*+ey=*,*+ih=*,*+iy=*}
-QS "R-Central_Vowel"		{*+aa=*,*+ah=*,*+ao=*,*+axr=*,*+er=*}
-QS "R-Back_Vowel"			{*+ax=*,*+ow=*,*+uh=*,*+uw=*}
-QS "R-Long_Vowel"			{*+ao=*,*+aw=*,*+el=*,*+em=*,*+en=*,*+en=*,*+iy=*,*+ow=*,*+uw=*}
-QS "R-Short_Vowel"			{*+aa=*,*+ah=*,*+ax=*,*+ay=*,*+eh=*,*+ey=*,*+ih=*,*+ix=*,*+oy=*,*+uh=*}
-QS "R-Dipthong_Vowel"		{*+aw=*,*+axr=*,*+ay=*,*+el=*,*+em=*,*+en=*,*+er=*,*+ey=*,*+oy=*}
-QS "R-Front_Start_Vowel"	{*+aw=*,*+axr=*,*+er=*,*+ey=*}
-QS "R-Fronting_Vowel"		{*+ay=*,*+ey=*,*+oy=*}
-QS "R-High_Vowel"			{*+ih=*,*+ix=*,*+iy=*,*+uh=*,*+uw=*}
-QS "R-Medium_Vowel"			{*+ae=*,*+ah=*,*+ax=*,*+axr=*,*+eh=*,*+el=*,*+em=*,*+en=*,*+er=*,*+ey=*,*+ow=*}
-QS "R-Low_Vowel"			{*+aa=*,*+ae=*,*+ah=*,*+ao=*,*+aw=*,*+ay=*,*+oy=*}
-QS "R-Rounded_Vowel"		{*+ao=*,*+ow=*,*+oy=*,*+uh=*,*+uw=*,*+w=*}
-QS "R-Unrounded_Vowel"		{*+aa=*,*+ae=*,*+ah=*,*+aw=*,*+ax=*,*+axr=*,*+ay=*,*+eh=*,*+el=*,*+em=*,*+en=*,*+er=*,*+ey=*,*+hh=*,*+ih=*,*+ix=*,*+iy=*,*+l=*,*+r=*,*+y=*}
-QS "R-Reduced_Vowel"		{*+ax=*,*+axr=*,*+ix=*}
-QS "R-IVowel"				{*+ih=*,*+ix=*,*+iy=*}
-QS "R-EVowel"				{*+eh=*,*+ey=*}
-QS "R-AVowel"				{*+aa=*,*+ae=*,*+aw=*,*+axr=*,*+ay=*,*+er=*}
-QS "R-OVowel"				{*+ao=*,*+ow=*,*+oy=*}
-QS "R-UVowel"				{*+ah=*,*+ax=*,*+el=*,*+em=*,*+en=*,*+uh=*,*+uw=*}
-QS "R-Unvoiced_Consonant"	{*+ch=*,*+f=*,*+hh=*,*+k=*,*+p=*,*+s=*,*+sh=*,*+t=*,*+th=*}
-QS "R-Voiced_Consonant"		{*+b=*,*+d=*,*+dh=*,*+dx=*,*+el=*,*+em=*,*+en=*,*+g=*,*+jh=*,*+l=*,*+m=*,*+n=*,*+ng=*,*+r=*,*+v=*,*+w=*,*+y=*}
-QS "R-Front_Consonant"		{*+b=*,*+em=*,*+f=*,*+m=*,*+p=*,*+v=*,*+w=*}
-QS "R-Central_Consonant"	{*+d=*,*+dh=*,*+dx=*,*+el=*,*+en=*,*+l=*,*+n=*,*+r=*,*+s=*,*+t=*,*+th=*,*+z=*,*+zh=*}
-QS "R-Back_Consonant"		{*+ch=*,*+g=*,*+hh=*,*+jh=*,*+k=*,*+ng=*,*+sh=*,*+y=*}
-QS "R-Fortis_Consonant"		{*+ch=*,*+f=*,*+k=*,*+p=*,*+s=*,*+sh=*,*+t=*,*+th=*}
-QS "R-Lenis_Consonant"		{*+b=*,*+d=*,*+dh=*,*+g=*,*+jh=*,*+v=*,*+z=*,*+zh=*}
-QS "R-Neigther_F_or_L"		{*+el=*,*+em=*,*+en=*,*+hh=*,*+l=*,*+m=*,*+n=*,*+ng=*,*+r=*,*+w=*,*+y=*}
-QS "R-Coronal_Consonant"	{*+ch=*,*+d=*,*+dh=*,*+dx=*,*+el=*,*+en=*,*+jh=*,*+l=*,*+n=*,*+r=*,*+s=*,*+sh=*,*+t=*,*+th=*,*+z=*,*+zh=*}
-QS "R-Non_Coronal"			{*+b=*,*+em=*,*+f=*,*+g=*,*+hh=*,*+k=*,*+m=*,*+ng=*,*+p=*,*+v=*,*+w=*,*+y=*}
-QS "R-Anterior_Consonant"	{*+b=*,*+d=*,*+dh=*,*+dx=*,*+el=*,*+em=*,*+en=*,*+f=*,*+l=*,*+m=*,*+n=*,*+p=*,*+s=*,*+t=*,*+th=*,*+v=*,*+w=*,*+z=*}
-QS "R-Non_Anterior"			{*+ch=*,*+g=*,*+hh=*,*+jh=*,*+k=*,*+ng=*,*+r=*,*+sh=*,*+y=*,*+zh=*}
-QS "R-Continuent"			{*+dh=*,*+el=*,*+em=*,*+en=*,*+f=*,*+hh=*,*+l=*,*+m=*,*+n=*,*+ng=*,*+r=*,*+s=*,*+sh=*,*+th=*,*+v=*,*+w=*,*+y=*,*+z=*,*+zh=*}
-QS "R-No_Continuent"		{*+b=*,*+ch=*,*+d=*,*+g=*,*+jh=*,*+k=*,*+p=*,*+t=*}
-QS "R-Positive_Strident"	{*+ch=*,*+jh=*,*+s=*,*+sh=*,*+z=*,*+zh=*}
-QS "R-Negative_Strident"	{*+dh=*,*+f=*,*+hh=*,*+th=*,*+v=*}
-QS "R-Neutral_Strident"		{*+b=*,*+d=*,*+el=*,*+em=*,*+en=*,*+g=*,*+k=*,*+l=*,*+m=*,*+n=*,*+ng=*,*+p=*,*+r=*,*+t=*,*+w=*,*+y=*}
-QS "R-Glide"				{*+hh=*,*+l=*,*+el=*,*+r=*,*+y=*,*+w=*}
-QS "R-Syllabic_Consonant"	{*+axr=*,*+el=*,*+em=*,*+en=*,*+er=*}
-QS "R-Voiced_Stop"			{*+b=*,*+d=*,*+g=*}
-QS "R-Unvoiced_Stop"		{*+p=*,*+t=*,*+k=*}
-QS "R-Front_Stop"			{*+b=*,*+p=*}
-QS "R-Central_Stop"			{*+d=*,*+t=*}
-QS "R-Back_Stop"			{*+g=*,*+k=*}
-QS "R-Voiced_Fricative"		{*+jh=*,*+dh=*,*+v=*,*+z=*,*+zh=*}
-QS "R-Unvoiced_Fricative"	{*+ch=*,*+f=*,*+s=*,*+sh=*,*+th=*}
-QS "R-Front_Fricative"		{*+f=*,*+v=*}
-QS "R-Central_Fricative"	{*+dh=*,*+s=*,*+th=*,*+z=*}
-QS "R-Back_Fricative"		{*+ch=*,*+jh=*,*+sh=*,*+zh=*}
-QS "R-Affricate_Consonant"	{*+ch=*,*+jh=*}
-QS "R-Not_Affricate"		{*+dh=*,*+f=*,*+s=*,*+sh=*,*+th=*,*+v=*,*+z=*,*+zh=*}
-QS "R-silences"				{*+pau=*,*+h#=*,*+brth=*}
-QS "R-aa"					{*+aa=*}
-QS "R-ae"					{*+ae=*}
-QS "R-ah"					{*+ah=*}
-QS "R-ao"					{*+ao=*}
-QS "R-aw"					{*+aw=*}
-QS "R-ax"					{*+ax=*}
-QS "R-axr"					{*+axr=*}
-QS "R-ay"					{*+ay=*}
-QS "R-b"					{*+b=*}
-QS "R-ch"					{*+ch=*}
-QS "R-d"					{*+d=*}
-QS "R-dh"					{*+dh=*}
-QS "R-dx"					{*+dx=*}
-QS "R-eh"					{*+eh=*}
-QS "R-el"					{*+el=*}
-QS "R-em"					{*+em=*}
-QS "R-en"					{*+en=*}
-QS "R-er"					{*+er=*}
-QS "R-ey"					{*+ey=*}
-QS "R-f"					{*+f=*}
-QS "R-g"					{*+g=*}
-QS "R-hh"					{*+hh=*}
-QS "R-hv"					{*+hv=*}
-QS "R-ih"					{*+ih=*}
-QS "R-iy"					{*+iy=*}
-QS "R-jh"					{*+jh=*}
-QS "R-k"					{*+k=*}
-QS "R-l"					{*+l=*}
-QS "R-m"					{*+m=*}
-QS "R-n"					{*+n=*}
-QS "R-nx"					{*+nx=*}
-QS "R-ng"					{*+ng=*}
-QS "R-ow"					{*+ow=*}
-QS "R-oy"					{*+oy=*}
-QS "R-p"					{*+p=*}
-QS "R-r"					{*+r=*}
-QS "R-s"					{*+s=*}
-QS "R-sh"					{*+sh=*}
-QS "R-t"					{*+t=*}
-QS "R-th"					{*+th=*}
-QS "R-uh"					{*+uh=*}
-QS "R-uw"					{*+uw=*}
-QS "R-v"					{*+v=*}
-QS "R-w"					{*+w=*}
-QS "R-y"					{*+y=*}
-QS "R-z"					{*+z=*}
-QS "R-zh"					{*+zh=*}
-QS "R-pau"					{*+pau=*}
-QS "R-h#"					{*+h#=*}
-QS "R-brth"					{*+brth=*}
-
-
-QS "RR-Vowel"				{*=aa@*,*=ae@*,*=ah@*,*=ao@*,*=aw@*,*=ax@*,*=axr@*,*=ay@*,*=eh@*,*=el@*,*=em@*,*=en@*,*=er@*,*=ey@*,*=ih@*,*=ix@*,*=iy@*,*=ow@*,*=oy@*,*=uh@*,*=uw@*}
-QS "RR-Consonant"			{*=b@*,*=ch@*,*=d@*,*=dh@*,*=dx@*,*=f@*,*=g@*,*=hh@*,*=hv@*,*=jh@*,*=k@*,*=l@*,*=m@*,*=n@*,*=nx@*,*=ng@*,*=p@*,*=r@*,*=s@*,*=sh@*,*=t@*,*=th@*,*=v@*,*=w@*,*=y@*,*=z@*,*=zh@*}
-QS "RR-Stop"				{*=b@*,*=d@*,*=dx@*,*=g@*,*=k@*,*=p@*,*=t@*}
-QS "RR-Nasal"				{*=m@*,*=n@*,*=en@*,*=ng@*}
-QS "RR-Fricative"			{*=ch@*,*=dh@*,*=f@*,*=hh@*,*=hv@*,*=s@*,*=sh@*,*=th@*,*=v@*,*=z@*,*=zh@*}
-QS "RR-Liquid"				{*=el@*,*=hh@*,*=l@*,*=r@*,*=w@*,*=y@*}
-QS "RR-Front"				{*=ae@*,*=b@*,*=eh@*,*=em@*,*=f@*,*=ih@*,*=ix@*,*=iy@*,*=m@*,*=p@*,*=v@*,*=w@*}
-QS "RR-Central"				{*=ah@*,*=ao@*,*=axr@*,*=d@*,*=dh@*,*=dx@*,*=el@*,*=en@*,*=er@*,*=l@*,*=n@*,*=r@*,*=s@*,*=t@*,*=th@*,*=z@*,*=zh@*}
-QS "RR-Back"				{*=aa@*,*=ax@*,*=ch@*,*=g@*,*=hh@*,*=jh@*,*=k@*,*=ng@*,*=ow@*,*=sh@*,*=uh@*,*=uw@*,*=y@*}
-QS "RR-Front_Vowel"			{*=ae@*,*=eh@*,*=ey@*,*=ih@*,*=iy@*}
-QS "RR-Central_Vowel"		{*=aa@*,*=ah@*,*=ao@*,*=axr@*,*=er@*}
-QS "RR-Back_Vowel"			{*=ax@*,*=ow@*,*=uh@*,*=uw@*}
-QS "RR-Long_Vowel"			{*=ao@*,*=aw@*,*=el@*,*=em@*,*=en@*,*=en@*,*=iy@*,*=ow@*,*=uw@*}
-QS "RR-Short_Vowel"			{*=aa@*,*=ah@*,*=ax@*,*=ay@*,*=eh@*,*=ey@*,*=ih@*,*=ix@*,*=oy@*,*=uh@*}
-QS "RR-Dipthong_Vowel"		{*=aw@*,*=axr@*,*=ay@*,*=el@*,*=em@*,*=en@*,*=er@*,*=ey@*,*=oy@*}
-QS "RR-Front_Start_Vowel"	{*=aw@*,*=axr@*,*=er@*,*=ey@*}
-QS "RR-Fronting_Vowel"		{*=ay@*,*=ey@*,*=oy@*}
-QS "RR-High_Vowel"			{*=ih@*,*=ix@*,*=iy@*,*=uh@*,*=uw@*}
-QS "RR-Medium_Vowel"		{*=ae@*,*=ah@*,*=ax@*,*=axr@*,*=eh@*,*=el@*,*=em@*,*=en@*,*=er@*,*=ey@*,*=ow@*}
-QS "RR-Low_Vowel"			{*=aa@*,*=ae@*,*=ah@*,*=ao@*,*=aw@*,*=ay@*,*=oy@*}
-QS "RR-Rounded_Vowel"		{*=ao@*,*=ow@*,*=oy@*,*=uh@*,*=uw@*,*=w@*}
-QS "RR-Unrounded_Vowel"		{*=aa@*,*=ae@*,*=ah@*,*=aw@*,*=ax@*,*=axr@*,*=ay@*,*=eh@*,*=el@*,*=em@*,*=en@*,*=er@*,*=ey@*,*=hh@*,*=ih@*,*=ix@*,*=iy@*,*=l@*,*=r@*,*=y@*}
-QS "RR-Reduced_Vowel"		{*=ax@*,*=axr@*,*=ix@*}
-QS "RR-IVowel"				{*=ih@*,*=ix@*,*=iy@*}
-QS "RR-EVowel"				{*=eh@*,*=ey@*}
-QS "RR-AVowel"				{*=aa@*,*=ae@*,*=aw@*,*=axr@*,*=ay@*,*=er@*}
-QS "RR-OVowel"				{*=ao@*,*=ow@*,*=oy@*}
-QS "RR-UVowel"				{*=ah@*,*=ax@*,*=el@*,*=em@*,*=en@*,*=uh@*,*=uw@*}
-QS "RR-Unvoiced_Consonant"	{*=ch@*,*=f@*,*=hh@*,*=k@*,*=p@*,*=s@*,*=sh@*,*=t@*,*=th@*}
-QS "RR-Voiced_Consonant"	{*=b@*,*=d@*,*=dh@*,*=dx@*,*=el@*,*=em@*,*=en@*,*=g@*,*=jh@*,*=l@*,*=m@*,*=n@*,*=ng@*,*=r@*,*=v@*,*=w@*,*=y@*}
-QS "RR-Front_Consonant"		{*=b@*,*=em@*,*=f@*,*=m@*,*=p@*,*=v@*,*=w@*}
-QS "RR-Central_Consonant"	{*=d@*,*=dh@*,*=dx@*,*=el@*,*=en@*,*=l@*,*=n@*,*=r@*,*=s@*,*=t@*,*=th@*,*=z@*,*=zh@*}
-QS "RR-Back_Consonant"		{*=ch@*,*=g@*,*=hh@*,*=jh@*,*=k@*,*=ng@*,*=sh@*,*=y@*}
-QS "RR-Fortis_Consonant"	{*=ch@*,*=f@*,*=k@*,*=p@*,*=s@*,*=sh@*,*=t@*,*=th@*}
-QS "RR-Lenis_Consonant"		{*=b@*,*=d@*,*=dh@*,*=g@*,*=jh@*,*=v@*,*=z@*,*=zh@*}
-QS "RR-Neigther_F_or_L"		{*=el@*,*=em@*,*=en@*,*=hh@*,*=l@*,*=m@*,*=n@*,*=ng@*,*=r@*,*=w@*,*=y@*}
-QS "RR-Coronal_Consonant"	{*=ch@*,*=d@*,*=dh@*,*=dx@*,*=el@*,*=en@*,*=jh@*,*=l@*,*=n@*,*=r@*,*=s@*,*=sh@*,*=t@*,*=th@*,*=z@*,*=zh@*}
-QS "RR-Non_Coronal"			{*=b@*,*=em@*,*=f@*,*=g@*,*=hh@*,*=k@*,*=m@*,*=ng@*,*=p@*,*=v@*,*=w@*,*=y@*}
-QS "RR-Anterior_Consonant"	{*=b@*,*=d@*,*=dh@*,*=dx@*,*=el@*,*=em@*,*=en@*,*=f@*,*=l@*,*=m@*,*=n@*,*=p@*,*=s@*,*=t@*,*=th@*,*=v@*,*=w@*,*=z@*}
-QS "RR-Non_Anterior"		{*=ch@*,*=g@*,*=hh@*,*=jh@*,*=k@*,*=ng@*,*=r@*,*=sh@*,*=y@*,*=zh@*}
-QS "RR-Continuent"			{*=dh@*,*=el@*,*=em@*,*=en@*,*=f@*,*=hh@*,*=l@*,*=m@*,*=n@*,*=ng@*,*=r@*,*=s@*,*=sh@*,*=th@*,*=v@*,*=w@*,*=y@*,*=z@*,*=zh@*}
-QS "RR-No_Continuent"		{*=b@*,*=ch@*,*=d@*,*=g@*,*=jh@*,*=k@*,*=p@*,*=t@*}
-QS "RR-Positive_Strident"	{*=ch@*,*=jh@*,*=s@*,*=sh@*,*=z@*,*=zh@*}
-QS "RR-Negative_Strident"	{*=dh@*,*=f@*,*=hh@*,*=th@*,*=v@*}
-QS "RR-Neutral_Strident"	{*=b@*,*=d@*,*=el@*,*=em@*,*=en@*,*=g@*,*=k@*,*=l@*,*=m@*,*=n@*,*=ng@*,*=p@*,*=r@*,*=t@*,*=w@*,*=y@*}
-QS "RR-Glide"				{*=hh@*,*=l@*,*=el@*,*=r@*,*=y@*,*=w@*}
-QS "RR-Syllabic_Consonant"	{*=axr@*,*=el@*,*=em@*,*=en@*,*=er@*}
-QS "RR-Voiced_Stop"			{*=b@*,*=d@*,*=g@*}
-QS "RR-Unvoiced_Stop"		{*=p@*,*=t@*,*=k@*}
-QS "RR-Front_Stop"			{*=b@*,*=p@*}
-QS "RR-Central_Stop"		{*=d@*,*=t@*}
-QS "RR-Back_Stop"			{*=g@*,*=k@*}
-QS "RR-Voiced_Fricative"	{*=jh@*,*=dh@*,*=v@*,*=z@*,*=zh@*}
-QS "RR-Unvoiced_Fricative"	{*=ch@*,*=f@*,*=s@*,*=sh@*,*=th@*}
-QS "RR-Front_Fricative"		{*=f@*,*=v@*}
-QS "RR-Central_Fricative"	{*=dh@*,*=s@*,*=th@*,*=z@*}
-QS "RR-Back_Fricative"		{*=ch@*,*=jh@*,*=sh@*,*=zh@*}
-QS "RR-Affricate_Consonant"	{*=ch@*,*=jh@*}
-QS "RR-Not_Affricate"		{*=dh@*,*=f@*,*=s@*,*=sh@*,*=th@*,*=v@*,*=z@*,*=zh@*}
-QS "RR-silences"			{*=pau@*,*=h#@*,*=brth@*}
-QS "RR-aa"					{*=aa@*}
-QS "RR-ae"					{*=ae@*}
-QS "RR-ah"					{*=ah@*}
-QS "RR-ao"					{*=ao@*}
-QS "RR-aw"					{*=aw@*}
-QS "RR-ax"					{*=ax@*}
-QS "RR-axr"					{*=axr@*}
-QS "RR-ay"					{*=ay@*}
-QS "RR-b"					{*=b@*}
-QS "RR-ch"					{*=ch@*}
-QS "RR-d"					{*=d@*}
-QS "RR-dh"					{*=dh@*}
-QS "RR-dx"					{*=dx@*}
-QS "RR-eh"					{*=eh@*}
-QS "RR-el"					{*=el@*}
-QS "RR-em"					{*=em@*}
-QS "RR-en"					{*=en@*}
-QS "RR-er"					{*=er@*}
-QS "RR-ey"					{*=ey@*}
-QS "RR-f"					{*=f@*}
-QS "RR-g"					{*=g@*}
-QS "RR-hh"					{*=hh@*}
-QS "RR-hv"					{*=hv@*}
-QS "RR-ih"					{*=ih@*}
-QS "RR-iy"					{*=iy@*}
-QS "RR-jh"					{*=jh@*}
-QS "RR-k"					{*=k@*}
-QS "RR-l"					{*=l@*}
-QS "RR-m"					{*=m@*}
-QS "RR-n"					{*=n@*}
-QS "RR-nx"					{*=nx@*}
-QS "RR-ng"					{*=ng@*}
-QS "RR-ow"					{*=ow@*}
-QS "RR-oy"					{*=oy@*}
-QS "RR-p"					{*=p@*}
-QS "RR-r"					{*=r@*}
-QS "RR-s"					{*=s@*}
-QS "RR-sh"					{*=sh@*}
-QS "RR-t"					{*=t@*}
-QS "RR-th"					{*=th@*}
-QS "RR-uh"					{*=uh@*}
-QS "RR-uw"					{*=uw@*}
-QS "RR-v"					{*=v@*}
-QS "RR-w"					{*=w@*}
-QS "RR-y"					{*=y@*}
-QS "RR-z"					{*=z@*}
-QS "RR-zh"					{*=zh@*}
-QS "RR-pau"					{*=pau@*}
-QS "RR-h#"					{*=h#@*}
-QS "RR-brth"				{*=brth@*}
-
-
-
-QS "Seg_Fw==x"	{*@x_*}
-QS "Seg_Fw==1"	{*@1_*}
-QS "Seg_Fw==2"	{*@2_*}
-QS "Seg_Fw==3"	{*@3_*}
-QS "Seg_Fw==4"	{*@4_*}
-QS "Seg_Fw==5"	{*@5_*}
-QS "Seg_Fw==6"	{*@6_*}
-QS "Seg_Fw==7"	{*@7_*}
-
-QS "Seg_Fw<=1"	{*@x_*,*@1_*}
-QS "Seg_Fw<=2"	{*@x_*,*@1_*,*@2_*}
-QS "Seg_Fw<=3"	{*@x_*,*@1_*,*@2_*,*@3_*}
-QS "Seg_Fw<=4"	{*@x_*,*@1_*,*@2_*,*@3_*,*@4_*}
-QS "Seg_Fw<=5"	{*@x_*,*@1_*,*@2_*,*@3_*,*@4_*,*@5_*}
-QS "Seg_Fw<=6"	{*@x_*,*@1_*,*@2_*,*@3_*,*@4_*,*@5_*,*@6_*}
-QS "Seg_Fw<=7"	{*@x_*,*@1_*,*@2_*,*@3_*,*@4_*,*@5_*,*@6_*,*@7_*}
-
-
-
-QS "Seg_Bw==x"	{*_x/A:*}
-QS "Seg_Bw==1"	{*_1/A:*}
-QS "Seg_Bw==2"	{*_2/A:*}
-QS "Seg_Bw==3"	{*_3/A:*}
-QS "Seg_Bw==4"	{*_4/A:*}
-QS "Seg_Bw==5"	{*_5/A:*}
-QS "Seg_Bw==6"	{*_6/A:*}
-QS "Seg_Bw==7"	{*_7/A:*}
-
-QS "Seg_Bw<=0"	{*_x/A:*,*_0/A:*}
-QS "Seg_Bw<=1"	{*_x/A:*,*_0/A:*,*_1/A:*}
-QS "Seg_Bw<=2"	{*_x/A:*,*_0/A:*,*_1/A:*,*_2/A:*}
-QS "Seg_Bw<=3"	{*_x/A:*,*_0/A:*,*_1/A:*,*_2/A:*,*_3/A:*}
-QS "Seg_Bw<=4"	{*_x/A:*,*_0/A:*,*_1/A:*,*_2/A:*,*_3/A:*,*_4/A:*}
-QS "Seg_Bw<=5"	{*_x/A:*,*_0/A:*,*_1/A:*,*_2/A:*,*_3/A:*,*_4/A:*,*_5/A:*}
-QS "Seg_Bw<=6"	{*_x/A:*,*_0/A:*,*_1/A:*,*_2/A:*,*_3/A:*,*_4/A:*,*_5/A:*,*_6/A:*}
-QS "Seg_Bw<=7"	{*_x/A:*,*_0/A:*,*_1/A:*,*_2/A:*,*_3/A:*,*_4/A:*,*_5/A:*,*_6/A:*,*_7/A:*}
-
-
-
-QS "L-Syl_Stress==1"		{*/A:1_*}
-QS "L-Syl_Stress==0"		{*/A:0_*}
-
-
-
-QS "L-Syl_Accent==1"		{*_1_*}
-QS "L-Syl_Accent==0"		{*_0_*}
-
-
-
-QS "L-Syl_Num-Segs==0"	{*_0/B:*}
-QS "L-Syl_Num-Segs==1"	{*_1/B:*}
-QS "L-Syl_Num-Segs==2"	{*_2/B:*}
-QS "L-Syl_Num-Segs==3"	{*_3/B:*}
-QS "L-Syl_Num-Segs==4"	{*_4/B:*}
-QS "L-Syl_Num-Segs==5"	{*_5/B:*}
-QS "L-Syl_Num-Segs==6"	{*_6/B:*}
-QS "L-Syl_Num-Segs==7"	{*_7/B:*}
-
-QS "L-Syl_Num-Segs<=1"	{*_0/B:*,*_1/B:*}
-QS "L-Syl_Num-Segs<=2"	{*_0/B:*,*_1/B:*,*_2/B:*}
-QS "L-Syl_Num-Segs<=3"	{*_0/B:*,*_1/B:*,*_2/B:*,*_3/B:*}
-QS "L-Syl_Num-Segs<=4"	{*_0/B:*,*_1/B:*,*_2/B:*,*_3/B:*,*_4/B:*}
-QS "L-Syl_Num-Segs<=5"	{*_0/B:*,*_1/B:*,*_2/B:*,*_3/B:*,*_4/B:*,*_5/B:*}
-QS "L-Syl_Num-Segs<=6"	{*_0/B:*,*_1/B:*,*_2/B:*,*_3/B:*,*_4/B:*,*_5/B:*,*_6/B:*}
-QS "L-Syl_Num-Segs<=7"	{*_0/B:*,*_1/B:*,*_2/B:*,*_3/B:*,*_4/B:*,*_5/B:*,*_6/B:*,*_7/B:*}
-
-
-
-QS "C-Syl_Stress==1"		{*/B:1-*}
-QS "C-Syl_Stress==0"		{*/B:0-*}
-QS "C-Syl_Stress==x"		{*/B:x-*}
-
-
-
-QS "C-Syl_Accent==1"		{*-1-*}
-QS "C-Syl_Accent==0"		{*-0-*}
-QS "C-Syl_Accent==x"		{*-x-*}
-
-
-
-QS "C-Syl_Num-Segs==x"	{*-x@*}
-QS "C-Syl_Num-Segs==1"	{*-1@*}
-QS "C-Syl_Num-Segs==2"	{*-2@*}
-QS "C-Syl_Num-Segs==3"	{*-3@*}
-QS "C-Syl_Num-Segs==4"	{*-4@*}
-QS "C-Syl_Num-Segs==5"	{*-5@*}
-QS "C-Syl_Num-Segs==6"	{*-6@*}
-QS "C-Syl_Num-Segs==7"	{*-7@*}
-
-QS "C-Syl_Num-Segs<=1"	{*-x@*,*-1@*}
-QS "C-Syl_Num-Segs<=2"	{*-x@*,*-1@*,*-2@*}
-QS "C-Syl_Num-Segs<=3"	{*-x@*,*-1@*,*-2@*,*-3@*}
-QS "C-Syl_Num-Segs<=4"	{*-x@*,*-1@*,*-2@*,*-3@*,*-4@*}
-QS "C-Syl_Num-Segs<=5"	{*-x@*,*-1@*,*-2@*,*-3@*,*-4@*,*-5@*}
-QS "C-Syl_Num-Segs<=6"	{*-x@*,*-1@*,*-2@*,*-3@*,*-4@*,*-5@*,*-6@*}
-QS "C-Syl_Num-Segs<=7"	{*-x@*,*-1@*,*-2@*,*-3@*,*-4@*,*-5@*,*-6@*,*-7@*}
-
-
-
-QS "Pos_C-Syl_in_C-Word(Fw)==x"	{*@x-*}
-QS "Pos_C-Syl_in_C-Word(Fw)==1"	{*@1-*}
-QS "Pos_C-Syl_in_C-Word(Fw)==2"	{*@2-*}
-QS "Pos_C-Syl_in_C-Word(Fw)==3"	{*@3-*}
-QS "Pos_C-Syl_in_C-Word(Fw)==4"	{*@4-*}
-QS "Pos_C-Syl_in_C-Word(Fw)==5"	{*@5-*}
-QS "Pos_C-Syl_in_C-Word(Fw)==6"	{*@6-*}
-QS "Pos_C-Syl_in_C-Word(Fw)==7"	{*@7-*}
-
-QS "Pos_C-Syl_in_C-Word(Fw)<=1"	{*@x-*,*@1-*}
-QS "Pos_C-Syl_in_C-Word(Fw)<=2"	{*@x-*,*@1-*,*@2-*}
-QS "Pos_C-Syl_in_C-Word(Fw)<=3"	{*@x-*,*@1-*,*@2-*,*@3-*}
-QS "Pos_C-Syl_in_C-Word(Fw)<=4"	{*@x-*,*@1-*,*@2-*,*@3-*,*@4-*}
-QS "Pos_C-Syl_in_C-Word(Fw)<=5"	{*@x-*,*@1-*,*@2-*,*@3-*,*@4-*,*@5-*}
-QS "Pos_C-Syl_in_C-Word(Fw)<=6"	{*@x-*,*@1-*,*@2-*,*@3-*,*@4-*,*@5-*,*@6-*}
-QS "Pos_C-Syl_in_C-Word(Fw)<=7"	{*@x-*,*@1-*,*@2-*,*@3-*,*@4-*,*@5-*,*@6-*,*@7-*}
-
-
-
-QS "Pos_C-Syl_in_C-Word(Bw)==x"	{*-x&*}
-QS "Pos_C-Syl_in_C-Word(Bw)==1"	{*-1&*}
-QS "Pos_C-Syl_in_C-Word(Bw)==2"	{*-2&*}
-QS "Pos_C-Syl_in_C-Word(Bw)==3"	{*-3&*}
-QS "Pos_C-Syl_in_C-Word(Bw)==4"	{*-4&*}
-QS "Pos_C-Syl_in_C-Word(Bw)==5"	{*-5&*}
-QS "Pos_C-Syl_in_C-Word(Bw)==6"	{*-6&*}
-QS "Pos_C-Syl_in_C-Word(Bw)==7"	{*-7&*}
-
-QS "Pos_C-Syl_in_C-Word(Bw)<=1"	{*-x&*,*-1&*}
-QS "Pos_C-Syl_in_C-Word(Bw)<=2"	{*-x&*,*-1&*,*-2&*}
-QS "Pos_C-Syl_in_C-Word(Bw)<=3"	{*-x&*,*-1&*,*-2&*,*-3&*}
-QS "Pos_C-Syl_in_C-Word(Bw)<=4"	{*-x&*,*-1&*,*-2&*,*-3&*,*-4&*}
-QS "Pos_C-Syl_in_C-Word(Bw)<=5"	{*-x&*,*-1&*,*-2&*,*-3&*,*-4&*,*-5&*}
-QS "Pos_C-Syl_in_C-Word(Bw)<=6"	{*-x&*,*-1&*,*-2&*,*-3&*,*-4&*,*-5&*,*-6&*}
-QS "Pos_C-Syl_in_C-Word(Bw)<=7"	{*-x&*,*-1&*,*-2&*,*-3&*,*-4&*,*-5&*,*-6&*,*-7&*}
-
-
-
-QS "Pos_C-Syl_in_C-Phrase(Fw)==x"	{*&x-*}
-QS "Pos_C-Syl_in_C-Phrase(Fw)==1"	{*&1-*}
-QS "Pos_C-Syl_in_C-Phrase(Fw)==2"	{*&2-*}
-QS "Pos_C-Syl_in_C-Phrase(Fw)==3"	{*&3-*}
-QS "Pos_C-Syl_in_C-Phrase(Fw)==4"	{*&4-*}
-QS "Pos_C-Syl_in_C-Phrase(Fw)==5"	{*&5-*}
-QS "Pos_C-Syl_in_C-Phrase(Fw)==6"	{*&6-*}
-QS "Pos_C-Syl_in_C-Phrase(Fw)==7"	{*&7-*}
-QS "Pos_C-Syl_in_C-Phrase(Fw)==8"	{*&8-*}
-QS "Pos_C-Syl_in_C-Phrase(Fw)==9"	{*&9-*}
-QS "Pos_C-Syl_in_C-Phrase(Fw)==10"	{*&10-*}
-QS "Pos_C-Syl_in_C-Phrase(Fw)==11"	{*&11-*}
-QS "Pos_C-Syl_in_C-Phrase(Fw)==12"	{*&12-*}
-QS "Pos_C-Syl_in_C-Phrase(Fw)==13"	{*&13-*}
-QS "Pos_C-Syl_in_C-Phrase(Fw)==14"	{*&14-*}
-QS "Pos_C-Syl_in_C-Phrase(Fw)==15"	{*&15-*}
-QS "Pos_C-Syl_in_C-Phrase(Fw)==16"	{*&16-*}
-QS "Pos_C-Syl_in_C-Phrase(Fw)==17"	{*&17-*}
-QS "Pos_C-Syl_in_C-Phrase(Fw)==18"	{*&18-*}
-QS "Pos_C-Syl_in_C-Phrase(Fw)==19"	{*&19-*}
-QS "Pos_C-Syl_in_C-Phrase(Fw)==20"	{*&20-*}
-
-QS "Pos_C-Syl_in_C-Phrase(Fw)<=1"	{*&x-*,*&0-*,*&1-*}
-QS "Pos_C-Syl_in_C-Phrase(Fw)<=2"	{*&x-*,*&0-*,*&1-*,*&2-*}
-QS "Pos_C-Syl_in_C-Phrase(Fw)<=3"	{*&x-*,*&0-*,*&1-*,*&2-*,*&3-*}
-QS "Pos_C-Syl_in_C-Phrase(Fw)<=4"	{*&x-*,*&0-*,*&1-*,*&2-*,*&3-*,*&4-*}
-QS "Pos_C-Syl_in_C-Phrase(Fw)<=5"	{*&x-*,*&0-*,*&1-*,*&2-*,*&3-*,*&4-*,*&5-*}
-QS "Pos_C-Syl_in_C-Phrase(Fw)<=6"	{*&x-*,*&0-*,*&1-*,*&2-*,*&3-*,*&4-*,*&5-*,*&6-*}
-QS "Pos_C-Syl_in_C-Phrase(Fw)<=7"	{*&x-*,*&0-*,*&1-*,*&2-*,*&3-*,*&4-*,*&5-*,*&6-*,*&7-*}
-QS "Pos_C-Syl_in_C-Phrase(Fw)<=8"	{*&x-*,*&0-*,*&1-*,*&2-*,*&3-*,*&4-*,*&5-*,*&6-*,*&7-*,*&8-*}
-QS "Pos_C-Syl_in_C-Phrase(Fw)<=9"	{*&?-*}
-QS "Pos_C-Syl_in_C-Phrase(Fw)<=10"	{*&?-*,*&10-*}
-QS "Pos_C-Syl_in_C-Phrase(Fw)<=11"	{*&?-*,*&10-*,*&11-*}
-QS "Pos_C-Syl_in_C-Phrase(Fw)<=12"	{*&?-*,*&10-*,*&11-*,*&12-*}
-QS "Pos_C-Syl_in_C-Phrase(Fw)<=13"	{*&?-*,*&10-*,*&11-*,*&12-*,*&13-*}
-QS "Pos_C-Syl_in_C-Phrase(Fw)<=14"	{*&?-*,*&10-*,*&11-*,*&12-*,*&13-*,*&14-*}
-QS "Pos_C-Syl_in_C-Phrase(Fw)<=15"	{*&?-*,*&10-*,*&11-*,*&12-*,*&13-*,*&14-*,*&15-*}
-QS "Pos_C-Syl_in_C-Phrase(Fw)<=16"	{*&?-*,*&10-*,*&11-*,*&12-*,*&13-*,*&14-*,*&15-*,*&16-*}
-QS "Pos_C-Syl_in_C-Phrase(Fw)<=17"	{*&?-*,*&10-*,*&11-*,*&12-*,*&13-*,*&14-*,*&15-*,*&16-*,*&17-*}
-QS "Pos_C-Syl_in_C-Phrase(Fw)<=18"	{*&?-*,*&10-*,*&11-*,*&12-*,*&13-*,*&14-*,*&15-*,*&16-*,*&17-*,*&18-*}
-QS "Pos_C-Syl_in_C-Phrase(Fw)<=19"	{*&?-*,*&1?-*}
-QS "Pos_C-Syl_in_C-Phrase(Fw)<=20"	{*&?-*,*&1?-*,*&20-*}
-
-
-
-QS "Pos_C-Syl_in_C-Phrase(Bw)==x"	{*-x#*}
-QS "Pos_C-Syl_in_C-Phrase(Bw)==1"	{*-1#*}
-QS "Pos_C-Syl_in_C-Phrase(Bw)==2"	{*-2#*}
-QS "Pos_C-Syl_in_C-Phrase(Bw)==3"	{*-3#*}
-QS "Pos_C-Syl_in_C-Phrase(Bw)==4"	{*-4#*}
-QS "Pos_C-Syl_in_C-Phrase(Bw)==5"	{*-5#*}
-QS "Pos_C-Syl_in_C-Phrase(Bw)==6"	{*-6#*}
-QS "Pos_C-Syl_in_C-Phrase(Bw)==7"	{*-7#*}
-QS "Pos_C-Syl_in_C-Phrase(Bw)==8"	{*-8#*}
-QS "Pos_C-Syl_in_C-Phrase(Bw)==9"	{*-9#*}
-QS "Pos_C-Syl_in_C-Phrase(Bw)==10"	{*-10#*}
-QS "Pos_C-Syl_in_C-Phrase(Bw)==11"	{*-11#*}
-QS "Pos_C-Syl_in_C-Phrase(Bw)==12"	{*-12#*}
-QS "Pos_C-Syl_in_C-Phrase(Bw)==13"	{*-13#*}
-QS "Pos_C-Syl_in_C-Phrase(Bw)==14"	{*-14#*}
-QS "Pos_C-Syl_in_C-Phrase(Bw)==15"	{*-15#*}
-QS "Pos_C-Syl_in_C-Phrase(Bw)==16"	{*-16#*}
-QS "Pos_C-Syl_in_C-Phrase(Bw)==17"	{*-17#*}
-QS "Pos_C-Syl_in_C-Phrase(Bw)==18"	{*-18#*}
-QS "Pos_C-Syl_in_C-Phrase(Bw)==19"	{*-19#*}
-QS "Pos_C-Syl_in_C-Phrase(Bw)==20"	{*-20#*}
-
-QS "Pos_C-Syl_in_C-Phrase(Bw)<=1"	{*-x#*,*-1#*}
-QS "Pos_C-Syl_in_C-Phrase(Bw)<=2"	{*-x#*,*-1#*,*-2#*}
-QS "Pos_C-Syl_in_C-Phrase(Bw)<=3"	{*-x#*,*-1#*,*-2#*,*-3#*}
-QS "Pos_C-Syl_in_C-Phrase(Bw)<=4"	{*-x#*,*-1#*,*-2#*,*-3#*,*-4#*}
-QS "Pos_C-Syl_in_C-Phrase(Bw)<=5"	{*-x#*,*-1#*,*-2#*,*-3#*,*-4#*,*-5#*}
-QS "Pos_C-Syl_in_C-Phrase(Bw)<=6"	{*-x#*,*-1#*,*-2#*,*-3#*,*-4#*,*-5#*,*-6#*}
-QS "Pos_C-Syl_in_C-Phrase(Bw)<=7"	{*-x#*,*-1#*,*-2#*,*-3#*,*-4#*,*-5#*,*-6#*,*-7#*}
-QS "Pos_C-Syl_in_C-Phrase(Bw)<=8"	{*-x#*,*-1#*,*-2#*,*-3#*,*-4#*,*-5#*,*-6#*,*-7#*,*-8#*}
-QS "Pos_C-Syl_in_C-Phrase(Bw)<=9"	{*-?#*}
-QS "Pos_C-Syl_in_C-Phrase(Bw)<=10"	{*-?#*,*-10#*}
-QS "Pos_C-Syl_in_C-Phrase(Bw)<=11"	{*-?#*,*-10#*,*-11#*}
-QS "Pos_C-Syl_in_C-Phrase(Bw)<=12"	{*-?#*,*-10#*,*-11#*,*-12#*}
-QS "Pos_C-Syl_in_C-Phrase(Bw)<=13"	{*-?#*,*-10#*,*-11#*,*-12#*,*-13#*}
-QS "Pos_C-Syl_in_C-Phrase(Bw)<=14"	{*-?#*,*-10#*,*-11#*,*-12#*,*-13#*,*-14#*}
-QS "Pos_C-Syl_in_C-Phrase(Bw)<=15"	{*-?#*,*-10#*,*-11#*,*-12#*,*-13#*,*-14#*,*-15#*}
-QS "Pos_C-Syl_in_C-Phrase(Bw)<=16"	{*-?#*,*-10#*,*-11#*,*-12#*,*-13#*,*-14#*,*-15#*,*-16#*}
-QS "Pos_C-Syl_in_C-Phrase(Bw)<=17"	{*-?#*,*-10#*,*-11#*,*-12#*,*-13#*,*-14#*,*-15#*,*-16#*,*-17#*}
-QS "Pos_C-Syl_in_C-Phrase(Bw)<=18"	{*-?#*,*-10#*,*-11#*,*-12#*,*-13#*,*-14#*,*-15#*,*-16#*,*-17#*,*-18#*}
-QS "Pos_C-Syl_in_C-Phrase(Bw)<=19"	{*-?#*,*-1?#*}
-QS "Pos_C-Syl_in_C-Phrase(Bw)<=20"	{*-?#*,*-1?#*,*-20#*}
-
-
-
-QS "Num-StressedSyl_before_C-Syl_in_C-Phrase==x"	{*#x-*}
-QS "Num-StressedSyl_before_C-Syl_in_C-Phrase==1"	{*#1-*}
-QS "Num-StressedSyl_before_C-Syl_in_C-Phrase==2"	{*#2-*}
-QS "Num-StressedSyl_before_C-Syl_in_C-Phrase==3"	{*#3-*}
-QS "Num-StressedSyl_before_C-Syl_in_C-Phrase==4"	{*#4-*}
-QS "Num-StressedSyl_before_C-Syl_in_C-Phrase==5"	{*#5-*}
-QS "Num-StressedSyl_before_C-Syl_in_C-Phrase==6"	{*#6-*}
-QS "Num-StressedSyl_before_C-Syl_in_C-Phrase==7"	{*#7-*}
-QS "Num-StressedSyl_before_C-Syl_in_C-Phrase==8"	{*#8-*}
-QS "Num-StressedSyl_before_C-Syl_in_C-Phrase==9"	{*#9-*}
-QS "Num-StressedSyl_before_C-Syl_in_C-Phrase==10"	{*#10-*}
-QS "Num-StressedSyl_before_C-Syl_in_C-Phrase==11"	{*#11-*}
-QS "Num-StressedSyl_before_C-Syl_in_C-Phrase==12"	{*#12-*}
-
-QS "Num-StressedSyl_before_C-Syl_in_C-Phrase<=1"	{*#x-*,*#1-*}
-QS "Num-StressedSyl_before_C-Syl_in_C-Phrase<=2"	{*#x-*,*#1-*,*#2-*}
-QS "Num-StressedSyl_before_C-Syl_in_C-Phrase<=3"	{*#x-*,*#1-*,*#2-*,*#3-*}
-QS "Num-StressedSyl_before_C-Syl_in_C-Phrase<=4"	{*#x-*,*#1-*,*#2-*,*#3-*,*#4-*}
-QS "Num-StressedSyl_before_C-Syl_in_C-Phrase<=5"	{*#x-*,*#1-*,*#2-*,*#3-*,*#4-*,*#5-*}
-QS "Num-StressedSyl_before_C-Syl_in_C-Phrase<=6"	{*#x-*,*#1-*,*#2-*,*#3-*,*#4-*,*#5-*,*#6-*}
-QS "Num-StressedSyl_before_C-Syl_in_C-Phrase<=7"	{*#x-*,*#1-*,*#2-*,*#3-*,*#4-*,*#5-*,*#6-*,*#7-*}
-QS "Num-StressedSyl_before_C-Syl_in_C-Phrase<=8"	{*#x-*,*#1-*,*#2-*,*#3-*,*#4-*,*#5-*,*#6-*,*#7-*,*#8-*}
-QS "Num-StressedSyl_before_C-Syl_in_C-Phrase<=9"	{*#?-*}
-QS "Num-StressedSyl_before_C-Syl_in_C-Phrase<=10"	{*#?-*,*#10-*}
-QS "Num-StressedSyl_before_C-Syl_in_C-Phrase<=11"	{*#?-*,*#10-*,*#11-*}
-QS "Num-StressedSyl_before_C-Syl_in_C-Phrase<=12"	{*#?-*,*#10-*,*#11-*,*#12-*}
-
-
-
-QS "Num-StressedSyl_after_C-Syl_in_C-Phrase==x"		{*-x$*}
-QS "Num-StressedSyl_after_C-Syl_in_C-Phrase==1"		{*-1$*}
-QS "Num-StressedSyl_after_C-Syl_in_C-Phrase==2"		{*-2$*}
-QS "Num-StressedSyl_after_C-Syl_in_C-Phrase==3"		{*-3$*}
-QS "Num-StressedSyl_after_C-Syl_in_C-Phrase==4"		{*-4$*}
-QS "Num-StressedSyl_after_C-Syl_in_C-Phrase==5"		{*-5$*}
-QS "Num-StressedSyl_after_C-Syl_in_C-Phrase==6"		{*-6$*}
-QS "Num-StressedSyl_after_C-Syl_in_C-Phrase==7"		{*-7$*}
-QS "Num-StressedSyl_after_C-Syl_in_C-Phrase==8"		{*-8$*}
-QS "Num-StressedSyl_after_C-Syl_in_C-Phrase==9"		{*-9$*}
-QS "Num-StressedSyl_after_C-Syl_in_C-Phrase==10"	{*-10$*}
-QS "Num-StressedSyl_after_C-Syl_in_C-Phrase==11"	{*-11$*}
-QS "Num-StressedSyl_after_C-Syl_in_C-Phrase==12"	{*-12$*}
-
-QS "Num-StressedSyl_after_C-Syl_in_C-Phrase<=1"		{*-x$*,*-1$*}
-QS "Num-StressedSyl_after_C-Syl_in_C-Phrase<=2"		{*-x$*,*-1$*,*-2$*}
-QS "Num-StressedSyl_after_C-Syl_in_C-Phrase<=3"		{*-x$*,*-1$*,*-2$*,*-3$*}
-QS "Num-StressedSyl_after_C-Syl_in_C-Phrase<=4"		{*-x$*,*-1$*,*-2$*,*-3$*,*-4$*}
-QS "Num-StressedSyl_after_C-Syl_in_C-Phrase<=5"		{*-x$*,*-1$*,*-2$*,*-3$*,*-4$*,*-5$*}
-QS "Num-StressedSyl_after_C-Syl_in_C-Phrase<=6"		{*-x$*,*-1$*,*-2$*,*-3$*,*-4$*,*-5$*,*-6$*}
-QS "Num-StressedSyl_after_C-Syl_in_C-Phrase<=7"		{*-x$*,*-1$*,*-2$*,*-3$*,*-4$*,*-5$*,*-6$*,*-7$*}
-QS "Num-StressedSyl_after_C-Syl_in_C-Phrase<=8"		{*-x$*,*-1$*,*-2$*,*-3$*,*-4$*,*-5$*,*-6$*,*-7$*,*-8$*}
-QS "Num-StressedSyl_after_C-Syl_in_C-Phrase<=9"		{*-?$*}
-QS "Num-StressedSyl_after_C-Syl_in_C-Phrase<=10"	{*-?$*,*-10$*}
-QS "Num-StressedSyl_after_C-Syl_in_C-Phrase<=11"	{*-?$*,*-10$*,*-11$*}
-QS "Num-StressedSyl_after_C-Syl_in_C-Phrase<=12"	{*-?$*,*-10$*,*-11$*,*-12$*}
-
-
-
-QS "Num-AccentedSyl_before_C-Syl_in_C-Phrase==x"	{*$x-*}
-QS "Num-AccentedSyl_before_C-Syl_in_C-Phrase==1"	{*$1-*}
-QS "Num-AccentedSyl_before_C-Syl_in_C-Phrase==2"	{*$2-*}
-QS "Num-AccentedSyl_before_C-Syl_in_C-Phrase==3"	{*$3-*}
-QS "Num-AccentedSyl_before_C-Syl_in_C-Phrase==4"	{*$4-*}
-QS "Num-AccentedSyl_before_C-Syl_in_C-Phrase==5"	{*$5-*}
-QS "Num-AccentedSyl_before_C-Syl_in_C-Phrase==6"	{*$6-*}
-
-QS "Num-AccentedSyl_before_C-Syl_in_C-Phrase<=1"	{*$x-*,*$1-*}
-QS "Num-AccentedSyl_before_C-Syl_in_C-Phrase<=2"	{*$x-*,*$1-*,*$2-*}
-QS "Num-AccentedSyl_before_C-Syl_in_C-Phrase<=3"	{*$x-*,*$1-*,*$2-*,*$3-*}
-QS "Num-AccentedSyl_before_C-Syl_in_C-Phrase<=4"	{*$x-*,*$1-*,*$2-*,*$3-*,*$4-*}
-QS "Num-AccentedSyl_before_C-Syl_in_C-Phrase<=5"	{*$x-*,*$1-*,*$2-*,*$3-*,*$4-*,*$5-*}
-QS "Num-AccentedSyl_before_C-Syl_in_C-Phrase<=6"	{*$x-*,*$1-*,*$2-*,*$3-*,*$4-*,*$5-*,*$6-*}
-
-
-
-QS "Num-AccentedSyl_after_C-Syl_in_C-Phrase==x"	{*-x!*}
-QS "Num-AccentedSyl_after_C-Syl_in_C-Phrase==1"	{*-1!*}
-QS "Num-AccentedSyl_after_C-Syl_in_C-Phrase==2"	{*-2!*}
-QS "Num-AccentedSyl_after_C-Syl_in_C-Phrase==3"	{*-3!*}
-QS "Num-AccentedSyl_after_C-Syl_in_C-Phrase==4"	{*-4!*}
-QS "Num-AccentedSyl_after_C-Syl_in_C-Phrase==5"	{*-5!*}
-QS "Num-AccentedSyl_after_C-Syl_in_C-Phrase==6"	{*-6!*}
-QS "Num-AccentedSyl_after_C-Syl_in_C-Phrase==7"	{*-7!*}
-
-QS "Num-AccentedSyl_after_C-Syl_in_C-Phrase<=1"	{*-x!*,*-1!*}
-QS "Num-AccentedSyl_after_C-Syl_in_C-Phrase<=2"	{*-x!*,*-1!*,*-2!*}
-QS "Num-AccentedSyl_after_C-Syl_in_C-Phrase<=3"	{*-x!*,*-1!*,*-2!*,*-3!*}
-QS "Num-AccentedSyl_after_C-Syl_in_C-Phrase<=4"	{*-x!*,*-1!*,*-2!*,*-3!*,*-4!*}
-QS "Num-AccentedSyl_after_C-Syl_in_C-Phrase<=5"	{*-x!*,*-1!*,*-2!*,*-3!*,*-4!*,*-5!*}
-QS "Num-AccentedSyl_after_C-Syl_in_C-Phrase<=6"	{*-x!*,*-1!*,*-2!*,*-3!*,*-4!*,*-5!*,*-6!*}
-QS "Num-AccentedSyl_after_C-Syl_in_C-Phrase<=7"	{*-x!*,*-1!*,*-2!*,*-3!*,*-4!*,*-5!*,*-6!*,*-7!*}
-
-
-
-QS "Num-Syl_from_prev-StressedSyl==x"	{*!x-*}
-QS "Num-Syl_from_prev-StressedSyl==0"	{*!0-*}
-QS "Num-Syl_from_prev-StressedSyl==1"	{*!1-*}
-QS "Num-Syl_from_prev-StressedSyl==2"	{*!2-*}
-QS "Num-Syl_from_prev-StressedSyl==3"	{*!3-*}
-QS "Num-Syl_from_prev-StressedSyl==4"	{*!4-*}
-QS "Num-Syl_from_prev-StressedSyl==5"	{*!5-*}
-
-QS "Num-Syl_from_prev-StressedSyl<=0"	{*!x-*,*!0-*}
-QS "Num-Syl_from_prev-StressedSyl<=1"	{*!x-*,*!0-*,*!1-*}
-QS "Num-Syl_from_prev-StressedSyl<=2"	{*!x-*,*!0-*,*!1-*,*!2-*}
-QS "Num-Syl_from_prev-StressedSyl<=3"	{*!x-*,*!0-*,*!1-*,*!2-*,*!3-*}
-QS "Num-Syl_from_prev-StressedSyl<=4"	{*!x-*,*!0-*,*!1-*,*!2-*,*!3-*,*!4-*}
-QS "Num-Syl_from_prev-StressedSyl<=5"	{*!x-*,*!0-*,*!1-*,*!2-*,*!3-*,*!4-*,*!5-*}
-
-
-
-QS "Num-Syl_from_next-StressedSyl==x"	{*-x;*}
-QS "Num-Syl_from_next-StressedSyl==0"	{*-0;*}
-QS "Num-Syl_from_next-StressedSyl==1"	{*-1;*}
-QS "Num-Syl_from_next-StressedSyl==2"	{*-2;*}
-QS "Num-Syl_from_next-StressedSyl==3"	{*-3;*}
-QS "Num-Syl_from_next-StressedSyl==4"	{*-4;*}
-QS "Num-Syl_from_next-StressedSyl==5"	{*-5;*}
-
-QS "Num-Syl_from_next-StressedSyl<=0"	{*-x;*,*-0;*}
-QS "Num-Syl_from_next-StressedSyl<=1"	{*-x;*,*-0;*,*-1;*}
-QS "Num-Syl_from_next-StressedSyl<=2"	{*-x;*,*-0;*,*-1;*,*-2;*}
-QS "Num-Syl_from_next-StressedSyl<=3"	{*-x;*,*-0;*,*-1;*,*-2;*,*-3;*}
-QS "Num-Syl_from_next-StressedSyl<=4"	{*-x;*,*-0;*,*-1;*,*-2;*,*-3;*,*-4;*}
-QS "Num-Syl_from_next-StressedSyl<=5"	{*-x;*,*-0;*,*-1;*,*-2;*,*-3;*,*-4;*,*-5;*}
-
-
-
-QS "Num-Syl_from_prev-AccentedSyl==x"	{*;x-*}
-QS "Num-Syl_from_prev-AccentedSyl==0"	{*;0-*}
-QS "Num-Syl_from_prev-AccentedSyl==1"	{*;1-*}
-QS "Num-Syl_from_prev-AccentedSyl==2"	{*;2-*}
-QS "Num-Syl_from_prev-AccentedSyl==3"	{*;3-*}
-QS "Num-Syl_from_prev-AccentedSyl==4"	{*;4-*}
-QS "Num-Syl_from_prev-AccentedSyl==5"	{*;5-*}
-QS "Num-Syl_from_prev-AccentedSyl==6"	{*;6-*}
-QS "Num-Syl_from_prev-AccentedSyl==7"	{*;7-*}
-QS "Num-Syl_from_prev-AccentedSyl==8"	{*;8-*}
-QS "Num-Syl_from_prev-AccentedSyl==9"	{*;9-*}
-QS "Num-Syl_from_prev-AccentedSyl==10"	{*;10-*}
-QS "Num-Syl_from_prev-AccentedSyl==11"	{*;11-*}
-QS "Num-Syl_from_prev-AccentedSyl==12"	{*;12-*}
-QS "Num-Syl_from_prev-AccentedSyl==13"	{*;13-*}
-QS "Num-Syl_from_prev-AccentedSyl==14"	{*;14-*}
-QS "Num-Syl_from_prev-AccentedSyl==15"	{*;15-*}
-QS "Num-Syl_from_prev-AccentedSyl==16"	{*;16-*}
-
-QS "Num-Syl_from_prev-AccentedSyl<=0"	{*;x-*,*;0-*}
-QS "Num-Syl_from_prev-AccentedSyl<=1"	{*;x-*,*;0-*,*;1-*}
-QS "Num-Syl_from_prev-AccentedSyl<=2"	{*;x-*,*;0-*,*;1-*,*;2-*}
-QS "Num-Syl_from_prev-AccentedSyl<=3"	{*;x-*,*;0-*,*;1-*,*;2-*,*;3-*}
-QS "Num-Syl_from_prev-AccentedSyl<=4"	{*;x-*,*;0-*,*;1-*,*;2-*,*;3-*,*;4-*}
-QS "Num-Syl_from_prev-AccentedSyl<=5"	{*;x-*,*;0-*,*;1-*,*;2-*,*;3-*,*;4-*,*;5-*}
-QS "Num-Syl_from_prev-AccentedSyl<=6"	{*;x-*,*;0-*,*;1-*,*;2-*,*;3-*,*;4-*,*;5-*,*;6-*}
-QS "Num-Syl_from_prev-AccentedSyl<=7"	{*;x-*,*;0-*,*;1-*,*;2-*,*;3-*,*;4-*,*;5-*,*;6-*,*;7-*}
-QS "Num-Syl_from_prev-AccentedSyl<=8"	{*;x-*,*;0-*,*;1-*,*;2-*,*;3-*,*;4-*,*;5-*,*;6-*,*;7-*,*;8-*}
-QS "Num-Syl_from_prev-AccentedSyl<=9"	{*;?-*}
-QS "Num-Syl_from_prev-AccentedSyl<=10"	{*;?-*,*;10-*}
-QS "Num-Syl_from_prev-AccentedSyl<=11"	{*;?-*,*;10-*,*;11-*}
-QS "Num-Syl_from_prev-AccentedSyl<=12"	{*;?-*,*;10-*,*;11-*,*;12-*}
-QS "Num-Syl_from_prev-AccentedSyl<=13"	{*;?-*,*;10-*,*;11-*,*;12-*,*;13-*}
-QS "Num-Syl_from_prev-AccentedSyl<=14"	{*;?-*,*;10-*,*;11-*,*;12-*,*;13-*,*;14-*}
-QS "Num-Syl_from_prev-AccentedSyl<=15"	{*;?-*,*;10-*,*;11-*,*;12-*,*;13-*,*;14-*,*;15-*}
-QS "Num-Syl_from_prev-AccentedSyl<=16"	{*;?-*,*;10-*,*;11-*,*;12-*,*;13-*,*;14-*,*;15-*,*;16-*}
-
-
-
-QS "Num-Syl_from_next-AccentedSyl==x"	{*-x|*}
-QS "Num-Syl_from_next-AccentedSyl==0"	{*-0|*}
-QS "Num-Syl_from_next-AccentedSyl==1"	{*-1|*}
-QS "Num-Syl_from_next-AccentedSyl==2"	{*-2|*}
-QS "Num-Syl_from_next-AccentedSyl==3"	{*-3|*}
-QS "Num-Syl_from_next-AccentedSyl==4"	{*-4|*}
-QS "Num-Syl_from_next-AccentedSyl==5"	{*-5|*}
-QS "Num-Syl_from_next-AccentedSyl==6"	{*-6|*}
-QS "Num-Syl_from_next-AccentedSyl==7"	{*-7|*}
-QS "Num-Syl_from_next-AccentedSyl==8"	{*-8|*}
-QS "Num-Syl_from_next-AccentedSyl==9"	{*-9|*}
-QS "Num-Syl_from_next-AccentedSyl==10"	{*-10|*}
-QS "Num-Syl_from_next-AccentedSyl==11"	{*-11|*}
-QS "Num-Syl_from_next-AccentedSyl==12"	{*-12|*}
-QS "Num-Syl_from_next-AccentedSyl==13"	{*-13|*}
-QS "Num-Syl_from_next-AccentedSyl==14"	{*-14|*}
-QS "Num-Syl_from_next-AccentedSyl==15"	{*-15|*}
-QS "Num-Syl_from_next-AccentedSyl==16"	{*-16|*}
-
-QS "Num-Syl_from_next-AccentedSyl<=0"	{*-x|*,*-0|*}
-QS "Num-Syl_from_next-AccentedSyl<=1"	{*-x|*,*-0|*,*-1|*}
-QS "Num-Syl_from_next-AccentedSyl<=2"	{*-x|*,*-0|*,*-1|*,*-2|*}
-QS "Num-Syl_from_next-AccentedSyl<=3"	{*-x|*,*-0|*,*-1|*,*-2|*,*-3|*}
-QS "Num-Syl_from_next-AccentedSyl<=4"	{*-x|*,*-0|*,*-1|*,*-2|*,*-3|*,*-4|*}
-QS "Num-Syl_from_next-AccentedSyl<=5"	{*-x|*,*-0|*,*-1|*,*-2|*,*-3|*,*-4|*,*-5|*}
-QS "Num-Syl_from_next-AccentedSyl<=6"	{*-x|*,*-0|*,*-1|*,*-2|*,*-3|*,*-4|*,*-5|*,*-6|*}
-QS "Num-Syl_from_next-AccentedSyl<=7"	{*-x|*,*-0|*,*-1|*,*-2|*,*-3|*,*-4|*,*-5|*,*-6|*,*-7|*}
-QS "Num-Syl_from_next-AccentedSyl<=8"	{*-x|*,*-0|*,*-1|*,*-2|*,*-3|*,*-4|*,*-5|*,*-6|*,*-7|*,*-8|*}
-QS "Num-Syl_from_next-AccentedSyl<=9"	{*-?|*}
-QS "Num-Syl_from_next-AccentedSyl<=10"	{*-?|*,*-10|*}
-QS "Num-Syl_from_next-AccentedSyl<=11"	{*-?|*,*-10|*,*-11|*}
-QS "Num-Syl_from_next-AccentedSyl<=12"	{*-?|*,*-10|*,*-11|*,*-12|*}
-QS "Num-Syl_from_next-AccentedSyl<=13"	{*-?|*,*-10|*,*-11|*,*-12|*,*-13|*}
-QS "Num-Syl_from_next-AccentedSyl<=14"	{*-?|*,*-10|*,*-11|*,*-12|*,*-13|*,*-14|*}
-QS "Num-Syl_from_next-AccentedSyl<=15"	{*-?|*,*-10|*,*-11|*,*-12|*,*-13|*,*-14|*,*-15|*}
-QS "Num-Syl_from_next-AccentedSyl<=16"	{*-?|*,*-10|*,*-11|*,*-12|*,*-13|*,*-14|*,*-15|*,*-16|*}
-
-
-
-QS "C-Syl_Vowel==x"			{*|x/C:*}
-QS "C-Syl_Vowel==no"		{*|novowel/C:*}
-QS "C-Syl_Vowel"			{*|aa/C:*,*|ae/C:*,*|ah/C:*,*|ao/C:*,*|aw/C:*,*|ax/C:*,*|axr/C:*,*|ay/C:*,*|eh/C:*,*|el/C:*,*|em/C:*,*|en/C:*,*|er/C:*,*|ey/C:*,*|ih/C:*,*|ix/C:*,*|iy/C:*,*|ow/C:*,*|oy/C:*,*|uh/C:*,*|uw/C:*}
-QS "C-Syl_Front_Vowel"		{*|ae/C:*,*|eh/C:*,*|ey/C:*,*|ih/C:*,*|iy/C:*}
-QS "C-Syl_Central_Vowel"	{*|aa/C:*,*|ah/C:*,*|ao/C:*,*|axr/C:*,*|er/C:*}
-QS "C-Syl_Back_Vowel"		{*|ax/C:*,*|ow/C:*,*|uh/C:*,*|uw/C:*}
-QS "C-Syl_Long_Vowel"		{*|ao/C:*,*|aw/C:*,*|el/C:*,*|em/C:*,*|en/C:*,*|en/C:*,*|iy/C:*,*|ow/C:*,*|uw/C:*}
-QS "C-Syl_Short_Vowel"		{*|aa/C:*,*|ah/C:*,*|ax/C:*,*|ay/C:*,*|eh/C:*,*|ey/C:*,*|ih/C:*,*|ix/C:*,*|oy/C:*,*|uh/C:*}
-QS "C-Syl_Dipthong_Vowel"	{*|aw/C:*,*|axr/C:*,*|ay/C:*,*|el/C:*,*|em/C:*,*|en/C:*,*|er/C:*,*|ey/C:*,*|oy/C:*}
-QS "C-Syl_Front_Start"		{*|aw/C:*,*|axr/C:*,*|er/C:*,*|ey/C:*}
-QS "C-Syl_Fronting_Vowel"	{*|ay/C:*,*|ey/C:*,*|oy/C:*}
-QS "C-Syl_High_Vowel"		{*|ih/C:*,*|ix/C:*,*|iy/C:*,*|uh/C:*,*|uw/C:*}
-QS "C-Syl_Medium_Vowel"		{*|ae/C:*,*|ah/C:*,*|ax/C:*,*|axr/C:*,*|eh/C:*,*|el/C:*,*|em/C:*,*|en/C:*,*|er/C:*,*|ey/C:*,*|ow/C:*}
-QS "C-Syl_Low_Vowel"		{*|aa/C:*,*|ae/C:*,*|ah/C:*,*|ao/C:*,*|aw/C:*,*|ay/C:*,*|oy/C:*}
-QS "C-Syl_Rounded_Vowel"	{*|ao/C:*,*|ow/C:*,*|oy/C:*,*|uh/C:*,*|uw/C:*,*|w/C:*}
-QS "C-Syl_Unrounded_Vowel"	{*|aa/C:*,*|ae/C:*,*|ah/C:*,*|aw/C:*,*|ax/C:*,*|axr/C:*,*|ay/C:*,*|eh/C:*,*|el/C:*,*|em/C:*,*|en/C:*,*|er/C:*,*|ey/C:*,*|hh/C:*,*|ih/C:*,*|ix/C:*,*|iy/C:*,*|l/C:*,*|r/C:*,*|y/C:*}
-QS "C-Syl_Reduced_Vowel"	{*|ax/C:*,*|axr/C:*,*|ix/C:*}
-QS "C-Syl_IVowel"			{*|ih/C:*,*|ix/C:*,*|iy/C:*}
-QS "C-Syl_EVowel"			{*|eh/C:*,*|ey/C:*}
-QS "C-Syl_AVowel"			{*|aa/C:*,*|ae/C:*,*|aw/C:*,*|axr/C:*,*|ay/C:*,*|er/C:*}
-QS "C-Syl_OVowel"			{*|ao/C:*,*|ow/C:*,*|oy/C:*}
-QS "C-Syl_UVowel"			{*|ah/C:*,*|ax/C:*,*|el/C:*,*|em/C:*,*|en/C:*,*|uh/C:*,*|uw/C:*}
-QS "C-Syl_aa"				{*|aa/C:*}
-QS "C-Syl_ae"				{*|ae/C:*}
-QS "C-Syl_ah"				{*|ah/C:*}
-QS "C-Syl_ao"				{*|ao/C:*}
-QS "C-Syl_aw"				{*|aw/C:*}
-QS "C-Syl_ax"				{*|ax/C:*}
-QS "C-Syl_axr"				{*|axr/C:*}
-QS "C-Syl_ay"				{*|ay/C:*}
-QS "C-Syl_eh"				{*|eh/C:*}
-QS "C-Syl_el"				{*|el/C:*}
-QS "C-Syl_em"				{*|em/C:*}
-QS "C-Syl_en"				{*|en/C:*}
-QS "C-Syl_er"				{*|er/C:*}
-QS "C-Syl_ey"				{*|ey/C:*}
-QS "C-Syl_ih"				{*|ih/C:*}
-QS "C-Syl_iy"				{*|iy/C:*}
-QS "C-Syl_ow"				{*|ow/C:*}
-QS "C-Syl_oy"				{*|oy/C:*}
-QS "C-Syl_uh"				{*|uh/C:*}
-QS "C-Syl_uw"				{*|uw/C:*}
-
-
-
-QS "R-Syl_Stress==1"		{*/C:1+*}
-QS "R-Syl_Stress==0"		{*/C:0+*}
-
-
-
-QS "R-Syl_Accent==1"		{*+1+*}
-QS "R-Syl_Accent==0"		{*+0+*}
-
-
-
-QS "R-Syl_Num-Segs==0"	{*+0/D:*}
-QS "R-Syl_Num-Segs==1"	{*+1/D:*}
-QS "R-Syl_Num-Segs==2"	{*+2/D:*}
-QS "R-Syl_Num-Segs==3"	{*+3/D:*}
-QS "R-Syl_Num-Segs==4"	{*+4/D:*}
-QS "R-Syl_Num-Segs==5"	{*+5/D:*}
-QS "R-Syl_Num-Segs==6"	{*+6/D:*}
-QS "R-Syl_Num-Segs==7"	{*+7/D:*}
-
-QS "R-Syl_Num-Segs<=1"	{*+0/D:*,*+1/D:*}
-QS "R-Syl_Num-Segs<=2"	{*+0/D:*,*+1/D:*,*+2/D:*}
-QS "R-Syl_Num-Segs<=3"	{*+0/D:*,*+1/D:*,*+2/D:*,*+3/D:*}
-QS "R-Syl_Num-Segs<=4"	{*+0/D:*,*+1/D:*,*+2/D:*,*+3/D:*,*+4/D:*}
-QS "R-Syl_Num-Segs<=5"	{*+0/D:*,*+1/D:*,*+2/D:*,*+3/D:*,*+4/D:*,*+5/D:*}
-QS "R-Syl_Num-Segs<=6"	{*+0/D:*,*+1/D:*,*+2/D:*,*+3/D:*,*+4/D:*,*+5/D:*,*+6/D:*}
-QS "R-Syl_Num-Segs<=7"	{*+0/D:*,*+1/D:*,*+2/D:*,*+3/D:*,*+4/D:*,*+5/D:*,*+6/D:*,*+7/D:*}
-
-
-
-QS "L-Word_GPOS==0"			{*/D:0_*}
-QS "L-Word_GPOS==aux"		{*/D:aux_*}
-QS "L-Word_GPOS==cc"		{*/D:cc_*}
-QS "L-Word_GPOS==content"	{*/D:content_*}
-QS "L-Word_GPOS==det"		{*/D:det_*}
-QS "L-Word_GPOS==in"		{*/D:in_*}
-QS "L-Word_GPOS==md"		{*/D:md_*}
-QS "L-Word_GPOS==pps"		{*/D:pps_*}
-QS "L-Word_GPOS==punc"		{*/D:punc_*}
-QS "L-Word_GPOS==to"		{*/D:to_*}
-QS "L-Word_GPOS==wp"		{*/D:wp_*}
-
-
-
-QS "L-Word_Num-Syls==0"	{*_0/E:*}
-QS "L-Word_Num-Syls==1"	{*_1/E:*}
-QS "L-Word_Num-Syls==2"	{*_2/E:*}
-QS "L-Word_Num-Syls==3"	{*_3/E:*}
-QS "L-Word_Num-Syls==4"	{*_4/E:*}
-QS "L-Word_Num-Syls==5"	{*_5/E:*}
-QS "L-Word_Num-Syls==6"	{*_6/E:*}
-QS "L-Word_Num-Syls==7"	{*_7/E:*}
-
-QS "L-Word_Num-Syls<=1"	{*_0/E:*,*_1/E:*}
-QS "L-Word_Num-Syls<=2"	{*_0/E:*,*_1/E:*,*_2/E:*}
-QS "L-Word_Num-Syls<=3"	{*_0/E:*,*_1/E:*,*_2/E:*,*_3/E:*}
-QS "L-Word_Num-Syls<=4"	{*_0/E:*,*_1/E:*,*_2/E:*,*_3/E:*,*_4/E:*}
-QS "L-Word_Num-Syls<=5"	{*_0/E:*,*_1/E:*,*_2/E:*,*_3/E:*,*_4/E:*,*_5/E:*}
-QS "L-Word_Num-Syls<=6"	{*_0/E:*,*_1/E:*,*_2/E:*,*_3/E:*,*_4/E:*,*_5/E:*,*_6/E:*}
-QS "L-Word_Num-Syls<=7"	{*_0/E:*,*_1/E:*,*_2/E:*,*_3/E:*,*_4/E:*,*_5/E:*,*_6/E:*,*_7/E:*}
-
-
-
-QS "C-Word_GPOS==x"		{*/E:x+*}
-QS "C-Word_GPOS==aux"		{*/E:aux+*}
-QS "C-Word_GPOS==cc"		{*/E:cc+*}
-QS "C-Word_GPOS==content"	{*/E:content+*}
-QS "C-Word_GPOS==det"		{*/E:det+*}
-QS "C-Word_GPOS==in"		{*/E:in+*}
-QS "C-Word_GPOS==md"		{*/E:md+*}
-QS "C-Word_GPOS==pps"		{*/E:pps+*}
-QS "C-Word_GPOS==punc"		{*/E:punc+*}
-QS "C-Word_GPOS==to"		{*/E:to+*}
-QS "C-Word_GPOS==wp"		{*/E:wp+*}
-
-
-
-QS "C-Word_Num-Syls==x"	{*+x@*}
-QS "C-Word_Num-Syls==1"	{*+1@*}
-QS "C-Word_Num-Syls==2"	{*+2@*}
-QS "C-Word_Num-Syls==3"	{*+3@*}
-QS "C-Word_Num-Syls==4"	{*+4@*}
-QS "C-Word_Num-Syls==5"	{*+5@*}
-QS "C-Word_Num-Syls==6"	{*+6@*}
-QS "C-Word_Num-Syls==7"	{*+7@*}
-
-QS "C-Word_Num-Syls<=1"	{*+x@*,*+1@*}
-QS "C-Word_Num-Syls<=2"	{*+x@*,*+1@*,*+2@*}
-QS "C-Word_Num-Syls<=3"	{*+x@*,*+1@*,*+2@*,*+3@*}
-QS "C-Word_Num-Syls<=4"	{*+x@*,*+1@*,*+2@*,*+3@*,*+4@*}
-QS "C-Word_Num-Syls<=5"	{*+x@*,*+1@*,*+2@*,*+3@*,*+4@*,*+5@*}
-QS "C-Word_Num-Syls<=6"	{*+x@*,*+1@*,*+2@*,*+3@*,*+4@*,*+5@*,*+6@*}
-QS "C-Word_Num-Syls<=7"	{*+x@*,*+1@*,*+2@*,*+3@*,*+4@*,*+5@*,*+6@*,*+7@*}
-
-
-
-QS "Pos_C-Word_in_C-Phrase(Fw)==x"	{*@x+*}
-QS "Pos_C-Word_in_C-Phrase(Fw)==1"	{*@1+*}
-QS "Pos_C-Word_in_C-Phrase(Fw)==2"	{*@2+*}
-QS "Pos_C-Word_in_C-Phrase(Fw)==3"	{*@3+*}
-QS "Pos_C-Word_in_C-Phrase(Fw)==4"	{*@4+*}
-QS "Pos_C-Word_in_C-Phrase(Fw)==5"	{*@5+*}
-QS "Pos_C-Word_in_C-Phrase(Fw)==6"	{*@6+*}
-QS "Pos_C-Word_in_C-Phrase(Fw)==7"	{*@7+*}
-QS "Pos_C-Word_in_C-Phrase(Fw)==8"	{*@8+*}
-QS "Pos_C-Word_in_C-Phrase(Fw)==9"	{*@9+*}
-QS "Pos_C-Word_in_C-Phrase(Fw)==10"	{*@10+*}
-QS "Pos_C-Word_in_C-Phrase(Fw)==11"	{*@11+*}
-QS "Pos_C-Word_in_C-Phrase(Fw)==12"	{*@12+*}
-QS "Pos_C-Word_in_C-Phrase(Fw)==13"	{*@13+*}
-
-QS "Pos_C-Word_in_C-Phrase(Fw)<=1"	{*@x+*,*@1+*}
-QS "Pos_C-Word_in_C-Phrase(Fw)<=2"	{*@x+*,*@1+*,*@2+*}
-QS "Pos_C-Word_in_C-Phrase(Fw)<=3"	{*@x+*,*@1+*,*@2+*,*@3+*}
-QS "Pos_C-Word_in_C-Phrase(Fw)<=4"	{*@x+*,*@1+*,*@2+*,*@3+*,*@4+*}
-QS "Pos_C-Word_in_C-Phrase(Fw)<=5"	{*@x+*,*@1+*,*@2+*,*@3+*,*@4+*,*@5+*}
-QS "Pos_C-Word_in_C-Phrase(Fw)<=6"	{*@x+*,*@1+*,*@2+*,*@3+*,*@4+*,*@5+*,*@6+*}
-QS "Pos_C-Word_in_C-Phrase(Fw)<=7"	{*@x+*,*@1+*,*@2+*,*@3+*,*@4+*,*@5+*,*@6+*,*@7+*}
-QS "Pos_C-Word_in_C-Phrase(Fw)<=8"	{*@x+*,*@1+*,*@2+*,*@3+*,*@4+*,*@5+*,*@6+*,*@7+*,*@8+*}
-QS "Pos_C-Word_in_C-Phrase(Fw)<=9"	{*@?+*}
-QS "Pos_C-Word_in_C-Phrase(Fw)<=10"	{*@?+*,*@10+*}
-QS "Pos_C-Word_in_C-Phrase(Fw)<=11"	{*@?+*,*@10+*,*@11+*}
-QS "Pos_C-Word_in_C-Phrase(Fw)<=12"	{*@?+*,*@10+*,*@11+*,*@12+*}
-QS "Pos_C-Word_in_C-Phrase(Fw)<=13"	{*@?+*,*@10+*,*@11+*,*@12+*,*@13+*}
-
-
-
-QS "Pos_C-Word_in_C-Phrase(Bw)==x"	{*+x&*}
-QS "Pos_C-Word_in_C-Phrase(Bw)==0"	{*+0&*}
-QS "Pos_C-Word_in_C-Phrase(Bw)==1"	{*+1&*}
-QS "Pos_C-Word_in_C-Phrase(Bw)==2"	{*+2&*}
-QS "Pos_C-Word_in_C-Phrase(Bw)==3"	{*+3&*}
-QS "Pos_C-Word_in_C-Phrase(Bw)==4"	{*+4&*}
-QS "Pos_C-Word_in_C-Phrase(Bw)==5"	{*+5&*}
-QS "Pos_C-Word_in_C-Phrase(Bw)==6"	{*+6&*}
-QS "Pos_C-Word_in_C-Phrase(Bw)==7"	{*+7&*}
-QS "Pos_C-Word_in_C-Phrase(Bw)==8"	{*+8&*}
-QS "Pos_C-Word_in_C-Phrase(Bw)==9"	{*+9&*}
-QS "Pos_C-Word_in_C-Phrase(Bw)==10"	{*+10&*}
-QS "Pos_C-Word_in_C-Phrase(Bw)==11"	{*+11&*}
-QS "Pos_C-Word_in_C-Phrase(Bw)==12"	{*+12&*}
-QS "Pos_C-Word_in_C-Phrase(Bw)==13"	{*+13&*}
-
-QS "Pos_C-Word_in_C-Phrase(Bw)<=1"	{*+x&*,*+0&*,*+1&*}
-QS "Pos_C-Word_in_C-Phrase(Bw)<=2"	{*+x&*,*+0&*,*+1&*,*+2&*}
-QS "Pos_C-Word_in_C-Phrase(Bw)<=3"	{*+x&*,*+0&*,*+1&*,*+2&*,*+3&*}
-QS "Pos_C-Word_in_C-Phrase(Bw)<=4"	{*+x&*,*+0&*,*+1&*,*+2&*,*+3&*,*+4&*}
-QS "Pos_C-Word_in_C-Phrase(Bw)<=5"	{*+x&*,*+0&*,*+1&*,*+2&*,*+3&*,*+4&*,*+5&*}
-QS "Pos_C-Word_in_C-Phrase(Bw)<=6"	{*+x&*,*+0&*,*+1&*,*+2&*,*+3&*,*+4&*,*+5&*,*+6&*}
-QS "Pos_C-Word_in_C-Phrase(Bw)<=7"	{*+x&*,*+0&*,*+1&*,*+2&*,*+3&*,*+4&*,*+5&*,*+6&*,*+7&*}
-QS "Pos_C-Word_in_C-Phrase(Bw)<=8"	{*+x&*,*+0&*,*+1&*,*+2&*,*+3&*,*+4&*,*+5&*,*+6&*,*+7&*,*+8&*}
-QS "Pos_C-Word_in_C-Phrase(Bw)<=9"	{*+?&*}
-QS "Pos_C-Word_in_C-Phrase(Bw)<=10"	{*+?&*,*+10&*}
-QS "Pos_C-Word_in_C-Phrase(Bw)<=11"	{*+?&*,*+10&*,*+11&*}
-QS "Pos_C-Word_in_C-Phrase(Bw)<=12"	{*+?&*,*+10&*,*+11&*,*+12&*}
-QS "Pos_C-Word_in_C-Phrase(Bw)<=13"	{*+?&*,*+10&*,*+11&*,*+12&*,*+13&*}
-
-
-
-QS "Num-ContWord_before_C-Word_in_C-Phrase==x"	{*&x+*}
-QS "Num-ContWord_before_C-Word_in_C-Phrase==1"	{*&1+*}
-QS "Num-ContWord_before_C-Word_in_C-Phrase==2"	{*&2+*}
-QS "Num-ContWord_before_C-Word_in_C-Phrase==3"	{*&3+*}
-QS "Num-ContWord_before_C-Word_in_C-Phrase==4"	{*&4+*}
-QS "Num-ContWord_before_C-Word_in_C-Phrase==5"	{*&5+*}
-QS "Num-ContWord_before_C-Word_in_C-Phrase==6"	{*&6+*}
-QS "Num-ContWord_before_C-Word_in_C-Phrase==7"	{*&7+*}
-QS "Num-ContWord_before_C-Word_in_C-Phrase==8"	{*&8+*}
-QS "Num-ContWord_before_C-Word_in_C-Phrase==9"	{*&9+*}
-
-QS "Num-ContWord_before_C-Word_in_C-Phrase<=1"	{*&x+*,*&1+*}
-QS "Num-ContWord_before_C-Word_in_C-Phrase<=2"	{*&x+*,*&1+*,*&2+*}
-QS "Num-ContWord_before_C-Word_in_C-Phrase<=3"	{*&x+*,*&1+*,*&2+*,*&3+*}
-QS "Num-ContWord_before_C-Word_in_C-Phrase<=4"	{*&x+*,*&1+*,*&2+*,*&3+*,*&4+*}
-QS "Num-ContWord_before_C-Word_in_C-Phrase<=5"	{*&x+*,*&1+*,*&2+*,*&3+*,*&4+*,*&5+*}
-QS "Num-ContWord_before_C-Word_in_C-Phrase<=6"	{*&x+*,*&1+*,*&2+*,*&3+*,*&4+*,*&5+*,*&6+*}
-QS "Num-ContWord_before_C-Word_in_C-Phrase<=7"	{*&x+*,*&1+*,*&2+*,*&3+*,*&4+*,*&5+*,*&6+*,*&7+*}
-QS "Num-ContWord_before_C-Word_in_C-Phrase<=8"	{*&x+*,*&1+*,*&2+*,*&3+*,*&4+*,*&5+*,*&6+*,*&7+*,*&8+*}
-QS "Num-ContWord_before_C-Word_in_C-Phrase<=9"	{*&?+*}
-
-
-
-QS "Num-ContWord_after_C-Word_in_C-Phrase==x"	{*+x#*}
-QS "Num-ContWord_after_C-Word_in_C-Phrase==0"	{*+0#*}
-QS "Num-ContWord_after_C-Word_in_C-Phrase==1"	{*+1#*}
-QS "Num-ContWord_after_C-Word_in_C-Phrase==2"	{*+2#*}
-QS "Num-ContWord_after_C-Word_in_C-Phrase==3"	{*+3#*}
-QS "Num-ContWord_after_C-Word_in_C-Phrase==4"	{*+4#*}
-QS "Num-ContWord_after_C-Word_in_C-Phrase==5"	{*+5#*}
-QS "Num-ContWord_after_C-Word_in_C-Phrase==6"	{*+6#*}
-QS "Num-ContWord_after_C-Word_in_C-Phrase==7"	{*+7#*}
-QS "Num-ContWord_after_C-Word_in_C-Phrase==8"	{*+8#*}
-
-QS "Num-ContWord_after_C-Word_in_C-Phrase<=0"	{*+x#*,*+0#*}
-QS "Num-ContWord_after_C-Word_in_C-Phrase<=1"	{*+x#*,*+0#*,*+1#*}
-QS "Num-ContWord_after_C-Word_in_C-Phrase<=2"	{*+x#*,*+0#*,*+1#*,*+2#*}
-QS "Num-ContWord_after_C-Word_in_C-Phrase<=3"	{*+x#*,*+0#*,*+1#*,*+2#*,*+3#*}
-QS "Num-ContWord_after_C-Word_in_C-Phrase<=4"	{*+x#*,*+0#*,*+1#*,*+2#*,*+3#*,*+4#*}
-QS "Num-ContWord_after_C-Word_in_C-Phrase<=5"	{*+x#*,*+0#*,*+1#*,*+2#*,*+3#*,*+4#*,*+5#*}
-QS "Num-ContWord_after_C-Word_in_C-Phrase<=6"	{*+x#*,*+0#*,*+1#*,*+2#*,*+3#*,*+4#*,*+5#*,*+6#*}
-QS "Num-ContWord_after_C-Word_in_C-Phrase<=7"	{*+x#*,*+0#*,*+1#*,*+2#*,*+3#*,*+4#*,*+5#*,*+6#*,*+7#*}
-QS "Num-ContWord_after_C-Word_in_C-Phrase<=8"	{*+x#*,*+0#*,*+1#*,*+2#*,*+3#*,*+4#*,*+5#*,*+6#*,*+7#*,*+8#*}
-
-
-
-QS "Num-Words_from_prev-ContWord==x"	{*#x+*}
-QS "Num-Words_from_prev-ContWord==0"	{*#0+*}
-QS "Num-Words_from_prev-ContWord==1"	{*#1+*}
-QS "Num-Words_from_prev-ContWord==2"	{*#2+*}
-QS "Num-Words_from_prev-ContWord==3"	{*#3+*}
-QS "Num-Words_from_prev-ContWord==4"	{*#4+*}
-QS "Num-Words_from_prev-ContWord==5"	{*#5+*}
-
-QS "Num-Words_from_prev-ContWord<=0"	{*#x+*,*#0+*}
-QS "Num-Words_from_prev-ContWord<=1"	{*#x+*,*#0+*,*#1+*}
-QS "Num-Words_from_prev-ContWord<=2"	{*#x+*,*#0+*,*#1+*,*#2+*}
-QS "Num-Words_from_prev-ContWord<=3"	{*#x+*,*#0+*,*#1+*,*#2+*,*#3+*}
-QS "Num-Words_from_prev-ContWord<=4"	{*#x+*,*#0+*,*#1+*,*#2+*,*#3+*,*#4+*}
-QS "Num-Words_from_prev-ContWord<=5"	{*#x+*,*#0+*,*#1+*,*#2+*,*#3+*,*#4+*,*#5+*}
-
-
-
-QS "Num-Words_from_next-ContWord==x"	{*+x/F:*}
-QS "Num-Words_from_next-ContWord==0"	{*+0/F:*}
-QS "Num-Words_from_next-ContWord==1"	{*+1/F:*}
-QS "Num-Words_from_next-ContWord==2"	{*+2/F:*}
-QS "Num-Words_from_next-ContWord==3"	{*+3/F:*}
-QS "Num-Words_from_next-ContWord==4"	{*+4/F:*}
-QS "Num-Words_from_next-ContWord==5"	{*+5/F:*}
-
-QS "Num-Words_from_next-ContWord<=0"	{*+x/F:*,*+0/F:*}
-QS "Num-Words_from_next-ContWord<=1"	{*+x/F:*,*+0/F:*,*+1/F:*}
-QS "Num-Words_from_next-ContWord<=2"	{*+x/F:*,*+0/F:*,*+1/F:*,*+2/F:*}
-QS "Num-Words_from_next-ContWord<=3"	{*+x/F:*,*+0/F:*,*+1/F:*,*+2/F:*,*+3/F:*}
-QS "Num-Words_from_next-ContWord<=4"	{*+x/F:*,*+0/F:*,*+1/F:*,*+2/F:*,*+3/F:*,*+4/F:*}
-QS "Num-Words_from_next-ContWord<=5"	{*+x/F:*,*+0/F:*,*+1/F:*,*+2/F:*,*+3/F:*,*+4/F:*,*+5/F:*}
-
-
-
-QS "R-Word_GPOS==0"			{*/F:0_*}
-QS "R-Word_GPOS==aux"		{*/F:aux_*}
-QS "R-Word_GPOS==cc"		{*/F:cc_*}
-QS "R-Word_GPOS==content"	{*/F:content_*}
-QS "R-Word_GPOS==det"		{*/F:det_*}
-QS "R-Word_GPOS==in"		{*/F:in_*}
-QS "R-Word_GPOS==md"		{*/F:md_*}
-QS "R-Word_GPOS==pps"		{*/F:pps_*}
-QS "R-Word_GPOS==punc"		{*/F:punc_*}
-QS "R-Word_GPOS==to"		{*/F:to_*}
-QS "R-Word_GPOS==wp"		{*/F:wp_*}
-
-
-
-QS "R-Word_Num-Syls==0"	{*_0/G:*}
-QS "R-Word_Num-Syls==1"	{*_1/G:*}
-QS "R-Word_Num-Syls==2"	{*_2/G:*}
-QS "R-Word_Num-Syls==3"	{*_3/G:*}
-QS "R-Word_Num-Syls==4"	{*_4/G:*}
-QS "R-Word_Num-Syls==5"	{*_5/G:*}
-QS "R-Word_Num-Syls==6"	{*_6/G:*}
-QS "R-Word_Num-Syls==7"	{*_7/G:*}
-
-QS "R-Word_Num-Syls<=1"	{*_0/G:*,*_1/G:*}
-QS "R-Word_Num-Syls<=2"	{*_0/G:*,*_1/G:*,*_2/G:*}
-QS "R-Word_Num-Syls<=3"	{*_0/G:*,*_1/G:*,*_2/G:*,*_3/G:*}
-QS "R-Word_Num-Syls<=4"	{*_0/G:*,*_1/G:*,*_2/G:*,*_3/G:*,*_4/G:*}
-QS "R-Word_Num-Syls<=5"	{*_0/G:*,*_1/G:*,*_2/G:*,*_3/G:*,*_4/G:*,*_5/G:*}
-QS "R-Word_Num-Syls<=6"	{*_0/G:*,*_1/G:*,*_2/G:*,*_3/G:*,*_4/G:*,*_5/G:*,*_6/G:*}
-QS "R-Word_Num-Syls<=7"	{*_0/G:*,*_1/G:*,*_2/G:*,*_3/G:*,*_4/G:*,*_5/G:*,*_6/G:*,*_7/G:*}
-
-
-
-QS "L-Phrase_Num-Syls==0"	{*/G:0_*}
-QS "L-Phrase_Num-Syls==1"	{*/G:1_*}
-QS "L-Phrase_Num-Syls==2"	{*/G:2_*}
-QS "L-Phrase_Num-Syls==3"	{*/G:3_*}
-QS "L-Phrase_Num-Syls==4"	{*/G:4_*}
-QS "L-Phrase_Num-Syls==5"	{*/G:5_*}
-QS "L-Phrase_Num-Syls==6"	{*/G:6_*}
-QS "L-Phrase_Num-Syls==7"	{*/G:7_*}
-QS "L-Phrase_Num-Syls==8"	{*/G:8_*}
-QS "L-Phrase_Num-Syls==9"	{*/G:9_*}
-QS "L-Phrase_Num-Syls==10"	{*/G:10_*}
-QS "L-Phrase_Num-Syls==11"	{*/G:11_*}
-QS "L-Phrase_Num-Syls==12"	{*/G:12_*}
-QS "L-Phrase_Num-Syls==13"	{*/G:13_*}
-QS "L-Phrase_Num-Syls==14"	{*/G:14_*}
-QS "L-Phrase_Num-Syls==15"	{*/G:15_*}
-QS "L-Phrase_Num-Syls==16"	{*/G:16_*}
-QS "L-Phrase_Num-Syls==17"	{*/G:17_*}
-QS "L-Phrase_Num-Syls==18"	{*/G:18_*}
-QS "L-Phrase_Num-Syls==19"	{*/G:19_*}
-QS "L-Phrase_Num-Syls==20"	{*/G:20_*}
-
-QS "L-Phrase_Num-Syls<=1"	{*/G:0_*,*/G:1_*}
-QS "L-Phrase_Num-Syls<=2"	{*/G:0_*,*/G:1_*,*/G:2_*}
-QS "L-Phrase_Num-Syls<=3"	{*/G:0_*,*/G:1_*,*/G:2_*,*/G:3_*}
-QS "L-Phrase_Num-Syls<=4"	{*/G:0_*,*/G:1_*,*/G:2_*,*/G:3_*,*/G:4_*}
-QS "L-Phrase_Num-Syls<=5"	{*/G:0_*,*/G:1_*,*/G:2_*,*/G:3_*,*/G:4_*,*/G:5_*}
-QS "L-Phrase_Num-Syls<=6"	{*/G:0_*,*/G:1_*,*/G:2_*,*/G:3_*,*/G:4_*,*/G:5_*,*/G:6_*}
-QS "L-Phrase_Num-Syls<=7"	{*/G:0_*,*/G:1_*,*/G:2_*,*/G:3_*,*/G:4_*,*/G:5_*,*/G:6_*,*/G:7_*}
-QS "L-Phrase_Num-Syls<=8"	{*/G:0_*,*/G:1_*,*/G:2_*,*/G:3_*,*/G:4_*,*/G:5_*,*/G:6_*,*/G:7_*,*/G:8_*}
-QS "L-Phrase_Num-Syls<=9"	{*/G:?_*}
-QS "L-Phrase_Num-Syls<=10"	{*/G:?_*,*/G:10_*}
-QS "L-Phrase_Num-Syls<=11"	{*/G:?_*,*/G:10_*,*/G:11_*}
-QS "L-Phrase_Num-Syls<=12"	{*/G:?_*,*/G:10_*,*/G:11_*,*/G:12_*}
-QS "L-Phrase_Num-Syls<=13"	{*/G:?_*,*/G:10_*,*/G:11_*,*/G:12_*,*/G:13_*}
-QS "L-Phrase_Num-Syls<=14"	{*/G:?_*,*/G:10_*,*/G:11_*,*/G:12_*,*/G:13_*,*/G:14_*}
-QS "L-Phrase_Num-Syls<=15"	{*/G:?_*,*/G:10_*,*/G:11_*,*/G:12_*,*/G:13_*,*/G:14_*,*/G:15_*}
-QS "L-Phrase_Num-Syls<=16"	{*/G:?_*,*/G:10_*,*/G:11_*,*/G:12_*,*/G:13_*,*/G:14_*,*/G:15_*,*/G:16_*}
-QS "L-Phrase_Num-Syls<=17"	{*/G:?_*,*/G:10_*,*/G:11_*,*/G:12_*,*/G:13_*,*/G:14_*,*/G:15_*,*/G:16_*,*/G:17_*}
-QS "L-Phrase_Num-Syls<=18"	{*/G:?_*,*/G:10_*,*/G:11_*,*/G:12_*,*/G:13_*,*/G:14_*,*/G:15_*,*/G:16_*,*/G:17_*,*/G:18_*}
-QS "L-Phrase_Num-Syls<=19"	{*/G:?_*,*/G:1?_*}
-QS "L-Phrase_Num-Syls<=20"	{*/G:?_*,*/G:1?_*,*/G:20_*}
-
-
-
-QS "L-Phrase_Num-Words==0"	{*_0/H:*}
-QS "L-Phrase_Num-Words==1"	{*_1/H:*}
-QS "L-Phrase_Num-Words==2"	{*_2/H:*}
-QS "L-Phrase_Num-Words==3"	{*_3/H:*}
-QS "L-Phrase_Num-Words==4"	{*_4/H:*}
-QS "L-Phrase_Num-Words==5"	{*_5/H:*}
-QS "L-Phrase_Num-Words==6"	{*_6/H:*}
-QS "L-Phrase_Num-Words==7"	{*_7/H:*}
-QS "L-Phrase_Num-Words==8"	{*_8/H:*}
-QS "L-Phrase_Num-Words==9"	{*_9/H:*}
-QS "L-Phrase_Num-Words==10"	{*_10/H:*}
-QS "L-Phrase_Num-Words==11"	{*_11/H:*}
-QS "L-Phrase_Num-Words==12"	{*_12/H:*}
-QS "L-Phrase_Num-Words==13"	{*_13/H:*}
-
-QS "L-Phrase_Num-Words<=1"	{*_0/H:*,*_1/H:*}
-QS "L-Phrase_Num-Words<=2"	{*_0/H:*,*_1/H:*,*_2/H:*}
-QS "L-Phrase_Num-Words<=3"	{*_0/H:*,*_1/H:*,*_2/H:*,*_3/H:*}
-QS "L-Phrase_Num-Words<=4"	{*_0/H:*,*_1/H:*,*_2/H:*,*_3/H:*,*_4/H:*}
-QS "L-Phrase_Num-Words<=5"	{*_0/H:*,*_1/H:*,*_2/H:*,*_3/H:*,*_4/H:*,*_5/H:*}
-QS "L-Phrase_Num-Words<=6"	{*_0/H:*,*_1/H:*,*_2/H:*,*_3/H:*,*_4/H:*,*_5/H:*,*_6/H:*}
-QS "L-Phrase_Num-Words<=7"	{*_0/H:*,*_1/H:*,*_2/H:*,*_3/H:*,*_4/H:*,*_5/H:*,*_6/H:*,*_7/H:*}
-QS "L-Phrase_Num-Words<=8"	{*_0/H:*,*_1/H:*,*_2/H:*,*_3/H:*,*_4/H:*,*_5/H:*,*_6/H:*,*_7/H:*,*_8/H:*}
-QS "L-Phrase_Num-Words<=9"	{*_?/H:*}
-QS "L-Phrase_Num-Words<=10"	{*_?/H:*,*_10/H:*}
-QS "L-Phrase_Num-Words<=11"	{*_?/H:*,*_10/H:*,*_11/H:*}
-QS "L-Phrase_Num-Words<=12"	{*_?/H:*,*_10/H:*,*_11/H:*,*_12/H:*}
-QS "L-Phrase_Num-Words<=13"	{*_?/H:*,*_10/H:*,*_11/H:*,*_12/H:*,*_13/H:*}
-
-
-
-QS "C-Phrase_Num-Syls==x"	{*/H:x=*}
-QS "C-Phrase_Num-Syls==0"	{*/H:0=*}
-QS "C-Phrase_Num-Syls==1"	{*/H:1=*}
-QS "C-Phrase_Num-Syls==2"	{*/H:2=*}
-QS "C-Phrase_Num-Syls==3"	{*/H:3=*}
-QS "C-Phrase_Num-Syls==4"	{*/H:4=*}
-QS "C-Phrase_Num-Syls==5"	{*/H:5=*}
-QS "C-Phrase_Num-Syls==6"	{*/H:6=*}
-QS "C-Phrase_Num-Syls==7"	{*/H:7=*}
-QS "C-Phrase_Num-Syls==8"	{*/H:8=*}
-QS "C-Phrase_Num-Syls==9"	{*/H:9=*}
-QS "C-Phrase_Num-Syls==10"	{*/H:10=*}
-QS "C-Phrase_Num-Syls==11"	{*/H:11=*}
-QS "C-Phrase_Num-Syls==12"	{*/H:12=*}
-QS "C-Phrase_Num-Syls==13"	{*/H:13=*}
-QS "C-Phrase_Num-Syls==14"	{*/H:14=*}
-QS "C-Phrase_Num-Syls==15"	{*/H:15=*}
-QS "C-Phrase_Num-Syls==16"	{*/H:16=*}
-QS "C-Phrase_Num-Syls==17"	{*/H:17=*}
-QS "C-Phrase_Num-Syls==18"	{*/H:18=*}
-QS "C-Phrase_Num-Syls==19"	{*/H:19=*}
-QS "C-Phrase_Num-Syls==20"	{*/H:20=*}
-
-QS "C-Phrase_Num-Syls<=0"	{*/H:x=*,*/H:0=*}
-QS "C-Phrase_Num-Syls<=1"	{*/H:x=*,*/H:0=*,*/H:1=*}
-QS "C-Phrase_Num-Syls<=2"	{*/H:x=*,*/H:0=*,*/H:1=*,*/H:2=*}
-QS "C-Phrase_Num-Syls<=3"	{*/H:x=*,*/H:0=*,*/H:1=*,*/H:2=*,*/H:3=*}
-QS "C-Phrase_Num-Syls<=4"	{*/H:x=*,*/H:0=*,*/H:1=*,*/H:2=*,*/H:3=*,*/H:4=*}
-QS "C-Phrase_Num-Syls<=5"	{*/H:x=*,*/H:0=*,*/H:1=*,*/H:2=*,*/H:3=*,*/H:4=*,*/H:5=*}
-QS "C-Phrase_Num-Syls<=6"	{*/H:x=*,*/H:0=*,*/H:1=*,*/H:2=*,*/H:3=*,*/H:4=*,*/H:5=*,*/H:6=*}
-QS "C-Phrase_Num-Syls<=7"	{*/H:x=*,*/H:0=*,*/H:1=*,*/H:2=*,*/H:3=*,*/H:4=*,*/H:5=*,*/H:6=*,*/H:7=*}
-QS "C-Phrase_Num-Syls<=8"	{*/H:x=*,*/H:0=*,*/H:1=*,*/H:2=*,*/H:3=*,*/H:4=*,*/H:5=*,*/H:6=*,*/H:7=*,*/H:8=*}
-QS "C-Phrase_Num-Syls<=9"	{*/H:?=*}
-QS "C-Phrase_Num-Syls<=10"	{*/H:?=*,*/H:10=*}
-QS "C-Phrase_Num-Syls<=11"	{*/H:?=*,*/H:10=*,*/H:11=*}
-QS "C-Phrase_Num-Syls<=12"	{*/H:?=*,*/H:10=*,*/H:11=*,*/H:12=*}
-QS "C-Phrase_Num-Syls<=13"	{*/H:?=*,*/H:10=*,*/H:11=*,*/H:12=*,*/H:13=*}
-QS "C-Phrase_Num-Syls<=14"	{*/H:?=*,*/H:10=*,*/H:11=*,*/H:12=*,*/H:13=*,*/H:14=*}
-QS "C-Phrase_Num-Syls<=15"	{*/H:?=*,*/H:10=*,*/H:11=*,*/H:12=*,*/H:13=*,*/H:14=*,*/H:15=*}
-QS "C-Phrase_Num-Syls<=16"	{*/H:?=*,*/H:10=*,*/H:11=*,*/H:12=*,*/H:13=*,*/H:14=*,*/H:15=*,*/H:16=*}
-QS "C-Phrase_Num-Syls<=17"	{*/H:?=*,*/H:10=*,*/H:11=*,*/H:12=*,*/H:13=*,*/H:14=*,*/H:15=*,*/H:16=*,*/H:17=*}
-QS "C-Phrase_Num-Syls<=18"	{*/H:?=*,*/H:10=*,*/H:11=*,*/H:12=*,*/H:13=*,*/H:14=*,*/H:15=*,*/H:16=*,*/H:17=*,*/H:18=*}
-QS "C-Phrase_Num-Syls<=19"	{*/H:?=*,*/H:1?=*}
-QS "C-Phrase_Num-Syls<=20"	{*/H:?=*,*/H:1?=*,*/H:20=*}
-
-
-
-QS "C-Phrase_Num-Words==x"	{*=x@*}
-QS "C-Phrase_Num-Words==0"	{*=0@*}
-QS "C-Phrase_Num-Words==1"	{*=1@*}
-QS "C-Phrase_Num-Words==2"	{*=2@*}
-QS "C-Phrase_Num-Words==3"	{*=3@*}
-QS "C-Phrase_Num-Words==4"	{*=4@*}
-QS "C-Phrase_Num-Words==5"	{*=5@*}
-QS "C-Phrase_Num-Words==6"	{*=6@*}
-QS "C-Phrase_Num-Words==7"	{*=7@*}
-QS "C-Phrase_Num-Words==8"	{*=8@*}
-QS "C-Phrase_Num-Words==9"	{*=9@*}
-QS "C-Phrase_Num-Words==10"	{*=10@*}
-QS "C-Phrase_Num-Words==11"	{*=11@*}
-QS "C-Phrase_Num-Words==12"	{*=12@*}
-QS "C-Phrase_Num-Words==13"	{*=13@*}
-
-QS "C-Phrase_Num-Words<=0"	{*=x@*,*=0@*}
-QS "C-Phrase_Num-Words<=1"	{*=x@*,*=0@*,*=1@*}
-QS "C-Phrase_Num-Words<=2"	{*=x@*,*=0@*,*=1@*,*=2@*}
-QS "C-Phrase_Num-Words<=3"	{*=x@*,*=0@*,*=1@*,*=2@*,*=3@*}
-QS "C-Phrase_Num-Words<=4"	{*=x@*,*=0@*,*=1@*,*=2@*,*=3@*,*=4@*}
-QS "C-Phrase_Num-Words<=5"	{*=x@*,*=0@*,*=1@*,*=2@*,*=3@*,*=4@*,*=5@*}
-QS "C-Phrase_Num-Words<=6"	{*=x@*,*=0@*,*=1@*,*=2@*,*=3@*,*=4@*,*=5@*,*=6@*}
-QS "C-Phrase_Num-Words<=7"	{*=x@*,*=0@*,*=1@*,*=2@*,*=3@*,*=4@*,*=5@*,*=6@*,*=7@*}
-QS "C-Phrase_Num-Words<=8"	{*=x@*,*=0@*,*=1@*,*=2@*,*=3@*,*=4@*,*=5@*,*=6@*,*=7@*,*=8@*}
-QS "C-Phrase_Num-Words<=9"	{*=x@*,*=0@*,*=1@*,*=2@*,*=3@*,*=4@*,*=5@*,*=6@*,*=7@*,*=8@*,*=9@*}
-QS "C-Phrase_Num-Words<=10"	{*=x@*,*=0@*,*=1@*,*=2@*,*=3@*,*=4@*,*=5@*,*=6@*,*=7@*,*=8@*,*=9@*,*=10@*}
-QS "C-Phrase_Num-Words<=11"	{*=x@*,*=0@*,*=1@*,*=2@*,*=3@*,*=4@*,*=5@*,*=6@*,*=7@*,*=8@*,*=9@*,*=10@*,*=11@*}
-QS "C-Phrase_Num-Words<=12"	{*=x@*,*=0@*,*=1@*,*=2@*,*=3@*,*=4@*,*=5@*,*=6@*,*=7@*,*=8@*,*=9@*,*=10@*,*=11@*,*=12@*}
-QS "C-Phrase_Num-Words<=13"	{*=x@*,*=0@*,*=1@*,*=2@*,*=3@*,*=4@*,*=5@*,*=6@*,*=7@*,*=8@*,*=9@*,*=10@*,*=11@*,*=12@*,*=13@*}
-
-
-
-QS "Pos_C-Phrase_in_Utterance(Fw)==1"	{*@1=*}
-QS "Pos_C-Phrase_in_Utterance(Fw)==2"	{*@2=*}
-QS "Pos_C-Phrase_in_Utterance(Fw)==3"	{*@3=*}
-QS "Pos_C-Phrase_in_Utterance(Fw)==4"	{*@4=*}
-
-QS "Pos_C-Phrase_in_Utterance(Fw)<=2"	{*@1=*,*@2=*}
-QS "Pos_C-Phrase_in_Utterance(Fw)<=3"	{*@1=*,*@2=*,*@3=*}
-QS "Pos_C-Phrase_in_Utterance(Fw)<=4"	{*@1=*,*@2=*,*@3=*,*@4=*}
-
-
-
-QS "Pos_C-Phrase_in_Utterance(Bw)==1"	{*=1|*}
-QS "Pos_C-Phrase_in_Utterance(Bw)==2"	{*=2|*}
-QS "Pos_C-Phrase_in_Utterance(Bw)==3"	{*=3|*}
-QS "Pos_C-Phrase_in_Utterance(Bw)==4"	{*=4|*}
-
-QS "Pos_C-Phrase_in_Utterance(Bw)<=2"	{*=1|*,*=2|*}
-QS "Pos_C-Phrase_in_Utterance(Bw)<=3"	{*=1|*,*=2|*,*=3|*}
-QS "Pos_C-Phrase_in_Utterance(Bw)<=4"	{*=1|*,*=2|*,*=3|*,*=4|*}
-
-
-
-QS "C-Phrase_TOBI_End-tone-LL"      {*|L-L%/I:*}
-QS "C-Phrase_TOBI_End-tone-LH"		{*|L-H%/I:*}
-QS "C-Phrase_TOBI_End-tone-HH"		{*|H-H%/I:*}
-QS "C-Phrase_TOBI_End-tone-NONE"	{*|NONE/I:*}
-QS "C-Phrase_TOBI_End-tone-0"		{*|0/I:*}
-
-
-
-QS "R-Phrase_Num-Syls==0"	{*/I:0=*}
-QS "R-Phrase_Num-Syls==1"	{*/I:1=*}
-QS "R-Phrase_Num-Syls==2"	{*/I:2=*}
-QS "R-Phrase_Num-Syls==3"	{*/I:3=*}
-QS "R-Phrase_Num-Syls==4"	{*/I:4=*}
-QS "R-Phrase_Num-Syls==5"	{*/I:5=*}
-QS "R-Phrase_Num-Syls==6"	{*/I:6=*}
-QS "R-Phrase_Num-Syls==7"	{*/I:7=*}
-QS "R-Phrase_Num-Syls==8"	{*/I:8=*}
-QS "R-Phrase_Num-Syls==9"	{*/I:9=*}
-QS "R-Phrase_Num-Syls==10"	{*/I:10=*}
-QS "R-Phrase_Num-Syls==11"	{*/I:11=*}
-QS "R-Phrase_Num-Syls==12"	{*/I:12=*}
-QS "R-Phrase_Num-Syls==13"	{*/I:13=*}
-QS "R-Phrase_Num-Syls==14"	{*/I:14=*}
-QS "R-Phrase_Num-Syls==15"	{*/I:15=*}
-QS "R-Phrase_Num-Syls==16"	{*/I:16=*}
-QS "R-Phrase_Num-Syls==17"	{*/I:17=*}
-QS "R-Phrase_Num-Syls==18"	{*/I:18=*}
-QS "R-Phrase_Num-Syls==19"	{*/I:19=*}
-QS "R-Phrase_Num-Syls==20"	{*/I:20=*}
-
-QS "R-Phrase_Num-Syls<=1"	{*/I:0=*,*/I:1=*}
-QS "R-Phrase_Num-Syls<=2"	{*/I:0=*,*/I:1=*,*/I:2=*}
-QS "R-Phrase_Num-Syls<=3"	{*/I:0=*,*/I:1=*,*/I:2=*,*/I:3=*}
-QS "R-Phrase_Num-Syls<=4"	{*/I:0=*,*/I:1=*,*/I:2=*,*/I:3=*,*/I:4=*}
-QS "R-Phrase_Num-Syls<=5"	{*/I:0=*,*/I:1=*,*/I:2=*,*/I:3=*,*/I:4=*,*/I:5=*}
-QS "R-Phrase_Num-Syls<=6"	{*/I:0=*,*/I:1=*,*/I:2=*,*/I:3=*,*/I:4=*,*/I:5=*,*/I:6=*}
-QS "R-Phrase_Num-Syls<=7"	{*/I:0=*,*/I:1=*,*/I:2=*,*/I:3=*,*/I:4=*,*/I:5=*,*/I:6=*,*/I:7=*}
-QS "R-Phrase_Num-Syls<=8"	{*/I:0=*,*/I:1=*,*/I:2=*,*/I:3=*,*/I:4=*,*/I:5=*,*/I:6=*,*/I:7=*,*/I:8=*}
-QS "R-Phrase_Num-Syls<=9"	{*/I:?=*}
-QS "R-Phrase_Num-Syls<=10"	{*/I:?=*,*/I:10=*}
-QS "R-Phrase_Num-Syls<=11"	{*/I:?=*,*/I:10=*,*/I:11=*}
-QS "R-Phrase_Num-Syls<=12"	{*/I:?=*,*/I:10=*,*/I:11=*,*/I:12=*}
-QS "R-Phrase_Num-Syls<=13"	{*/I:?=*,*/I:10=*,*/I:11=*,*/I:12=*,*/I:13=*}
-QS "R-Phrase_Num-Syls<=14"	{*/I:?=*,*/I:10=*,*/I:11=*,*/I:12=*,*/I:13=*,*/I:14=*}
-QS "R-Phrase_Num-Syls<=15"	{*/I:?=*,*/I:10=*,*/I:11=*,*/I:12=*,*/I:13=*,*/I:14=*,*/I:15=*}
-QS "R-Phrase_Num-Syls<=16"	{*/I:?=*,*/I:10=*,*/I:11=*,*/I:12=*,*/I:13=*,*/I:14=*,*/I:15=*,*/I:16=*}
-QS "R-Phrase_Num-Syls<=17"	{*/I:?=*,*/I:10=*,*/I:11=*,*/I:12=*,*/I:13=*,*/I:14=*,*/I:15=*,*/I:16=*,*/I:17=*}
-QS "R-Phrase_Num-Syls<=18"	{*/I:?=*,*/I:10=*,*/I:11=*,*/I:12=*,*/I:13=*,*/I:14=*,*/I:15=*,*/I:16=*,*/I:17=*,*/I:18=*}
-QS "R-Phrase_Num-Syls<=19"	{*/I:?=*,*/I:1?=*}
-QS "R-Phrase_Num-Syls<=20"	{*/I:?=*,*/I:1?=*,*/I:20=*}
-
-
-
-QS "R-Phrase_Num-Words==0"	{*=0/J:*}
-QS "R-Phrase_Num-Words==1"	{*=1/J:*}
-QS "R-Phrase_Num-Words==2"	{*=2/J:*}
-QS "R-Phrase_Num-Words==3"	{*=3/J:*}
-QS "R-Phrase_Num-Words==4"	{*=4/J:*}
-QS "R-Phrase_Num-Words==5"	{*=5/J:*}
-QS "R-Phrase_Num-Words==6"	{*=6/J:*}
-QS "R-Phrase_Num-Words==7"	{*=7/J:*}
-QS "R-Phrase_Num-Words==8"	{*=8/J:*}
-QS "R-Phrase_Num-Words==9"	{*=9/J:*}
-QS "R-Phrase_Num-Words==10"	{*=10/J:*}
-QS "R-Phrase_Num-Words==11"	{*=11/J:*}
-QS "R-Phrase_Num-Words==12"	{*=12/J:*}
-QS "R-Phrase_Num-Words==13"	{*=13/J:*}
-QS "R-Phrase_Num-Words==14"	{*=14/J:*}
-QS "R-Phrase_Num-Words==15"	{*=15/J:*}
-
-QS "R-Phrase_Num-Words<=1"	{*=0/J:*,*=1/J:*}
-QS "R-Phrase_Num-Words<=2"	{*=0/J:*,*=1/J:*,*=2/J:*}
-QS "R-Phrase_Num-Words<=3"	{*=0/J:*,*=1/J:*,*=2/J:*,*=3/J:*}
-QS "R-Phrase_Num-Words<=4"	{*=0/J:*,*=1/J:*,*=2/J:*,*=3/J:*,*=4/J:*}
-QS "R-Phrase_Num-Words<=5"	{*=0/J:*,*=1/J:*,*=2/J:*,*=3/J:*,*=4/J:*,*=5/J:*}
-QS "R-Phrase_Num-Words<=6"	{*=0/J:*,*=1/J:*,*=2/J:*,*=3/J:*,*=4/J:*,*=5/J:*,*=6/J:*}
-QS "R-Phrase_Num-Words<=7"	{*=0/J:*,*=1/J:*,*=2/J:*,*=3/J:*,*=4/J:*,*=5/J:*,*=6/J:*,*=7/J:*}
-QS "R-Phrase_Num-Words<=8"	{*=0/J:*,*=1/J:*,*=2/J:*,*=3/J:*,*=4/J:*,*=5/J:*,*=6/J:*,*=7/J:*,*=8/J:*}
-QS "R-Phrase_Num-Words<=9"	{*=?/J:*}
-QS "R-Phrase_Num-Words<=10"	{*=?/J:*,*=10/J:*}
-QS "R-Phrase_Num-Words<=11"	{*=?/J:*,*=10/J:*,*=11/J:*}
-QS "R-Phrase_Num-Words<=12"	{*=?/J:*,*=10/J:*,*=11/J:*,*=12/J:*}
-QS "R-Phrase_Num-Words<=13"	{*=?/J:*,*=10/J:*,*=11/J:*,*=12/J:*,*=13/J:*}
-QS "R-Phrase_Num-Words<=14"	{*=?/J:*,*=10/J:*,*=11/J:*,*=12/J:*,*=13/J:*,*=14/J:*}
-QS "R-Phrase_Num-Words<=15"	{*=?/J:*,*=10/J:*,*=11/J:*,*=12/J:*,*=13/J:*,*=14/J:*,*=15/J:*}
-
-
-
-QS "Num-Syls_in_Utterance==1"	{*/J:1+*}
-QS "Num-Syls_in_Utterance==2"	{*/J:2+*}
-QS "Num-Syls_in_Utterance==3"	{*/J:3+*}
-QS "Num-Syls_in_Utterance==4"	{*/J:4+*}
-QS "Num-Syls_in_Utterance==5"	{*/J:5+*}
-QS "Num-Syls_in_Utterance==6"	{*/J:6+*}
-QS "Num-Syls_in_Utterance==7"	{*/J:7+*}
-QS "Num-Syls_in_Utterance==8"	{*/J:8+*}
-QS "Num-Syls_in_Utterance==9"	{*/J:9+*}
-QS "Num-Syls_in_Utterance==10"	{*/J:10+*}
-QS "Num-Syls_in_Utterance==11"	{*/J:11+*}
-QS "Num-Syls_in_Utterance==12"	{*/J:12+*}
-QS "Num-Syls_in_Utterance==13"	{*/J:13+*}
-QS "Num-Syls_in_Utterance==14"	{*/J:14+*}
-QS "Num-Syls_in_Utterance==15"	{*/J:15+*}
-QS "Num-Syls_in_Utterance==16"	{*/J:16+*}
-QS "Num-Syls_in_Utterance==17"	{*/J:17+*}
-QS "Num-Syls_in_Utterance==18"	{*/J:18+*}
-QS "Num-Syls_in_Utterance==19"	{*/J:19+*}
-QS "Num-Syls_in_Utterance==20"	{*/J:20+*}
-QS "Num-Syls_in_Utterance==21"	{*/J:21+*}
-QS "Num-Syls_in_Utterance==22"	{*/J:22+*}
-QS "Num-Syls_in_Utterance==23"	{*/J:23+*}
-QS "Num-Syls_in_Utterance==24"	{*/J:24+*}
-QS "Num-Syls_in_Utterance==25"	{*/J:25+*}
-QS "Num-Syls_in_Utterance==26"	{*/J:26+*}
-QS "Num-Syls_in_Utterance==27"	{*/J:27+*}
-QS "Num-Syls_in_Utterance==28"	{*/J:28+*}
-
-QS "Num-Syls_in_Utterance<=2"	{*/J:1+*,*/J:2+*}
-QS "Num-Syls_in_Utterance<=3"	{*/J:1+*,*/J:2+*,*/J:3+*}
-QS "Num-Syls_in_Utterance<=4"	{*/J:1+*,*/J:2+*,*/J:3+*,*/J:4+*}
-QS "Num-Syls_in_Utterance<=5"	{*/J:1+*,*/J:2+*,*/J:3+*,*/J:4+*,*/J:5+*}
-QS "Num-Syls_in_Utterance<=6"	{*/J:1+*,*/J:2+*,*/J:3+*,*/J:4+*,*/J:5+*,*/J:6+*}
-QS "Num-Syls_in_Utterance<=7"	{*/J:1+*,*/J:2+*,*/J:3+*,*/J:4+*,*/J:5+*,*/J:6+*,*/J:7+*}
-QS "Num-Syls_in_Utterance<=8"	{*/J:1+*,*/J:2+*,*/J:3+*,*/J:4+*,*/J:5+*,*/J:6+*,*/J:7+*,*/J:8+*}
-QS "Num-Syls_in_Utterance<=9"	{*/J:?+*}
-QS "Num-Syls_in_Utterance<=10"	{*/J:?+*,*/J:10+*}
-QS "Num-Syls_in_Utterance<=11"	{*/J:?+*,*/J:10+*,*/J:11+*}
-QS "Num-Syls_in_Utterance<=12"	{*/J:?+*,*/J:10+*,*/J:11+*,*/J:12+*}
-QS "Num-Syls_in_Utterance<=13"	{*/J:?+*,*/J:10+*,*/J:11+*,*/J:12+*,*/J:13+*}
-QS "Num-Syls_in_Utterance<=14"	{*/J:?+*,*/J:10+*,*/J:11+*,*/J:12+*,*/J:13+*,*/J:14+*}
-QS "Num-Syls_in_Utterance<=15"	{*/J:?+*,*/J:10+*,*/J:11+*,*/J:12+*,*/J:13+*,*/J:14+*,*/J:15+*}
-QS "Num-Syls_in_Utterance<=16"	{*/J:?+*,*/J:10+*,*/J:11+*,*/J:12+*,*/J:13+*,*/J:14+*,*/J:15+*,*/J:16+*}
-QS "Num-Syls_in_Utterance<=17"	{*/J:?+*,*/J:10+*,*/J:11+*,*/J:12+*,*/J:13+*,*/J:14+*,*/J:15+*,*/J:16+*,*/J:17+*}
-QS "Num-Syls_in_Utterance<=18"	{*/J:?+*,*/J:10+*,*/J:11+*,*/J:12+*,*/J:13+*,*/J:14+*,*/J:15+*,*/J:16+*,*/J:17+*,*/J:18+*}
-QS "Num-Syls_in_Utterance<=19"	{*/J:?+*,*/J:1?+*}
-QS "Num-Syls_in_Utterance<=20"	{*/J:?+*,*/J:1?+*,*/J:20+*}
-QS "Num-Syls_in_Utterance<=21"	{*/J:?+*,*/J:1?+*,*/J:20+*,*/J:21+*}
-QS "Num-Syls_in_Utterance<=22"	{*/J:?+*,*/J:1?+*,*/J:20+*,*/J:21+*,*/J:22+*}
-QS "Num-Syls_in_Utterance<=23"	{*/J:?+*,*/J:1?+*,*/J:20+*,*/J:21+*,*/J:22+*,*/J:23+*}
-QS "Num-Syls_in_Utterance<=24"	{*/J:?+*,*/J:1?+*,*/J:20+*,*/J:21+*,*/J:22+*,*/J:23+*,*/J:24+*}
-QS "Num-Syls_in_Utterance<=25"	{*/J:?+*,*/J:1?+*,*/J:20+*,*/J:21+*,*/J:22+*,*/J:23+*,*/J:24+*,*/J:25+*}
-QS "Num-Syls_in_Utterance<=26"	{*/J:?+*,*/J:1?+*,*/J:20+*,*/J:21+*,*/J:22+*,*/J:23+*,*/J:24+*,*/J:25+*,*/J:26+*}
-QS "Num-Syls_in_Utterance<=27"	{*/J:?+*,*/J:1?+*,*/J:20+*,*/J:21+*,*/J:22+*,*/J:23+*,*/J:24+*,*/J:25+*,*/J:26+*,*/J:27+*}
-QS "Num-Syls_in_Utterance<=28"	{*/J:?+*,*/J:1?+*,*/J:20+*,*/J:21+*,*/J:22+*,*/J:23+*,*/J:24+*,*/J:25+*,*/J:26+*,*/J:27+*,*/J:28+*}
-
-
-
-QS "Num-Words_in_Utterance==1"	{*+1-*}
-QS "Num-Words_in_Utterance==2"	{*+2-*}
-QS "Num-Words_in_Utterance==3"	{*+3-*}
-QS "Num-Words_in_Utterance==4"	{*+4-*}
-QS "Num-Words_in_Utterance==5"	{*+5-*}
-QS "Num-Words_in_Utterance==6"	{*+6-*}
-QS "Num-Words_in_Utterance==7"	{*+7-*}
-QS "Num-Words_in_Utterance==8"	{*+8-*}
-QS "Num-Words_in_Utterance==9"	{*+9-*}
-QS "Num-Words_in_Utterance==10"	{*+10-*}
-QS "Num-Words_in_Utterance==11"	{*+11-*}
-QS "Num-Words_in_Utterance==12"	{*+12-*}
-QS "Num-Words_in_Utterance==13"	{*+13-*}
-
-QS "Num-Words_in_Utterance<=2"	{*+1-*,*+2-*}
-QS "Num-Words_in_Utterance<=3"	{*+1-*,*+2-*,*+3-*}
-QS "Num-Words_in_Utterance<=4"	{*+1-*,*+2-*,*+3-*,*+4-*}
-QS "Num-Words_in_Utterance<=5"	{*+1-*,*+2-*,*+3-*,*+4-*,*+5-*}
-QS "Num-Words_in_Utterance<=6"	{*+1-*,*+2-*,*+3-*,*+4-*,*+5-*,*+6-*}
-QS "Num-Words_in_Utterance<=7"	{*+1-*,*+2-*,*+3-*,*+4-*,*+5-*,*+6-*,*+7-*}
-QS "Num-Words_in_Utterance<=8"	{*+1-*,*+2-*,*+3-*,*+4-*,*+5-*,*+6-*,*+7-*,*+8-*}
-QS "Num-Words_in_Utterance<=9"	{*+?-*}
-QS "Num-Words_in_Utterance<=10"	{*+?-*,*+10-*}
-QS "Num-Words_in_Utterance<=11"	{*+?-*,*+10-*,*+11-*}
-QS "Num-Words_in_Utterance<=12"	{*+?-*,*+10-*,*+11-*,*+12-*}
-QS "Num-Words_in_Utterance<=13"	{*+?-*,*+10-*,*+11-*,*+12-*,*+13-*}
-
-
-
-QS "Num-Phrases_in_Utterance==1"	{*-1}
-QS "Num-Phrases_in_Utterance==2"	{*-2}
-QS "Num-Phrases_in_Utterance==3"	{*-3}
-QS "Num-Phrases_in_Utterance==4"	{*-4}
-
-QS "Num-Phrases_in_Utterance<=2"	{*-1,*-2}
-QS "Num-Phrases_in_Utterance<=3"	{*-1,*-2,*-3}
-QS "Num-Phrases_in_Utterance<=4"	{*-1,*-2,*-3,*-4}
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/scripts/common_routines.pl HTS-demo_CMU-ARCTIC-SLT-mary/data/scripts/common_routines.pl
--- HTS-demo_CMU-ARCTIC-SLT/data/scripts/common_routines.pl	1970-01-01 01:00:00.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/scripts/common_routines.pl	2009-03-11 15:11:30.000000000 +0100
@@ -0,0 +1,80 @@
+#!/usr/bin/perl
+#------------------------------------------------------------------------
+# Copyright 2007 DFKI GmbH.
+# All Rights Reserved.  Use is subject to license terms.
+#
+# This file is part of MARY TTS.
+#
+# MARY TTS is free software: you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation, version 3 of the License.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU Lesser General Public License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with this program.  If not, see <http://www.gnu.org/licenses/>.
+#------------------------------------------------------------------------
+#
+# Created  by Sacha Krstulovic   (DFKI) 2006
+#
+#
+
+## These structures and routines are common to make_label_mono.pl, make_label_full.pl
+#  and make_questions.pl
+
+
+# Translation table for labels which are incompatible with HTK or shell filenames
+%tricky_phones = ( "6", "ER6",   # DE (changes in German phoneme set)
+                   "=6", "ER6",  # REM: =6 is mapped to 6
+                   "2:", "EU2",
+                   "9", "EU9",
+                   "9~", "UM9",
+                   "e~", "IMe",
+                   "a~", "ANa",
+                   "o~", "ONo",
+                   "?", "gstop",
+ 	           "r=", "rr"    # EN (change in English phoneme set)
+                  );
+
+
+## Subroutine for filtering the feature values
+#  (to avoid conflict with HTK's item lists)
+sub filter_feature($$) {
+    my ($val,$key) = @_;
+
+    # For punctuation features:
+    #if ( $key =~ m/punc/ ) {   
+        $val =~ s/\./dt/g; # Replace "." with "dt"
+        $val =~ s/,/cm/g;  # Replace "," with "cm"
+        $val =~ s/"/qt/g;  # Replace """ with "qt"
+        $val =~ s/\)/cp/g;  # Replace """ with "qt"
+        $val =~ s/\(/op/g;  # Replace """ with "qt"
+        $val =~ s/\?/in/g;  # Replace """ with "qt"
+    #}
+
+    # For ToBI labels:
+    #if ( $key =~ m/(^p_acc|^n_acc|tobi_acc)/ ) {   
+        $val =~ s/\*/st/g; # Replace "*" with "st"
+        $val =~ s/%/pc/g;  # Replace "%" with "pc"
+        $val =~ s/\^/ht/g; # Replace "^" with "ht"
+    #}
+
+    # For phoneme names:
+    if ( $key =~ m/phn/ ) {   
+        if ( defined( $tricky_phones{$val} ) ) { $val = $tricky_phones{$val}; }
+    }
+
+    return($val);
+}
+
+## Subroutine for filtering the phoneme names only
+#  (to avoid conflict with HTK's item lists)
+sub filter_phname($) {
+    my ($name) = @_;
+    if ( defined( $tricky_phones{$name} ) ) { $name = $tricky_phones{$name}; }
+    return($name);
+}
+
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/scripts/get_mag.tcl HTS-demo_CMU-ARCTIC-SLT-mary/data/scripts/get_mag.tcl
--- HTS-demo_CMU-ARCTIC-SLT/data/scripts/get_mag.tcl	1970-01-01 01:00:00.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/scripts/get_mag.tcl	2009-03-11 15:11:30.000000000 +0100
@@ -0,0 +1,254 @@
+#!/usr/local/ActiveTcl/bin/tclsh
+# ----------------------------------------------------------------- #
+#           The HMM-Based Speech Synthesis System (HTS)             #
+#           developed by HTS Working Group                          #
+#           http://hts.sp.nitech.ac.jp/                             #
+# ----------------------------------------------------------------- #
+#                                                                   #
+#  Copyright (c) 2001-2008  Nagoya Institute of Technology          #
+#                           Department of Computer Science          #
+#                                                                   #
+#                2001-2008  Tokyo Institute of Technology           #
+#                           Interdisciplinary Graduate School of    #
+#                           Science and Engineering                 #
+#                                                                   #
+# All rights reserved.                                              #
+#                                                                   #
+# Redistribution and use in source and binary forms, with or        #
+# without modification, are permitted provided that the following   #
+# conditions are met:                                               #
+#                                                                   #
+# - Redistributions of source code must retain the above copyright  #
+#   notice, this list of conditions and the following disclaimer.   #
+# - Redistributions in binary form must reproduce the above         #
+#   copyright notice, this list of conditions and the following     #
+#   disclaimer in the documentation and/or other materials provided #
+#   with the distribution.                                          #
+# - Neither the name of the HTS working group nor the names of its  #
+#   contributors may be used to endorse or promote products derived #
+#   from this software without specific prior written permission.   #
+#                                                                   #
+# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND            #
+# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,       #
+# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF          #
+# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE          #
+# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS #
+# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,          #
+# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED   #
+# TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,     #
+# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON #
+# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,   #
+# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY    #
+# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE           #
+# POSSIBILITY OF SUCH DAMAGE.                                       #
+# ----------------------------------------------------------------- #
+#
+# This program is based on the program getf0.tcl
+# Created  by Shinji SAKO  Mon Sep  1 18:54:35 JST 2003
+# Modified by Heiga ZEN    Fri Nov  3 17:28:33 JST 2006
+#
+# get_mag.tcl : Fourier magnitudes extraction script using snack.
+# It has as input the raw signal and its residual signal obtained by 
+# inverse filtering. 
+# The residual signal can be generated with SPTK, using inverse filtering, ex:
+#   x2x +sf tmp.raw | frame +f -p 80 | window -w 1 -n 1 | gcep -g 2 -m 24 > tmp.gcep
+#   x2x +sf tmp.raw | iglsadf -k -g 2 -m 24 -p 80 tmp.gcep  > tmp.residual
+#
+# Created by Marcela Charfuelan (DFKI) Wed Jun 25 11:00:22 CEST 2008
+#
+# use:
+#  tclsh get_mag.tcl -l -H 280 -L 40 -p 80 -r 16000 tmp.raw tmp.residual
+
+
+package require snack
+
+set method ESPS
+set maxpitch 400      
+set minpitch 60       
+set numharmonics 10
+set framelength 0.005 
+set frameperiod 80    
+set samplerate 16000  
+set encoding Lin16    
+set endian bigEndian 
+set outputmode 0     
+set targetfile ""
+set residualfile ""
+set outputfile ""
+
+set arg_index $argc
+set i 0
+set j 0
+
+set help [ format "\nFourier magnitudes extraction script using snack library \nUsage %s \[-H max_f0\] \[-L min_f0\] \[-m number_of_harmonics (default 10=MAGORDER)\] \[-s frame_length (in second)\] \[-p frame_length (in point)\] \[-r samplerate\] \[-l (little endian)\] \[-b (big endian)\] \[-o output_file\] input_speechfile(raw/wav) input_residualfile\n" $argv0 ]
+
+while { $i < $arg_index } {
+    switch -exact -- [ lindex $argv $i ] {
+    -H {
+        incr i
+        set maxpitch [ lindex $argv $i ]
+    }
+    -L {
+        incr i
+        set minpitch [ lindex $argv $i ]
+    }
+    -m {
+        incr i
+        set numharmonics [ lindex $argv $i ]       
+    }
+    -s {
+        incr i
+        set framelength [ lindex $argv $i ]       
+    }
+    -p {
+        incr i
+        set frameperiod [ lindex $argv $i ]
+        set j 1
+    }
+    -o {
+        incr i
+        set outputfile [ lindex $argv $i ]       
+    }
+    -r {
+        incr i
+        set samplerate [ lindex $argv $i ]       
+    }
+    -l {
+        set endian littleEndian
+    }
+    -b {
+        set endian bigEndian
+    }
+    -h {
+        puts stderr $help
+        exit 1
+    }
+    default { 
+        set targetfile [ lindex $argv $i ] 
+        incr i
+        set residualfile [ lindex $argv $i ]  
+    }
+    }
+    incr i
+}
+
+# framelength
+if { $j == 1 } {
+   set framelength [expr {double($frameperiod) / $samplerate}]
+}
+
+# if input file does not exist, exit program
+if { $targetfile == ""  || $residualfile == ""} {
+    puts stderr $help
+    exit 0
+}
+
+# the original speech signal
+snack::sound s  
+# the residual signal
+snack::sound e   
+
+
+# if input file is WAVE (RIFF) format, read it
+if { [file isfile $targetfile ] && "[file extension $targetfile]" == ".wav"} {
+    s read $targetfile
+} else {
+    s read $targetfile -fileformat RAW -rate $samplerate -encoding $encoding -byteorder $endian
+}
+
+# read residual, in HTS scripts this is created by SPTK so it contains float values
+e read $residualfile -fileformat RAW -rate $samplerate -encoding "float" -byteorder $endian
+
+# if output filename (-o option) is not specified, output result to stdout
+set fd stdout
+
+# if output filename is specified, save result to that file
+if { $outputfile != "" } then {
+    set fd [ open $outputfile w ]
+}
+
+# extract f0
+set tmp [s pitch -method $method -maxpitch $maxpitch -minpitch $minpitch -framelength $framelength]
+
+# n is the index number for a sample
+set e_length [e length]
+set fftlength 512 
+set windowlength 400
+set sample_start 0
+set sample_end 0
+set n 0;
+
+# for each frame in f0
+foreach line $tmp {
+  set pitch [lindex $line 0]
+
+  # the pitch value returned by snack is in Hz, so here is put in samples
+  if { $pitch > 0.0 } then {
+    set f0 [expr $samplerate/$pitch]
+    set bin_width [expr $fftlength/$f0]
+  } else {
+    set f0 0
+    set bin_width 0
+  }    
+  
+  # take a window of the residual signal and get its FFT or power spectrum
+  set sample_start [expr $n *$frameperiod]
+  set sample_end [expr ($sample_start + $windowlength)-1]
+ 
+  if { $bin_width > 0.0 } then {
+
+    # this function computes the FFT power spectrum and returns a list of magnitude values (sqrt(r^2+i^2))
+    set f [e powerSpectrum -start $sample_start -end $sample_end -windowlength $windowlength -fftlength $fftlength] 
+
+    set bin [expr round($bin_width)]
+    set half_bin [expr round($bin_width/2)]
+    
+    set sumavg 0
+    set k 1
+    while { $k <= $numharmonics } {
+      set ival [expr ($k * $bin_width) - ($bin_width/2) + 1 ]
+      # -1 because lindex starts in zero
+      set i [expr round($ival) - 1]
+      set j [expr $i + $bin ]
+
+      # search for the max val in the interval e[i:j] and keep the index
+      set max_harm [lindex $f $i]
+      set imax_harm $i
+      incr i
+      while { $i <= $j } {
+        if { [lindex $f $i] > $max_harm } then {
+          set max_harm [lindex $f $i]	
+	  set imax_harm $i
+	}	
+        incr i
+      }
+      
+      set harm($k) $max_harm
+      # keep a sum for averaging and normalisation
+      set sumavg [expr $sumavg + ($max_harm * $max_harm)]
+      incr k
+    }
+ 
+    # normalise the Fourier magnitudes by the average
+    set alpha [expr sqrt($sumavg/$numharmonics)]
+    set k 1
+    while { $k <= $numharmonics } {
+     set harm($k) [expr ($harm($k) / $alpha)]
+     puts "$harm($k)"
+     incr k
+    }
+
+  } else {
+    # so it is a non-voiced frame, so the Fourier magnitudes here are set to 1???
+    # or maybe I should take the first 10 Fourier magnitudes of the window frame ???
+    set k 1
+    while { $k <= $numharmonics } {
+     puts 1
+     incr k
+    }   
+
+  }
+  incr n
+
+}
+
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/scripts/get_str.tcl HTS-demo_CMU-ARCTIC-SLT-mary/data/scripts/get_str.tcl
--- HTS-demo_CMU-ARCTIC-SLT/data/scripts/get_str.tcl	1970-01-01 01:00:00.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/scripts/get_str.tcl	2009-03-11 15:11:30.000000000 +0100
@@ -0,0 +1,313 @@
+#!/usr/local/ActiveTcl/bin/tclsh
+#  ---------------------------------------------------------------  #
+#           The HMM-Based Speech Synthesis System (HTS)             #
+#                       HTS Working Group                           #
+#                                                                   #
+#                  Department of Computer Science                   #
+#                  Nagoya Institute of Technology                   #
+#                               and                                 #
+#   Interdisciplinary Graduate School of Science and Engineering    #
+#                  Tokyo Institute of Technology                    #
+#                     Copyright (c) 2001-2007                       #
+#                       All Rights Reserved.                        #
+#                                                                   #
+#  Permission is hereby granted, free of charge, to use and         #
+#  distribute this software and its documentation without           #
+#  restriction, including without limitation the rights to use,     #
+#  copy, modify, merge, publish, distribute, sublicense, and/or     #
+#  sell copies of this work, and to permit persons to whom this     #
+#  work is furnished to do so, subject to the following conditions: #
+#                                                                   #
+#    1. The code must retain the above copyright notice, this list  #
+#       of conditions and the following disclaimer.                 #
+#                                                                   #
+#    2. Any modifications must be clearly marked as such.           #
+#                                                                   #
+#  NAGOYA INSTITUTE OF TECHNOLOGY, TOKYO INSITITUTE OF TECHNOLOGY,  #
+#  HTS WORKING GROUP, AND THE CONTRIBUTORS TO THIS WORK DISCLAIM    #
+#  ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL       #
+#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT   #
+#  SHALL NAGOYA INSTITUTE OF TECHNOLOGY, TOKYO INSITITUTE OF        #
+#  TECHNOLOGY, HTS WORKING GROUP, NOR THE CONTRIBUTORS BE LIABLE    #
+#  FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY        #
+#  DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,  #
+#  WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTUOUS   #
+#  ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR          #
+#  PERFORMANCE OF THIS SOFTWARE.                                    #
+#                                                                   #
+#  ---------------------------------------------------------------  #
+#
+# This program is based on the program getf0.tcl
+# Created  by Shinji SAKO   Mon Sep  1 18:54:35 JST 2003
+# Modified by Heiga ZEN     Fri Nov  3 17:28:33 JST 2006
+#
+# get_str.tcl : strengths extraction script using snack.
+# Extracting strengths from 5 filtered bands of raw audio
+# it requires 5 filter taps in ../data/filters/mix_excitation_filters.txt 
+#
+# Created by Marcela Charfuelan (DFKI) Wed Jun 27 17:46:58 CEST 2007
+#
+# use:
+#  tclsh8.4 get_str.tcl -H 280  -L 40 -f 5 -p 80 -o f0_tmp.tmp tmp.wav
+#  or to output to stdout
+#  tclsh8.4 get_str.tcl -H 280  -L 40 -f 5 -p 80 tmp.wav 
+
+package require snack
+
+set method ESPS
+set maxpitch 400      
+set minpitch 60       
+set framelength 0.005 
+set windowlength 0.025
+set frameperiod 80    
+set samplerate 16000  
+set encoding Lin16    
+set endian bigEndian 
+set numfilters 5    
+set targetfile ""
+set outputfile ""
+
+set arg_index $argc
+set i 0
+set j 0
+
+set help [ format "\nStrengths extraction using snack library \nUsage %s \[-H max_f0\] \[-L min_f0\] \[-f number_of_filters (must be equal to STRORDER)\] \[-s frame_length (in second)\] \[-p frame_length (in point)\] \[-r samplerate\] \[-l (little endian)\] \[-b (big endian)\] \[-o output_file\] inputfile\n" $argv0 ]
+
+while { $i < $arg_index } {
+    switch -exact -- [ lindex $argv $i ] {
+    -H {
+        incr i
+        set maxpitch [ lindex $argv $i ]
+    }
+    -L {
+        incr i
+        set minpitch [ lindex $argv $i ]
+    }
+    -s {
+        incr i
+        set framelength [ lindex $argv $i ]       
+    }
+    -f {
+        incr i
+        set numfilters [ lindex $argv $i ]       
+    }
+    -p {
+        incr i
+        set frameperiod [ lindex $argv $i ]
+        set j 1
+    }
+    -o {
+        incr i
+        set outputfile [ lindex $argv $i ]       
+    }
+    -r {
+        incr i
+        set samplerate [ lindex $argv $i ]       
+    }
+    -l {
+        set endian littleEndian
+    }
+    -b {
+        set endian bigEndian
+    }
+    -h {
+        puts stderr $help
+        exit 1
+    }
+    default { set targetfile [ lindex $argv $i ] }
+    }
+    incr i
+}
+
+#puts stderr "getf0.tcl: this program was modified to output Fs/pitch in samples instead of log pitch in Hz"
+
+# framelength
+if { $j == 1 } {
+   set framelength [expr {double($frameperiod) / $samplerate}]
+}
+
+# if input file does not exist, exit program
+if { $targetfile == "" } {
+    puts stderr $help
+    exit 0
+}
+
+# if STRORDER is different from 5, exit program
+if { $numfilters != 5 } {
+    puts "\nThis implementation supports only 5 filter bands and STRORDER is $numfilters\n";
+    exit 0
+}
+
+snack::sound s 
+snack::sound s1
+snack::sound s2
+snack::sound s3
+snack::sound s4
+snack::sound s5
+
+# Load filter's coefficients from the file: mix_excitation_filters.txt. This file have a 
+# text header of 5 lines:
+#   #Created by Octave 2.1.73, Fri Jun 20 14:37:48 2008 CEST <marcela@ideas02>
+#   #name: H1
+#   #type: matrix
+#   #rows: 49
+#   #columns: 1
+# then the taps are in a single column:
+#   tap[1][1] 
+#   ... 
+#   tap[1][49] 
+#   tap[2][1] 
+#   ... 
+#   tap[2][49] 
+#   ... 
+#   tap[5][1] 
+#   ... 
+#   tap[5][49] 
+#
+# Filter's coefficients must be located in ../data/filters/mix_excitation_filters.txt
+set f [open filters/mix_excitation_filters.txt]
+set k 0
+set Array h
+foreach line [split [read $f] \n] {
+  if { [string is double $line] } then {
+    set h($k) $line   
+    incr k
+  }
+}
+close $f
+
+incr k -1
+set size_h $k
+set size_filter [expr ($k/$numfilters)]
+
+set k 0
+set i 0
+set h1 {}
+while { $i < $size_filter } {
+  lappend h1 $h($k)
+  #puts "h1($i)=[lindex $h1 $i]"
+  incr k
+  incr i
+}
+set i 0
+set h2 {}
+while { $i < $size_filter } {
+  lappend h2 $h($k)
+  #puts "h2($i)=[lindex $h2 $i]"
+  incr k
+  incr i
+}
+set i 0
+set h3 {}
+while { $i < $size_filter } {
+  lappend h3 $h($k)
+  #puts "h3($i)=[lindex $h3 $i]"
+  incr k
+  incr i
+}
+set i 0
+set h4 {}
+while { $i < $size_filter } {
+  lappend h4 $h($k)
+  #puts "h4($i)=[lindex $h4 $i]"
+  incr k
+  incr i
+}
+set i 0
+set h5 {}
+while { $i < $size_filter } {
+  lappend h5 $h($k)
+  #puts "h5($i)=[lindex $h5 $i]"
+  incr k
+  incr i
+}
+
+
+
+
+# create FIR filters
+set h1 [snack::filter iir -impulse $h1]
+set h2 [snack::filter iir -impulse $h2]
+set h3 [snack::filter iir -impulse $h3]
+set h4 [snack::filter iir -impulse $h4]
+set h5 [snack::filter iir -impulse $h5]
+
+
+# if input file is WAVE (RIFF) format, read it
+if { [file isfile $targetfile ] && "[file extension $targetfile]" == ".wav"} {
+    s read $targetfile
+} else {
+    s read $targetfile -fileformat RAW -rate $samplerate -encoding $encoding -byteorder $endian
+}
+
+# copy original sound in s1
+s1 copy s
+s2 copy s
+s3 copy s
+s4 copy s
+s5 copy s
+
+set ini 0
+set final 500
+
+#set s_size [lindex [ s info ] 0 ]
+set s_size [ s length ]
+#puts stderr $s_size
+
+s1 filter $h1
+s2 filter $h2
+s3 filter $h3
+s4 filter $h4
+s5 filter $h5
+
+# i need to do this because after filtering the 
+# file is padded with zeros
+s1 crop 0 $s_size
+s2 crop 0 $s_size
+s3 crop 0 $s_size
+s4 crop 0 $s_size
+s5 crop 0 $s_size
+
+#s1 write s1.wav
+#s2 write s2.wav
+#s3 write s3.wav
+#s4 write s4.wav
+#s5 write s5.wav
+
+# get the strengths for each band
+# using method ESPS the result is a matrix of 4 columns
+# col 0: pitch col 1: prob of voicing col 2: local root mean square measurement
+# col 3: peak normalised cross correlation
+# for example col 3 can be read with: [lindex $str1 0 3]
+set str1 [s1 pitch -method ESPS -maxpitch $maxpitch -minpitch $minpitch -framelength $framelength]
+set str2 [s2 pitch -method ESPS -maxpitch $maxpitch -minpitch $minpitch -framelength $framelength]
+set str3 [s3 pitch -method ESPS -maxpitch $maxpitch -minpitch $minpitch -framelength $framelength]
+set str4 [s4 pitch -method ESPS -maxpitch $maxpitch -minpitch $minpitch -framelength $framelength]
+set str5 [s5 pitch -method ESPS -maxpitch $maxpitch -minpitch $minpitch -framelength $framelength]
+
+#puts stderr [lindex $str1 0 3]
+#puts stderr [lindex $str1 1 3]
+#puts stderr [lindex $str1 2 3]
+#puts stderr $str1
+
+
+# if output filename (-o option) is not specified, output result to stdout
+set fd stdout
+
+# if output filename is specified, save result to that file
+if { $outputfile != "" } then {
+    set fd [ open $outputfile w ]
+}
+
+# output results
+set ind 0
+foreach line $str1 {
+    puts [lindex $str1 $ind 3]
+    puts [lindex $str2 $ind 3]
+    puts [lindex $str3 $ind 3]
+    puts [lindex $str4 $ind 3]
+    puts [lindex $str5 $ind 3]
+    incr ind
+    
+}
+
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/scripts/make_labels_full.pl HTS-demo_CMU-ARCTIC-SLT-mary/data/scripts/make_labels_full.pl
--- HTS-demo_CMU-ARCTIC-SLT/data/scripts/make_labels_full.pl	1970-01-01 01:00:00.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/scripts/make_labels_full.pl	2009-03-11 15:11:30.000000000 +0100
@@ -0,0 +1,223 @@
+#!/usr/bin/perl
+#------------------------------------------------------------------------
+# Copyright 2007 DFKI GmbH.
+# All Rights Reserved.  Use is subject to license terms.
+#
+# This file is part of MARY TTS.
+#
+# MARY TTS is free software: you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation, version 3 of the License.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU Lesser General Public License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with this program.  If not, see <http://www.gnu.org/licenses/>.
+#------------------------------------------------------------------------
+#
+# Created  by Sacha Krstulovic   (DFKI) 2006
+# Modified by Marcela Charfuelan (DFKI) 2007
+#
+# Use:
+#  make_labels_full(feaFileName, labName, featureList)
+#  $featureList = $ARGV[0];
+#  $feaFileName = $ARGV[1];
+#  $labName     = $ARGV[2];
+
+## This script must be executed in the data/ subdirectory.
+$featureList = $ARGV[0];
+require($featureList);
+require("./scripts/common_routines.pl");
+
+#############################
+## requested features file
+require($featureList);
+
+
+#############################
+# Declare a few variables
+my @available_fea_keys;
+my @fealines;
+my %feamap;
+
+#############################
+## Load the unit feature file
+$feaFileName = $ARGV[1];
+open(IN,"$feaFileName") || die("Can't open unit feature file [$feaFileName] !\n");
+@fea = <IN>; close(IN);
+chomp(@fea);
+
+# Parse the unit feature header to determine the keys of the hash table
+$fealine = shift( @fea );
+# Trash the blank lines or comments
+while ( ($fealine =~ m/^\s*$/) || ($fealine =~ m/^\s*\#+/) ) {
+    $fealine = shift( @fea );
+}
+
+$fealine = shift( @fea );
+do {
+    #print $fealine;
+    # Check the feature name
+    if ( !($fealine =~ m/^\s*ByteValuedFeatureProcessors/ ) &&
+         !($fealine =~ m/^\s*ContinuousFeatureProcessors/ ) &&
+         !($fealine =~ m/^\s*ShortValuedFeatureProcessors/ )  ) {
+      # Init the feature hash table
+      ($key,$dummy) = split(" ",$fealine,2);
+      # Push the key in the array of keys
+      #print "KEY=$key\n";
+      push(@available_fea_keys,$key);
+    }
+
+    # Get the next line
+    $fealine = shift( @fea );
+
+}
+until ( ($fealine =~ m/^\s*$/) || ($fealine =~ m/^\s*\#+/) );  # until the next empty line
+
+
+# Now it comes the byte values
+# Check if all the requested features are available in this header
+@req_keys = keys(%requested_fea_keys);
+foreach $key ( @req_keys ) {
+    if ( !( grep(m/^$key$/,@available_fea_keys) ) ) { die "The requested feature [$key] is not available in the unit feature file [$feaFileName].";  }
+}
+
+##
+# Trash the useless lines
+
+$fealine = shift( @fea );
+# Trash the blank lines or comments
+while ( ($fealine =~ m/^\s*$/) || ($fealine =~ m/^\s*\#+/) ) {
+    $fealine = shift( @fea );
+}
+
+##
+# Now we should be at the beginning of the feature values.
+# => load them in an array
+do {
+     # Trash any possible comments
+    if ($fealine =~ m/^\s*\#+/) {
+        $fealine = shift( @fea );
+        next;
+    }
+    # Store the line
+    push( @fealines, $fealine );
+    $fealine = shift( @fea );
+}
+until ( $fealine =~ m/^\s*$/ );
+
+#############################
+## Load the unitlabel file
+$has_lab = (1==0);
+if ( defined($ARGV[2] ) ) {
+    $has_lab = (1==1);
+    $labName = $ARGV[2];
+    open(IN,"$labName") || die("Can't open unit feature file [$labName] !\n");
+    foreach $line (<IN>) {
+        # Trash any possible comments
+        if ($line =~ m/^\s*\#+/ || $line =~ m/^format/ ) {
+            $line = shift( @fea );
+            next;
+        }
+        # Store the line
+        push( @lab, $line );
+    }
+    close(IN);
+}
+
+#############################
+## Check the compatibility of the files in terms of number of labels vs number of features
+if ( $has_lab ) {
+    if ( scalar(@lab) != scalar(@fealines) ) {
+        $nlf = scalar(@fealines);
+        print "WRONG LABEL MAPPING:\n";
+        foreach $line (@lab) {
+            ($time_end_seconds,$dummy_int,$label) = split(" ",$line);
+            ($fealab) = split(" ", shift(@fealines), 2 );
+            print "LAB:\t $label -> $fealab \t:FEA\n";
+        }
+        die "Problem with unit feature file [$feaFileName]: does not have the same number of feature value lines [",$nlf,"] as the corresponding label file [",scalar(@lab),"].";
+    }
+}
+
+#############################
+# Main loop
+
+# Init the time counter
+$time_begin = 0;
+
+# Init the phoneme context
+$pp_phn = "_";
+$p_phn = "_";
+$cur_phn = "_";
+
+# Browse the label lines
+$nlines = scalar(@fealines);
+for ( $i = 0; $i < $nlines; $i++ ) {
+
+    ## UNITLAB FILE
+    if ( $has_lab ) {
+        # Re-format
+        ($time_end_seconds,$dummy_int,$label) = split(" ",$lab[$i]);
+        $time_end = $time_end_seconds * 1e7;  # REM: HTK time units are measured in hundreds of nanoseconds.
+        if ( defined( $tricky_phones{$label} ) ) { $label = $tricky_phones{$label}; }
+    }
+
+    ## UNITFEATURE FILE
+    # Shift the phoneme context
+    $pp_phn = $p_phn;
+    $p_phn = $cur_phn;
+
+    # Separate the individual feature values
+    @features = split(" ",$fealines[$i]);
+    $features[0] = filter_phname( $features[0] );
+    $cur_phn = $features[0];
+
+    # Check that there are as many feature values as feature declarations
+    if ( scalar(@available_fea_keys) != scalar(@features) ) {
+        die "Problem with unit feature file [$feaFileName]: phoneme [$i] does not have as many feature values [",
+        scalar(@features),"] as the number of feature definitions [",scalar(@available_fea_keys),"].";
+    }
+
+    # Feed the feature values to a hash map, for easier access
+    for ( $k = 0; $k < scalar(@features); $k++ ) {
+        $feamap{$available_fea_keys[$k]} = $features[$k];
+    }
+
+    # Get next phone label
+    if ( ($i+1) < $nlines ) {  ($n_phn,$dummy) = split(" ",$fealines[$i+1],2); }
+    else                    {   $n_phn         = "_"; }
+    $n_phn =filter_phname( $n_phn );
+    # Get next-next phone label
+    if ( ($i+2) < $nlines ) {  ($nn_phn,$dummy) = split(" ",$fealines[$i+2],2); }
+    else                    {   $nn_phn         = "_"; }
+    $nn_phn = filter_phname( $nn_phn );
+
+    # Check for the compatibility of the phoneme labels between unitlab and unitfeature files
+    if ( ($has_lab) && ($cur_phn ne $label) ) {
+        die "Problem with unit feature file [$feaFileName]: inconsistent labels ([$features[0]] in features meets label [$label] at line [$i]).";
+    }
+
+    ## OUTPUT
+    # Time
+    if ( $has_lab ) {
+        printf "%10.0f %10.0f ", $time_begin, $time_end;
+    }
+    # Phoneme in context
+    print $pp_phn."^".$p_phn."-".$cur_phn."+".$n_phn."=".$nn_phn."|";
+    # Other requested features
+    for ( $k = 0; $k < scalar(@req_keys); $k++ ) {
+        $key = $req_keys[$k];
+        $val = filter_feature( $feamap{$key}, $key );
+        print "|",$key,"=",$val;
+    }
+    print "||\n";
+
+    ## Advance to the next phoneme
+    $time_begin = $time_end;
+    $fealine = shift( @fea );
+}
+
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/scripts/make_labels_mono.pl HTS-demo_CMU-ARCTIC-SLT-mary/data/scripts/make_labels_mono.pl
--- HTS-demo_CMU-ARCTIC-SLT/data/scripts/make_labels_mono.pl	1970-01-01 01:00:00.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/scripts/make_labels_mono.pl	2009-03-11 15:11:30.000000000 +0100
@@ -0,0 +1,58 @@
+#!/usr/bin/perl
+#------------------------------------------------------------------------
+# Copyright 2007 DFKI GmbH.
+# All Rights Reserved.  Use is subject to license terms.
+#
+# This file is part of MARY TTS.
+#
+# MARY TTS is free software: you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation, version 3 of the License.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU Lesser General Public License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with this program.  If not, see <http://www.gnu.org/licenses/>.
+#------------------------------------------------------------------------
+#
+# Created  by Sacha Krstulovic   (DFKI) 2006
+# Modified by Marcela Charfuelan (DFKI) 2007
+#
+# Use:
+#  make_labels_mono(labName, featureList)
+#  $featureList = $ARGV[0];
+#  $labName     = $ARGV[1];
+
+
+## This script must be executed in the data/ subdirectory.
+#############################
+## requested features file
+$featureList = $ARGV[0];
+require($featureList);
+require("./scripts/common_routines.pl");
+
+
+# Init the time counter
+$time_begin = 0;
+
+# Open the file
+$labName = $ARGV[1];
+open(IN,"$labName") || die("Can't open unit feature file [$labName] !\n");
+
+# Browse the lines
+foreach $line (<IN>) {
+    # Ignore the comments
+    if ( $line =~ m/^[\#\s]/ ||  $line =~ m/^format/ ) { next; }
+    # Re-format the rest
+    ($time_end_seconds,$dummy_int,$label) = split(" ",$line);
+    $time_end = $time_end_seconds * 1e7;  # REM: HTK time units are measured in hundreds of nanoseconds.
+    $label = filter_phname( $label );
+    printf "%10.0f %10.0f %s\n", $time_begin, $time_end, $label;
+    $time_begin = $time_end;
+}
+
+# Close the file
+close( IN );
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/scripts/make_phoneme_count.sh HTS-demo_CMU-ARCTIC-SLT-mary/data/scripts/make_phoneme_count.sh
--- HTS-demo_CMU-ARCTIC-SLT/data/scripts/make_phoneme_count.sh	1970-01-01 01:00:00.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/scripts/make_phoneme_count.sh	2009-03-11 15:11:30.000000000 +0100
@@ -0,0 +1,65 @@
+#!/bin/sh
+#------------------------------------------------------------------------
+# Copyright 2007 DFKI GmbH.
+# All Rights Reserved.  Use is subject to license terms.
+#
+# This file is part of MARY TTS.
+#
+# MARY TTS is free software: you can redistribute it and/or modify
+# it under the terms of the GNU Lesser General Public License as published by
+# the Free Software Foundation, version 3 of the License.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU Lesser General Public License for more details.
+#
+# You should have received a copy of the GNU Lesser General Public License
+# along with this program.  If not, see <http://www.gnu.org/licenses/>.
+#------------------------------------------------------------------------
+#
+# Created  by Sacha Krstulovic   (DFKI) 2006
+#
+
+## This script must be run under the data/ subdirectory
+
+## Monophones:
+
+cat labels/mono/blx/*.lab | perl -ane 'if ( s/^\s*[0-9]+\s+[0-9]+\s+(.*)$/$1/g ) { print; }' | sort | uniq -c > stats/mono_count_blx.txt
+cat labels/mono/bln/*.lab | perl -ane 'if ( s/^\s*[0-9]+\s+[0-9]+\s+(.*)$/$1/g ) { print; }' | sort | uniq -c > stats/mono_count_bln.txt
+
+cat stats/mono_count_bl*.txt | perl -ane 's/^\s*[0-9]+\s+(.*)$/$1/g; print' | sort | uniq > stats/mono_set_bundesliga.txt
+
+cat labels/mono/US1001/*.lab | perl -ane 'if ( s/^\s*[0-9]+\s+[0-9]+\s+(.*)$/$1/g ) { print; }' | sort | uniq -c > stats/mono_count_US1001.txt
+cat labels/mono/US1002/*.lab | perl -ane 'if ( s/^\s*[0-9]+\s+[0-9]+\s+(.*)$/$1/g ) { print; }' | sort | uniq -c > stats/mono_count_US1002.txt
+cat labels/mono/US1003/*.lab | perl -ane 'if ( s/^\s*[0-9]+\s+[0-9]+\s+(.*)$/$1/g ) { print; }' | sort | uniq -c > stats/mono_count_US1003.txt
+cat labels/mono/US1004/*.lab | perl -ane 'if ( s/^\s*[0-9]+\s+[0-9]+\s+(.*)$/$1/g ) { print; }' | sort | uniq -c > stats/mono_count_US1004.txt
+
+cat stats/mono_count_US*.txt | perl -ane 's/^\s*[0-9]+\s+(.*)$/$1/g; print' | sort | uniq > stats/mono_set_bits.txt
+
+find labels/mono/*/. -name '*.lab' -print | xargs cat | perl -ane 'if ( s/^\s*[0-9.]+\s+[0-9]+\s+(.*)$/$1/g ) { print; }' | sort | uniq -c > stats/mono_count_total.txt
+
+cat stats/mono_set_*.txt | sort | uniq > stats/mono_set_all.txt
+
+echo "Monophones done."
+
+## Full context phones:
+
+cat labels/full/blx/*.lab | perl -ane 'if ( s/^\s*[0-9]+\s+[0-9]+\s+(.*)$/$1/g ) { print; }' | sort | uniq -c > stats/full_count_blx.txt
+cat labels/full/bln/*.lab | perl -ane 'if ( s/^\s*[0-9]+\s+[0-9]+\s+(.*)$/$1/g ) { print; }' | sort | uniq -c > stats/full_count_bln.txt
+
+cat stats/full_count_bl*.txt | perl -ane 's/^\s*[0-9]+\s+(.*)$/$1/g; print' | sort | uniq > stats/full_set_bundesliga.txt
+
+cat labels/full/US1001/*.lab | perl -ane 'if ( s/^\s*[0-9]+\s+[0-9]+\s+(.*)$/$1/g ) { print; }' | sort | uniq -c > stats/full_count_US1001.txt
+cat labels/full/US1002/*.lab | perl -ane 'if ( s/^\s*[0-9]+\s+[0-9]+\s+(.*)$/$1/g ) { print; }' | sort | uniq -c > stats/full_count_US1002.txt
+cat labels/full/US1003/*.lab | perl -ane 'if ( s/^\s*[0-9]+\s+[0-9]+\s+(.*)$/$1/g ) { print; }' | sort | uniq -c > stats/full_count_US1003.txt
+cat labels/full/US1004/*.lab | perl -ane 'if ( s/^\s*[0-9]+\s+[0-9]+\s+(.*)$/$1/g ) { print; }' | sort | uniq -c > stats/full_count_US1004.txt
+
+cat stats/full_count_US*.txt | perl -ane 's/^\s*[0-9]+\s+(.*)$/$1/g; print' | sort | uniq > stats/full_set_bits.txt
+
+find labels/full/*/. -name '*.lab' -print | xargs cat | perl -ane 'if ( s/^\s*[0-9.]+\s+[0-9]+\s+(.*)$/$1/g ) { print; }' | sort | uniq -c > stats/full_count_total.txt
+
+cat stats/full_set_*.txt | sort | uniq > stats/full_set_all.txt
+
+echo "Full-context phones done."
+
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/scripts/raw2wav.sh HTS-demo_CMU-ARCTIC-SLT-mary/data/scripts/raw2wav.sh
--- HTS-demo_CMU-ARCTIC-SLT/data/scripts/raw2wav.sh	1970-01-01 01:00:00.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/scripts/raw2wav.sh	2009-03-11 15:11:30.000000000 +0100
@@ -0,0 +1,15 @@
+#!/bin/bash
+
+
+if [ $# -ne 2 ] ; then
+  echo ""
+  echo "raw2wav.sh: convert .raw files into .wav files using sox."
+  echo "     Usage: $0 raw-directory wav-directory"
+  echo ""
+else
+  for file in $1/*; do
+    file_name=`basename $file .raw`
+    echo $1/$file_name.raw" --> "$2/$file_name.wav
+    sox -c 1 -s -w -r 16000 $1/$file_name.raw -c 1 -s -w -t wav -r 16000 $2/$file_name.wav
+  done
+fi
\ No newline at end of file
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/scripts/utt2trans.sh HTS-demo_CMU-ARCTIC-SLT-mary/data/scripts/utt2trans.sh
--- HTS-demo_CMU-ARCTIC-SLT/data/scripts/utt2trans.sh	1970-01-01 01:00:00.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/scripts/utt2trans.sh	2009-03-11 15:11:30.000000000 +0100
@@ -0,0 +1,15 @@
+#!/bin/bash
+
+if [ $# -ne 2 ] ; then
+  echo ""
+  echo "utt2trans.sh: extract transcription from festival .utt files, creates .txt files."
+  echo "        Usage: $0 festival-utt-directory text-directory"
+  echo "      Example: ./utt2trans.sh utts text"
+  echo ""
+else
+  for file in $1/*; do
+    file_name=`basename $file .utt`
+    echo $1/$file_name.utt" --> "$2/$file_name.txt
+    grep Features $file | awk '{split($0,a,"\""); gsub(".\\", ".", a[3]); print a[3] }' > $2/$file_name.txt 
+  done
+fi
\ No newline at end of file
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/scripts/wav2raw.sh HTS-demo_CMU-ARCTIC-SLT-mary/data/scripts/wav2raw.sh
--- HTS-demo_CMU-ARCTIC-SLT/data/scripts/wav2raw.sh	1970-01-01 01:00:00.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/scripts/wav2raw.sh	2009-03-11 15:11:30.000000000 +0100
@@ -0,0 +1,15 @@
+#!/bin/bash
+
+
+if [ $# -ne 2 ] ; then
+  echo ""
+  echo "wav2raw.sh: convert .wav files into .raw files using sox."
+  echo "     Usage: $0 wav-directory raw-directory"
+  echo ""
+else
+  for file in $1/*; do
+    file_name=`basename $file .wav`
+    echo $1/$file_name.wav" --> "$2/$file_name.raw
+    sox $1/$file_name.wav $2/$file_name.raw
+  done
+fi
\ No newline at end of file
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/win/mag.win1 HTS-demo_CMU-ARCTIC-SLT-mary/data/win/mag.win1
--- HTS-demo_CMU-ARCTIC-SLT/data/win/mag.win1	1970-01-01 01:00:00.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/win/mag.win1	2009-03-11 15:11:30.000000000 +0100
@@ -0,0 +1 @@
+1 1.0
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/win/mag.win2 HTS-demo_CMU-ARCTIC-SLT-mary/data/win/mag.win2
--- HTS-demo_CMU-ARCTIC-SLT/data/win/mag.win2	1970-01-01 01:00:00.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/win/mag.win2	2009-03-11 15:11:30.000000000 +0100
@@ -0,0 +1 @@
+3 -0.5 0.0 0.5
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/win/mag.win3 HTS-demo_CMU-ARCTIC-SLT-mary/data/win/mag.win3
--- HTS-demo_CMU-ARCTIC-SLT/data/win/mag.win3	1970-01-01 01:00:00.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/win/mag.win3	2009-03-11 15:11:30.000000000 +0100
@@ -0,0 +1 @@
+3 1.0 -2.0 1.0
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/win/str.win1 HTS-demo_CMU-ARCTIC-SLT-mary/data/win/str.win1
--- HTS-demo_CMU-ARCTIC-SLT/data/win/str.win1	1970-01-01 01:00:00.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/win/str.win1	2009-03-11 15:11:30.000000000 +0100
@@ -0,0 +1 @@
+1 1.0
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/win/str.win2 HTS-demo_CMU-ARCTIC-SLT-mary/data/win/str.win2
--- HTS-demo_CMU-ARCTIC-SLT/data/win/str.win2	1970-01-01 01:00:00.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/win/str.win2	2009-03-11 15:11:30.000000000 +0100
@@ -0,0 +1 @@
+3 -0.5 0.0 0.5
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/data/win/str.win3 HTS-demo_CMU-ARCTIC-SLT-mary/data/win/str.win3
--- HTS-demo_CMU-ARCTIC-SLT/data/win/str.win3	1970-01-01 01:00:00.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/data/win/str.win3	2009-03-11 15:11:30.000000000 +0100
@@ -0,0 +1 @@
+3 1.0 -2.0 1.0
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/Makefile.in HTS-demo_CMU-ARCTIC-SLT-mary/Makefile.in
--- HTS-demo_CMU-ARCTIC-SLT/Makefile.in	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/Makefile.in	2009-03-11 15:11:30.000000000 +0100
@@ -45,11 +45,11 @@
 all: data voice
 
 data:
-	@ (cd data ; $(MAKE) all)
+	@ (cd data ; $(MAKE) all-mary)
 
 voice:
 	echo "Running a training/synthesis perl script (Training.pl) in background...."
-	@PERL@ scripts/Training.pl scripts/Config.pm > log 2>&1 &
+	@PERL@ scripts/Training.pl scripts/Config.pm > log-`date +%F-%T` 2>&1 &
 
 clean: clean-data clean-voice
 
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/scripts/Config.pm.in HTS-demo_CMU-ARCTIC-SLT-mary/scripts/Config.pm.in
--- HTS-demo_CMU-ARCTIC-SLT/scripts/Config.pm.in	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/scripts/Config.pm.in	2009-03-11 15:11:30.000000000 +0100
@@ -51,65 +51,93 @@ $qnum = '@QNUM@';
 $ver  = '@VER@';
 
 @SET        = ('cmp','dur');
-@cmp        = ('mgc','lf0');
+@cmp        = ('mgc','lf0', 'str', 'mag');
 @dur        = ('dur');
 $ref{'cmp'} = \@cmp;
 $ref{'dur'} = \@dur;
 
 %vflr = ('mgc' => '0.01', # variance floors
          'lf0' => '0.01',
+	 'str' => '0.01',
+	 'mag' => '0.01',
          'dur' => '0.01');
 
 %thr  = ('mgc' => '000',  # minimum state occupancy 
          'lf0' => '000',
+         'str' => '000',
+         'mag' => '000',
          'dur' => '000');
 
 %mdlf = ('mgc' => '1.0',  # tree size control param. for MDL
          'lf0' => '1.0',
+         'str' => '1.0',
+         'mag' => '1.0',
          'dur' => '1.0');
 
 %mocc = ('mgc' => '10.0',  # minimum occupancy counts
          'lf0' => '10.0',
+         'str' => '10.0',
+         'mag' => '10.0',
          'dur' => ' 5.0');
 
 %gam  = ('mgc' => '000',  # stats load threshold
          'lf0' => '000',
+         'str' => '000',
+         'mag' => '000',
          'dur' => '000');
 
 %t2s  = ('mgc' => 'cmp',  # feature type to mmf conversion
          'lf0' => 'cmp',
+         'str' => 'cmp',
+         'mag' => 'cmp',
          'dur' => 'dur');
 
 %strb = ('mgc' => '1',  # stream start
-         'lf0' => '2',
+         'lf0' => '2',  # these are 3: p, delta p and delta-delta p (so next is 5)
+	 'str' => '5',
+	 'mag' => '6',
          'dur' => '1');
 
 %stre = ('mgc' => '1',  # stream end
          'lf0' => '@F0STREN@',
+	 'str' => '5',
+	 'mag' => '6',
          'dur' => '@NSTATE@');
 
-%msdi = ('mgc' => '0',  # msd information
+%msdi = ('mgc' => '0',  # msd information  MSDInfo: multi-space probability distribution
          'lf0' => '1',
+         'str' => '0',
+         'mag' => '0',
          'dur' => '0');
 
 %strw = ('mgc' => '1.0',  # stream weights
          'lf0' => '1.0',
+         'str' => '1.0',
+         'mag' => '1.0',
          'dur' => '1.0');
 
 %ordr = ('mgc' => '@MGCVSIZE@',  # feature order  
          'lf0' => '1',
+	 'str' => '@STRVSIZE@',
+	 'mag' => '@MAGVSIZE@',
          'dur' => '@NSTATE@');
 
 %nwin = ('mgc' => '@NMGCWIN@',  # number of windows
          'lf0' => '@NLF0WIN@',
+	 'str' => '@NSTRWIN@',
+	 'mag' => '@NMAGWIN@',
          'dur' => '0');
 
 %nblk = ('mgc' => '@NMGCTRANSBLK@',   # number of blocks for transforms
          'lf0' => '@NLF0TRANSBLK@',
+         'str' => '@NSTRTRANSBLK@',
+         'mag' => '@NMAGTRANSBLK@',
          'dur' => '1');
 
 %band = ('mgc' => '@MGCBANDWIDTH@',   # band width for transforms
          'lf0' => '@LF0BANDWIDTH@',
+         'str' => '@STRBANDWIDTH@',
+         'mag' => '@MAGBANDWIDTH@',
          'dur' => '0');
 
 #%mdcp = ('dy' => 'd',   # model copy
diff -pbBEwurNa --ignore-matching-lines='.*vc_id.*' -x ChangeLog HTS-demo_CMU-ARCTIC-SLT/scripts/Training.pl HTS-demo_CMU-ARCTIC-SLT-mary/scripts/Training.pl
--- HTS-demo_CMU-ARCTIC-SLT/scripts/Training.pl	2009-03-11 15:17:52.000000000 +0100
+++ HTS-demo_CMU-ARCTIC-SLT-mary/scripts/Training.pl	2009-03-18 10:01:40.000000000 +0100
@@ -1414,8 +1414,9 @@ sub gen_wave($) {
          }
          
          # synthesize waveform
+	 # changed option -g for SPTK-3.2 mglsadf with option -c, (-g was used in SPT-3.1)
          $line = "$EXCITE -p $fs $gendir/$base.pit | "
-               . "$MGLSADF -m ".($ordr{'mgc'}-1)." -p $fs -a $fw -g $gm $mgc | "
+               . "$MGLSADF -m ".($ordr{'mgc'}-1)." -p $fs -a $fw -c $gm $mgc | "
                . "$X2X +fs | "
                . "$SOX -c 1 -s -w -t raw -r $sr - -c 1 -s -w -t wav -r $sr $gendir/$base.wav";
 
